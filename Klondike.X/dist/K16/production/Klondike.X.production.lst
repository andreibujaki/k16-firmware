

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Oct 25 16:47:55 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBANK7,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	swtext1,local,class=CONST,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,merge=1,delta=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	psect	text51,local,class=CODE,merge=1,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2
    80                           	psect	text54,local,class=CODE,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,merge=1,delta=2
    82                           	psect	text56,local,class=CODE,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,merge=1,delta=2
    87                           	psect	intentry,global,class=CODE,delta=2
    88                           	psect	text62,local,class=CODE,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,merge=1,delta=2
    90                           	psect	text64,local,class=CODE,merge=1,delta=2
    91                           	psect	text65,local,class=CODE,merge=1,delta=2
    92                           	dabs	1,0x620,48
    93                           	dabs	1,0x5A0,80
    94                           	dabs	1,0x53C,52
    95                           	dabs	1,0x20,32,_BDT
    96                           	dabs	1,0x48,8,_CtrlTrfData
    97                           	dabs	1,0x40,8,_SetupPkt
    98                           	dabs	1,0x220,64,_INPacket
    99                           	dabs	1,0x2A0,64,_OUTPacket
   100                           	dabs	1,0x233C,0,_WorkQue
   101                           	dabs	1,0x7E,2
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001C                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011D                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  018E                     	;# 
   161  0191                     	;# 
   162  0191                     	;# 
   163  0192                     	;# 
   164  0193                     	;# 
   165  0193                     	;# 
   166  0194                     	;# 
   167  0195                     	;# 
   168  0196                     	;# 
   169  0199                     	;# 
   170  019A                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  039A                     	;# 
   200  039B                     	;# 
   201  0611                     	;# 
   202  0612                     	;# 
   203  0613                     	;# 
   204  0613                     	;# 
   205  0614                     	;# 
   206  0615                     	;# 
   207  0616                     	;# 
   208  0616                     	;# 
   209  0691                     	;# 
   210  0692                     	;# 
   211  0693                     	;# 
   212  0694                     	;# 
   213  0695                     	;# 
   214  0E8E                     	;# 
   215  0E8F                     	;# 
   216  0E90                     	;# 
   217  0E91                     	;# 
   218  0E92                     	;# 
   219  0E93                     	;# 
   220  0E94                     	;# 
   221  0E94                     	;# 
   222  0E95                     	;# 
   223  0E96                     	;# 
   224  0E97                     	;# 
   225  0E98                     	;# 
   226  0E99                     	;# 
   227  0E9A                     	;# 
   228  0E9B                     	;# 
   229  0E9C                     	;# 
   230  0E9D                     	;# 
   231  0E9E                     	;# 
   232  0E9F                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE9                     	;# 
   239  0FEA                     	;# 
   240  0FEB                     	;# 
   241  0FED                     	;# 
   242  0FEE                     	;# 
   243  0FEF                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011D                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  018E                     	;# 
   303  0191                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020C                     	;# 
   319  020D                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0391                     	;# 
   336  0392                     	;# 
   337  0393                     	;# 
   338  0394                     	;# 
   339  0395                     	;# 
   340  0396                     	;# 
   341  039A                     	;# 
   342  039B                     	;# 
   343  0611                     	;# 
   344  0612                     	;# 
   345  0613                     	;# 
   346  0613                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0616                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  0695                     	;# 
   356  0E8E                     	;# 
   357  0E8F                     	;# 
   358  0E90                     	;# 
   359  0E91                     	;# 
   360  0E92                     	;# 
   361  0E93                     	;# 
   362  0E94                     	;# 
   363  0E94                     	;# 
   364  0E95                     	;# 
   365  0E96                     	;# 
   366  0E97                     	;# 
   367  0E98                     	;# 
   368  0E99                     	;# 
   369  0E9A                     	;# 
   370  0E9B                     	;# 
   371  0E9C                     	;# 
   372  0E9D                     	;# 
   373  0E9E                     	;# 
   374  0E9F                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  0111                     	;# 
   433  0112                     	;# 
   434  0113                     	;# 
   435  0114                     	;# 
   436  0115                     	;# 
   437  0116                     	;# 
   438  0117                     	;# 
   439  0118                     	;# 
   440  0119                     	;# 
   441  011D                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  018E                     	;# 
   445  0191                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0194                     	;# 
   451  0195                     	;# 
   452  0196                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019E                     	;# 
   459  019F                     	;# 
   460  020C                     	;# 
   461  020D                     	;# 
   462  0211                     	;# 
   463  0211                     	;# 
   464  0212                     	;# 
   465  0212                     	;# 
   466  0213                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0216                     	;# 
   474  0216                     	;# 
   475  0217                     	;# 
   476  0217                     	;# 
   477  0391                     	;# 
   478  0392                     	;# 
   479  0393                     	;# 
   480  0394                     	;# 
   481  0395                     	;# 
   482  0396                     	;# 
   483  039A                     	;# 
   484  039B                     	;# 
   485  0611                     	;# 
   486  0612                     	;# 
   487  0613                     	;# 
   488  0613                     	;# 
   489  0614                     	;# 
   490  0615                     	;# 
   491  0616                     	;# 
   492  0616                     	;# 
   493  0691                     	;# 
   494  0692                     	;# 
   495  0693                     	;# 
   496  0694                     	;# 
   497  0695                     	;# 
   498  0E8E                     	;# 
   499  0E8F                     	;# 
   500  0E90                     	;# 
   501  0E91                     	;# 
   502  0E92                     	;# 
   503  0E93                     	;# 
   504  0E94                     	;# 
   505  0E94                     	;# 
   506  0E95                     	;# 
   507  0E96                     	;# 
   508  0E97                     	;# 
   509  0E98                     	;# 
   510  0E99                     	;# 
   511  0E9A                     	;# 
   512  0E9B                     	;# 
   513  0E9C                     	;# 
   514  0E9D                     	;# 
   515  0E9E                     	;# 
   516  0E9F                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  008C                     	;# 
   555  008D                     	;# 
   556  008E                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0111                     	;# 
   575  0112                     	;# 
   576  0113                     	;# 
   577  0114                     	;# 
   578  0115                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  0118                     	;# 
   582  0119                     	;# 
   583  011D                     	;# 
   584  018C                     	;# 
   585  018D                     	;# 
   586  018E                     	;# 
   587  0191                     	;# 
   588  0191                     	;# 
   589  0192                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0194                     	;# 
   593  0195                     	;# 
   594  0196                     	;# 
   595  0199                     	;# 
   596  019A                     	;# 
   597  019B                     	;# 
   598  019C                     	;# 
   599  019D                     	;# 
   600  019E                     	;# 
   601  019F                     	;# 
   602  020C                     	;# 
   603  020D                     	;# 
   604  0211                     	;# 
   605  0211                     	;# 
   606  0212                     	;# 
   607  0212                     	;# 
   608  0213                     	;# 
   609  0213                     	;# 
   610  0214                     	;# 
   611  0214                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0216                     	;# 
   616  0216                     	;# 
   617  0217                     	;# 
   618  0217                     	;# 
   619  0391                     	;# 
   620  0392                     	;# 
   621  0393                     	;# 
   622  0394                     	;# 
   623  0395                     	;# 
   624  0396                     	;# 
   625  039A                     	;# 
   626  039B                     	;# 
   627  0611                     	;# 
   628  0612                     	;# 
   629  0613                     	;# 
   630  0613                     	;# 
   631  0614                     	;# 
   632  0615                     	;# 
   633  0616                     	;# 
   634  0616                     	;# 
   635  0691                     	;# 
   636  0692                     	;# 
   637  0693                     	;# 
   638  0694                     	;# 
   639  0695                     	;# 
   640  0E8E                     	;# 
   641  0E8F                     	;# 
   642  0E90                     	;# 
   643  0E91                     	;# 
   644  0E92                     	;# 
   645  0E93                     	;# 
   646  0E94                     	;# 
   647  0E94                     	;# 
   648  0E95                     	;# 
   649  0E96                     	;# 
   650  0E97                     	;# 
   651  0E98                     	;# 
   652  0E99                     	;# 
   653  0E9A                     	;# 
   654  0E9B                     	;# 
   655  0E9C                     	;# 
   656  0E9D                     	;# 
   657  0E9E                     	;# 
   658  0E9F                     	;# 
   659  0FE4                     	;# 
   660  0FE5                     	;# 
   661  0FE6                     	;# 
   662  0FE7                     	;# 
   663  0FE8                     	;# 
   664  0FE9                     	;# 
   665  0FEA                     	;# 
   666  0FEB                     	;# 
   667  0FED                     	;# 
   668  0FEE                     	;# 
   669  0FEF                     	;# 
   670  0000                     	;# 
   671  0001                     	;# 
   672  0002                     	;# 
   673  0003                     	;# 
   674  0004                     	;# 
   675  0005                     	;# 
   676  0006                     	;# 
   677  0007                     	;# 
   678  0008                     	;# 
   679  0009                     	;# 
   680  000A                     	;# 
   681  000B                     	;# 
   682  000C                     	;# 
   683  000D                     	;# 
   684  000E                     	;# 
   685  0011                     	;# 
   686  0012                     	;# 
   687  0015                     	;# 
   688  0016                     	;# 
   689  0016                     	;# 
   690  0017                     	;# 
   691  0018                     	;# 
   692  0019                     	;# 
   693  001A                     	;# 
   694  001B                     	;# 
   695  001C                     	;# 
   696  008C                     	;# 
   697  008D                     	;# 
   698  008E                     	;# 
   699  0091                     	;# 
   700  0092                     	;# 
   701  0095                     	;# 
   702  0096                     	;# 
   703  0097                     	;# 
   704  0098                     	;# 
   705  0099                     	;# 
   706  009A                     	;# 
   707  009B                     	;# 
   708  009B                     	;# 
   709  009C                     	;# 
   710  009D                     	;# 
   711  009E                     	;# 
   712  009F                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  0111                     	;# 
   717  0112                     	;# 
   718  0113                     	;# 
   719  0114                     	;# 
   720  0115                     	;# 
   721  0116                     	;# 
   722  0117                     	;# 
   723  0118                     	;# 
   724  0119                     	;# 
   725  011D                     	;# 
   726  018C                     	;# 
   727  018D                     	;# 
   728  018E                     	;# 
   729  0191                     	;# 
   730  0191                     	;# 
   731  0192                     	;# 
   732  0193                     	;# 
   733  0193                     	;# 
   734  0194                     	;# 
   735  0195                     	;# 
   736  0196                     	;# 
   737  0199                     	;# 
   738  019A                     	;# 
   739  019B                     	;# 
   740  019C                     	;# 
   741  019D                     	;# 
   742  019E                     	;# 
   743  019F                     	;# 
   744  020C                     	;# 
   745  020D                     	;# 
   746  0211                     	;# 
   747  0211                     	;# 
   748  0212                     	;# 
   749  0212                     	;# 
   750  0213                     	;# 
   751  0213                     	;# 
   752  0214                     	;# 
   753  0214                     	;# 
   754  0215                     	;# 
   755  0215                     	;# 
   756  0215                     	;# 
   757  0216                     	;# 
   758  0216                     	;# 
   759  0217                     	;# 
   760  0217                     	;# 
   761  0391                     	;# 
   762  0392                     	;# 
   763  0393                     	;# 
   764  0394                     	;# 
   765  0395                     	;# 
   766  0396                     	;# 
   767  039A                     	;# 
   768  039B                     	;# 
   769  0611                     	;# 
   770  0612                     	;# 
   771  0613                     	;# 
   772  0613                     	;# 
   773  0614                     	;# 
   774  0615                     	;# 
   775  0616                     	;# 
   776  0616                     	;# 
   777  0691                     	;# 
   778  0692                     	;# 
   779  0693                     	;# 
   780  0694                     	;# 
   781  0695                     	;# 
   782  0E8E                     	;# 
   783  0E8F                     	;# 
   784  0E90                     	;# 
   785  0E91                     	;# 
   786  0E92                     	;# 
   787  0E93                     	;# 
   788  0E94                     	;# 
   789  0E94                     	;# 
   790  0E95                     	;# 
   791  0E96                     	;# 
   792  0E97                     	;# 
   793  0E98                     	;# 
   794  0E99                     	;# 
   795  0E9A                     	;# 
   796  0E9B                     	;# 
   797  0E9C                     	;# 
   798  0E9D                     	;# 
   799  0E9E                     	;# 
   800  0E9F                     	;# 
   801  0FE4                     	;# 
   802  0FE5                     	;# 
   803  0FE6                     	;# 
   804  0FE7                     	;# 
   805  0FE8                     	;# 
   806  0FE9                     	;# 
   807  0FEA                     	;# 
   808  0FEB                     	;# 
   809  0FED                     	;# 
   810  0FEE                     	;# 
   811  0FEF                     	;# 
   812  0000                     	;# 
   813  0001                     	;# 
   814  0002                     	;# 
   815  0003                     	;# 
   816  0004                     	;# 
   817  0005                     	;# 
   818  0006                     	;# 
   819  0007                     	;# 
   820  0008                     	;# 
   821  0009                     	;# 
   822  000A                     	;# 
   823  000B                     	;# 
   824  000C                     	;# 
   825  000D                     	;# 
   826  000E                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  0091                     	;# 
   842  0092                     	;# 
   843  0095                     	;# 
   844  0096                     	;# 
   845  0097                     	;# 
   846  0098                     	;# 
   847  0099                     	;# 
   848  009A                     	;# 
   849  009B                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  010C                     	;# 
   856  010D                     	;# 
   857  010E                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011D                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  0191                     	;# 
   872  0191                     	;# 
   873  0192                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0194                     	;# 
   877  0195                     	;# 
   878  0196                     	;# 
   879  0199                     	;# 
   880  019A                     	;# 
   881  019B                     	;# 
   882  019C                     	;# 
   883  019D                     	;# 
   884  019E                     	;# 
   885  019F                     	;# 
   886  020C                     	;# 
   887  020D                     	;# 
   888  0211                     	;# 
   889  0211                     	;# 
   890  0212                     	;# 
   891  0212                     	;# 
   892  0213                     	;# 
   893  0213                     	;# 
   894  0214                     	;# 
   895  0214                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0216                     	;# 
   900  0216                     	;# 
   901  0217                     	;# 
   902  0217                     	;# 
   903  0391                     	;# 
   904  0392                     	;# 
   905  0393                     	;# 
   906  0394                     	;# 
   907  0395                     	;# 
   908  0396                     	;# 
   909  039A                     	;# 
   910  039B                     	;# 
   911  0611                     	;# 
   912  0612                     	;# 
   913  0613                     	;# 
   914  0613                     	;# 
   915  0614                     	;# 
   916  0615                     	;# 
   917  0616                     	;# 
   918  0616                     	;# 
   919  0691                     	;# 
   920  0692                     	;# 
   921  0693                     	;# 
   922  0694                     	;# 
   923  0695                     	;# 
   924  0E8E                     	;# 
   925  0E8F                     	;# 
   926  0E90                     	;# 
   927  0E91                     	;# 
   928  0E92                     	;# 
   929  0E93                     	;# 
   930  0E94                     	;# 
   931  0E94                     	;# 
   932  0E95                     	;# 
   933  0E96                     	;# 
   934  0E97                     	;# 
   935  0E98                     	;# 
   936  0E99                     	;# 
   937  0E9A                     	;# 
   938  0E9B                     	;# 
   939  0E9C                     	;# 
   940  0E9D                     	;# 
   941  0E9E                     	;# 
   942  0E9F                     	;# 
   943  0FE4                     	;# 
   944  0FE5                     	;# 
   945  0FE6                     	;# 
   946  0FE7                     	;# 
   947  0FE8                     	;# 
   948  0FE9                     	;# 
   949  0FEA                     	;# 
   950  0FEB                     	;# 
   951  0FED                     	;# 
   952  0FEE                     	;# 
   953  0FEF                     	;# 
   954  0000                     	;# 
   955  0001                     	;# 
   956  0002                     	;# 
   957  0003                     	;# 
   958  0004                     	;# 
   959  0005                     	;# 
   960  0006                     	;# 
   961  0007                     	;# 
   962  0008                     	;# 
   963  0009                     	;# 
   964  000A                     	;# 
   965  000B                     	;# 
   966  000C                     	;# 
   967  000D                     	;# 
   968  000E                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0015                     	;# 
   972  0016                     	;# 
   973  0016                     	;# 
   974  0017                     	;# 
   975  0018                     	;# 
   976  0019                     	;# 
   977  001A                     	;# 
   978  001B                     	;# 
   979  001C                     	;# 
   980  008C                     	;# 
   981  008D                     	;# 
   982  008E                     	;# 
   983  0091                     	;# 
   984  0092                     	;# 
   985  0095                     	;# 
   986  0096                     	;# 
   987  0097                     	;# 
   988  0098                     	;# 
   989  0099                     	;# 
   990  009A                     	;# 
   991  009B                     	;# 
   992  009B                     	;# 
   993  009C                     	;# 
   994  009D                     	;# 
   995  009E                     	;# 
   996  009F                     	;# 
   997  010C                     	;# 
   998  010D                     	;# 
   999  010E                     	;# 
  1000  0111                     	;# 
  1001  0112                     	;# 
  1002  0113                     	;# 
  1003  0114                     	;# 
  1004  0115                     	;# 
  1005  0116                     	;# 
  1006  0117                     	;# 
  1007  0118                     	;# 
  1008  0119                     	;# 
  1009  011D                     	;# 
  1010  018C                     	;# 
  1011  018D                     	;# 
  1012  018E                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0194                     	;# 
  1019  0195                     	;# 
  1020  0196                     	;# 
  1021  0199                     	;# 
  1022  019A                     	;# 
  1023  019B                     	;# 
  1024  019C                     	;# 
  1025  019D                     	;# 
  1026  019E                     	;# 
  1027  019F                     	;# 
  1028  020C                     	;# 
  1029  020D                     	;# 
  1030  0211                     	;# 
  1031  0211                     	;# 
  1032  0212                     	;# 
  1033  0212                     	;# 
  1034  0213                     	;# 
  1035  0213                     	;# 
  1036  0214                     	;# 
  1037  0214                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0216                     	;# 
  1042  0216                     	;# 
  1043  0217                     	;# 
  1044  0217                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  039A                     	;# 
  1052  039B                     	;# 
  1053  0611                     	;# 
  1054  0612                     	;# 
  1055  0613                     	;# 
  1056  0613                     	;# 
  1057  0614                     	;# 
  1058  0615                     	;# 
  1059  0616                     	;# 
  1060  0616                     	;# 
  1061  0691                     	;# 
  1062  0692                     	;# 
  1063  0693                     	;# 
  1064  0694                     	;# 
  1065  0695                     	;# 
  1066  0E8E                     	;# 
  1067  0E8F                     	;# 
  1068  0E90                     	;# 
  1069  0E91                     	;# 
  1070  0E92                     	;# 
  1071  0E93                     	;# 
  1072  0E94                     	;# 
  1073  0E94                     	;# 
  1074  0E95                     	;# 
  1075  0E96                     	;# 
  1076  0E97                     	;# 
  1077  0E98                     	;# 
  1078  0E99                     	;# 
  1079  0E9A                     	;# 
  1080  0E9B                     	;# 
  1081  0E9C                     	;# 
  1082  0E9D                     	;# 
  1083  0E9E                     	;# 
  1084  0E9F                     	;# 
  1085  0FE4                     	;# 
  1086  0FE5                     	;# 
  1087  0FE6                     	;# 
  1088  0FE7                     	;# 
  1089  0FE8                     	;# 
  1090  0FE9                     	;# 
  1091  0FEA                     	;# 
  1092  0FEB                     	;# 
  1093  0FED                     	;# 
  1094  0FEE                     	;# 
  1095  0FEF                     	;# 
  1096  0000                     	;# 
  1097  0001                     	;# 
  1098  0002                     	;# 
  1099  0003                     	;# 
  1100  0004                     	;# 
  1101  0005                     	;# 
  1102  0006                     	;# 
  1103  0007                     	;# 
  1104  0008                     	;# 
  1105  0009                     	;# 
  1106  000A                     	;# 
  1107  000B                     	;# 
  1108  000C                     	;# 
  1109  000D                     	;# 
  1110  000E                     	;# 
  1111  0011                     	;# 
  1112  0012                     	;# 
  1113  0015                     	;# 
  1114  0016                     	;# 
  1115  0016                     	;# 
  1116  0017                     	;# 
  1117  0018                     	;# 
  1118  0019                     	;# 
  1119  001A                     	;# 
  1120  001B                     	;# 
  1121  001C                     	;# 
  1122  008C                     	;# 
  1123  008D                     	;# 
  1124  008E                     	;# 
  1125  0091                     	;# 
  1126  0092                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009B                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009E                     	;# 
  1138  009F                     	;# 
  1139  010C                     	;# 
  1140  010D                     	;# 
  1141  010E                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0113                     	;# 
  1145  0114                     	;# 
  1146  0115                     	;# 
  1147  0116                     	;# 
  1148  0117                     	;# 
  1149  0118                     	;# 
  1150  0119                     	;# 
  1151  011D                     	;# 
  1152  018C                     	;# 
  1153  018D                     	;# 
  1154  018E                     	;# 
  1155  0191                     	;# 
  1156  0191                     	;# 
  1157  0192                     	;# 
  1158  0193                     	;# 
  1159  0193                     	;# 
  1160  0194                     	;# 
  1161  0195                     	;# 
  1162  0196                     	;# 
  1163  0199                     	;# 
  1164  019A                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019D                     	;# 
  1168  019E                     	;# 
  1169  019F                     	;# 
  1170  020C                     	;# 
  1171  020D                     	;# 
  1172  0211                     	;# 
  1173  0211                     	;# 
  1174  0212                     	;# 
  1175  0212                     	;# 
  1176  0213                     	;# 
  1177  0213                     	;# 
  1178  0214                     	;# 
  1179  0214                     	;# 
  1180  0215                     	;# 
  1181  0215                     	;# 
  1182  0215                     	;# 
  1183  0216                     	;# 
  1184  0216                     	;# 
  1185  0217                     	;# 
  1186  0217                     	;# 
  1187  0391                     	;# 
  1188  0392                     	;# 
  1189  0393                     	;# 
  1190  0394                     	;# 
  1191  0395                     	;# 
  1192  0396                     	;# 
  1193  039A                     	;# 
  1194  039B                     	;# 
  1195  0611                     	;# 
  1196  0612                     	;# 
  1197  0613                     	;# 
  1198  0613                     	;# 
  1199  0614                     	;# 
  1200  0615                     	;# 
  1201  0616                     	;# 
  1202  0616                     	;# 
  1203  0691                     	;# 
  1204  0692                     	;# 
  1205  0693                     	;# 
  1206  0694                     	;# 
  1207  0695                     	;# 
  1208  0E8E                     	;# 
  1209  0E8F                     	;# 
  1210  0E90                     	;# 
  1211  0E91                     	;# 
  1212  0E92                     	;# 
  1213  0E93                     	;# 
  1214  0E94                     	;# 
  1215  0E94                     	;# 
  1216  0E95                     	;# 
  1217  0E96                     	;# 
  1218  0E97                     	;# 
  1219  0E98                     	;# 
  1220  0E99                     	;# 
  1221  0E9A                     	;# 
  1222  0E9B                     	;# 
  1223  0E9C                     	;# 
  1224  0E9D                     	;# 
  1225  0E9E                     	;# 
  1226  0E9F                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;_WorkQue
  1238                           
  1239                           	psect	idataBANK0
  1240  07FE                     __pidataBANK0:	
  1241                           
  1242                           ;initializer for _HashTime
  1243  07FE  34DD               	retlw	221
  1244                           
  1245                           	psect	idataBANK3
  1246  1CBF                     __pidataBANK3:	
  1247                           
  1248                           ;initializer for AsicPreCalc@F3347
  1249  1CBF  3498               	retlw	152
  1250  1CC0  342F               	retlw	47
  1251  1CC1  348A               	retlw	138
  1252  1CC2  3442               	retlw	66
  1253  1CC3  3491               	retlw	145
  1254  1CC4  3444               	retlw	68
  1255  1CC5  3437               	retlw	55
  1256  1CC6  3471               	retlw	113
  1257  1CC7  34CF               	retlw	207
  1258  1CC8  34FB               	retlw	251
  1259  1CC9  34C0               	retlw	192
  1260  1CCA  34B5               	retlw	181
  1261                           
  1262                           ;initializer for _Status
  1263  1CCB  3449               	retlw	73
  1264  1CCC  3400               	retlw	0
  1265  1CCD  3400               	retlw	0
  1266  1CCE  3400               	retlw	0
  1267  1CCF  3400               	retlw	0
  1268  1CD0  3400               	retlw	0
  1269  1CD1  3400               	retlw	0
  1270  1CD2  3400               	retlw	0
  1271  1CD3  3400               	retlw	0
  1272  1CD4  3400               	retlw	0
  1273  1CD5  3400               	retlw	0
  1274  1CD6  3440               	retlw	64
  1275  1CD7  3400               	retlw	0
  1276                           
  1277                           ;initializer for _ClockCfg
  1278  1CD8  3407               	retlw	7
  1279  1CD9  3400               	retlw	0
  1280  1CDA  347B               	retlw	123
  1281  1CDB  3405               	retlw	5
  1282  1CDC  3472               	retlw	114
  1283  1CDD  3401               	retlw	1
  1284  1CDE  3400               	retlw	0
  1285  1CDF  3400               	retlw	0
  1286                           
  1287                           ;initializer for _Cfg
  1288  1CE0  345E               	retlw	94
  1289  1CE1  3401               	retlw	1
  1290  1CE2  348F               	retlw	143
  1291  1CE3  3400               	retlw	0
  1292  1CE4  3400               	retlw	0
  1293  1CE5  3400               	retlw	0
  1294                           
  1295                           	psect	idataBANK7
  1296  1C2C                     __pidataBANK7:	
  1297                           
  1298                           ;initializer for _BankRanges
  1299  1C2C  3400               	retlw	0
  1300  1C2D  3400               	retlw	0
  1301  1C2E  3400               	retlw	0
  1302  1C2F  3400               	retlw	0
  1303  1C30  3400               	retlw	0
  1304  1C31  3400               	retlw	0
  1305  1C32  3400               	retlw	0
  1306  1C33  3440               	retlw	64
  1307  1C34  34AA               	retlw	170
  1308  1C35  34AA               	retlw	170
  1309  1C36  34AA               	retlw	170
  1310  1C37  342A               	retlw	42
  1311  1C38  3400               	retlw	0
  1312  1C39  3400               	retlw	0
  1313  1C3A  3400               	retlw	0
  1314  1C3B  3420               	retlw	32
  1315  1C3C  3499               	retlw	153
  1316  1C3D  3499               	retlw	153
  1317  1C3E  3499               	retlw	153
  1318  1C3F  3419               	retlw	25
  1319  1C40  3455               	retlw	85
  1320  1C41  3455               	retlw	85
  1321  1C42  3455               	retlw	85
  1322  1C43  3415               	retlw	21
  1323  1C44  3492               	retlw	146
  1324  1C45  3424               	retlw	36
  1325  1C46  3449               	retlw	73
  1326  1C47  3412               	retlw	18
  1327  1C48  3400               	retlw	0
  1328  1C49  3400               	retlw	0
  1329  1C4A  3400               	retlw	0
  1330  1C4B  3410               	retlw	16
  1331                           
  1332                           	psect	strings
  1333  0800                     __pstrings:	
  1334  0800                     __stringtab:	
  1335  0800  3400               	retlw	0
  1336  0801                     __end_of__stringtab:	
  1337  0801                     _USB_SD_Ptr:	
  1338  0801  34AB               	retlw	(_sd000| (0+32768))& (0+255)
  1339  0802  3405               	retlw	(_sd001| (0+32768))& (0+255)
  1340  0803  3439               	retlw	(_sd002| (0+32768))& (0+255)
  1341  0804                     __end_of_USB_SD_Ptr:	
  1342  0804                     _USB_CD_Ptr:	
  1343  0804  346D               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1344  0805                     __end_of_USB_CD_Ptr:	
  1345  0805                     _sd001:	
  1346  0805  3434               	retlw	52
  1347  0806  3403               	retlw	3
  1348  0807  344B               	retlw	75
  1349  0808  3400               	retlw	0
  1350  0809  346C               	retlw	108
  1351  080A  3400               	retlw	0
  1352  080B  346F               	retlw	111
  1353  080C  3400               	retlw	0
  1354  080D  346E               	retlw	110
  1355  080E  3400               	retlw	0
  1356  080F  3464               	retlw	100
  1357  0810  3400               	retlw	0
  1358  0811  3469               	retlw	105
  1359  0812  3400               	retlw	0
  1360  0813  346B               	retlw	107
  1361  0814  3400               	retlw	0
  1362  0815  3465               	retlw	101
  1363  0816  3400               	retlw	0
  1364  0817  3420               	retlw	32
  1365  0818  3400               	retlw	0
  1366  0819  3450               	retlw	80
  1367  081A  3400               	retlw	0
  1368  081B  3472               	retlw	114
  1369  081C  3400               	retlw	0
  1370  081D  346F               	retlw	111
  1371  081E  3400               	retlw	0
  1372  081F  346A               	retlw	106
  1373  0820  3400               	retlw	0
  1374  0821  3465               	retlw	101
  1375  0822  3400               	retlw	0
  1376  0823  3463               	retlw	99
  1377  0824  3400               	retlw	0
  1378  0825  3474               	retlw	116
  1379  0826  3400               	retlw	0
  1380  0827  3400               	retlw	0
  1381  0828  3400               	retlw	0
  1382  0829  3400               	retlw	0
  1383  082A  3400               	retlw	0
  1384  082B  3400               	retlw	0
  1385  082C  3400               	retlw	0
  1386  082D  3400               	retlw	0
  1387  082E  3400               	retlw	0
  1388  082F  3400               	retlw	0
  1389  0830  3400               	retlw	0
  1390  0831  3400               	retlw	0
  1391  0832  3400               	retlw	0
  1392  0833  3400               	retlw	0
  1393  0834  3400               	retlw	0
  1394  0835  3400               	retlw	0
  1395  0836  3400               	retlw	0
  1396  0837  3400               	retlw	0
  1397  0838  3400               	retlw	0
  1398  0839                     __end_of_sd001:	
  1399  0839                     _sd002:	
  1400  0839  3434               	retlw	52
  1401  083A  3403               	retlw	3
  1402  083B  344B               	retlw	75
  1403  083C  3400               	retlw	0
  1404  083D  3431               	retlw	49
  1405  083E  3400               	retlw	0
  1406  083F  3436               	retlw	54
  1407  0840  3400               	retlw	0
  1408  0841  3400               	retlw	0
  1409  0842  3400               	retlw	0
  1410  0843  3400               	retlw	0
  1411  0844  3400               	retlw	0
  1412  0845  3400               	retlw	0
  1413  0846  3400               	retlw	0
  1414  0847  3400               	retlw	0
  1415  0848  3400               	retlw	0
  1416  0849  3400               	retlw	0
  1417  084A  3400               	retlw	0
  1418  084B  3400               	retlw	0
  1419  084C  3400               	retlw	0
  1420  084D  3400               	retlw	0
  1421  084E  3400               	retlw	0
  1422  084F  3400               	retlw	0
  1423  0850  3400               	retlw	0
  1424  0851  3400               	retlw	0
  1425  0852  3400               	retlw	0
  1426  0853  3400               	retlw	0
  1427  0854  3400               	retlw	0
  1428  0855  3400               	retlw	0
  1429  0856  3400               	retlw	0
  1430  0857  3400               	retlw	0
  1431  0858  3400               	retlw	0
  1432  0859  3400               	retlw	0
  1433  085A  3400               	retlw	0
  1434  085B  3400               	retlw	0
  1435  085C  3400               	retlw	0
  1436  085D  3400               	retlw	0
  1437  085E  3400               	retlw	0
  1438  085F  3400               	retlw	0
  1439  0860  3400               	retlw	0
  1440  0861  3400               	retlw	0
  1441  0862  3400               	retlw	0
  1442  0863  3400               	retlw	0
  1443  0864  3400               	retlw	0
  1444  0865  3400               	retlw	0
  1445  0866  3400               	retlw	0
  1446  0867  3400               	retlw	0
  1447  0868  3400               	retlw	0
  1448  0869  3400               	retlw	0
  1449  086A  3400               	retlw	0
  1450  086B  3400               	retlw	0
  1451  086C  3400               	retlw	0
  1452  086D                     __end_of_sd002:	
  1453  086D                     _configDescriptor1:	
  1454  086D  3409               	retlw	9
  1455  086E  3402               	retlw	2
  1456  086F  3420               	retlw	32
  1457  0870  3400               	retlw	0
  1458  0871  3401               	retlw	1
  1459  0872  3401               	retlw	1
  1460  0873  3400               	retlw	0
  1461  0874  34C0               	retlw	192
  1462  0875  3432               	retlw	50
  1463  0876  3409               	retlw	9
  1464  0877  3404               	retlw	4
  1465  0878  3400               	retlw	0
  1466  0879  3400               	retlw	0
  1467  087A  3402               	retlw	2
  1468  087B  34FF               	retlw	255
  1469  087C  34FF               	retlw	255
  1470  087D  34FF               	retlw	255
  1471  087E  3400               	retlw	0
  1472  087F  3407               	retlw	7
  1473  0880  3405               	retlw	5
  1474  0881  3401               	retlw	1
  1475  0882  3402               	retlw	2
  1476  0883  3440               	retlw	64
  1477  0884  3400               	retlw	0
  1478  0885  3401               	retlw	1
  1479  0886  3407               	retlw	7
  1480  0887  3405               	retlw	5
  1481  0888  3481               	retlw	129
  1482  0889  3402               	retlw	2
  1483  088A  3440               	retlw	64
  1484  088B  3400               	retlw	0
  1485  088C  3401               	retlw	1
  1486  088D                     __end_of_configDescriptor1:	
  1487  088D                     _device_dsc:	
  1488  088D  3412               	retlw	18
  1489  088E  3401               	retlw	1
  1490  088F  3400               	retlw	0
  1491  0890  3402               	retlw	2
  1492  0891  3400               	retlw	0
  1493  0892  3400               	retlw	0
  1494  0893  3400               	retlw	0
  1495  0894  3408               	retlw	8
  1496  0895  34D8               	retlw	216
  1497  0896  3404               	retlw	4
  1498  0897  340A               	retlw	10
  1499  0898  34F6               	retlw	246
  1500  0899  3400               	retlw	0
  1501  089A  3400               	retlw	0
  1502  089B  3401               	retlw	1
  1503  089C  3402               	retlw	2
  1504  089D  3400               	retlw	0
  1505  089E  3401               	retlw	1
  1506  089F                     __end_of_device_dsc:	
  1507  089F                     _ID:	
  1508  089F  3410               	retlw	16
  1509  08A0  344B               	retlw	75
  1510  08A1  3431               	retlw	49
  1511  08A2  3436               	retlw	54
  1512  08A3  3400               	retlw	0
  1513  08A4  3400               	retlw	0
  1514  08A5  3400               	retlw	0
  1515  08A6  3400               	retlw	0
  1516  08A7  34EF               	retlw	239
  1517  08A8  34BE               	retlw	190
  1518  08A9  34AD               	retlw	173
  1519  08AA  34DE               	retlw	222
  1520  08AB                     __end_of_ID:	
  1521  08AB                     _sd000:	
  1522  08AB  3404               	retlw	4
  1523  08AC  3403               	retlw	3
  1524  08AD  3409               	retlw	9
  1525  08AE  3404               	retlw	4
  1526  08AF                     __end_of_sd000:	
  1527                           
  1528                           	psect	nvBANK3
  1529  01E7                     __pnvBANK3:	
  1530  01E7                     _FanLevel:	
  1531  01E7                     	ds	1
  1532  01E8                     _TempTarget:	
  1533  01E8                     	ds	1
  1534  01E9                     _BankSize:	
  1535  01E9                     	ds	1
  1536  000B                     _INTCONbits	set	11
  1537  0012                     _PIR2bits	set	18
  1538  001B                     _PR2	set	27
  1539  0018                     _T1CONbits	set	24
  1540  0019                     _T1GCONbits	set	25
  1541  001C                     _T2CONbits	set	28
  1542  0015                     _TMR0	set	21
  1543  0017                     _TMR1H	set	23
  1544  0016                     _TMR1L	set	22
  1545  005F                     _GIE	set	95
  1546  008D                     _RCIF	set	141
  1547  008B                     _SSP1IF	set	139
  1548  00CC                     _T1GSPM	set	204
  1549  005A                     _TMR0IF	set	90
  1550  00CF                     _TMR1GE	set	207
  1551  008F                     _TMR1GIF	set	143
  1552  0088                     _TMR1IF	set	136
  1553  00C0                     _TMR1ON	set	192
  1554  0089                     _TMR2IF	set	137
  1555  00E2                     _TMR2ON	set	226
  1556  009D                     _ADCON0bits	set	157
  1557  009E                     _ADCON1bits	set	158
  1558  009F                     _ADCON2bits	set	159
  1559  009C                     _ADRESH	set	156
  1560  0095                     _OPTION_REGbits	set	149
  1561  0099                     _OSCCON	set	153
  1562  0098                     _OSCTUNE	set	152
  1563  0092                     _PIE2bits	set	146
  1564  008C                     _TRISAbits	set	140
  1565  008D                     _TRISBbits	set	141
  1566  008E                     _TRISCbits	set	142
  1567  04AD                     _TMR0CS	set	1197
  1568  048F                     _TMR1GIE	set	1167
  1569  0488                     _TMR1IE	set	1160
  1570  010C                     _LATAbits	set	268
  1571  010E                     _LATC	set	270
  1572  010E                     _LATCbits	set	270
  1573  018C                     _ANSELA	set	396
  1574  018D                     _ANSELB	set	397
  1575  018D                     _ANSELBbits	set	397
  1576  018E                     _ANSELC	set	398
  1577  019F                     _BAUDCONbits	set	415
  1578  0199                     _RCREG	set	409
  1579  019D                     _RCSTAbits	set	413
  1580  019E                     _TXSTAbits	set	414
  1581  0212                     _SSPADD	set	530
  1582  0211                     _SSPBUF	set	529
  1583  0215                     _SSPCON1bits	set	533
  1584  0216                     _SSPCON2bits	set	534
  1585  0217                     _SSPCON3bits	set	535
  1586  0214                     _SSPSTATbits	set	532
  1587  10AD                     _SSP1EN	set	4269
  1588  039B                     _ACTCON	set	923
  1589  0396                     _IOCBF	set	918
  1590  0394                     _IOCBPbits	set	916
  1591  1C9B                     _IOCAF3	set	7323
  1592  0613                     _PWM1CON	set	1555
  1593  0612                     _PWM1DCH	set	1554
  1594  0611                     _PWM1DCL	set	1553
  1595  309E                     _PWM1OE	set	12446
  1596  0E96                     _UADDR	set	3734
  1597  0E91                     _UCFG	set	3729
  1598  0E8E                     _UCON	set	3726
  1599  0E8E                     _UCONbits	set	3726
  1600  0E97                     _UEIE	set	3735
  1601  0E93                     _UEIR	set	3731
  1602  0E98                     _UEP0bits	set	3736
  1603  0E92                     _UIE	set	3730
  1604  0E92                     _UIEbits	set	3730
  1605  0E90                     _UIR	set	3728
  1606  0E90                     _UIRbits	set	3728
  1607  0E8F                     _USTAT	set	3727
  1608  0E98                     _UEP0	set	3736
  1609  0E99                     _UEP1	set	3737
  1610                           
  1611                           ; #config settings
  1612  0000                     
  1613                           	psect	cinit
  1614  1238                     start_initialization:	
  1615  1238                     __initialization:		;BIGRAM
  1616                           
  1617                           ; Clear objects allocated to BIGRAM
  1618  1238  303C               	movlw	low (0+9020)
  1619  1239  0084               	movwf	4
  1620  123A  3023               	movlw	high (0+9020)
  1621  123B  0085               	movwf	5
  1622  123C  30B4               	movlw	180
  1623  123D  00FE               	movwf	btemp
  1624  123E  3000               	movlw	0
  1625  123F  00FF               	movwf	btemp+1
  1626  1240  319A  22F4  3192   	fcall	clear_ram0
  1627                           
  1628                           ; Clear objects allocated to BANK0
  1629  1243  3062               	movlw	low __pbssBANK0
  1630  1244  0084               	movwf	4
  1631  1245  3000               	movlw	high __pbssBANK0
  1632  1246  0085               	movwf	5
  1633  1247  300C               	movlw	12
  1634  1248  00FE               	movwf	btemp
  1635  1249  3000               	movlw	0
  1636  124A  00FF               	movwf	btemp+1
  1637  124B  319A  22F4  3192   	fcall	clear_ram0
  1638                           
  1639                           ; Clear objects allocated to BANK1
  1640  124E  30E2               	movlw	low __pbssBANK1
  1641  124F  0084               	movwf	4
  1642  1250  3000               	movlw	high __pbssBANK1
  1643  1251  0085               	movwf	5
  1644  1252  300E               	movlw	14
  1645  1253  00FE               	movwf	btemp
  1646  1254  3000               	movlw	0
  1647  1255  00FF               	movwf	btemp+1
  1648  1256  319A  22F4  3192   	fcall	clear_ram0
  1649                           
  1650                           ; Clear objects allocated to BANK2
  1651  1259  3059               	movlw	low __pbssBANK2
  1652  125A  0084               	movwf	4
  1653  125B  3001               	movlw	high __pbssBANK2
  1654  125C  0085               	movwf	5
  1655  125D  3017               	movlw	23
  1656  125E  00FE               	movwf	btemp
  1657  125F  3000               	movlw	0
  1658  1260  00FF               	movwf	btemp+1
  1659  1261  319A  22F4  3192   	fcall	clear_ram0
  1660                           
  1661                           ; Clear objects allocated to BANK3
  1662  1264  30C7               	movlw	low __pbssBANK3
  1663  1265  0084               	movwf	4
  1664  1266  3001               	movlw	high __pbssBANK3
  1665  1267  0085               	movwf	5
  1666  1268  3020               	movlw	32
  1667  1269  00FE               	movwf	btemp
  1668  126A  3000               	movlw	0
  1669  126B  00FF               	movwf	btemp+1
  1670  126C  319A  22F4  3192   	fcall	clear_ram0
  1671                           
  1672                           ; Clear objects allocated to BANK4
  1673  126F  3060               	movlw	low __pbssBANK4
  1674  1270  0084               	movwf	4
  1675  1271  3002               	movlw	high __pbssBANK4
  1676  1272  0085               	movwf	5
  1677  1273  3010               	movlw	16
  1678  1274  00FE               	movwf	btemp
  1679  1275  3000               	movlw	0
  1680  1276  00FF               	movwf	btemp+1
  1681  1277  319A  22F4  3192   	fcall	clear_ram0
  1682                           
  1683                           ; Clear objects allocated to BANK6
  1684  127A  3020               	movlw	low __pbssBANK6
  1685  127B  0084               	movwf	4
  1686  127C  3003               	movlw	high __pbssBANK6
  1687  127D  0085               	movwf	5
  1688  127E  3038               	movlw	56
  1689  127F  00FE               	movwf	btemp
  1690  1280  3000               	movlw	0
  1691  1281  00FF               	movwf	btemp+1
  1692  1282  319A  22F4  3192   	fcall	clear_ram0
  1693                           
  1694                           ; Initialize objects allocated to BANK0
  1695  1285  3187  27FE  3192   	fcall	__pidataBANK0	;fetch initializer
  1696  1288  00EE               	movwf	__pdataBANK0& (0+127)
  1697                           
  1698                           ; Initialize objects allocated to BANK3
  1699  1289  30BF               	movlw	low __pidataBANK3
  1700  128A  0084               	movwf	4
  1701  128B  309C               	movlw	(high __pidataBANK3)| (0+128)
  1702  128C  0085               	movwf	5
  1703  128D  30A0               	movlw	low __pdataBANK3
  1704  128E  0086               	movwf	6
  1705  128F  3001               	movlw	high __pdataBANK3
  1706  1290  0087               	movwf	7
  1707  1291  3000               	movlw	0
  1708  1292  00FF               	movwf	btemp+1
  1709  1293  3027               	movlw	39
  1710  1294  319A  22E8  3192   	fcall	init_ram
  1711                           
  1712                           ; Initialize objects allocated to BANK7
  1713  1297  302C               	movlw	low __pidataBANK7
  1714  1298  0084               	movwf	4
  1715  1299  309C               	movlw	(high __pidataBANK7)| (0+128)
  1716  129A  0085               	movwf	5
  1717  129B  30A0               	movlw	low __pdataBANK7
  1718  129C  0086               	movwf	6
  1719  129D  3003               	movlw	high __pdataBANK7
  1720  129E  0087               	movwf	7
  1721  129F  3000               	movlw	0
  1722  12A0  00FF               	movwf	btemp+1
  1723  12A1  3020               	movlw	32
  1724  12A2  319A  22E8         	fcall	init_ram
  1725  12A4                     end_of_initialization:	
  1726                           ;End of C runtime variable initialization code
  1727                           
  1728  12A4                     __end_of__initialization:	
  1729  12A4  0020               	movlb	0
  1730  12A5  319B  2B75         	ljmp	_main	;jump to C main() function
  1731                           
  1732                           	psect	bssBANK0
  1733  0062                     __pbssBANK0:	
  1734  0062                     _I2CCmd:	
  1735  0062                     	ds	1
  1736  0063                     _I2CCount:	
  1737  0063                     	ds	1
  1738  0064                     _I2CState:	
  1739  0064                     	ds	1
  1740  0065                     _ResultPos:	
  1741  0065                     	ds	1
  1742  0066                     _USBDeferStatusStagePacket:	
  1743  0066                     	ds	1
  1744  0067                     _controlTransferState:	
  1745  0067                     	ds	1
  1746  0068                     _endpoint_number:	
  1747  0068                     	ds	1
  1748  0069                     _pBDTEntryEP0OutNext:	
  1749  0069                     	ds	1
  1750  006A                     _ptr:	
  1751  006A                     	ds	1
  1752  006B                     _shortPacketStatus:	
  1753  006B                     	ds	1
  1754  006C                     _USBAlternateInterface:	
  1755  006C                     	ds	1
  1756  006D                     _WQX:	
  1757  006D                     	ds	1
  1758                           
  1759                           	psect	dataBANK0
  1760  006E                     __pdataBANK0:	
  1761  006E                     _HashTime:	
  1762  006E                     	ds	1
  1763                           
  1764                           	psect	bssBANK1
  1765  00E2                     __pbssBANK1:	
  1766  00E2                     _pBDTEntryIn:	
  1767  00E2                     	ds	2
  1768  00E4                     _SlaveAddress:	
  1769  00E4                     	ds	1
  1770  00E5                     _USBDeviceState:	
  1771  00E5                     	ds	1
  1772  00E6                     _WorkNow:	
  1773  00E6                     	ds	1
  1774  00E7                     _pBDTEntryEP0OutCurrent:	
  1775  00E7                     	ds	1
  1776  00E8                     _inPipes:	
  1777  00E8                     	ds	5
  1778  00ED                     _USBActiveConfiguration:	
  1779  00ED                     	ds	1
  1780  00EE                     _USTATcopy:	
  1781  00EE                     	ds	1
  1782  00EF                     _WQI:	
  1783  00EF                     	ds	1
  1784                           
  1785                           	psect	bssBANK2
  1786  0159                     __pbssBANK2:	
  1787  0159                     _Step:	
  1788  0159                     	ds	2
  1789  015B                     _pBDTEntryOut:	
  1790  015B                     	ds	2
  1791  015D                     _send32_data:	
  1792  015D                     	ds	2
  1793  015F                     _BothEP0OutUOWNsSet:	
  1794  015F                     	ds	1
  1795  0160                     _I2CAddr:	
  1796  0160                     	ds	1
  1797  0161                     _I2CInBuf:	
  1798  0161                     	ds	1
  1799  0162                     _RemoteWakeup:	
  1800  0162                     	ds	1
  1801  0163                     _ResultQC:	
  1802  0163                     	ds	1
  1803  0164                     _USBBusIsSuspended:	
  1804  0164                     	ds	1
  1805  0165                     _USBDeferINDataStagePackets:	
  1806  0165                     	ds	1
  1807  0166                     _USBDeferOUTDataStagePackets:	
  1808  0166                     	ds	1
  1809  0167                     _USBGenericInHandle:	
  1810  0167                     	ds	1
  1811  0168                     _USBGenericOutHandle:	
  1812  0168                     	ds	1
  1813  0169                     _USBStatusStageEnabledFlag1:	
  1814  0169                     	ds	1
  1815  016A                     _USBStatusStageEnabledFlag2:	
  1816  016A                     	ds	1
  1817  016B                     _USBStatusStageTimeoutCounter:	
  1818  016B                     	ds	1
  1819  016C                     _last_bit0:	
  1820  016C                     	ds	1
  1821  016D                     _last_bit1:	
  1822  016D                     	ds	1
  1823  016E                     _pDst:	
  1824  016E                     	ds	1
  1825  016F                     _send32_count:	
  1826  016F                     	ds	1
  1827                           
  1828                           	psect	bssBANK3
  1829  01C7                     __pbssBANK3:	
  1830  01C7                     _outPipes:	
  1831  01C7                     	ds	6
  1832  01CD                     USBCBSendResume@delay_count:	
  1833  01CD                     	ds	2
  1834  01CF                     _LastError:	
  1835  01CF                     	ds	2
  1836  01D1                     _ep_data_in:	
  1837  01D1                     	ds	2
  1838  01D3                     _ep_data_out:	
  1839  01D3                     	ds	2
  1840  01D5                     _LastTemp:	
  1841  01D5                     	ds	1
  1842  01D6                     _SlowTick:	
  1843  01D6                     	ds	1
  1844  01D7                     _TimeOut:	
  1845  01D7                     	ds	1
  1846  01D8                     _VerySlowTick:	
  1847  01D8                     	ds	1
  1848  01D9                     _ResultQue:	
  1849  01D9                     	ds	12
  1850  01E5                     _Error:	
  1851  01E5                     	ds	2
  1852                           
  1853                           	psect	dataBANK3
  1854  01A0                     __pdataBANK3:	
  1855  01A0                     AsicPreCalc@F3347:	
  1856  01A0                     	ds	12
  1857  01AC                     _Status:	
  1858  01AC                     	ds	13
  1859  01B9                     _ClockCfg:	
  1860  01B9                     	ds	8
  1861  01C1                     _Cfg:	
  1862  01C1                     	ds	6
  1863                           
  1864                           	psect	bssBANK4
  1865  0260                     __pbssBANK4:	
  1866  0260                     _buf:	
  1867  0260                     	ds	16
  1868                           
  1869                           	psect	bssBANK6
  1870  0320                     __pbssBANK6:	
  1871  0320                     _NonceRanges:	
  1872  0320                     	ds	32
  1873  0340                     _PrecalcHashes:	
  1874  0340                     	ds	24
  1875                           
  1876                           	psect	dataBANK7
  1877  03A0                     __pdataBANK7:	
  1878  03A0                     _BankRanges:	
  1879  03A0                     	ds	32
  1880                           
  1881                           	psect	clrtext
  1882  1AF4                     clear_ram0:	
  1883                           ;	Called with FSR0 containing the base address, and
  1884                           ;	btemp/btemp+1 has the size to clear
  1885                           
  1886  1AF4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1887  1AF5                     clrloop0:	
  1888  1AF5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1889  1AF6  3101               	addfsr 0,1
  1890  1AF7  3001               	movlw	1
  1891  1AF8  02FE               	subwf	126,f
  1892  1AF9  3000               	movlw	0
  1893  1AFA  3BFF               	subwfb	127,f
  1894  1AFB  087F               	movf	127,w
  1895  1AFC  047E               	iorwf	126,w
  1896  1AFD  1903               	btfsc	3,2
  1897  1AFE  3400               	retlw	0	;all done for this memory range, return
  1898  1AFF  2AF5               	goto	clrloop0	;have we reached the end yet?
  1899                           
  1900                           	psect	inittext
  1901  1AE8                     init_ram:	
  1902  1AE8  00FE               	movwf	126
  1903  1AE9                     initloop:	
  1904  1AE9  0012               	moviw fsr0++
  1905  1AEA  001E               	movwi fsr1++
  1906  1AEB  3001               	movlw	1
  1907  1AEC  02FE               	subwf	126,f
  1908  1AED  3000               	movlw	0
  1909  1AEE  3BFF               	subwfb	127,f
  1910  1AEF  087F               	movf	127,w
  1911  1AF0  047E               	iorwf	126,w
  1912  1AF1  1903               	btfsc	3,2
  1913  1AF2  3400               	retlw	0
  1914  1AF3  2AE9               	goto	initloop
  1915                           
  1916                           	psect	cstackBANK2
  1917  0120                     __pcstackBANK2:	
  1918  0120                     AsicPreCalc@K:	
  1919                           
  1920                           ; 12 bytes @ 0x0
  1921  0120                     	ds	12
  1922  012C                     AsicPreCalc@m:	
  1923                           
  1924                           ; 32 bytes @ 0xC
  1925  012C                     	ds	32
  1926  014C                     AsicPreCalc@z:	
  1927                           
  1928                           ; 4 bytes @ 0x2C
  1929  014C                     	ds	4
  1930  0150                     AsicPreCalc@y:	
  1931                           
  1932                           ; 4 bytes @ 0x30
  1933  0150                     	ds	4
  1934  0154                     AsicPreCalc@x:	
  1935                           
  1936                           ; 4 bytes @ 0x34
  1937  0154                     	ds	4
  1938  0158                     AsicPreCalc@n:	
  1939                           
  1940                           ; 1 bytes @ 0x38
  1941  0158                     	ds	1
  1942                           
  1943                           	psect	cstackBANK1
  1944  00A0                     __pcstackBANK1:	
  1945  00A0                     ??_USBConfigureEndpoint:	
  1946  00A0                     ??_memset:	
  1947                           ; 0 bytes @ 0x0
  1948                           
  1949  00A0                     ??_USBCtrlTrfInHandler:	
  1950                           ; 0 bytes @ 0x0
  1951                           
  1952  00A0                     ??_USBCtrlEPAllowDataStage:	
  1953                           ; 0 bytes @ 0x0
  1954                           
  1955  00A0                     ??___awdiv:	
  1956                           ; 0 bytes @ 0x0
  1957                           
  1958  00A0                     ??___awmod:	
  1959                           ; 0 bytes @ 0x0
  1960                           
  1961  00A0                     ??___lwdiv:	
  1962                           ; 0 bytes @ 0x0
  1963                           
  1964  00A0                     ?_USBTransferOnePacket:	
  1965                           ; 0 bytes @ 0x0
  1966                           
  1967  00A0                     ?___ftpack:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970  00A0                     ?_rotate:	
  1971                           ; 3 bytes @ 0x0
  1972                           
  1973  00A0                     USBTransferOnePacket@dir:	
  1974                           ; 4 bytes @ 0x0
  1975                           
  1976  00A0                     USBCtrlTrfRxService@i:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979  00A0                     USBDeviceInit@p:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982  00A0                     ___wmul@product:	
  1983                           ; 2 bytes @ 0x0
  1984                           
  1985  00A0                     ___ftpack@arg:	
  1986                           ; 2 bytes @ 0x0
  1987                           
  1988  00A0                     rotate@x:	
  1989                           ; 3 bytes @ 0x0
  1990                           
  1991                           
  1992                           ; 4 bytes @ 0x0
  1993  00A0                     	ds	1
  1994  00A1                     USBTransferOnePacket@data:	
  1995  00A1                     USBCtrlTrfRxService@byteToRead:	
  1996                           ; 1 bytes @ 0x1
  1997                           
  1998  00A1                     ___awdiv@counter:	
  1999                           ; 1 bytes @ 0x1
  2000                           
  2001  00A1                     ___awmod@counter:	
  2002                           ; 1 bytes @ 0x1
  2003                           
  2004  00A1                     memset@p1:	
  2005                           ; 1 bytes @ 0x1
  2006                           
  2007  00A1                     ___lwdiv@quotient:	
  2008                           ; 1 bytes @ 0x1
  2009                           
  2010                           
  2011                           ; 2 bytes @ 0x1
  2012  00A1                     	ds	1
  2013  00A2                     ??_USBCtrlTrfOutHandler:	
  2014  00A2                     ?_SendCmdReply:	
  2015                           ; 0 bytes @ 0x2
  2016                           
  2017  00A2                     ??_USBCtrlEPServiceComplete:	
  2018                           ; 0 bytes @ 0x2
  2019                           
  2020  00A2                     ?_SendAsicData:	
  2021                           ; 0 bytes @ 0x2
  2022                           
  2023  00A2                     USBDeviceInit@i_718:	
  2024                           ; 0 bytes @ 0x2
  2025                           
  2026  00A2                     USBTransferOnePacket@len:	
  2027                           ; 1 bytes @ 0x2
  2028                           
  2029  00A2                     ___awdiv@sign:	
  2030                           ; 1 bytes @ 0x2
  2031                           
  2032  00A2                     ___awmod@sign:	
  2033                           ; 1 bytes @ 0x2
  2034                           
  2035  00A2                     memset@p:	
  2036                           ; 1 bytes @ 0x2
  2037                           
  2038  00A2                     SendAsicData@work:	
  2039                           ; 1 bytes @ 0x2
  2040                           
  2041  00A2                     SendCmdReply@cmd:	
  2042                           ; 2 bytes @ 0x2
  2043                           
  2044                           
  2045                           ; 2 bytes @ 0x2
  2046  00A2                     	ds	1
  2047  00A3                     ??_USBTransferOnePacket:	
  2048  00A3                     USBDeviceInit@i:	
  2049                           ; 0 bytes @ 0x3
  2050                           
  2051  00A3                     ___ftpack@exp:	
  2052                           ; 1 bytes @ 0x3
  2053                           
  2054  00A3                     ___lwdiv@counter:	
  2055                           ; 1 bytes @ 0x3
  2056                           
  2057  00A3                     ___awdiv@quotient:	
  2058                           ; 1 bytes @ 0x3
  2059                           
  2060                           
  2061                           ; 2 bytes @ 0x3
  2062  00A3                     	ds	1
  2063  00A4                     ??_USBEnableEndpoint:	
  2064  00A4                     ??_SendAsicData:	
  2065                           ; 0 bytes @ 0x4
  2066                           
  2067  00A4                     rotate@y:	
  2068                           ; 0 bytes @ 0x4
  2069                           
  2070  00A4                     ___ftpack@sign:	
  2071                           ; 1 bytes @ 0x4
  2072                           
  2073  00A4                     SendCmdReply@data:	
  2074                           ; 1 bytes @ 0x4
  2075                           
  2076                           
  2077                           ; 2 bytes @ 0x4
  2078  00A4                     	ds	1
  2079  00A5                     ??_rotate:	
  2080  00A5                     ??_DetectAsics:	
  2081                           ; 0 bytes @ 0x5
  2082                           
  2083  00A5                     ?___awtoft:	
  2084                           ; 0 bytes @ 0x5
  2085                           
  2086  00A5                     USBTransferOnePacket@ep:	
  2087                           ; 3 bytes @ 0x5
  2088                           
  2089  00A5                     ___awtoft@c:	
  2090                           ; 1 bytes @ 0x5
  2091                           
  2092                           
  2093                           ; 2 bytes @ 0x5
  2094  00A5                     	ds	1
  2095  00A6                     USBTransferOnePacket@handle:	
  2096  00A6                     SendCmdReply@count:	
  2097                           ; 1 bytes @ 0x6
  2098                           
  2099  00A6                     USBEnableEndpoint@p:	
  2100                           ; 1 bytes @ 0x6
  2101                           
  2102                           
  2103                           ; 2 bytes @ 0x6
  2104  00A6                     	ds	1
  2105  00A7                     ??_SendCmdReply:	
  2106                           
  2107                           ; 0 bytes @ 0x7
  2108  00A7                     	ds	1
  2109  00A8                     ??___awtoft:	
  2110  00A8                     USBEnableEndpoint@ep:	
  2111                           ; 0 bytes @ 0x8
  2112                           
  2113                           
  2114                           ; 1 bytes @ 0x8
  2115  00A8                     	ds	1
  2116  00A9                     ??_USBCBInitEP:	
  2117                           
  2118                           ; 0 bytes @ 0x9
  2119  00A9                     	ds	1
  2120  00AA                     ?___ftmul:	
  2121  00AA                     ___ftmul@f1:	
  2122                           ; 3 bytes @ 0xA
  2123                           
  2124                           
  2125                           ; 3 bytes @ 0xA
  2126  00AA                     	ds	2
  2127  00AC                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2128  00AC                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2129                           ; 1 bytes @ 0xC
  2130                           
  2131  00AC                     _DetectAsics$2875:	
  2132                           ; 2 bytes @ 0xC
  2133                           
  2134                           
  2135                           ; 2 bytes @ 0xC
  2136  00AC                     	ds	1
  2137  00AD                     ?_AsicPreCalc:	
  2138  00AD                     AsicPreCalc@work:	
  2139                           ; 0 bytes @ 0xD
  2140                           
  2141  00AD                     ___ftmul@f2:	
  2142                           ; 2 bytes @ 0xD
  2143                           
  2144                           
  2145                           ; 3 bytes @ 0xD
  2146  00AD                     	ds	1
  2147  00AE                     DetectAsics@x:	
  2148  00AE                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2149                           ; 1 bytes @ 0xE
  2150                           
  2151                           
  2152                           ; 1 bytes @ 0xE
  2153  00AE                     	ds	1
  2154  00AF                     ??_AsicPreCalc:	
  2155  00AF                     SendCmdReply@n:	
  2156                           ; 0 bytes @ 0xF
  2157                           
  2158  00AF                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2159                           ; 1 bytes @ 0xF
  2160                           
  2161                           
  2162                           ; 2 bytes @ 0xF
  2163  00AF                     	ds	1
  2164  00B0                     ??___ftmul:	
  2165                           
  2166                           ; 0 bytes @ 0x10
  2167  00B0                     	ds	1
  2168  00B1                     ??_USBWakeFromSuspend:	
  2169  00B1                     ??_USBSuspend:	
  2170                           ; 0 bytes @ 0x11
  2171                           
  2172  00B1                     ??_USBStdFeatureReqHandler:	
  2173                           ; 0 bytes @ 0x11
  2174                           
  2175  00B1                     ??_USBStdSetCfgHandler:	
  2176                           ; 0 bytes @ 0x11
  2177                           
  2178                           
  2179                           ; 0 bytes @ 0x11
  2180  00B1                     	ds	1
  2181  00B2                     USBStdSetCfgHandler@p:	
  2182                           
  2183                           ; 2 bytes @ 0x12
  2184  00B2                     	ds	1
  2185  00B3                     USBStdFeatureReqHandler@pUEP:	
  2186                           
  2187                           ; 2 bytes @ 0x13
  2188  00B3                     	ds	1
  2189  00B4                     USBStdSetCfgHandler@i_1089:	
  2190  00B4                     ___ftmul@exp:	
  2191                           ; 1 bytes @ 0x14
  2192                           
  2193                           
  2194                           ; 1 bytes @ 0x14
  2195  00B4                     	ds	1
  2196  00B5                     USBStdSetCfgHandler@i:	
  2197  00B5                     USBStdFeatureReqHandler@current_ep_data:	
  2198                           ; 1 bytes @ 0x15
  2199                           
  2200  00B5                     ___ftmul@f3_as_product:	
  2201                           ; 1 bytes @ 0x15
  2202                           
  2203                           
  2204                           ; 3 bytes @ 0x15
  2205  00B5                     	ds	1
  2206  00B6                     USBStdFeatureReqHandler@p:	
  2207                           
  2208                           ; 1 bytes @ 0x16
  2209  00B6                     	ds	1
  2210  00B7                     ??_USBCheckStdRequest:	
  2211                           
  2212                           ; 0 bytes @ 0x17
  2213  00B7                     	ds	1
  2214  00B8                     ??_USBCtrlTrfSetupHandler:	
  2215  00B8                     ___ftmul@cntr:	
  2216                           ; 0 bytes @ 0x18
  2217                           
  2218                           
  2219                           ; 1 bytes @ 0x18
  2220  00B8                     	ds	1
  2221  00B9                     ??_USBCtrlEPService:	
  2222  00B9                     ??_AsicPushWork:	
  2223                           ; 0 bytes @ 0x19
  2224                           
  2225  00B9                     ___ftmul@sign:	
  2226                           ; 0 bytes @ 0x19
  2227                           
  2228                           
  2229                           ; 1 bytes @ 0x19
  2230  00B9                     	ds	1
  2231  00BA                     ?___ftneg:	
  2232  00BA                     ___ftneg@f1:	
  2233                           ; 3 bytes @ 0x1A
  2234                           
  2235                           
  2236                           ; 3 bytes @ 0x1A
  2237  00BA                     	ds	2
  2238  00BC                     USBCtrlEPService@setup_cnt:	
  2239                           
  2240                           ; 1 bytes @ 0x1C
  2241  00BC                     	ds	1
  2242  00BD                     ??_USBDeviceTasks:	
  2243  00BD                     ?___ftadd:	
  2244                           ; 0 bytes @ 0x1D
  2245                           
  2246  00BD                     ___ftadd@f1:	
  2247                           ; 3 bytes @ 0x1D
  2248                           
  2249                           
  2250                           ; 3 bytes @ 0x1D
  2251  00BD                     	ds	1
  2252  00BE                     ??_ProcessCmd:	
  2253                           
  2254                           ; 0 bytes @ 0x1E
  2255  00BE                     	ds	1
  2256  00BF                     USBDeviceTasks@i:	
  2257                           
  2258                           ; 1 bytes @ 0x1F
  2259  00BF                     	ds	1
  2260  00C0                     ___ftadd@f2:	
  2261                           
  2262                           ; 3 bytes @ 0x20
  2263  00C0                     	ds	2
  2264  00C2                     _ProcessCmd$2060:	
  2265                           
  2266                           ; 2 bytes @ 0x22
  2267  00C2                     	ds	1
  2268  00C3                     ??___ftadd:	
  2269                           
  2270                           ; 0 bytes @ 0x23
  2271  00C3                     	ds	1
  2272  00C4                     ProcessCmd@cmd:	
  2273                           
  2274                           ; 1 bytes @ 0x24
  2275  00C4                     	ds	1
  2276  00C5                     ??_ProcessIO:	
  2277                           
  2278                           ; 0 bytes @ 0x25
  2279  00C5                     	ds	2
  2280  00C7                     ___ftadd@sign:	
  2281                           
  2282                           ; 1 bytes @ 0x27
  2283  00C7                     	ds	1
  2284  00C8                     ___ftadd@exp2:	
  2285                           
  2286                           ; 1 bytes @ 0x28
  2287  00C8                     	ds	1
  2288  00C9                     ___ftadd@exp1:	
  2289  00C9                     _ProcessIO$2378:	
  2290                           ; 1 bytes @ 0x29
  2291                           
  2292                           
  2293                           ; 2 bytes @ 0x29
  2294  00C9                     	ds	1
  2295  00CA                     ?___fttol:	
  2296  00CA                     ___fttol@f1:	
  2297                           ; 4 bytes @ 0x2A
  2298                           
  2299                           
  2300                           ; 3 bytes @ 0x2A
  2301  00CA                     	ds	1
  2302  00CB                     _ProcessIO$2412:	
  2303                           
  2304                           ; 2 bytes @ 0x2B
  2305  00CB                     	ds	3
  2306  00CE                     ??___fttol:	
  2307                           
  2308                           ; 0 bytes @ 0x2E
  2309  00CE                     	ds	4
  2310  00D2                     ___fttol@sign1:	
  2311                           
  2312                           ; 1 bytes @ 0x32
  2313  00D2                     	ds	1
  2314  00D3                     ___fttol@lval:	
  2315                           
  2316                           ; 4 bytes @ 0x33
  2317  00D3                     	ds	4
  2318  00D7                     ___fttol@exp1:	
  2319                           
  2320                           ; 1 bytes @ 0x37
  2321  00D7                     	ds	1
  2322  00D8                     ??_UpdateFanLevel:	
  2323                           
  2324                           ; 0 bytes @ 0x38
  2325  00D8                     	ds	4
  2326  00DC                     _UpdateFanLevel$2878:	
  2327                           
  2328                           ; 3 bytes @ 0x3C
  2329  00DC                     	ds	3
  2330  00DF                     ??_WorkTick:	
  2331                           
  2332                           ; 0 bytes @ 0x3F
  2333  00DF                     	ds	3
  2334                           
  2335                           	psect	cstackCOMMON
  2336  0070                     __pcstackCOMMON:	
  2337  0070                     ?_USBWakeFromSuspend:	
  2338  0070                     ?_USBSuspend:	
  2339                           ; 0 bytes @ 0x0
  2340                           
  2341  0070                     ?_USBCtrlEPAllowStatusStage:	
  2342                           ; 0 bytes @ 0x0
  2343                           
  2344  0070                     ?_USBStallHandler:	
  2345                           ; 0 bytes @ 0x0
  2346                           
  2347  0070                     ?_USBCtrlEPService:	
  2348                           ; 0 bytes @ 0x0
  2349                           
  2350  0070                     ?_USBCtrlTrfTxService:	
  2351                           ; 0 bytes @ 0x0
  2352                           
  2353  0070                     ?_USBCtrlTrfSetupHandler:	
  2354                           ; 0 bytes @ 0x0
  2355                           
  2356  0070                     ?_USBCtrlTrfOutHandler:	
  2357                           ; 0 bytes @ 0x0
  2358                           
  2359  0070                     ?_USBCtrlTrfInHandler:	
  2360                           ; 0 bytes @ 0x0
  2361                           
  2362  0070                     ?_USBCheckStdRequest:	
  2363                           ; 0 bytes @ 0x0
  2364                           
  2365  0070                     ?_USBStdFeatureReqHandler:	
  2366                           ; 0 bytes @ 0x0
  2367                           
  2368  0070                     ?_Send32:	
  2369                           ; 0 bytes @ 0x0
  2370                           
  2371  0070                     ?_AsicPushWork:	
  2372                           ; 0 bytes @ 0x0
  2373                           
  2374  0070                     ?_UpdateFanLevel:	
  2375                           ; 0 bytes @ 0x0
  2376                           
  2377  0070                     ?_InitializeSystem:	
  2378                           ; 0 bytes @ 0x0
  2379                           
  2380  0070                     ?_ProcessIO:	
  2381                           ; 0 bytes @ 0x0
  2382                           
  2383  0070                     ?_UserInit:	
  2384                           ; 0 bytes @ 0x0
  2385                           
  2386  0070                     ?_USBDeviceInit:	
  2387                           ; 0 bytes @ 0x0
  2388                           
  2389  0070                     ?_USBDeviceTasks:	
  2390                           ; 0 bytes @ 0x0
  2391                           
  2392  0070                     ?_USBCtrlEPAllowDataStage:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ?_USBCtrlEPServiceComplete:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_USBCtrlTrfRxService:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_USBStdSetCfgHandler:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ?_USBStdGetDscHandler:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_USBStdGetStatusHandler:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ?_USBCheckVendorRequest:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_ProcessCmd:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_DetectAsics:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_WorkTick:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_ResultRx:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0070                     ?_InitFAN:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0070                     ?_InitTempSensor:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0070                     ?_InitWorkTick:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0070                     ?_InitResultRx:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0070                     ?_ISRCode:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0070                     ?_USBCBSuspend:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0070                     ?_USBCBWakeFromSuspend:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0070                     ?_USBCB_SOF_Handler:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0070                     ?_USBCBErrorHandler:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0070                     ?_USBCBCheckOtherReq:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0070                     ?_USBCBStdSetDscHandler:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0070                     ?_USBCBInitEP:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0070                     ?i1___bmul:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ?_main:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?i1___wmul:	
  2468                           ; 2 bytes @ 0x0
  2469                           
  2470  0070                     i1___bmul@multiplicand:	
  2471                           ; 2 bytes @ 0x0
  2472                           
  2473  0070                     i1___wmul@multiplier:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476                           
  2477                           ; 2 bytes @ 0x0
  2478  0070                     	ds	1
  2479  0071                     ??i1___bmul:	
  2480                           
  2481                           ; 0 bytes @ 0x1
  2482  0071                     	ds	1
  2483  0072                     i1___bmul@multiplier:	
  2484  0072                     i1___wmul@multiplicand:	
  2485                           ; 1 bytes @ 0x2
  2486                           
  2487                           
  2488                           ; 2 bytes @ 0x2
  2489  0072                     	ds	1
  2490  0073                     i1___bmul@product:	
  2491                           
  2492                           ; 1 bytes @ 0x3
  2493  0073                     	ds	1
  2494  0074                     ??i1___wmul:	
  2495  0074                     i1___wmul@product:	
  2496                           ; 0 bytes @ 0x4
  2497                           
  2498                           
  2499                           ; 2 bytes @ 0x4
  2500  0074                     	ds	2
  2501  0076                     ?i1_SendCmdReply:	
  2502  0076                     i1SendCmdReply@cmd:	
  2503                           ; 0 bytes @ 0x6
  2504                           
  2505                           
  2506                           ; 2 bytes @ 0x6
  2507  0076                     	ds	2
  2508  0078                     i1SendCmdReply@data:	
  2509                           
  2510                           ; 2 bytes @ 0x8
  2511  0078                     	ds	2
  2512  007A                     i1SendCmdReply@count:	
  2513                           
  2514                           ; 1 bytes @ 0xA
  2515  007A                     	ds	1
  2516  007B                     i1SendCmdReply@n:	
  2517                           
  2518                           ; 1 bytes @ 0xB
  2519  007B                     	ds	1
  2520  007C                     _ResultRx$3165:	
  2521                           
  2522                           ; 1 bytes @ 0xC
  2523  007C                     	ds	1
  2524  007D                     _ResultRx$3166:	
  2525                           
  2526                           ; 1 bytes @ 0xD
  2527  007D                     	ds	1
  2528                           
  2529                           	psect	cstackBANK0
  2530  0050                     __pcstackBANK0:	
  2531  0050                     ??i1_SendCmdReply:	
  2532                           
  2533                           ; 0 bytes @ 0x0
  2534  0050                     	ds	8
  2535  0058                     ??_ResultRx:	
  2536                           
  2537                           ; 0 bytes @ 0x8
  2538  0058                     	ds	5
  2539  005D                     ??_ISRCode:	
  2540                           
  2541                           ; 0 bytes @ 0xD
  2542  005D                     	ds	1
  2543  005E                     ??_USBCtrlEPAllowStatusStage:	
  2544  005E                     ??_USBStallHandler:	
  2545                           ; 0 bytes @ 0xE
  2546                           
  2547  005E                     ?_USBConfigureEndpoint:	
  2548                           ; 0 bytes @ 0xE
  2549                           
  2550  005E                     ??_USBCtrlTrfTxService:	
  2551                           ; 0 bytes @ 0xE
  2552                           
  2553  005E                     ??_Send32:	
  2554                           ; 0 bytes @ 0xE
  2555                           
  2556  005E                     ??___ftpack:	
  2557                           ; 0 bytes @ 0xE
  2558                           
  2559  005E                     ??_USBDeviceInit:	
  2560                           ; 0 bytes @ 0xE
  2561                           
  2562  005E                     ??_USBStdGetDscHandler:	
  2563                           ; 0 bytes @ 0xE
  2564                           
  2565  005E                     ??_USBStdGetStatusHandler:	
  2566                           ; 0 bytes @ 0xE
  2567                           
  2568  005E                     ??_USBCheckVendorRequest:	
  2569                           ; 0 bytes @ 0xE
  2570                           
  2571  005E                     ??_InitFAN:	
  2572                           ; 0 bytes @ 0xE
  2573                           
  2574  005E                     ??_InitTempSensor:	
  2575                           ; 0 bytes @ 0xE
  2576                           
  2577  005E                     ??_InitWorkTick:	
  2578                           ; 0 bytes @ 0xE
  2579                           
  2580  005E                     ??_InitResultRx:	
  2581                           ; 0 bytes @ 0xE
  2582                           
  2583  005E                     ??_USBCBSuspend:	
  2584                           ; 0 bytes @ 0xE
  2585                           
  2586  005E                     ??_USBCBWakeFromSuspend:	
  2587                           ; 0 bytes @ 0xE
  2588                           
  2589  005E                     ??_USBCB_SOF_Handler:	
  2590                           ; 0 bytes @ 0xE
  2591                           
  2592  005E                     ??_USBCBErrorHandler:	
  2593                           ; 0 bytes @ 0xE
  2594                           
  2595  005E                     ??_USBCBCheckOtherReq:	
  2596                           ; 0 bytes @ 0xE
  2597                           
  2598  005E                     ??_USBCBStdSetDscHandler:	
  2599                           ; 0 bytes @ 0xE
  2600                           
  2601  005E                     ?_memset:	
  2602                           ; 0 bytes @ 0xE
  2603                           
  2604  005E                     ?___bmul:	
  2605                           ; 1 bytes @ 0xE
  2606                           
  2607  005E                     ?___awdiv:	
  2608                           ; 1 bytes @ 0xE
  2609                           
  2610  005E                     ?___awmod:	
  2611                           ; 2 bytes @ 0xE
  2612                           
  2613  005E                     ?___lwdiv:	
  2614                           ; 2 bytes @ 0xE
  2615                           
  2616  005E                     ?___wmul:	
  2617                           ; 2 bytes @ 0xE
  2618                           
  2619  005E                     USBConfigureEndpoint@direction:	
  2620                           ; 2 bytes @ 0xE
  2621                           
  2622  005E                     ___bmul@multiplicand:	
  2623                           ; 1 bytes @ 0xE
  2624                           
  2625  005E                     ___awdiv@divisor:	
  2626                           ; 1 bytes @ 0xE
  2627                           
  2628  005E                     ___awmod@divisor:	
  2629                           ; 2 bytes @ 0xE
  2630                           
  2631  005E                     ___lwdiv@divisor:	
  2632                           ; 2 bytes @ 0xE
  2633                           
  2634  005E                     memset@c:	
  2635                           ; 2 bytes @ 0xE
  2636                           
  2637  005E                     ___wmul@multiplier:	
  2638                           ; 2 bytes @ 0xE
  2639                           
  2640                           
  2641                           ; 2 bytes @ 0xE
  2642  005E                     	ds	1
  2643  005F                     ??___bmul:	
  2644  005F                     USBConfigureEndpoint@EPNum:	
  2645                           ; 0 bytes @ 0xF
  2646                           
  2647  005F                     USBStdGetStatusHandler@p:	
  2648                           ; 1 bytes @ 0xF
  2649                           
  2650                           
  2651                           ; 1 bytes @ 0xF
  2652  005F                     	ds	1
  2653  0060                     ??_USBCtrlTrfRxService:	
  2654  0060                     USBConfigureEndpoint@handle:	
  2655                           ; 0 bytes @ 0x10
  2656                           
  2657  0060                     USBCtrlTrfTxService@byteToSend:	
  2658                           ; 1 bytes @ 0x10
  2659                           
  2660  0060                     ___bmul@product:	
  2661                           ; 1 bytes @ 0x10
  2662                           
  2663  0060                     ___awdiv@dividend:	
  2664                           ; 1 bytes @ 0x10
  2665                           
  2666  0060                     ___awmod@dividend:	
  2667                           ; 2 bytes @ 0x10
  2668                           
  2669  0060                     ___lwdiv@dividend:	
  2670                           ; 2 bytes @ 0x10
  2671                           
  2672  0060                     memset@n:	
  2673                           ; 2 bytes @ 0x10
  2674                           
  2675  0060                     ___wmul@multiplicand:	
  2676                           ; 2 bytes @ 0x10
  2677                           
  2678                           
  2679                           ; 2 bytes @ 0x10
  2680  0060                     	ds	1
  2681  0061                     ?_USBEnableEndpoint:	
  2682  0061                     USBEnableEndpoint@options:	
  2683                           ; 0 bytes @ 0x11
  2684                           
  2685  0061                     USBCtrlTrfInHandler@lastDTS:	
  2686                           ; 1 bytes @ 0x11
  2687                           
  2688  0061                     ___awtoft@sign:	
  2689                           ; 1 bytes @ 0x11
  2690                           
  2691  0061                     ___bmul@multiplier:	
  2692                           ; 1 bytes @ 0x11
  2693                           
  2694                           
  2695                           ; 1 bytes @ 0x11
  2696  0061                     	ds	1
  2697  0062                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2698  0062                     ??_InitializeSystem:	
  2699                           ; 0 bytes @ 0x12
  2700                           
  2701  0062                     ??_UserInit:	
  2702                           ; 0 bytes @ 0x12
  2703                           
  2704  0062                     ??_main:	
  2705                           ; 0 bytes @ 0x12
  2706                           
  2707  0062                     ??___ftneg:	
  2708                           ; 0 bytes @ 0x12
  2709                           
  2710  0062                     ??___wmul:	
  2711                           ; 0 bytes @ 0x12
  2712                           
  2713                           
  2714                           	psect	maintext
  2715  1B75                     __pmaintext:	
  2716                           ; 0 bytes @ 0x12
  2717 ;;
  2718 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2719 ;;
  2720 ;; *************** function _main *****************
  2721 ;; Defined at:
  2722 ;;		line 98 in file "main.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  2  857[COMMON] int 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 17F/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels required when called:   13
  2742 ;; This function calls:
  2743 ;;		_USBDeviceTasks
  2744 ;;		_AsicPushWork
  2745 ;;		_WorkTick
  2746 ;;		_InitializeSystem
  2747 ;;		_ProcessIO
  2748 ;; This function is called by:
  2749 ;;		Startup code after reset
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _main
  2755  1B75                     _main:	
  2756                           
  2757                           ;main.c: 99: InitializeSystem();
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in _main: [allreg]
  2761  1B75  319B  23BD  319B   	fcall	_InitializeSystem
  2762  1B78                     l858:	
  2763                           ;main.c: 101: while(1)
  2764                           
  2765                           
  2766                           ;main.c: 102: {
  2767                           ;main.c: 119: USBDeviceTasks();
  2768  1B78  318C  24FF  319B   	fcall	_USBDeviceTasks
  2769                           
  2770                           ;main.c: 133: if(TMR0IF)
  2771  1B7B  1D0B               	btfss	11,2	;volatile
  2772  1B7C  2B80               	goto	l6314
  2773                           
  2774                           ;main.c: 134: WorkTick();
  2775  1B7D  3190  2034  319B   	fcall	_WorkTick
  2776  1B80                     l6314:	
  2777                           
  2778                           ;main.c: 136: if(Status.State == 'P'){
  2779  1B80  0023               	movlb	3	; select bank3
  2780  1B81  082C               	movf	_Status^(0+384),w	;volatile
  2781  1B82  3A50               	xorlw	80
  2782  1B83  1D03               	skipz
  2783  1B84  2B88               	goto	l6318
  2784                           
  2785                           ;main.c: 137: AsicPushWork();
  2786  1B85  3194  2423  319B   	fcall	_AsicPushWork
  2787  1B88                     l6318:	
  2788                           
  2789                           ;main.c: 138: }
  2790                           ;main.c: 140: ProcessIO();
  2791  1B88  3192  22A7  319B   	fcall	_ProcessIO
  2792  1B8B  2B78               	goto	l858
  2793  1B8C                     __end_of_main:	
  2794                           
  2795                           	psect	text1
  2796  12A7                     __ptext1:	
  2797 ;; *************** function _ProcessIO *****************
  2798 ;; Defined at:
  2799 ;;		line 182 in file "main.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;		None               void
  2806 ;; Registers used:
  2807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;Total ram usage:        8 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    8
  2820 ;; This function calls:
  2821 ;;		_USBTransferOnePacket
  2822 ;;		_ProcessCmd
  2823 ;;		___bmul
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _ProcessIO
  2831  12A7                     _ProcessIO:	
  2832                           
  2833                           ;main.c: 184: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in _ProcessIO: [allreg]
  2837  12A7  3020               	movlw	32
  2838  12A8  0021               	movlb	1	; select bank1
  2839  12A9  0265               	subwf	_USBDeviceState^(0+128),w
  2840  12AA  1C03               	skipc
  2841  12AB  0008               	return
  2842  12AC  003D               	movlb	29	; select bank29
  2843  12AD  188E               	btfsc	14,1	;volatile
  2844  12AE  0008               	return
  2845                           
  2846                           ;main.c: 193: if(!(USBGenericOutHandle==0?0:((volatile BDT_ENTRY*)USBGenericOutHandle)->
      +                          STAT.UOWN)) {
  2847  12AF  0022               	movlb	2	; select bank2
  2848  12B0  0868               	movf	_USBGenericOutHandle^(0+256),w
  2849  12B1  1903               	btfsc	3,2
  2850  12B2  2AC1               	goto	l5686
  2851  12B3  0868               	movf	_USBGenericOutHandle^(0+256),w
  2852  12B4  0086               	movwf	6
  2853  12B5  0187               	clrf	7
  2854  12B6  0D01               	rlf	1,w
  2855  12B7  0D01               	rlf	1,w
  2856  12B8  3901               	andlw	1
  2857  12B9  0021               	movlb	1	; select bank1
  2858  12BA  00C5               	movwf	??_ProcessIO^(0+128)
  2859  12BB  01C6               	clrf	(??_ProcessIO^(0+128)+1)
  2860  12BC  0845               	movf	??_ProcessIO^(0+128),w
  2861  12BD  00C9               	movwf	_ProcessIO$2378^(0+128)
  2862  12BE  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2863  12BF  00CA               	movwf	(_ProcessIO$2378+1)^(0+128)
  2864  12C0  2AC4               	goto	l5688
  2865  12C1                     l5686:	
  2866  12C1  0021               	movlb	1	; select bank1
  2867  12C2  01C9               	clrf	_ProcessIO$2378^(0+128)
  2868  12C3  01CA               	clrf	(_ProcessIO$2378+1)^(0+128)
  2869  12C4                     l5688:	
  2870  12C4  084A               	movf	(_ProcessIO$2378+1)^(0+128),w
  2871  12C5  0449               	iorwf	_ProcessIO$2378^(0+128),w
  2872  12C6  1D03               	skipz
  2873  12C7  2ADF               	goto	l5694
  2874                           
  2875                           ;main.c: 197: ProcessCmd(OUTPacket);
  2876  12C8  30A0               	movlw	160
  2877  12C9  3184  24E1  3192   	fcall	_ProcessCmd
  2878                           
  2879                           ;main.c: 198: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
  2880  12CC  0021               	movlb	1	; select bank1
  2881  12CD  01A0               	clrf	?_USBTransferOnePacket^(0+128)
  2882  12CE  30A0               	movlw	160
  2883  12CF  00C5               	movwf	??_ProcessIO^(0+128)
  2884  12D0  0845               	movf	??_ProcessIO^(0+128),w
  2885  12D1  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  2886  12D2  3040               	movlw	64
  2887  12D3  00C6               	movwf	(??_ProcessIO+1)^(0+128)
  2888  12D4  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2889  12D5  00A2               	movwf	(?_USBTransferOnePacket^(0+128)+2)
  2890  12D6  3001               	movlw	1
  2891  12D7  319E  265B  3192   	fcall	_USBTransferOnePacket
  2892  12DA  0021               	movlb	1	; select bank1
  2893  12DB  00C7               	movwf	(??_ProcessIO+2)^(0+128)
  2894  12DC  0847               	movf	(??_ProcessIO+2)^(0+128),w
  2895  12DD  0022               	movlb	2	; select bank2
  2896  12DE  00E8               	movwf	_USBGenericOutHandle^(0+256)
  2897  12DF                     l5694:	
  2898                           
  2899                           ;main.c: 199: }
  2900                           ;main.c: 201: if(WQI != WQX && !(USBGenericInHandle==0?0:((volatile BDT_ENTRY*)USBGeneri
      +                          cInHandle)->STAT.UOWN)) {
  2901  12DF  0021               	movlb	1	; select bank1
  2902  12E0  086F               	movf	_WQI^(0+128),w
  2903  12E1  0020               	movlb	0	; select bank0
  2904  12E2  066D               	xorwf	_WQX,w
  2905  12E3  1903               	skipnz
  2906  12E4  0008               	return
  2907  12E5  0022               	movlb	2	; select bank2
  2908  12E6  0867               	movf	_USBGenericInHandle^(0+256),w
  2909  12E7  1903               	btfsc	3,2
  2910  12E8  2AF7               	goto	l5700
  2911  12E9  0867               	movf	_USBGenericInHandle^(0+256),w
  2912  12EA  0086               	movwf	6
  2913  12EB  0187               	clrf	7
  2914  12EC  0D01               	rlf	1,w
  2915  12ED  0D01               	rlf	1,w
  2916  12EE  3901               	andlw	1
  2917  12EF  0021               	movlb	1	; select bank1
  2918  12F0  00C5               	movwf	??_ProcessIO^(0+128)
  2919  12F1  01C6               	clrf	(??_ProcessIO^(0+128)+1)
  2920  12F2  0845               	movf	??_ProcessIO^(0+128),w
  2921  12F3  00CB               	movwf	_ProcessIO$2412^(0+128)
  2922  12F4  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2923  12F5  00CC               	movwf	(_ProcessIO$2412+1)^(0+128)
  2924  12F6  2AFA               	goto	l5702
  2925  12F7                     l5700:	
  2926  12F7  0021               	movlb	1	; select bank1
  2927  12F8  01CB               	clrf	_ProcessIO$2412^(0+128)
  2928  12F9  01CC               	clrf	(_ProcessIO$2412+1)^(0+128)
  2929  12FA                     l5702:	
  2930  12FA  084C               	movf	(_ProcessIO$2412+1)^(0+128),w
  2931  12FB  044B               	iorwf	_ProcessIO$2412^(0+128),w
  2932  12FC  1D03               	skipz
  2933  12FD  0008               	return
  2934                           
  2935                           ;main.c: 202: USBGenericInHandle = USBTransferOnePacket(1,1,(BYTE*)&INPacket[WQX*15],15);
  2936  12FE  01A0               	clrf	?_USBTransferOnePacket^(0+128)
  2937  12FF  0AA0               	incf	?_USBTransferOnePacket^(0+128),f
  2938  1300  300F               	movlw	15
  2939  1301  00C5               	movwf	??_ProcessIO^(0+128)
  2940  1302  0845               	movf	??_ProcessIO^(0+128),w
  2941  1303  0020               	movlb	0	; select bank0
  2942  1304  00DE               	movwf	?___bmul
  2943  1305  086D               	movf	_WQX,w
  2944  1306  319B  2311  3192   	fcall	___bmul
  2945  1309  3E20               	addlw	32
  2946  130A  0021               	movlb	1	; select bank1
  2947  130B  00C6               	movwf	(??_ProcessIO+1)^(0+128)
  2948  130C  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2949  130D  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  2950  130E  300F               	movlw	15
  2951  130F  00C7               	movwf	(??_ProcessIO+2)^(0+128)
  2952  1310  0847               	movf	(??_ProcessIO+2)^(0+128),w
  2953  1311  00A2               	movwf	(?_USBTransferOnePacket^(0+128)+2)
  2954  1312  3001               	movlw	1
  2955  1313  319E  265B         	fcall	_USBTransferOnePacket
  2956  1315  0021               	movlb	1	; select bank1
  2957  1316  00C8               	movwf	(??_ProcessIO+3)^(0+128)
  2958  1317  0848               	movf	(??_ProcessIO+3)^(0+128),w
  2959  1318  0022               	movlb	2	; select bank2
  2960  1319  00E7               	movwf	_USBGenericInHandle^(0+256)
  2961                           
  2962                           ;main.c: 203: WQX = (WQX+1) & 3;
  2963  131A  0020               	movlb	0	; select bank0
  2964  131B  0A6D               	incf	_WQX,w
  2965  131C  3903               	andlw	3
  2966  131D  0021               	movlb	1	; select bank1
  2967  131E  00C5               	movwf	??_ProcessIO^(0+128)
  2968  131F  0845               	movf	??_ProcessIO^(0+128),w
  2969  1320  0020               	movlb	0	; select bank0
  2970  1321  00ED               	movwf	_WQX
  2971  1322  0008               	return
  2972  1323                     __end_of_ProcessIO:	
  2973                           
  2974                           	psect	text2
  2975  04E1                     __ptext2:	
  2976 ;; *************** function _ProcessCmd *****************
  2977 ;; Defined at:
  2978 ;;		line 45 in file "klondike.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  cmd             1    wreg     PTR unsigned char 
  2981 ;;		 -> OUTPacket(64), 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  cmd             1   36[BANK1 ] PTR unsigned char 
  2984 ;;		 -> OUTPacket(64), 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;Total ram usage:        7 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    7
  3001 ;; This function calls:
  3002 ;;		_AsicPushWork
  3003 ;;		_SendCmdReply
  3004 ;;		___lwdiv
  3005 ;;		___wmul
  3006 ;; This function is called by:
  3007 ;;		_ProcessIO
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _ProcessCmd
  3013  04E1                     _ProcessCmd:	
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _ProcessCmd: [allreg]
  3017                           ;ProcessCmd@cmd stored from wreg
  3018  04E1  0021               	movlb	1	; select bank1
  3019  04E2  00C4               	movwf	ProcessCmd@cmd^(0+128)
  3020                           
  3021                           ;klondike.c: 48: switch(cmd[0]) {
  3022  04E3  2E35               	goto	l5440
  3023  04E4                     l5376:	
  3024                           ;klondike.c: 49: case 'W':
  3025                           
  3026                           
  3027                           ;klondike.c: 50: if( Status.WorkQC < 4-1 ) {
  3028  04E4  3003               	movlw	3
  3029  04E5  0023               	movlb	3	; select bank3
  3030  04E6  022F               	subwf	(_Status^(0+384)+3),w	;volatile
  3031  04E7  1803               	skipnc
  3032  04E8  2E21               	goto	L4
  3033                           
  3034                           ;klondike.c: 51: WorkQue[ (WorkNow + Status.WorkQC++) & 4-1 ] = *(WORKTASK *)(cmd+2);
  3035  04E9  0021               	movlb	1	; select bank1
  3036  04EA  0844               	movf	ProcessCmd@cmd^(0+128),w
  3037  04EB  3E02               	addlw	2
  3038  04EC  0086               	movwf	6
  3039  04ED  3002               	movlw	2	; select bank4/5
  3040  04EE  0087               	movwf	7
  3041  04EF  0866               	movf	_WorkNow^(0+128),w
  3042  04F0  0023               	movlb	3	; select bank3
  3043  04F1  072F               	addwf	(_Status^(0+384)+3),w	;volatile
  3044  04F2  0021               	movlb	1	; select bank1
  3045  04F3  00BE               	movwf	??_ProcessCmd^(0+128)
  3046  04F4  01BF               	clrf	(??_ProcessCmd^(0+128)+1)
  3047  04F5  0DBF               	rlf	(??_ProcessCmd+1)^(0+128),f
  3048  04F6  3003               	movlw	3
  3049  04F7  053E               	andwf	??_ProcessCmd^(0+128),w
  3050  04F8  0020               	movlb	0	; select bank0
  3051  04F9  00DE               	movwf	?___wmul
  3052  04FA  3000               	movlw	0
  3053  04FB  0021               	movlb	1	; select bank1
  3054  04FC  053F               	andwf	(??_ProcessCmd+1)^(0+128),w
  3055  04FD  0020               	movlb	0	; select bank0
  3056  04FE  00DF               	movwf	?___wmul+1
  3057  04FF  302D               	movlw	45
  3058  0500  00E0               	movwf	?___wmul+2
  3059  0501  3000               	movlw	0
  3060  0502  00E1               	movwf	?___wmul+3
  3061  0503  319C  2498  3184   	fcall	___wmul
  3062  0506  303C               	movlw	60
  3063  0507  0021               	movlb	1	; select bank1
  3064  0508  00C0               	movwf	(??_ProcessCmd+2)^(0+128)
  3065  0509  3023               	movlw	35
  3066  050A  00C1               	movwf	((??_ProcessCmd+2)^(0+128)+1)
  3067  050B  0020               	movlb	0	; select bank0
  3068  050C  085E               	movf	?___wmul,w
  3069  050D  0021               	movlb	1	; select bank1
  3070  050E  0740               	addwf	(??_ProcessCmd+2)^(0+128),w
  3071  050F  0084               	movwf	4
  3072  0510  0020               	movlb	0	; select bank0
  3073  0511  085F               	movf	?___wmul+1,w
  3074  0512  0021               	movlb	1	; select bank1
  3075  0513  3D41               	addwfc	(??_ProcessCmd+3)^(0+128),w
  3076  0514  0085               	movwf	5
  3077  0515  302D               	movlw	45
  3078  0516  00FF               	movwf	127
  3079  0517                     u5200:	
  3080  0517  0016               	moviw fsr1++
  3081  0518  001A               	movwi fsr0++
  3082  0519  0BFF               	decfsz	127,f
  3083  051A  2D17               	goto	u5200
  3084  051B  3001               	movlw	1
  3085  051C  00BE               	movwf	??_ProcessCmd^(0+128)
  3086  051D  083E               	movf	??_ProcessCmd^(0+128),w
  3087  051E  0023               	movlb	3	; select bank3
  3088  051F  07AF               	addwf	(_Status^(0+384)+3),f	;volatile
  3089                           
  3090                           ;klondike.c: 52: if(Status.State == 'R') {
  3091  0520  082C               	movf	_Status^(0+384),w	;volatile
  3092  0521  3A52               	xorlw	82
  3093  0522  1D03               	skipz
  3094  0523  2E21               	goto	L4
  3095                           
  3096                           ;klondike.c: 53: AsicPushWork();
  3097  0524  3194  2423  3184   	fcall	_AsicPushWork
  3098  0527  2E21               	goto	L4
  3099  0528                     l5388:	
  3100                           ;klondike.c: 59: case 'A':
  3101                           
  3102                           ;klondike.c: 58: break;
  3103                           
  3104                           ;klondike.c: 57: Status.Noise = Status.ErrorCount = 0;
  3105                           
  3106                           ;klondike.c: 54: }
  3107                           ;klondike.c: 55: }
  3108                           ;klondike.c: 56: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3109                           
  3110                           
  3111                           ;klondike.c: 60: Status.WorkQC = WorkNow = 0;
  3112  0528  0021               	movlb	1	; select bank1
  3113  0529  01E6               	clrf	_WorkNow^(0+128)
  3114  052A  0023               	movlb	3	; select bank3
  3115  052B  01AF               	clrf	(_Status^(0+384)+3)	;volatile
  3116                           
  3117                           ;klondike.c: 61: Status.State = 'R';
  3118  052C  3052               	movlw	82
  3119  052D  0021               	movlb	1	; select bank1
  3120  052E  2E1D               	goto	L3
  3121  052F                     l5396:	
  3122                           ;klondike.c: 65: case 'I':
  3123                           
  3124                           ;klondike.c: 64: break;
  3125                           
  3126                           ;klondike.c: 63: Status.Noise = Status.ErrorCount = 0;
  3127                           
  3128                           ;klondike.c: 62: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3129                           
  3130                           
  3131                           ;klondike.c: 66: SendCmdReply(cmd, (char *)&ID, sizeof(ID));
  3132  052F  0021               	movlb	1	; select bank1
  3133  0530  0844               	movf	ProcessCmd@cmd^(0+128),w
  3134  0531  00A2               	movwf	?_SendCmdReply^(0+128)
  3135  0532  3002               	movlw	2
  3136  0533  00A3               	movwf	(?_SendCmdReply+1)^(0+128)
  3137  0534  309F               	movlw	low (_ID| (0+32768))
  3138  0535  00A4               	movwf	(?_SendCmdReply+2)^(0+128)
  3139  0536  3088               	movlw	high (_ID| (0+32768))
  3140  0537  00A5               	movwf	(?_SendCmdReply+3)^(0+128)
  3141  0538  300C               	movlw	12
  3142  0539  00BE               	movwf	??_ProcessCmd^(0+128)
  3143  053A  083E               	movf	??_ProcessCmd^(0+128),w
  3144  053B  00A6               	movwf	(?_SendCmdReply^(0+128)+4)
  3145  053C  3197  2769  3184   	fcall	_SendCmdReply
  3146                           
  3147                           ;klondike.c: 67: break;
  3148  053F  2E4E               	goto	l697
  3149  0540                     l5398:	
  3150                           ;klondike.c: 68: case 'S':
  3151                           
  3152  0540  2E21               	goto	L4
  3153  0541                     l5402:	
  3154                           ;klondike.c: 72: case 'C':
  3155                           
  3156                           ;klondike.c: 71: break;
  3157                           
  3158                           ;klondike.c: 70: Status.Noise = Status.ErrorCount = 0;
  3159                           
  3160                           ;klondike.c: 69: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3161                           
  3162                           
  3163                           ;klondike.c: 73: if( *(WORD *)&cmd[2] != 0 ) {
  3164  0541  0021               	movlb	1	; select bank1
  3165  0542  0844               	movf	ProcessCmd@cmd^(0+128),w
  3166  0543  3E02               	addlw	2
  3167  0544  0086               	movwf	6
  3168  0545  3002               	movlw	2	; select bank4/5
  3169  0546  0087               	movwf	7
  3170  0547  0016               	moviw fsr1++
  3171  0548  0401               	iorwf	1,w
  3172  0549  1903               	skipnz
  3173  054A  2DE6               	goto	l5424
  3174                           
  3175                           ;klondike.c: 74: Cfg = *(WORKCFG *)(cmd+2);
  3176  054B  0844               	movf	ProcessCmd@cmd^(0+128),w
  3177  054C  3E02               	addlw	2
  3178  054D  0086               	movwf	6
  3179  054E  3002               	movlw	2	; select bank4/5
  3180  054F  0087               	movwf	7
  3181  0550  30C1               	movlw	low _Cfg
  3182  0551  0084               	movwf	4
  3183  0552  3001               	movlw	high _Cfg
  3184  0553  0085               	movwf	5
  3185  0554  3006               	movlw	6
  3186  0555  00FF               	movwf	127
  3187  0556                     u5230:	
  3188  0556  0016               	moviw fsr1++
  3189  0557  001A               	movwi fsr0++
  3190  0558  0BFF               	decfsz	127,f
  3191  0559  2D56               	goto	u5230
  3192                           
  3193                           ;klondike.c: 75: if(Cfg.HashClock < 128)
  3194  055A  3000               	movlw	0
  3195  055B  0023               	movlb	3	; select bank3
  3196  055C  0242               	subwf	(_Cfg+1)^(0+384),w
  3197  055D  3080               	movlw	128
  3198  055E  1903               	skipnz
  3199  055F  0241               	subwf	_Cfg^(0+384),w
  3200  0560  1803               	skipnc
  3201  0561  2D66               	goto	l703
  3202                           
  3203                           ;klondike.c: 76: Cfg.HashClock = 128;
  3204  0562  3080               	movlw	128
  3205  0563  00C1               	movwf	_Cfg^(0+384)
  3206  0564  3000               	movlw	0
  3207  0565  00C2               	movwf	(_Cfg^(0+384)+1)
  3208  0566                     l703:	
  3209                           
  3210                           ;klondike.c: 77: if(Cfg.HashClock <= 250 && Cfg.HashClock >= 450/2)
  3211  0566  3000               	movlw	0
  3212  0567  0242               	subwf	(_Cfg+1)^(0+384),w
  3213  0568  30FB               	movlw	251
  3214  0569  1903               	skipnz
  3215  056A  0241               	subwf	_Cfg^(0+384),w
  3216  056B  1803               	skipnc
  3217  056C  2D78               	goto	l704
  3218  056D  3000               	movlw	0
  3219  056E  0242               	subwf	(_Cfg+1)^(0+384),w
  3220  056F  30E1               	movlw	225
  3221  0570  1903               	skipnz
  3222  0571  0241               	subwf	_Cfg^(0+384),w
  3223  0572  1C03               	skipc
  3224  0573  2D78               	goto	l704
  3225                           
  3226                           ;klondike.c: 78: Cfg.HashClock = 450/2-1;
  3227  0574  30E0               	movlw	224
  3228  0575  00C1               	movwf	_Cfg^(0+384)
  3229  0576  3000               	movlw	0
  3230  0577  00C2               	movwf	(_Cfg^(0+384)+1)
  3231  0578                     l704:	
  3232                           
  3233                           ;klondike.c: 79: if(Cfg.HashClock >= 450)
  3234  0578  3001               	movlw	1
  3235  0579  0242               	subwf	(_Cfg+1)^(0+384),w
  3236  057A  30C2               	movlw	194
  3237  057B  1903               	skipnz
  3238  057C  0241               	subwf	_Cfg^(0+384),w
  3239  057D  1C03               	skipc
  3240  057E  2D83               	goto	l705
  3241                           
  3242                           ;klondike.c: 80: Cfg.HashClock = 450-1;
  3243  057F  30C1               	movlw	193
  3244  0580  00C1               	movwf	_Cfg^(0+384)
  3245  0581  3001               	movlw	1
  3246  0582  00C2               	movwf	(_Cfg^(0+384)+1)
  3247  0583                     l705:	
  3248                           
  3249                           ;klondike.c: 81: if(Cfg.HashClock <= 250)
  3250  0583  3000               	movlw	0
  3251  0584  0242               	subwf	(_Cfg+1)^(0+384),w
  3252  0585  30FB               	movlw	251
  3253  0586  1903               	skipnz
  3254  0587  0241               	subwf	_Cfg^(0+384),w
  3255  0588  1803               	skipnc
  3256  0589  2DA3               	goto	l5418
  3257                           
  3258                           ;klondike.c: 82: ClockCfg[0] = (((DWORD)Cfg.HashClock*2) << 18) | 0x00030017;
  3259  058A  0841               	movf	_Cfg^(0+384),w
  3260  058B  0021               	movlb	1	; select bank1
  3261  058C  00BE               	movwf	??_ProcessCmd^(0+128)
  3262  058D  0023               	movlb	3	; select bank3
  3263  058E  0842               	movf	(_Cfg+1)^(0+384),w
  3264  058F  0021               	movlb	1	; select bank1
  3265  0590  00BF               	movwf	(??_ProcessCmd^(0+128)+1)
  3266  0591  01C0               	clrf	(??_ProcessCmd^(0+128)+2)
  3267  0592  01C1               	clrf	(??_ProcessCmd^(0+128)+3)
  3268  0593  3001               	movlw	1
  3269  0594                     u5295:	
  3270  0594  35BE               	lslf	??_ProcessCmd^(0+128),f
  3271  0595  0DBF               	rlf	(??_ProcessCmd^(0+128)+1),f
  3272  0596  0DC0               	rlf	(??_ProcessCmd^(0+128)+2),f
  3273  0597  0DC1               	rlf	(??_ProcessCmd^(0+128)+3),f
  3274  0598  0B89               	decfsz	9,f
  3275  0599  2D94               	goto	u5295
  3276  059A  3012               	movlw	18
  3277  059B                     u5305:	
  3278  059B  35BE               	lslf	??_ProcessCmd^(0+128),f
  3279  059C  0DBF               	rlf	(??_ProcessCmd^(0+128)+1),f
  3280  059D  0DC0               	rlf	(??_ProcessCmd^(0+128)+2),f
  3281  059E  0DC1               	rlf	(??_ProcessCmd^(0+128)+3),f
  3282  059F  0B89               	decfsz	9,f
  3283  05A0  2D9B               	goto	u5305
  3284  05A1  3017               	movlw	23
  3285  05A2  2DB4               	goto	L1
  3286  05A3                     l5418:	
  3287                           
  3288                           ;klondike.c: 83: else
  3289                           ;klondike.c: 84: ClockCfg[0] = ((DWORD)Cfg.HashClock << 18) | 0x00030007;
  3290  05A3  0841               	movf	_Cfg^(0+384),w
  3291  05A4  0021               	movlb	1	; select bank1
  3292  05A5  00BE               	movwf	??_ProcessCmd^(0+128)
  3293  05A6  0023               	movlb	3	; select bank3
  3294  05A7  0842               	movf	(_Cfg+1)^(0+384),w
  3295  05A8  0021               	movlb	1	; select bank1
  3296  05A9  00BF               	movwf	(??_ProcessCmd^(0+128)+1)
  3297  05AA  01C0               	clrf	(??_ProcessCmd^(0+128)+2)
  3298  05AB  01C1               	clrf	(??_ProcessCmd^(0+128)+3)
  3299  05AC  3012               	movlw	18
  3300  05AD                     u5315:	
  3301  05AD  35BE               	lslf	??_ProcessCmd^(0+128),f
  3302  05AE  0DBF               	rlf	(??_ProcessCmd^(0+128)+1),f
  3303  05AF  0DC0               	rlf	(??_ProcessCmd^(0+128)+2),f
  3304  05B0  0DC1               	rlf	(??_ProcessCmd^(0+128)+3),f
  3305  05B1  0B89               	decfsz	9,f
  3306  05B2  2DAD               	goto	u5315
  3307  05B3  3007               	movlw	7
  3308  05B4                     L1:	
  3309  05B4  043E               	iorwf	??_ProcessCmd^(0+128),w
  3310  05B5  0023               	movlb	3	; select bank3
  3311  05B6  00B9               	movwf	_ClockCfg^(0+384)
  3312  05B7  3000               	movlw	0
  3313  05B8  0021               	movlb	1	; select bank1
  3314  05B9  043F               	iorwf	(??_ProcessCmd+1)^(0+128),w
  3315  05BA  0023               	movlb	3	; select bank3
  3316  05BB  00BA               	movwf	(_ClockCfg+1)^(0+384)
  3317  05BC  3003               	movlw	3
  3318  05BD  0021               	movlb	1	; select bank1
  3319  05BE  0440               	iorwf	(??_ProcessCmd+2)^(0+128),w
  3320  05BF  0023               	movlb	3	; select bank3
  3321  05C0  00BB               	movwf	(_ClockCfg+2)^(0+384)
  3322  05C1  3000               	movlw	0
  3323  05C2  0021               	movlb	1	; select bank1
  3324  05C3  0441               	iorwf	(??_ProcessCmd+3)^(0+128),w
  3325  05C4  0023               	movlb	3	; select bank3
  3326  05C5  00BC               	movwf	(_ClockCfg+3)^(0+384)
  3327                           
  3328                           ;klondike.c: 85: HashTime = 256 - ((WORD)12285/Cfg.HashClock);
  3329  05C6  0842               	movf	(_Cfg+1)^(0+384),w
  3330  05C7  0020               	movlb	0	; select bank0
  3331  05C8  01DF               	clrf	?___lwdiv+1
  3332  05C9  07DF               	addwf	?___lwdiv+1,f
  3333  05CA  0023               	movlb	3	; select bank3
  3334  05CB  0841               	movf	_Cfg^(0+384),w
  3335  05CC  0020               	movlb	0	; select bank0
  3336  05CD  01DE               	clrf	?___lwdiv
  3337  05CE  07DE               	addwf	?___lwdiv,f
  3338  05CF  30FD               	movlw	253
  3339  05D0  00E0               	movwf	?___lwdiv+2
  3340  05D1  302F               	movlw	47
  3341  05D2  00E1               	movwf	?___lwdiv+3
  3342  05D3  319D  25C9  3184   	fcall	___lwdiv
  3343  05D6  0020               	movlb	0	; select bank0
  3344  05D7  085E               	movf	?___lwdiv,w
  3345  05D8  3AFF               	xorlw	255
  3346  05D9  3E01               	addlw	1
  3347  05DA  0021               	movlb	1	; select bank1
  3348  05DB  00BE               	movwf	??_ProcessCmd^(0+128)
  3349  05DC  083E               	movf	??_ProcessCmd^(0+128),w
  3350  05DD  0020               	movlb	0	; select bank0
  3351  05DE  00EE               	movwf	_HashTime
  3352                           
  3353                           ;klondike.c: 86: TempTarget = Cfg.TempTarget;
  3354  05DF  0023               	movlb	3	; select bank3
  3355  05E0  0843               	movf	(_Cfg^(0+384)+2),w
  3356  05E1  0021               	movlb	1	; select bank1
  3357  05E2  00BE               	movwf	??_ProcessCmd^(0+128)
  3358  05E3  083E               	movf	??_ProcessCmd^(0+128),w
  3359  05E4  0023               	movlb	3	; select bank3
  3360  05E5  00E8               	movwf	_TempTarget^(0+384)
  3361  05E6                     l5424:	
  3362                           
  3363                           ;klondike.c: 87: }
  3364                           ;klondike.c: 88: SendCmdReply(cmd, (char *)&Cfg, sizeof(Cfg));
  3365  05E6  0021               	movlb	1	; select bank1
  3366  05E7  0844               	movf	ProcessCmd@cmd^(0+128),w
  3367  05E8  00A2               	movwf	?_SendCmdReply^(0+128)
  3368  05E9  3002               	movlw	2
  3369  05EA  00A3               	movwf	(?_SendCmdReply+1)^(0+128)
  3370  05EB  30C1               	movlw	low _Cfg
  3371  05EC  00A4               	movwf	(?_SendCmdReply+2)^(0+128)
  3372  05ED  3001               	movlw	high _Cfg
  3373  05EE  00A5               	movwf	(?_SendCmdReply+3)^(0+128)
  3374  05EF  3006               	movlw	6
  3375  05F0  00BE               	movwf	??_ProcessCmd^(0+128)
  3376  05F1  083E               	movf	??_ProcessCmd^(0+128),w
  3377  05F2  00A6               	movwf	(?_SendCmdReply^(0+128)+4)
  3378  05F3  3197  2769  3184   	fcall	_SendCmdReply
  3379                           
  3380                           ;klondike.c: 89: break;
  3381  05F6  2E4E               	goto	l697
  3382  05F7                     l5426:	
  3383                           ;klondike.c: 90: case 'E':
  3384                           
  3385                           
  3386                           ;klondike.c: 91: LATAbits.LATA4 = (cmd[2] == '1');
  3387  05F7  0021               	movlb	1	; select bank1
  3388  05F8  0844               	movf	ProcessCmd@cmd^(0+128),w
  3389  05F9  3E02               	addlw	2
  3390  05FA  0086               	movwf	6
  3391  05FB  3002               	movlw	2	; select bank4/5
  3392  05FC  0087               	movwf	7
  3393  05FD  0801               	movf	1,w
  3394  05FE  3A31               	xorlw	49
  3395  05FF  3000               	movlw	0
  3396  0600  1903               	skipnz
  3397  0601  3001               	movlw	1
  3398  0602  00BE               	movwf	??_ProcessCmd^(0+128)
  3399  0603  0EBE               	swapf	??_ProcessCmd^(0+128),f
  3400  0604  0022               	movlb	2	; select bank2
  3401  0605  080C               	movf	12,w	;volatile
  3402  0606  0021               	movlb	1	; select bank1
  3403  0607  063E               	xorwf	??_ProcessCmd^(0+128),w
  3404  0608  39EF               	andlw	-17
  3405  0609  063E               	xorwf	??_ProcessCmd^(0+128),w
  3406  060A  0022               	movlb	2	; select bank2
  3407  060B  008C               	movwf	12	;volatile
  3408                           
  3409                           ;klondike.c: 92: Status.State = (cmd[2] == '1') ? 'R' : 'D';
  3410  060C  0021               	movlb	1	; select bank1
  3411  060D  0844               	movf	ProcessCmd@cmd^(0+128),w
  3412  060E  3E02               	addlw	2
  3413  060F  0086               	movwf	6
  3414  0610  3002               	movlw	2	; select bank4/5
  3415  0611  0087               	movwf	7
  3416  0612  0801               	movf	1,w
  3417  0613  3A31               	xorlw	49
  3418  0614  1903               	skipnz
  3419  0615  2E18               	goto	l5432
  3420  0616  3044               	movlw	68
  3421  0617  2E19               	goto	L2
  3422  0618                     l5432:	
  3423  0618  3052               	movlw	82
  3424  0619                     L2:	
  3425  0619  00C2               	movwf	_ProcessCmd$2060^(0+128)
  3426  061A  3000               	movlw	0
  3427  061B  00C3               	movwf	(_ProcessCmd$2060^(0+128)+1)
  3428  061C  0842               	movf	_ProcessCmd$2060^(0+128),w
  3429  061D                     L3:	
  3430  061D  00BE               	movwf	??_ProcessCmd^(0+128)
  3431  061E  083E               	movf	??_ProcessCmd^(0+128),w
  3432  061F  0023               	movlb	3	; select bank3
  3433  0620  00AC               	movwf	_Status^(0+384)	;volatile
  3434  0621                     L4:	
  3435                           
  3436                           ;klondike.c: 93: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3437  0621  0021               	movlb	1	; select bank1
  3438  0622  0844               	movf	ProcessCmd@cmd^(0+128),w
  3439  0623  00A2               	movwf	?_SendCmdReply^(0+128)
  3440  0624  3002               	movlw	2
  3441  0625  00A3               	movwf	(?_SendCmdReply+1)^(0+128)
  3442  0626  30AC               	movlw	low _Status
  3443  0627  00A4               	movwf	(?_SendCmdReply+2)^(0+128)
  3444  0628  3001               	movlw	high _Status
  3445  0629  00A5               	movwf	(?_SendCmdReply+3)^(0+128)
  3446  062A  300D               	movlw	13
  3447  062B  00BE               	movwf	??_ProcessCmd^(0+128)
  3448  062C  083E               	movf	??_ProcessCmd^(0+128),w
  3449  062D  00A6               	movwf	(?_SendCmdReply^(0+128)+4)
  3450  062E  3197  2769  3184   	fcall	_SendCmdReply
  3451                           
  3452                           ;klondike.c: 94: Status.Noise = Status.ErrorCount = 0;
  3453  0631  0023               	movlb	3	; select bank3
  3454  0632  01B3               	clrf	(_Status^(0+384)+7)	;volatile
  3455  0633  01B8               	clrf	(_Status^(0+384)+12)	;volatile
  3456                           
  3457                           ;klondike.c: 104: }
  3458                           
  3459                           ;klondike.c: 103: break;
  3460                           
  3461                           ;klondike.c: 102: default:
  3462                           
  3463                           ;klondike.c: 95: break;
  3464  0634  2E4E               	goto	l697
  3465  0635                     l5440:	
  3466  0635  0021               	movlb	1	; select bank1
  3467  0636  0844               	movf	ProcessCmd@cmd^(0+128),w
  3468  0637  0086               	movwf	6
  3469  0638  3002               	movlw	2	; select bank4/5
  3470  0639  0087               	movwf	7
  3471  063A  0801               	movf	1,w
  3472                           
  3473                           ; Switch size 1, requested type "space"
  3474                           ; Number of cases is 6, Range of values is 65 to 87
  3475                           ; switch strategies available:
  3476                           ; Name         Instructions Cycles
  3477                           ; simple_byte           19    10 (average)
  3478                           ; direct_byte           55     9 (fixed)
  3479                           ; jumptable            263     9 (fixed)
  3480                           ;	Chosen strategy is simple_byte
  3481  063B  3A41               	xorlw	65	; case 65
  3482  063C  1903               	skipnz
  3483  063D  2D28               	goto	l5388
  3484  063E  3A02               	xorlw	2	; case 67
  3485  063F  1903               	skipnz
  3486  0640  2D41               	goto	l5402
  3487  0641  3A06               	xorlw	6	; case 69
  3488  0642  1903               	skipnz
  3489  0643  2DF7               	goto	l5426
  3490  0644  3A0C               	xorlw	12	; case 73
  3491  0645  1903               	skipnz
  3492  0646  2D2F               	goto	l5396
  3493  0647  3A1A               	xorlw	26	; case 83
  3494  0648  1903               	skipnz
  3495  0649  2D40               	goto	l5398
  3496  064A  3A04               	xorlw	4	; case 87
  3497  064B  1903               	skipnz
  3498  064C  2CE4               	goto	l5376
  3499  064D  2E4E               	goto	l697
  3500  064E                     l697:	
  3501                           
  3502                           ;klondike.c: 105: LATAbits.LATA5 = 1;;
  3503  064E  0022               	movlb	2	; select bank2
  3504  064F  168C               	bsf	12,5	;volatile
  3505  0650  0008               	return
  3506  0651                     __end_of_ProcessCmd:	
  3507                           
  3508                           	psect	text3
  3509  1DC9                     __ptext3:	
  3510 ;; *************** function ___lwdiv *****************
  3511 ;; Defined at:
  3512 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwdiv.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  divisor         2   14[BANK0 ] unsigned int 
  3515 ;;  dividend        2   16[BANK0 ] unsigned int 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  quotient        2    1[BANK1 ] unsigned int 
  3518 ;;  counter         1    3[BANK1 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  2   14[BANK0 ] unsigned int 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;Total ram usage:        8 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    4
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_ProcessCmd
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           
  3543                           ;psect for function ___lwdiv
  3544  1DC9                     ___lwdiv:	
  3545                           
  3546                           ;incstack = 0
  3547                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3548  1DC9  0021               	movlb	1	; select bank1
  3549  1DCA  01A1               	clrf	___lwdiv@quotient^(0+128)
  3550  1DCB  01A2               	clrf	(___lwdiv@quotient+1)^(0+128)
  3551  1DCC  0020               	movlb	0	; select bank0
  3552  1DCD  085F               	movf	___lwdiv@divisor+1,w
  3553  1DCE  045E               	iorwf	___lwdiv@divisor,w
  3554  1DCF  1903               	skipnz
  3555  1DD0  2E03               	goto	l6074
  3556  1DD1  0021               	movlb	1	; select bank1
  3557  1DD2  01A3               	clrf	___lwdiv@counter^(0+128)
  3558  1DD3  0AA3               	incf	___lwdiv@counter^(0+128),f
  3559  1DD4                     l6062:	
  3560  1DD4  0020               	movlb	0	; select bank0
  3561  1DD5  1BDF               	btfsc	___lwdiv@divisor+1,7
  3562  1DD6  2DE3               	goto	l6064
  3563  1DD7  3001               	movlw	1
  3564  1DD8  0020               	movlb	0	; select bank0
  3565  1DD9                     u6455:	
  3566  1DD9  35DE               	lslf	___lwdiv@divisor,f
  3567  1DDA  0DDF               	rlf	___lwdiv@divisor+1,f
  3568  1DDB  0B89               	decfsz	9,f
  3569  1DDC  2DD9               	goto	u6455
  3570  1DDD  3001               	movlw	1
  3571  1DDE  0021               	movlb	1	; select bank1
  3572  1DDF  00A0               	movwf	??___lwdiv^(0+128)
  3573  1DE0  0820               	movf	??___lwdiv^(0+128),w
  3574  1DE1  07A3               	addwf	___lwdiv@counter^(0+128),f
  3575  1DE2  2DD4               	goto	l6062
  3576  1DE3                     l6064:	
  3577  1DE3  3001               	movlw	1
  3578  1DE4  0021               	movlb	1	; select bank1
  3579  1DE5                     u6475:	
  3580  1DE5  35A1               	lslf	___lwdiv@quotient^(0+128),f
  3581  1DE6  0DA2               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3582  1DE7  0B89               	decfsz	9,f
  3583  1DE8  2DE5               	goto	u6475
  3584  1DE9  0020               	movlb	0	; select bank0
  3585  1DEA  085F               	movf	___lwdiv@divisor+1,w
  3586  1DEB  0261               	subwf	___lwdiv@dividend+1,w
  3587  1DEC  1D03               	skipz
  3588  1DED  2DF0               	goto	u6485
  3589  1DEE  085E               	movf	___lwdiv@divisor,w
  3590  1DEF  0260               	subwf	___lwdiv@dividend,w
  3591  1DF0                     u6485:	
  3592  1DF0  1C03               	skipc
  3593  1DF1  2DF8               	goto	l6070
  3594  1DF2  085E               	movf	___lwdiv@divisor,w
  3595  1DF3  02E0               	subwf	___lwdiv@dividend,f
  3596  1DF4  085F               	movf	___lwdiv@divisor+1,w
  3597  1DF5  3BE1               	subwfb	___lwdiv@dividend+1,f
  3598  1DF6  0021               	movlb	1	; select bank1
  3599  1DF7  1421               	bsf	___lwdiv@quotient^(0+128),0
  3600  1DF8                     l6070:	
  3601  1DF8  3001               	movlw	1
  3602  1DF9  0020               	movlb	0	; select bank0
  3603  1DFA                     u6495:	
  3604  1DFA  36DF               	lsrf	___lwdiv@divisor+1,f
  3605  1DFB  0CDE               	rrf	___lwdiv@divisor,f
  3606  1DFC  0B89               	decfsz	9,f
  3607  1DFD  2DFA               	goto	u6495
  3608  1DFE  3001               	movlw	1
  3609  1DFF  0021               	movlb	1	; select bank1
  3610  1E00  02A3               	subwf	___lwdiv@counter^(0+128),f
  3611  1E01  1D03               	btfss	3,2
  3612  1E02  2DE3               	goto	l6064
  3613  1E03                     l6074:	
  3614  1E03  0021               	movlb	1	; select bank1
  3615  1E04  0822               	movf	(___lwdiv@quotient+1)^(0+128),w
  3616  1E05  0020               	movlb	0	; select bank0
  3617  1E06  01DF               	clrf	?___lwdiv+1
  3618  1E07  07DF               	addwf	?___lwdiv+1,f
  3619  1E08  0021               	movlb	1	; select bank1
  3620  1E09  0821               	movf	___lwdiv@quotient^(0+128),w
  3621  1E0A  0020               	movlb	0	; select bank0
  3622  1E0B  01DE               	clrf	?___lwdiv
  3623  1E0C  07DE               	addwf	?___lwdiv,f
  3624  1E0D  0008               	return
  3625  1E0E                     __end_of___lwdiv:	
  3626                           
  3627                           	psect	text4
  3628  1769                     __ptext4:	
  3629 ;; *************** function _SendCmdReply *****************
  3630 ;; Defined at:
  3631 ;;		line 208 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  cmd             2    2[BANK1 ] PTR unsigned char 
  3634 ;;		 -> ResultQue(12), OUTPacket(64), 
  3635 ;;  data            2    4[BANK1 ] PTR unsigned char 
  3636 ;;		 -> ResultQue(12), Cfg(6), ID(12), Status(13), 
  3637 ;;  count           1    6[BANK1 ] unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  n               1   15[BANK1 ] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;		None               void
  3642 ;; Registers used:
  3643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3649 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3650 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3651 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3652 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3653 ;;Total ram usage:       14 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    5
  3656 ;; This function calls:
  3657 ;;		___bmul
  3658 ;;		___wmul
  3659 ;; This function is called by:
  3660 ;;		_ProcessCmd
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function _SendCmdReply
  3666  1769                     _SendCmdReply:	
  3667                           
  3668                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3672  1769  0021               	movlb	1	; select bank1
  3673  176A  0826               	movf	SendCmdReply@count^(0+128),w
  3674  176B  00A7               	movwf	??_SendCmdReply^(0+128)
  3675  176C  01A8               	clrf	(??_SendCmdReply^(0+128)+1)
  3676  176D  086F               	movf	_WQI^(0+128),w
  3677  176E  00A9               	movwf	(??_SendCmdReply+2)^(0+128)
  3678  176F  01AA               	clrf	((??_SendCmdReply+2)^(0+128)+1)
  3679  1770  0829               	movf	(??_SendCmdReply+2)^(0+128),w
  3680  1771  0020               	movlb	0	; select bank0
  3681  1772  00DE               	movwf	?___wmul
  3682  1773  0021               	movlb	1	; select bank1
  3683  1774  082A               	movf	(??_SendCmdReply+3)^(0+128),w
  3684  1775  0020               	movlb	0	; select bank0
  3685  1776  00DF               	movwf	?___wmul+1
  3686  1777  300F               	movlw	15
  3687  1778  00E0               	movwf	?___wmul+2
  3688  1779  3000               	movlw	0
  3689  177A  00E1               	movwf	?___wmul+3
  3690  177B  319C  2498  3197   	fcall	___wmul
  3691  177E  0021               	movlb	1	; select bank1
  3692  177F  0827               	movf	??_SendCmdReply^(0+128),w
  3693  1780  0020               	movlb	0	; select bank0
  3694  1781  075E               	addwf	?___wmul,w
  3695  1782  0021               	movlb	1	; select bank1
  3696  1783  00AB               	movwf	(??_SendCmdReply+4)^(0+128)
  3697  1784  0828               	movf	(??_SendCmdReply+1)^(0+128),w
  3698  1785  0020               	movlb	0	; select bank0
  3699  1786  3D5F               	addwfc	?___wmul+1,w
  3700  1787  0021               	movlb	1	; select bank1
  3701  1788  00AC               	movwf	(??_SendCmdReply+5)^(0+128)
  3702  1789  082B               	movf	(??_SendCmdReply+4)^(0+128),w
  3703  178A  3E02               	addlw	2
  3704  178B  00AD               	movwf	(??_SendCmdReply+6)^(0+128)
  3705  178C  3000               	movlw	0
  3706  178D  3D2C               	addwfc	(??_SendCmdReply+5)^(0+128),w
  3707  178E  00AE               	movwf	(??_SendCmdReply+7)^(0+128)
  3708  178F  082E               	movf	(??_SendCmdReply+7)^(0+128),w
  3709  1790  3A80               	xorlw	128
  3710  1791  00FF               	movwf	127
  3711  1792  3080               	movlw	128
  3712  1793  027F               	subwf	127,w
  3713  1794  1D03               	skipz
  3714  1795  2F98               	goto	u5335
  3715  1796  3040               	movlw	64
  3716  1797  022D               	subwf	(??_SendCmdReply+6)^(0+128),w
  3717  1798                     u5335:	
  3718  1798  1803               	skipnc
  3719  1799  0008               	return
  3720                           
  3721                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
  3722  179A  0021               	movlb	1	; select bank1
  3723  179B  0822               	movf	SendCmdReply@cmd^(0+128),w
  3724  179C  0086               	movwf	6
  3725  179D  0823               	movf	(SendCmdReply@cmd+1)^(0+128),w
  3726  179E  0087               	movwf	7
  3727  179F  0801               	movf	1,w
  3728  17A0  00A7               	movwf	??_SendCmdReply^(0+128)
  3729  17A1  300F               	movlw	15
  3730  17A2  00A8               	movwf	(??_SendCmdReply+1)^(0+128)
  3731  17A3  0828               	movf	(??_SendCmdReply+1)^(0+128),w
  3732  17A4  0020               	movlb	0	; select bank0
  3733  17A5  00DE               	movwf	?___bmul
  3734  17A6  0021               	movlb	1	; select bank1
  3735  17A7  086F               	movf	_WQI^(0+128),w
  3736  17A8  319B  2311  3197   	fcall	___bmul
  3737  17AB  3E20               	addlw	32
  3738  17AC  0086               	movwf	6
  3739  17AD  3002               	movlw	2	; select bank4/5
  3740  17AE  0087               	movwf	7
  3741  17AF  0021               	movlb	1	; select bank1
  3742  17B0  0827               	movf	??_SendCmdReply^(0+128),w
  3743  17B1  0081               	movwf	1
  3744                           
  3745                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
  3746  17B2  0864               	movf	_SlaveAddress^(0+128),w
  3747  17B3  00A7               	movwf	??_SendCmdReply^(0+128)
  3748  17B4  300F               	movlw	15
  3749  17B5  00A8               	movwf	(??_SendCmdReply+1)^(0+128)
  3750  17B6  0828               	movf	(??_SendCmdReply+1)^(0+128),w
  3751  17B7  0020               	movlb	0	; select bank0
  3752  17B8  00DE               	movwf	?___bmul
  3753  17B9  0021               	movlb	1	; select bank1
  3754  17BA  086F               	movf	_WQI^(0+128),w
  3755  17BB  319B  2311  3197   	fcall	___bmul
  3756  17BE  0021               	movlb	1	; select bank1
  3757  17BF  00A9               	movwf	(??_SendCmdReply+2)^(0+128)
  3758  17C0  0A29               	incf	(??_SendCmdReply+2)^(0+128),w
  3759  17C1  3E20               	addlw	32
  3760  17C2  0086               	movwf	6
  3761  17C3  3002               	movlw	2	; select bank4/5
  3762  17C4  0087               	movwf	7
  3763  17C5  0827               	movf	??_SendCmdReply^(0+128),w
  3764  17C6  0081               	movwf	1
  3765                           
  3766                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
  3767  17C7  01AF               	clrf	SendCmdReply@n^(0+128)
  3768  17C8                     l5468:	
  3769  17C8  0826               	movf	SendCmdReply@count^(0+128),w
  3770  17C9  022F               	subwf	SendCmdReply@n^(0+128),w
  3771  17CA  1803               	btfsc	3,0
  3772  17CB  2FFA               	goto	l5470
  3773                           
  3774                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
  3775  17CC  0825               	movf	(SendCmdReply@data+1)^(0+128),w
  3776  17CD  00A8               	movwf	(??_SendCmdReply^(0+128)+1)
  3777  17CE  0824               	movf	SendCmdReply@data^(0+128),w
  3778  17CF  00A7               	movwf	??_SendCmdReply^(0+128)
  3779  17D0  082F               	movf	SendCmdReply@n^(0+128),w
  3780  17D1  0727               	addwf	??_SendCmdReply^(0+128),w
  3781  17D2  0084               	movwf	4
  3782  17D3  0828               	movf	(??_SendCmdReply^(0+128)+1),w
  3783  17D4  1803               	skipnc
  3784  17D5  0A28               	incf	(??_SendCmdReply^(0+128)+1),w
  3785  17D6  0085               	movwf	5
  3786  17D7  0800               	movf	0,w	;code access
  3787  17D8  00A9               	movwf	(??_SendCmdReply+2)^(0+128)
  3788  17D9  086F               	movf	_WQI^(0+128),w
  3789  17DA  00AA               	movwf	(??_SendCmdReply+3)^(0+128)
  3790  17DB  01AB               	clrf	((??_SendCmdReply+3)^(0+128)+1)
  3791  17DC  082A               	movf	(??_SendCmdReply+3)^(0+128),w
  3792  17DD  0020               	movlb	0	; select bank0
  3793  17DE  00DE               	movwf	?___wmul
  3794  17DF  0021               	movlb	1	; select bank1
  3795  17E0  082B               	movf	(??_SendCmdReply+4)^(0+128),w
  3796  17E1  0020               	movlb	0	; select bank0
  3797  17E2  00DF               	movwf	?___wmul+1
  3798  17E3  300F               	movlw	15
  3799  17E4  00E0               	movwf	?___wmul+2
  3800  17E5  3000               	movlw	0
  3801  17E6  00E1               	movwf	?___wmul+3
  3802  17E7  319C  2498  3197   	fcall	___wmul
  3803  17EA  0020               	movlb	0	; select bank0
  3804  17EB  085E               	movf	?___wmul,w
  3805  17EC  0021               	movlb	1	; select bank1
  3806  17ED  072F               	addwf	SendCmdReply@n^(0+128),w
  3807  17EE  3E02               	addlw	2
  3808  17EF  3E20               	addlw	32
  3809  17F0  0086               	movwf	6
  3810  17F1  3002               	movlw	2	; select bank4/5
  3811  17F2  0087               	movwf	7
  3812  17F3  0829               	movf	(??_SendCmdReply+2)^(0+128),w
  3813  17F4  0081               	movwf	1
  3814  17F5  3001               	movlw	1
  3815  17F6  00A7               	movwf	??_SendCmdReply^(0+128)
  3816  17F7  0827               	movf	??_SendCmdReply^(0+128),w
  3817  17F8  07AF               	addwf	SendCmdReply@n^(0+128),f
  3818  17F9  2FC8               	goto	l5468
  3819  17FA                     l5470:	
  3820                           
  3821                           ;main.c: 214: WQI = (WQI+1) & 3;
  3822  17FA  0A6F               	incf	_WQI^(0+128),w
  3823  17FB  3903               	andlw	3
  3824  17FC  00A7               	movwf	??_SendCmdReply^(0+128)
  3825  17FD  0827               	movf	??_SendCmdReply^(0+128),w
  3826  17FE  00EF               	movwf	_WQI^(0+128)
  3827  17FF  0008               	return
  3828  1800                     __end_of_SendCmdReply:	
  3829                           
  3830                           	psect	text5
  3831  1B11                     __ptext5:	
  3832 ;; *************** function ___bmul *****************
  3833 ;; Defined at:
  3834 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  multiplier      1    wreg     unsigned char 
  3837 ;;  multiplicand    1   14[BANK0 ] unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  multiplier      1   17[BANK0 ] unsigned char 
  3840 ;;  product         1   16[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      unsigned char 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3850 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;Total ram usage:        4 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    4
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_ResultRx
  3861 ;;		_ProcessIO
  3862 ;;		_SendCmdReply
  3863 ;;		i1_SendCmdReply
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function ___bmul
  3869  1B11                     ___bmul:	
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3873                           ;___bmul@multiplier stored from wreg
  3874  1B11  0020               	movlb	0	; select bank0
  3875  1B12  00E1               	movwf	___bmul@multiplier
  3876  1B13  01E0               	clrf	___bmul@product
  3877  1B14                     l5864:	
  3878  1B14  1C61               	btfss	___bmul@multiplier,0
  3879  1B15  2B1A               	goto	l5868
  3880  1B16  085E               	movf	___bmul@multiplicand,w
  3881  1B17  00DF               	movwf	??___bmul
  3882  1B18  085F               	movf	??___bmul,w
  3883  1B19  07E0               	addwf	___bmul@product,f
  3884  1B1A                     l5868:	
  3885  1B1A  1003               	clrc
  3886  1B1B  0DDE               	rlf	___bmul@multiplicand,f
  3887  1B1C  1003               	clrc
  3888  1B1D  0CE1               	rrf	___bmul@multiplier,f
  3889  1B1E  08E1               	movf	___bmul@multiplier,f
  3890  1B1F  1D03               	skipz
  3891  1B20  2B14               	goto	l5864
  3892  1B21  0860               	movf	___bmul@product,w
  3893  1B22  0008               	return
  3894  1B23                     __end_of___bmul:	
  3895                           
  3896                           	psect	text6
  3897  1423                     __ptext6:	
  3898 ;; *************** function _AsicPushWork *****************
  3899 ;; Defined at:
  3900 ;;		line 109 in file "klondike.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;Total ram usage:        5 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    6
  3921 ;; This function calls:
  3922 ;;		_SendAsicData
  3923 ;;		_AsicPreCalc
  3924 ;;		___wmul
  3925 ;; This function is called by:
  3926 ;;		_ProcessCmd
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function _AsicPushWork
  3933  1423                     _AsicPushWork:	
  3934                           
  3935                           ;klondike.c: 110: AsicPreCalc(&WorkQue[WorkNow]);
  3936                           
  3937                           ;incstack = 0
  3938                           ; Regs used in _AsicPushWork: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3939  1423  0021               	movlb	1	; select bank1
  3940  1424  0866               	movf	_WorkNow^(0+128),w
  3941  1425  00B9               	movwf	??_AsicPushWork^(0+128)
  3942  1426  01BA               	clrf	(??_AsicPushWork^(0+128)+1)
  3943  1427  0839               	movf	??_AsicPushWork^(0+128),w
  3944  1428  0020               	movlb	0	; select bank0
  3945  1429  00DE               	movwf	?___wmul
  3946  142A  0021               	movlb	1	; select bank1
  3947  142B  083A               	movf	(??_AsicPushWork+1)^(0+128),w
  3948  142C  0020               	movlb	0	; select bank0
  3949  142D  00DF               	movwf	?___wmul+1
  3950  142E  302D               	movlw	45
  3951  142F  00E0               	movwf	?___wmul+2
  3952  1430  3000               	movlw	0
  3953  1431  00E1               	movwf	?___wmul+3
  3954  1432  319C  2498  3194   	fcall	___wmul
  3955  1435  303C               	movlw	60
  3956  1436  0021               	movlb	1	; select bank1
  3957  1437  00BB               	movwf	(??_AsicPushWork+2)^(0+128)
  3958  1438  3023               	movlw	35
  3959  1439  00BC               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3960  143A  0020               	movlb	0	; select bank0
  3961  143B  085E               	movf	?___wmul,w
  3962  143C  0021               	movlb	1	; select bank1
  3963  143D  073B               	addwf	(??_AsicPushWork+2)^(0+128),w
  3964  143E  00AD               	movwf	?_AsicPreCalc^(0+128)
  3965  143F  0020               	movlb	0	; select bank0
  3966  1440  085F               	movf	?___wmul+1,w
  3967  1441  0021               	movlb	1	; select bank1
  3968  1442  3D3C               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3969  1443  00AE               	movwf	(?_AsicPreCalc+1)^(0+128)
  3970  1444  3180  2014  3194   	fcall	_AsicPreCalc
  3971                           
  3972                           ;klondike.c: 111: Status.WorkID = WorkQue[WorkNow].WorkID;
  3973  1447  0021               	movlb	1	; select bank1
  3974  1448  0866               	movf	_WorkNow^(0+128),w
  3975  1449  00B9               	movwf	??_AsicPushWork^(0+128)
  3976  144A  01BA               	clrf	(??_AsicPushWork^(0+128)+1)
  3977  144B  0839               	movf	??_AsicPushWork^(0+128),w
  3978  144C  0020               	movlb	0	; select bank0
  3979  144D  00DE               	movwf	?___wmul
  3980  144E  0021               	movlb	1	; select bank1
  3981  144F  083A               	movf	(??_AsicPushWork+1)^(0+128),w
  3982  1450  0020               	movlb	0	; select bank0
  3983  1451  00DF               	movwf	?___wmul+1
  3984  1452  302D               	movlw	45
  3985  1453  00E0               	movwf	?___wmul+2
  3986  1454  3000               	movlw	0
  3987  1455  00E1               	movwf	?___wmul+3
  3988  1456  319C  2498  3194   	fcall	___wmul
  3989  1459  303C               	movlw	60
  3990  145A  0021               	movlb	1	; select bank1
  3991  145B  00BB               	movwf	(??_AsicPushWork+2)^(0+128)
  3992  145C  3023               	movlw	35
  3993  145D  00BC               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3994  145E  0020               	movlb	0	; select bank0
  3995  145F  085E               	movf	?___wmul,w
  3996  1460  0021               	movlb	1	; select bank1
  3997  1461  073B               	addwf	(??_AsicPushWork+2)^(0+128),w
  3998  1462  0086               	movwf	6
  3999  1463  0020               	movlb	0	; select bank0
  4000  1464  085F               	movf	?___wmul+1,w
  4001  1465  0021               	movlb	1	; select bank1
  4002  1466  3D3C               	addwfc	(??_AsicPushWork+3)^(0+128),w
  4003  1467  0087               	movwf	7
  4004  1468  0801               	movf	1,w
  4005  1469  00BD               	movwf	(??_AsicPushWork+4)^(0+128)
  4006  146A  083D               	movf	(??_AsicPushWork+4)^(0+128),w
  4007  146B  0023               	movlb	3	; select bank3
  4008  146C  00B0               	movwf	(_Status^(0+384)+4)	;volatile
  4009                           
  4010                           ;klondike.c: 112: SendAsicData(&WorkQue[WorkNow]);
  4011  146D  0021               	movlb	1	; select bank1
  4012  146E  0866               	movf	_WorkNow^(0+128),w
  4013  146F  00B9               	movwf	??_AsicPushWork^(0+128)
  4014  1470  01BA               	clrf	(??_AsicPushWork^(0+128)+1)
  4015  1471  0839               	movf	??_AsicPushWork^(0+128),w
  4016  1472  0020               	movlb	0	; select bank0
  4017  1473  00DE               	movwf	?___wmul
  4018  1474  0021               	movlb	1	; select bank1
  4019  1475  083A               	movf	(??_AsicPushWork+1)^(0+128),w
  4020  1476  0020               	movlb	0	; select bank0
  4021  1477  00DF               	movwf	?___wmul+1
  4022  1478  302D               	movlw	45
  4023  1479  00E0               	movwf	?___wmul+2
  4024  147A  3000               	movlw	0
  4025  147B  00E1               	movwf	?___wmul+3
  4026  147C  319C  2498  3194   	fcall	___wmul
  4027  147F  303C               	movlw	60
  4028  1480  0021               	movlb	1	; select bank1
  4029  1481  00BB               	movwf	(??_AsicPushWork+2)^(0+128)
  4030  1482  3023               	movlw	35
  4031  1483  00BC               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  4032  1484  0020               	movlb	0	; select bank0
  4033  1485  085E               	movf	?___wmul,w
  4034  1486  0021               	movlb	1	; select bank1
  4035  1487  073B               	addwf	(??_AsicPushWork+2)^(0+128),w
  4036  1488  00A2               	movwf	?_SendAsicData^(0+128)
  4037  1489  0020               	movlb	0	; select bank0
  4038  148A  085F               	movf	?___wmul+1,w
  4039  148B  0021               	movlb	1	; select bank1
  4040  148C  3D3C               	addwfc	(??_AsicPushWork+3)^(0+128),w
  4041  148D  00A3               	movwf	(?_SendAsicData+1)^(0+128)
  4042  148E  3196  26D4         	fcall	_SendAsicData
  4043                           
  4044                           ;klondike.c: 113: WorkNow = (WorkNow+1) & 4-1;
  4045  1490  0021               	movlb	1	; select bank1
  4046  1491  0A66               	incf	_WorkNow^(0+128),w
  4047  1492  3903               	andlw	3
  4048  1493  00B9               	movwf	??_AsicPushWork^(0+128)
  4049  1494  0839               	movf	??_AsicPushWork^(0+128),w
  4050  1495  00E6               	movwf	_WorkNow^(0+128)
  4051                           
  4052                           ;klondike.c: 114: Status.HashCount = 0;
  4053  1496  0023               	movlb	3	; select bank3
  4054  1497  01B4               	clrf	(_Status^(0+384)+8)	;volatile
  4055  1498  01B5               	clrf	((_Status+1)^(0+384)+8)	;volatile
  4056                           
  4057                           ;klondike.c: 115: TMR0 = HashTime;
  4058  1499  0020               	movlb	0	; select bank0
  4059  149A  086E               	movf	_HashTime,w
  4060  149B  0095               	movwf	21	;volatile
  4061                           
  4062                           ;klondike.c: 116: Status.State = 'W';
  4063  149C  3057               	movlw	87
  4064  149D  0021               	movlb	1	; select bank1
  4065  149E  00B9               	movwf	??_AsicPushWork^(0+128)
  4066  149F  0839               	movf	??_AsicPushWork^(0+128),w
  4067  14A0  0023               	movlb	3	; select bank3
  4068  14A1  00AC               	movwf	_Status^(0+384)	;volatile
  4069                           
  4070                           ;klondike.c: 117: Status.WorkQC--;
  4071  14A2  3001               	movlw	1
  4072  14A3  02AF               	subwf	(_Status^(0+384)+3),f	;volatile
  4073  14A4  0008               	return
  4074  14A5                     __end_of_AsicPushWork:	
  4075                           
  4076                           	psect	text7
  4077  1C98                     __ptext7:	
  4078 ;; *************** function ___wmul *****************
  4079 ;; Defined at:
  4080 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  multiplier      2   14[BANK0 ] unsigned int 
  4083 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  product         2    0[BANK1 ] unsigned int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2   14[BANK0 ] unsigned int 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;Total ram usage:        6 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    4
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_ProcessCmd
  4106 ;;		_AsicPushWork
  4107 ;;		_SendCmdReply
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function ___wmul
  4113  1C98                     ___wmul:	
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4117  1C98  0021               	movlb	1	; select bank1
  4118  1C99  01A0               	clrf	___wmul@product^(0+128)
  4119  1C9A  01A1               	clrf	(___wmul@product+1)^(0+128)
  4120  1C9B                     l6080:	
  4121  1C9B  0020               	movlb	0	; select bank0
  4122  1C9C  1C5E               	btfss	___wmul@multiplier,0
  4123  1C9D  2CA5               	goto	l1298
  4124  1C9E  0860               	movf	___wmul@multiplicand,w
  4125  1C9F  0021               	movlb	1	; select bank1
  4126  1CA0  07A0               	addwf	___wmul@product^(0+128),f
  4127  1CA1  0020               	movlb	0	; select bank0
  4128  1CA2  0861               	movf	___wmul@multiplicand+1,w
  4129  1CA3  0021               	movlb	1	; select bank1
  4130  1CA4  3DA1               	addwfc	(___wmul@product+1)^(0+128),f
  4131  1CA5                     l1298:	
  4132  1CA5  3001               	movlw	1
  4133  1CA6  0020               	movlb	0	; select bank0
  4134  1CA7                     u6525:	
  4135  1CA7  35E0               	lslf	___wmul@multiplicand,f
  4136  1CA8  0DE1               	rlf	___wmul@multiplicand+1,f
  4137  1CA9  0B89               	decfsz	9,f
  4138  1CAA  2CA7               	goto	u6525
  4139  1CAB  3001               	movlw	1
  4140  1CAC                     u6535:	
  4141  1CAC  36DF               	lsrf	___wmul@multiplier+1,f
  4142  1CAD  0CDE               	rrf	___wmul@multiplier,f
  4143  1CAE  0B89               	decfsz	9,f
  4144  1CAF  2CAC               	goto	u6535
  4145  1CB0  085F               	movf	___wmul@multiplier+1,w
  4146  1CB1  045E               	iorwf	___wmul@multiplier,w
  4147  1CB2  1D03               	skipz
  4148  1CB3  2C9B               	goto	l6080
  4149  1CB4  0021               	movlb	1	; select bank1
  4150  1CB5  0821               	movf	(___wmul@product+1)^(0+128),w
  4151  1CB6  0020               	movlb	0	; select bank0
  4152  1CB7  01DF               	clrf	?___wmul+1
  4153  1CB8  07DF               	addwf	?___wmul+1,f
  4154  1CB9  0021               	movlb	1	; select bank1
  4155  1CBA  0820               	movf	___wmul@product^(0+128),w
  4156  1CBB  0020               	movlb	0	; select bank0
  4157  1CBC  01DE               	clrf	?___wmul
  4158  1CBD  07DE               	addwf	?___wmul,f
  4159  1CBE  0008               	return
  4160  1CBF                     __end_of___wmul:	
  4161                           
  4162                           	psect	text8
  4163  0014                     __ptext8:	
  4164 ;; *************** function _AsicPreCalc *****************
  4165 ;; Defined at:
  4166 ;;		line 318 in file "asic.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  work            2   13[BANK1 ] PTR struct _worktask
  4169 ;;		 -> WorkQue(180), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  m              32   12[BANK2 ] unsigned long [8]
  4172 ;;  K              12    0[BANK2 ] unsigned long [3]
  4173 ;;  x               4   52[BANK2 ] unsigned long 
  4174 ;;  y               4   48[BANK2 ] unsigned long 
  4175 ;;  z               4   44[BANK2 ] unsigned long 
  4176 ;;  n               1   56[BANK2 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4186 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Locals:         0       0       0      57       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Totals:         0       0      12      57       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;Total ram usage:       69 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    5
  4193 ;; This function calls:
  4194 ;;		_rotate
  4195 ;; This function is called by:
  4196 ;;		_AsicPushWork
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _AsicPreCalc
  4202  0014                     _AsicPreCalc:	
  4203                           
  4204                           ;asic.c: 319: DWORD K[3] = { 0x428a2f98, 0x71374491, 0xb5c0fbcf };
  4205                           
  4206                           ;incstack = 0
  4207                           ; Regs used in _AsicPreCalc: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  4208  0014  30A0               	movlw	low AsicPreCalc@F3347
  4209  0015  0086               	movwf	6
  4210  0016  3001               	movlw	high AsicPreCalc@F3347
  4211  0017  0087               	movwf	7
  4212  0018  3020               	movlw	low AsicPreCalc@K
  4213  0019  0084               	movwf	4
  4214  001A  3001               	movlw	high AsicPreCalc@K
  4215  001B  0085               	movwf	5
  4216  001C  300C               	movlw	12
  4217  001D  00FF               	movwf	127
  4218  001E                     u4680:	
  4219  001E  0016               	moviw fsr1++
  4220  001F  001A               	movwi fsr0++
  4221  0020  0BFF               	decfsz	127,f
  4222  0021  281E               	goto	u4680
  4223                           
  4224                           ;asic.c: 320: DWORD x, y, z;
  4225                           ;asic.c: 321: DWORD m[8];
  4226                           ;asic.c: 322: BYTE n;
  4227                           ;asic.c: 324: for(n = 0; n < 8; n++)
  4228  0022  0022               	movlb	2	; select bank2
  4229  0023  01D8               	clrf	AsicPreCalc@n^(0+256)
  4230  0024  3008               	movlw	8
  4231  0025  0258               	subwf	AsicPreCalc@n^(0+256),w
  4232  0026  1803               	btfsc	3,0
  4233  0027  2863               	goto	l5090
  4234  0028                     l5084:	
  4235                           
  4236                           ;asic.c: 325: m[n] = work->MidState[n];
  4237  0028  0858               	movf	AsicPreCalc@n^(0+256),w
  4238  0029  0021               	movlb	1	; select bank1
  4239  002A  00AF               	movwf	??_AsicPreCalc^(0+128)
  4240  002B  01B0               	clrf	(??_AsicPreCalc^(0+128)+1)
  4241  002C  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4242  002D  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4243  002E  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4244  002F  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4245  0030  082F               	movf	??_AsicPreCalc^(0+128),w
  4246  0031  3E01               	addlw	1
  4247  0032  00B1               	movwf	(??_AsicPreCalc+2)^(0+128)
  4248  0033  3000               	movlw	0
  4249  0034  3D30               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4250  0035  00B2               	movwf	(??_AsicPreCalc+3)^(0+128)
  4251  0036  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4252  0037  072D               	addwf	AsicPreCalc@work^(0+128),w
  4253  0038  0086               	movwf	6
  4254  0039  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4255  003A  3D2E               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4256  003B  0087               	movwf	7
  4257  003C  3F40               	moviw [0]fsr1
  4258  003D  00B3               	movwf	(??_AsicPreCalc+4)^(0+128)
  4259  003E  3F41               	moviw [1]fsr1
  4260  003F  00B4               	movwf	((??_AsicPreCalc+4)^(0+128)+1)
  4261  0040  3F42               	moviw [2]fsr1
  4262  0041  00B5               	movwf	((??_AsicPreCalc+4)^(0+128)+2)
  4263  0042  3F43               	moviw [3]fsr1
  4264  0043  00B6               	movwf	((??_AsicPreCalc+4)^(0+128)+3)
  4265  0044  0022               	movlb	2	; select bank2
  4266  0045  0858               	movf	AsicPreCalc@n^(0+256),w
  4267  0046  0021               	movlb	1	; select bank1
  4268  0047  00B7               	movwf	(??_AsicPreCalc+8)^(0+128)
  4269  0048  3001               	movlw	1
  4270  0049                     u4705:	
  4271  0049  35B7               	lslf	(??_AsicPreCalc+8)^(0+128),f
  4272  004A  3EFF               	addlw	-1
  4273  004B  1D03               	skipz
  4274  004C  2849               	goto	u4705
  4275  004D  3537               	lslf	(??_AsicPreCalc+8)^(0+128),w
  4276  004E  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4277  004F  0086               	movwf	6
  4278  0050  3001               	movlw	1	; select bank2/3
  4279  0051  0087               	movwf	7
  4280  0052  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4281  0053  3FC0               	movwi [0]fsr1
  4282  0054  0834               	movf	(??_AsicPreCalc+5)^(0+128),w
  4283  0055  3FC1               	movwi [1]fsr1
  4284  0056  0835               	movf	(??_AsicPreCalc+6)^(0+128),w
  4285  0057  3FC2               	movwi [2]fsr1
  4286  0058  0836               	movf	(??_AsicPreCalc+7)^(0+128),w
  4287  0059  3FC3               	movwi [3]fsr1
  4288  005A  3001               	movlw	1
  4289  005B  00AF               	movwf	??_AsicPreCalc^(0+128)
  4290  005C  082F               	movf	??_AsicPreCalc^(0+128),w
  4291  005D  0022               	movlb	2	; select bank2
  4292  005E  07D8               	addwf	AsicPreCalc@n^(0+256),f
  4293  005F  3008               	movlw	8
  4294  0060  0258               	subwf	AsicPreCalc@n^(0+256),w
  4295  0061  1C03               	skipc
  4296  0062  2828               	goto	l5084
  4297  0063                     l5090:	
  4298                           
  4299                           ;asic.c: 327: for(n = 0; n < 3; n++) {
  4300  0063  01D8               	clrf	AsicPreCalc@n^(0+256)
  4301  0064                     L5:	
  4302  0064  3003               	movlw	3
  4303  0065  0258               	subwf	AsicPreCalc@n^(0+256),w
  4304  0066  1803               	btfsc	3,0
  4305  0067  0008               	return
  4306                           
  4307                           ;asic.c: 329: x = m[5-n] ^ m[6-n];
  4308  0068  0358               	decf	AsicPreCalc@n^(0+256),w
  4309  0069  3AFF               	xorlw	255
  4310  006A  0021               	movlb	1	; select bank1
  4311  006B  00AF               	movwf	??_AsicPreCalc^(0+128)
  4312  006C  3001               	movlw	1
  4313  006D                     u4735:	
  4314  006D  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4315  006E  3EFF               	addlw	-1
  4316  006F  1D03               	skipz
  4317  0070  286D               	goto	u4735
  4318  0071  352F               	lslf	??_AsicPreCalc^(0+128),w
  4319  0072  3E18               	addlw	24
  4320  0073  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4321  0074  0086               	movwf	6
  4322  0075  3001               	movlw	1	; select bank2/3
  4323  0076  0087               	movwf	7
  4324  0077  3F40               	moviw [0]fsr1
  4325  0078  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4326  0079  3F41               	moviw [1]fsr1
  4327  007A  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4328  007B  3F42               	moviw [2]fsr1
  4329  007C  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4330  007D  3F43               	moviw [3]fsr1
  4331  007E  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4332  007F  0022               	movlb	2	; select bank2
  4333  0080  0358               	decf	AsicPreCalc@n^(0+256),w
  4334  0081  3AFF               	xorlw	255
  4335  0082  0021               	movlb	1	; select bank1
  4336  0083  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  4337  0084  3001               	movlw	1
  4338  0085                     u4745:	
  4339  0085  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4340  0086  3EFF               	addlw	-1
  4341  0087  1D03               	skipz
  4342  0088  2885               	goto	u4745
  4343  0089  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4344  008A  3E14               	addlw	20
  4345  008B  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4346  008C  0086               	movwf	6
  4347  008D  3001               	movlw	1	; select bank2/3
  4348  008E  0087               	movwf	7
  4349  008F  3F40               	moviw [0]fsr1
  4350  0090  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  4351  0091  3F41               	moviw [1]fsr1
  4352  0092  00B6               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4353  0093  3F42               	moviw [2]fsr1
  4354  0094  00B7               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4355  0095  3F43               	moviw [3]fsr1
  4356  0096  00B8               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4357  0097  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4358  0098  0635               	xorwf	(??_AsicPreCalc+6)^(0+128),w
  4359  0099  0022               	movlb	2	; select bank2
  4360  009A  00D4               	movwf	AsicPreCalc@x^(0+256)
  4361  009B  0021               	movlb	1	; select bank1
  4362  009C  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4363  009D  0636               	xorwf	(??_AsicPreCalc+7)^(0+128),w
  4364  009E  0022               	movlb	2	; select bank2
  4365  009F  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4366  00A0  0021               	movlb	1	; select bank1
  4367  00A1  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4368  00A2  0637               	xorwf	(??_AsicPreCalc+8)^(0+128),w
  4369  00A3  0022               	movlb	2	; select bank2
  4370  00A4  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4371  00A5  0021               	movlb	1	; select bank1
  4372  00A6  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4373  00A7  0638               	xorwf	(??_AsicPreCalc+9)^(0+128),w
  4374  00A8  0022               	movlb	2	; select bank2
  4375  00A9  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4376                           
  4377                           ;asic.c: 330: x = x & m[4-n];
  4378  00AA  0358               	decf	AsicPreCalc@n^(0+256),w
  4379  00AB  3AFF               	xorlw	255
  4380  00AC  0021               	movlb	1	; select bank1
  4381  00AD  00AF               	movwf	??_AsicPreCalc^(0+128)
  4382  00AE  3001               	movlw	1
  4383  00AF                     u4755:	
  4384  00AF  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4385  00B0  3EFF               	addlw	-1
  4386  00B1  1D03               	skipz
  4387  00B2  28AF               	goto	u4755
  4388  00B3  352F               	lslf	??_AsicPreCalc^(0+128),w
  4389  00B4  3E10               	addlw	16
  4390  00B5  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4391  00B6  0086               	movwf	6
  4392  00B7  3001               	movlw	1	; select bank2/3
  4393  00B8  0087               	movwf	7
  4394  00B9  0022               	movlb	2	; select bank2
  4395  00BA  0854               	movf	AsicPreCalc@x^(0+256),w
  4396  00BB  0501               	andwf	1,w
  4397  00BC  0021               	movlb	1	; select bank1
  4398  00BD  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4399  00BE  3141               	addfsr 1,1
  4400  00BF  0022               	movlb	2	; select bank2
  4401  00C0  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  4402  00C1  0501               	andwf	1,w
  4403  00C2  0021               	movlb	1	; select bank1
  4404  00C3  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4405  00C4  3141               	addfsr 1,1
  4406  00C5  0022               	movlb	2	; select bank2
  4407  00C6  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  4408  00C7  0501               	andwf	1,w
  4409  00C8  0021               	movlb	1	; select bank1
  4410  00C9  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4411  00CA  3141               	addfsr 1,1
  4412  00CB  0022               	movlb	2	; select bank2
  4413  00CC  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  4414  00CD  0501               	andwf	1,w
  4415  00CE  0021               	movlb	1	; select bank1
  4416  00CF  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4417  00D0  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4418  00D1  0022               	movlb	2	; select bank2
  4419  00D2  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4420  00D3  0021               	movlb	1	; select bank1
  4421  00D4  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4422  00D5  0022               	movlb	2	; select bank2
  4423  00D6  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4424  00D7  0021               	movlb	1	; select bank1
  4425  00D8  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4426  00D9  0022               	movlb	2	; select bank2
  4427  00DA  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4428  00DB  0021               	movlb	1	; select bank1
  4429  00DC  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4430  00DD  0022               	movlb	2	; select bank2
  4431  00DE  00D4               	movwf	AsicPreCalc@x^(0+256)
  4432                           
  4433                           ;asic.c: 331: x = m[6-n] ^ x;
  4434  00DF  0358               	decf	AsicPreCalc@n^(0+256),w
  4435  00E0  3AFF               	xorlw	255
  4436  00E1  0021               	movlb	1	; select bank1
  4437  00E2  00AF               	movwf	??_AsicPreCalc^(0+128)
  4438  00E3  3001               	movlw	1
  4439  00E4                     u4765:	
  4440  00E4  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4441  00E5  3EFF               	addlw	-1
  4442  00E6  1D03               	skipz
  4443  00E7  28E4               	goto	u4765
  4444  00E8  352F               	lslf	??_AsicPreCalc^(0+128),w
  4445  00E9  3E18               	addlw	24
  4446  00EA  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4447  00EB  0086               	movwf	6
  4448  00EC  3001               	movlw	1	; select bank2/3
  4449  00ED  0087               	movwf	7
  4450  00EE  0022               	movlb	2	; select bank2
  4451  00EF  0854               	movf	AsicPreCalc@x^(0+256),w
  4452  00F0  0601               	xorwf	1,w
  4453  00F1  0021               	movlb	1	; select bank1
  4454  00F2  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4455  00F3  3141               	addfsr 1,1
  4456  00F4  0022               	movlb	2	; select bank2
  4457  00F5  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  4458  00F6  0601               	xorwf	1,w
  4459  00F7  0021               	movlb	1	; select bank1
  4460  00F8  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4461  00F9  3141               	addfsr 1,1
  4462  00FA  0022               	movlb	2	; select bank2
  4463  00FB  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  4464  00FC  0601               	xorwf	1,w
  4465  00FD  0021               	movlb	1	; select bank1
  4466  00FE  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4467  00FF  3141               	addfsr 1,1
  4468  0100  0022               	movlb	2	; select bank2
  4469  0101  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  4470  0102  0601               	xorwf	1,w
  4471  0103  0021               	movlb	1	; select bank1
  4472  0104  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4473  0105  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4474  0106  0022               	movlb	2	; select bank2
  4475  0107  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4476  0108  0021               	movlb	1	; select bank1
  4477  0109  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4478  010A  0022               	movlb	2	; select bank2
  4479  010B  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4480  010C  0021               	movlb	1	; select bank1
  4481  010D  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4482  010E  0022               	movlb	2	; select bank2
  4483  010F  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4484  0110  0021               	movlb	1	; select bank1
  4485  0111  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4486  0112  0022               	movlb	2	; select bank2
  4487  0113  00D4               	movwf	AsicPreCalc@x^(0+256)
  4488                           
  4489                           ;asic.c: 332: x += K[n];
  4490  0114  0858               	movf	AsicPreCalc@n^(0+256),w
  4491  0115  0021               	movlb	1	; select bank1
  4492  0116  00AF               	movwf	??_AsicPreCalc^(0+128)
  4493  0117  3001               	movlw	1
  4494  0118                     u4775:	
  4495  0118  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4496  0119  3EFF               	addlw	-1
  4497  011A  1D03               	skipz
  4498  011B  2918               	goto	u4775
  4499  011C  352F               	lslf	??_AsicPreCalc^(0+128),w
  4500  011D  3E20               	addlw	AsicPreCalc@K& (0+255)
  4501  011E  0086               	movwf	6
  4502  011F  3001               	movlw	1	; select bank2/3
  4503  0120  0087               	movwf	7
  4504  0121  3F40               	moviw [0]fsr1
  4505  0122  0022               	movlb	2	; select bank2
  4506  0123  07D4               	addwf	AsicPreCalc@x^(0+256),f
  4507  0124  3F41               	moviw [1]fsr1
  4508  0125  3DD5               	addwfc	(AsicPreCalc@x+1)^(0+256),f
  4509  0126  3F42               	moviw [2]fsr1
  4510  0127  3DD6               	addwfc	(AsicPreCalc@x+2)^(0+256),f
  4511  0128  3F43               	moviw [3]fsr1
  4512  0129  3DD7               	addwfc	(AsicPreCalc@x+3)^(0+256),f
  4513                           
  4514                           ;asic.c: 333: x += work->Merkle[n];
  4515  012A  0858               	movf	AsicPreCalc@n^(0+256),w
  4516  012B  0021               	movlb	1	; select bank1
  4517  012C  00AF               	movwf	??_AsicPreCalc^(0+128)
  4518  012D  01B0               	clrf	(??_AsicPreCalc^(0+128)+1)
  4519  012E  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4520  012F  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4521  0130  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4522  0131  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4523  0132  082F               	movf	??_AsicPreCalc^(0+128),w
  4524  0133  3E21               	addlw	33
  4525  0134  00B1               	movwf	(??_AsicPreCalc+2)^(0+128)
  4526  0135  3000               	movlw	0
  4527  0136  3D30               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4528  0137  00B2               	movwf	(??_AsicPreCalc+3)^(0+128)
  4529  0138  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4530  0139  072D               	addwf	AsicPreCalc@work^(0+128),w
  4531  013A  0086               	movwf	6
  4532  013B  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4533  013C  3D2E               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4534  013D  0087               	movwf	7
  4535  013E  3F40               	moviw [0]fsr1
  4536  013F  0022               	movlb	2	; select bank2
  4537  0140  07D4               	addwf	AsicPreCalc@x^(0+256),f
  4538  0141  3F41               	moviw [1]fsr1
  4539  0142  3DD5               	addwfc	(AsicPreCalc@x+1)^(0+256),f
  4540  0143  3F42               	moviw [2]fsr1
  4541  0144  3DD6               	addwfc	(AsicPreCalc@x+2)^(0+256),f
  4542  0145  3F43               	moviw [3]fsr1
  4543  0146  3DD7               	addwfc	(AsicPreCalc@x+3)^(0+256),f
  4544                           
  4545                           ;asic.c: 334: x += m[7-n];
  4546  0147  0358               	decf	AsicPreCalc@n^(0+256),w
  4547  0148  3AFF               	xorlw	255
  4548  0149  0021               	movlb	1	; select bank1
  4549  014A  00AF               	movwf	??_AsicPreCalc^(0+128)
  4550  014B  3001               	movlw	1
  4551  014C                     u4785:	
  4552  014C  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4553  014D  3EFF               	addlw	-1
  4554  014E  1D03               	skipz
  4555  014F  294C               	goto	u4785
  4556  0150  352F               	lslf	??_AsicPreCalc^(0+128),w
  4557  0151  3E1C               	addlw	28
  4558  0152  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4559  0153  0086               	movwf	6
  4560  0154  3001               	movlw	1	; select bank2/3
  4561  0155  0087               	movwf	7
  4562  0156  3F40               	moviw [0]fsr1
  4563  0157  0022               	movlb	2	; select bank2
  4564  0158  07D4               	addwf	AsicPreCalc@x^(0+256),f
  4565  0159  3F41               	moviw [1]fsr1
  4566  015A  3DD5               	addwfc	(AsicPreCalc@x+1)^(0+256),f
  4567  015B  3F42               	moviw [2]fsr1
  4568  015C  3DD6               	addwfc	(AsicPreCalc@x+2)^(0+256),f
  4569  015D  3F43               	moviw [3]fsr1
  4570  015E  3DD7               	addwfc	(AsicPreCalc@x+3)^(0+256),f
  4571                           
  4572                           ;asic.c: 335: y = rotate(m[4-n], 26);
  4573  015F  0358               	decf	AsicPreCalc@n^(0+256),w
  4574  0160  3AFF               	xorlw	255
  4575  0161  0021               	movlb	1	; select bank1
  4576  0162  00AF               	movwf	??_AsicPreCalc^(0+128)
  4577  0163  3001               	movlw	1
  4578  0164                     u4795:	
  4579  0164  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4580  0165  3EFF               	addlw	-1
  4581  0166  1D03               	skipz
  4582  0167  2964               	goto	u4795
  4583  0168  352F               	lslf	??_AsicPreCalc^(0+128),w
  4584  0169  3E10               	addlw	16
  4585  016A  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4586  016B  0086               	movwf	6
  4587  016C  3001               	movlw	1	; select bank2/3
  4588  016D  0087               	movwf	7
  4589  016E  3F40               	moviw [0]fsr1
  4590  016F  00A0               	movwf	?_rotate^(0+128)
  4591  0170  3F41               	moviw [1]fsr1
  4592  0171  00A1               	movwf	(?_rotate+1)^(0+128)
  4593  0172  3F42               	moviw [2]fsr1
  4594  0173  00A2               	movwf	(?_rotate+2)^(0+128)
  4595  0174  3F43               	moviw [3]fsr1
  4596  0175  00A3               	movwf	(?_rotate+3)^(0+128)
  4597  0176  301A               	movlw	26
  4598  0177  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4599  0178  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4600  0179  00A4               	movwf	(?_rotate^(0+128)+4)
  4601  017A  319D  2510  3180   	fcall	_rotate
  4602  017D  0021               	movlb	1	; select bank1
  4603  017E  0823               	movf	(?_rotate+3)^(0+128),w
  4604  017F  0022               	movlb	2	; select bank2
  4605  0180  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  4606  0181  0021               	movlb	1	; select bank1
  4607  0182  0822               	movf	(?_rotate+2)^(0+128),w
  4608  0183  0022               	movlb	2	; select bank2
  4609  0184  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  4610  0185  0021               	movlb	1	; select bank1
  4611  0186  0821               	movf	(?_rotate+1)^(0+128),w
  4612  0187  0022               	movlb	2	; select bank2
  4613  0188  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  4614  0189  0021               	movlb	1	; select bank1
  4615  018A  0820               	movf	?_rotate^(0+128),w
  4616  018B  0022               	movlb	2	; select bank2
  4617  018C  00D0               	movwf	AsicPreCalc@y^(0+256)
  4618                           
  4619                           ;asic.c: 336: z = rotate(m[4-n], 21);
  4620  018D  0358               	decf	AsicPreCalc@n^(0+256),w
  4621  018E  3AFF               	xorlw	255
  4622  018F  0021               	movlb	1	; select bank1
  4623  0190  00AF               	movwf	??_AsicPreCalc^(0+128)
  4624  0191  3001               	movlw	1
  4625  0192                     u4805:	
  4626  0192  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4627  0193  3EFF               	addlw	-1
  4628  0194  1D03               	skipz
  4629  0195  2992               	goto	u4805
  4630  0196  352F               	lslf	??_AsicPreCalc^(0+128),w
  4631  0197  3E10               	addlw	16
  4632  0198  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4633  0199  0086               	movwf	6
  4634  019A  3001               	movlw	1	; select bank2/3
  4635  019B  0087               	movwf	7
  4636  019C  3F40               	moviw [0]fsr1
  4637  019D  00A0               	movwf	?_rotate^(0+128)
  4638  019E  3F41               	moviw [1]fsr1
  4639  019F  00A1               	movwf	(?_rotate+1)^(0+128)
  4640  01A0  3F42               	moviw [2]fsr1
  4641  01A1  00A2               	movwf	(?_rotate+2)^(0+128)
  4642  01A2  3F43               	moviw [3]fsr1
  4643  01A3  00A3               	movwf	(?_rotate+3)^(0+128)
  4644  01A4  3015               	movlw	21
  4645  01A5  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4646  01A6  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4647  01A7  00A4               	movwf	(?_rotate^(0+128)+4)
  4648  01A8  319D  2510  3180   	fcall	_rotate
  4649  01AB  0021               	movlb	1	; select bank1
  4650  01AC  0823               	movf	(?_rotate+3)^(0+128),w
  4651  01AD  0022               	movlb	2	; select bank2
  4652  01AE  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  4653  01AF  0021               	movlb	1	; select bank1
  4654  01B0  0822               	movf	(?_rotate+2)^(0+128),w
  4655  01B1  0022               	movlb	2	; select bank2
  4656  01B2  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  4657  01B3  0021               	movlb	1	; select bank1
  4658  01B4  0821               	movf	(?_rotate+1)^(0+128),w
  4659  01B5  0022               	movlb	2	; select bank2
  4660  01B6  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  4661  01B7  0021               	movlb	1	; select bank1
  4662  01B8  0820               	movf	?_rotate^(0+128),w
  4663  01B9  0022               	movlb	2	; select bank2
  4664  01BA  00CC               	movwf	AsicPreCalc@z^(0+256)
  4665                           
  4666                           ;asic.c: 337: z = y^z;
  4667  01BB  0850               	movf	AsicPreCalc@y^(0+256),w
  4668  01BC  064C               	xorwf	AsicPreCalc@z^(0+256),w
  4669  01BD  0021               	movlb	1	; select bank1
  4670  01BE  00AF               	movwf	??_AsicPreCalc^(0+128)
  4671  01BF  0022               	movlb	2	; select bank2
  4672  01C0  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  4673  01C1  064D               	xorwf	(AsicPreCalc@z+1)^(0+256),w
  4674  01C2  0021               	movlb	1	; select bank1
  4675  01C3  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  4676  01C4  0022               	movlb	2	; select bank2
  4677  01C5  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  4678  01C6  064E               	xorwf	(AsicPreCalc@z+2)^(0+256),w
  4679  01C7  0021               	movlb	1	; select bank1
  4680  01C8  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  4681  01C9  0022               	movlb	2	; select bank2
  4682  01CA  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  4683  01CB  064F               	xorwf	(AsicPreCalc@z+3)^(0+256),w
  4684  01CC  0021               	movlb	1	; select bank1
  4685  01CD  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  4686  01CE  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4687  01CF  0022               	movlb	2	; select bank2
  4688  01D0  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  4689  01D1  0021               	movlb	1	; select bank1
  4690  01D2  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4691  01D3  0022               	movlb	2	; select bank2
  4692  01D4  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  4693  01D5  0021               	movlb	1	; select bank1
  4694  01D6  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4695  01D7  0022               	movlb	2	; select bank2
  4696  01D8  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  4697  01D9  0021               	movlb	1	; select bank1
  4698  01DA  082F               	movf	??_AsicPreCalc^(0+128),w
  4699  01DB  0022               	movlb	2	; select bank2
  4700  01DC  00CC               	movwf	AsicPreCalc@z^(0+256)
  4701                           
  4702                           ;asic.c: 338: y = rotate(m[4-n], 7);
  4703  01DD  0358               	decf	AsicPreCalc@n^(0+256),w
  4704  01DE  3AFF               	xorlw	255
  4705  01DF  0021               	movlb	1	; select bank1
  4706  01E0  00AF               	movwf	??_AsicPreCalc^(0+128)
  4707  01E1  3001               	movlw	1
  4708  01E2                     u4815:	
  4709  01E2  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4710  01E3  3EFF               	addlw	-1
  4711  01E4  1D03               	skipz
  4712  01E5  29E2               	goto	u4815
  4713  01E6  352F               	lslf	??_AsicPreCalc^(0+128),w
  4714  01E7  3E10               	addlw	16
  4715  01E8  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4716  01E9  0086               	movwf	6
  4717  01EA  3001               	movlw	1	; select bank2/3
  4718  01EB  0087               	movwf	7
  4719  01EC  3F40               	moviw [0]fsr1
  4720  01ED  00A0               	movwf	?_rotate^(0+128)
  4721  01EE  3F41               	moviw [1]fsr1
  4722  01EF  00A1               	movwf	(?_rotate+1)^(0+128)
  4723  01F0  3F42               	moviw [2]fsr1
  4724  01F1  00A2               	movwf	(?_rotate+2)^(0+128)
  4725  01F2  3F43               	moviw [3]fsr1
  4726  01F3  00A3               	movwf	(?_rotate+3)^(0+128)
  4727  01F4  3007               	movlw	7
  4728  01F5  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4729  01F6  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4730  01F7  00A4               	movwf	(?_rotate^(0+128)+4)
  4731  01F8  319D  2510  3180   	fcall	_rotate
  4732  01FB  0021               	movlb	1	; select bank1
  4733  01FC  0823               	movf	(?_rotate+3)^(0+128),w
  4734  01FD  0022               	movlb	2	; select bank2
  4735  01FE  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  4736  01FF  0021               	movlb	1	; select bank1
  4737  0200  0822               	movf	(?_rotate+2)^(0+128),w
  4738  0201  0022               	movlb	2	; select bank2
  4739  0202  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  4740  0203  0021               	movlb	1	; select bank1
  4741  0204  0821               	movf	(?_rotate+1)^(0+128),w
  4742  0205  0022               	movlb	2	; select bank2
  4743  0206  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  4744  0207  0021               	movlb	1	; select bank1
  4745  0208  0820               	movf	?_rotate^(0+128),w
  4746  0209  0022               	movlb	2	; select bank2
  4747  020A  00D0               	movwf	AsicPreCalc@y^(0+256)
  4748                           
  4749                           ;asic.c: 339: z = y^z;
  4750  020B  0850               	movf	AsicPreCalc@y^(0+256),w
  4751  020C  064C               	xorwf	AsicPreCalc@z^(0+256),w
  4752  020D  0021               	movlb	1	; select bank1
  4753  020E  00AF               	movwf	??_AsicPreCalc^(0+128)
  4754  020F  0022               	movlb	2	; select bank2
  4755  0210  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  4756  0211  064D               	xorwf	(AsicPreCalc@z+1)^(0+256),w
  4757  0212  0021               	movlb	1	; select bank1
  4758  0213  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  4759  0214  0022               	movlb	2	; select bank2
  4760  0215  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  4761  0216  064E               	xorwf	(AsicPreCalc@z+2)^(0+256),w
  4762  0217  0021               	movlb	1	; select bank1
  4763  0218  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  4764  0219  0022               	movlb	2	; select bank2
  4765  021A  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  4766  021B  064F               	xorwf	(AsicPreCalc@z+3)^(0+256),w
  4767  021C  0021               	movlb	1	; select bank1
  4768  021D  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  4769  021E  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4770  021F  0022               	movlb	2	; select bank2
  4771  0220  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  4772  0221  0021               	movlb	1	; select bank1
  4773  0222  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4774  0223  0022               	movlb	2	; select bank2
  4775  0224  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  4776  0225  0021               	movlb	1	; select bank1
  4777  0226  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4778  0227  0022               	movlb	2	; select bank2
  4779  0228  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  4780  0229  0021               	movlb	1	; select bank1
  4781  022A  082F               	movf	??_AsicPreCalc^(0+128),w
  4782  022B  0022               	movlb	2	; select bank2
  4783  022C  00CC               	movwf	AsicPreCalc@z^(0+256)
  4784                           
  4785                           ;asic.c: 340: m[7-n] = z+x;
  4786  022D  084C               	movf	AsicPreCalc@z^(0+256),w
  4787  022E  0754               	addwf	AsicPreCalc@x^(0+256),w
  4788  022F  0021               	movlb	1	; select bank1
  4789  0230  00AF               	movwf	??_AsicPreCalc^(0+128)
  4790  0231  0022               	movlb	2	; select bank2
  4791  0232  084D               	movf	(AsicPreCalc@z+1)^(0+256),w
  4792  0233  3D55               	addwfc	(AsicPreCalc@x+1)^(0+256),w
  4793  0234  0021               	movlb	1	; select bank1
  4794  0235  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  4795  0236  0022               	movlb	2	; select bank2
  4796  0237  084E               	movf	(AsicPreCalc@z+2)^(0+256),w
  4797  0238  3D56               	addwfc	(AsicPreCalc@x+2)^(0+256),w
  4798  0239  0021               	movlb	1	; select bank1
  4799  023A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  4800  023B  0022               	movlb	2	; select bank2
  4801  023C  084F               	movf	(AsicPreCalc@z+3)^(0+256),w
  4802  023D  3D57               	addwfc	(AsicPreCalc@x+3)^(0+256),w
  4803  023E  0021               	movlb	1	; select bank1
  4804  023F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  4805  0240  0022               	movlb	2	; select bank2
  4806  0241  0358               	decf	AsicPreCalc@n^(0+256),w
  4807  0242  3AFF               	xorlw	255
  4808  0243  0021               	movlb	1	; select bank1
  4809  0244  00B3               	movwf	(??_AsicPreCalc+4)^(0+128)
  4810  0245  3001               	movlw	1
  4811  0246                     u4825:	
  4812  0246  35B3               	lslf	(??_AsicPreCalc+4)^(0+128),f
  4813  0247  3EFF               	addlw	-1
  4814  0248  1D03               	skipz
  4815  0249  2A46               	goto	u4825
  4816  024A  3533               	lslf	(??_AsicPreCalc+4)^(0+128),w
  4817  024B  3E1C               	addlw	28
  4818  024C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4819  024D  0086               	movwf	6
  4820  024E  3001               	movlw	1	; select bank2/3
  4821  024F  0087               	movwf	7
  4822  0250  082F               	movf	??_AsicPreCalc^(0+128),w
  4823  0251  3FC0               	movwi [0]fsr1
  4824  0252  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4825  0253  3FC1               	movwi [1]fsr1
  4826  0254  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4827  0255  3FC2               	movwi [2]fsr1
  4828  0256  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4829  0257  3FC3               	movwi [3]fsr1
  4830                           
  4831                           ;asic.c: 341: m[3-n] = m[3-n] + m[7-n];
  4832  0258  0022               	movlb	2	; select bank2
  4833  0259  0358               	decf	AsicPreCalc@n^(0+256),w
  4834  025A  3AFF               	xorlw	255
  4835  025B  0021               	movlb	1	; select bank1
  4836  025C  00AF               	movwf	??_AsicPreCalc^(0+128)
  4837  025D  3001               	movlw	1
  4838  025E                     u4835:	
  4839  025E  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4840  025F  3EFF               	addlw	-1
  4841  0260  1D03               	skipz
  4842  0261  2A5E               	goto	u4835
  4843  0262  352F               	lslf	??_AsicPreCalc^(0+128),w
  4844  0263  3E1C               	addlw	28
  4845  0264  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4846  0265  0086               	movwf	6
  4847  0266  3001               	movlw	1	; select bank2/3
  4848  0267  0087               	movwf	7
  4849  0268  3F40               	moviw [0]fsr1
  4850  0269  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4851  026A  3F41               	moviw [1]fsr1
  4852  026B  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4853  026C  3F42               	moviw [2]fsr1
  4854  026D  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4855  026E  3F43               	moviw [3]fsr1
  4856  026F  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4857  0270  0022               	movlb	2	; select bank2
  4858  0271  0358               	decf	AsicPreCalc@n^(0+256),w
  4859  0272  3AFF               	xorlw	255
  4860  0273  0021               	movlb	1	; select bank1
  4861  0274  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  4862  0275  3001               	movlw	1
  4863  0276                     u4845:	
  4864  0276  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4865  0277  3EFF               	addlw	-1
  4866  0278  1D03               	skipz
  4867  0279  2A76               	goto	u4845
  4868  027A  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4869  027B  3E0C               	addlw	12
  4870  027C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4871  027D  0086               	movwf	6
  4872  027E  3001               	movlw	1	; select bank2/3
  4873  027F  0087               	movwf	7
  4874  0280  3F40               	moviw [0]fsr1
  4875  0281  07B0               	addwf	(??_AsicPreCalc+1)^(0+128),f
  4876  0282  3F41               	moviw [1]fsr1
  4877  0283  3DB1               	addwfc	((??_AsicPreCalc+1)^(0+128)+1),f
  4878  0284  3F42               	moviw [2]fsr1
  4879  0285  3DB2               	addwfc	((??_AsicPreCalc+1)^(0+128)+2),f
  4880  0286  3F43               	moviw [3]fsr1
  4881  0287  3DB3               	addwfc	((??_AsicPreCalc+1)^(0+128)+3),f
  4882  0288  0022               	movlb	2	; select bank2
  4883  0289  0358               	decf	AsicPreCalc@n^(0+256),w
  4884  028A  3AFF               	xorlw	255
  4885  028B  0021               	movlb	1	; select bank1
  4886  028C  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  4887  028D  3001               	movlw	1
  4888  028E                     u4855:	
  4889  028E  35B5               	lslf	(??_AsicPreCalc+6)^(0+128),f
  4890  028F  3EFF               	addlw	-1
  4891  0290  1D03               	skipz
  4892  0291  2A8E               	goto	u4855
  4893  0292  3535               	lslf	(??_AsicPreCalc+6)^(0+128),w
  4894  0293  3E0C               	addlw	12
  4895  0294  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4896  0295  0086               	movwf	6
  4897  0296  3001               	movlw	1	; select bank2/3
  4898  0297  0087               	movwf	7
  4899  0298  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4900  0299  3FC0               	movwi [0]fsr1
  4901  029A  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4902  029B  3FC1               	movwi [1]fsr1
  4903  029C  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4904  029D  3FC2               	movwi [2]fsr1
  4905  029E  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4906  029F  3FC3               	movwi [3]fsr1
  4907                           
  4908                           ;asic.c: 342: x = rotate(m[((0-n)&7)], 30);
  4909  02A0  0022               	movlb	2	; select bank2
  4910  02A1  0358               	decf	AsicPreCalc@n^(0+256),w
  4911  02A2  3AFF               	xorlw	255
  4912  02A3  3907               	andlw	7
  4913  02A4  0021               	movlb	1	; select bank1
  4914  02A5  00AF               	movwf	??_AsicPreCalc^(0+128)
  4915  02A6  3001               	movlw	1
  4916  02A7                     u4865:	
  4917  02A7  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4918  02A8  3EFF               	addlw	-1
  4919  02A9  1D03               	skipz
  4920  02AA  2AA7               	goto	u4865
  4921  02AB  352F               	lslf	??_AsicPreCalc^(0+128),w
  4922  02AC  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4923  02AD  0086               	movwf	6
  4924  02AE  3001               	movlw	1	; select bank2/3
  4925  02AF  0087               	movwf	7
  4926  02B0  3F40               	moviw [0]fsr1
  4927  02B1  00A0               	movwf	?_rotate^(0+128)
  4928  02B2  3F41               	moviw [1]fsr1
  4929  02B3  00A1               	movwf	(?_rotate+1)^(0+128)
  4930  02B4  3F42               	moviw [2]fsr1
  4931  02B5  00A2               	movwf	(?_rotate+2)^(0+128)
  4932  02B6  3F43               	moviw [3]fsr1
  4933  02B7  00A3               	movwf	(?_rotate+3)^(0+128)
  4934  02B8  301E               	movlw	30
  4935  02B9  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4936  02BA  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4937  02BB  00A4               	movwf	(?_rotate^(0+128)+4)
  4938  02BC  319D  2510  3180   	fcall	_rotate
  4939  02BF  0021               	movlb	1	; select bank1
  4940  02C0  0823               	movf	(?_rotate+3)^(0+128),w
  4941  02C1  0022               	movlb	2	; select bank2
  4942  02C2  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4943  02C3  0021               	movlb	1	; select bank1
  4944  02C4  0822               	movf	(?_rotate+2)^(0+128),w
  4945  02C5  0022               	movlb	2	; select bank2
  4946  02C6  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4947  02C7  0021               	movlb	1	; select bank1
  4948  02C8  0821               	movf	(?_rotate+1)^(0+128),w
  4949  02C9  0022               	movlb	2	; select bank2
  4950  02CA  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4951  02CB  0021               	movlb	1	; select bank1
  4952  02CC  0820               	movf	?_rotate^(0+128),w
  4953  02CD  0022               	movlb	2	; select bank2
  4954  02CE  00D4               	movwf	AsicPreCalc@x^(0+256)
  4955                           
  4956                           ;asic.c: 343: y = rotate(m[((0-n)&7)], 19);
  4957  02CF  0358               	decf	AsicPreCalc@n^(0+256),w
  4958  02D0  3AFF               	xorlw	255
  4959  02D1  3907               	andlw	7
  4960  02D2  0021               	movlb	1	; select bank1
  4961  02D3  00AF               	movwf	??_AsicPreCalc^(0+128)
  4962  02D4  3001               	movlw	1
  4963  02D5                     u4875:	
  4964  02D5  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4965  02D6  3EFF               	addlw	-1
  4966  02D7  1D03               	skipz
  4967  02D8  2AD5               	goto	u4875
  4968  02D9  352F               	lslf	??_AsicPreCalc^(0+128),w
  4969  02DA  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4970  02DB  0086               	movwf	6
  4971  02DC  3001               	movlw	1	; select bank2/3
  4972  02DD  0087               	movwf	7
  4973  02DE  3F40               	moviw [0]fsr1
  4974  02DF  00A0               	movwf	?_rotate^(0+128)
  4975  02E0  3F41               	moviw [1]fsr1
  4976  02E1  00A1               	movwf	(?_rotate+1)^(0+128)
  4977  02E2  3F42               	moviw [2]fsr1
  4978  02E3  00A2               	movwf	(?_rotate+2)^(0+128)
  4979  02E4  3F43               	moviw [3]fsr1
  4980  02E5  00A3               	movwf	(?_rotate+3)^(0+128)
  4981  02E6  3013               	movlw	19
  4982  02E7  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4983  02E8  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4984  02E9  00A4               	movwf	(?_rotate^(0+128)+4)
  4985  02EA  319D  2510  3180   	fcall	_rotate
  4986  02ED  0021               	movlb	1	; select bank1
  4987  02EE  0823               	movf	(?_rotate+3)^(0+128),w
  4988  02EF  0022               	movlb	2	; select bank2
  4989  02F0  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  4990  02F1  0021               	movlb	1	; select bank1
  4991  02F2  0822               	movf	(?_rotate+2)^(0+128),w
  4992  02F3  0022               	movlb	2	; select bank2
  4993  02F4  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  4994  02F5  0021               	movlb	1	; select bank1
  4995  02F6  0821               	movf	(?_rotate+1)^(0+128),w
  4996  02F7  0022               	movlb	2	; select bank2
  4997  02F8  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  4998  02F9  0021               	movlb	1	; select bank1
  4999  02FA  0820               	movf	?_rotate^(0+128),w
  5000  02FB  0022               	movlb	2	; select bank2
  5001  02FC  00D0               	movwf	AsicPreCalc@y^(0+256)
  5002                           
  5003                           ;asic.c: 344: y = y^x;
  5004  02FD  0850               	movf	AsicPreCalc@y^(0+256),w
  5005  02FE  0654               	xorwf	AsicPreCalc@x^(0+256),w
  5006  02FF  0021               	movlb	1	; select bank1
  5007  0300  00AF               	movwf	??_AsicPreCalc^(0+128)
  5008  0301  0022               	movlb	2	; select bank2
  5009  0302  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  5010  0303  0655               	xorwf	(AsicPreCalc@x+1)^(0+256),w
  5011  0304  0021               	movlb	1	; select bank1
  5012  0305  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5013  0306  0022               	movlb	2	; select bank2
  5014  0307  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  5015  0308  0656               	xorwf	(AsicPreCalc@x+2)^(0+256),w
  5016  0309  0021               	movlb	1	; select bank1
  5017  030A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5018  030B  0022               	movlb	2	; select bank2
  5019  030C  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  5020  030D  0657               	xorwf	(AsicPreCalc@x+3)^(0+256),w
  5021  030E  0021               	movlb	1	; select bank1
  5022  030F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5023  0310  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5024  0311  0022               	movlb	2	; select bank2
  5025  0312  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  5026  0313  0021               	movlb	1	; select bank1
  5027  0314  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5028  0315  0022               	movlb	2	; select bank2
  5029  0316  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  5030  0317  0021               	movlb	1	; select bank1
  5031  0318  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5032  0319  0022               	movlb	2	; select bank2
  5033  031A  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  5034  031B  0021               	movlb	1	; select bank1
  5035  031C  082F               	movf	??_AsicPreCalc^(0+128),w
  5036  031D  0022               	movlb	2	; select bank2
  5037  031E  00D0               	movwf	AsicPreCalc@y^(0+256)
  5038                           
  5039                           ;asic.c: 345: x = rotate(m[((0-n)&7)], 10);
  5040  031F  0358               	decf	AsicPreCalc@n^(0+256),w
  5041  0320  3AFF               	xorlw	255
  5042  0321  3907               	andlw	7
  5043  0322  0021               	movlb	1	; select bank1
  5044  0323  00AF               	movwf	??_AsicPreCalc^(0+128)
  5045  0324  3001               	movlw	1
  5046  0325                     u4885:	
  5047  0325  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5048  0326  3EFF               	addlw	-1
  5049  0327  1D03               	skipz
  5050  0328  2B25               	goto	u4885
  5051  0329  352F               	lslf	??_AsicPreCalc^(0+128),w
  5052  032A  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5053  032B  0086               	movwf	6
  5054  032C  3001               	movlw	1	; select bank2/3
  5055  032D  0087               	movwf	7
  5056  032E  3F40               	moviw [0]fsr1
  5057  032F  00A0               	movwf	?_rotate^(0+128)
  5058  0330  3F41               	moviw [1]fsr1
  5059  0331  00A1               	movwf	(?_rotate+1)^(0+128)
  5060  0332  3F42               	moviw [2]fsr1
  5061  0333  00A2               	movwf	(?_rotate+2)^(0+128)
  5062  0334  3F43               	moviw [3]fsr1
  5063  0335  00A3               	movwf	(?_rotate+3)^(0+128)
  5064  0336  300A               	movlw	10
  5065  0337  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5066  0338  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5067  0339  00A4               	movwf	(?_rotate^(0+128)+4)
  5068  033A  319D  2510  3180   	fcall	_rotate
  5069  033D  0021               	movlb	1	; select bank1
  5070  033E  0823               	movf	(?_rotate+3)^(0+128),w
  5071  033F  0022               	movlb	2	; select bank2
  5072  0340  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5073  0341  0021               	movlb	1	; select bank1
  5074  0342  0822               	movf	(?_rotate+2)^(0+128),w
  5075  0343  0022               	movlb	2	; select bank2
  5076  0344  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5077  0345  0021               	movlb	1	; select bank1
  5078  0346  0821               	movf	(?_rotate+1)^(0+128),w
  5079  0347  0022               	movlb	2	; select bank2
  5080  0348  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5081  0349  0021               	movlb	1	; select bank1
  5082  034A  0820               	movf	?_rotate^(0+128),w
  5083  034B  0022               	movlb	2	; select bank2
  5084  034C  00D4               	movwf	AsicPreCalc@x^(0+256)
  5085                           
  5086                           ;asic.c: 346: y = x^y;
  5087  034D  0854               	movf	AsicPreCalc@x^(0+256),w
  5088  034E  0650               	xorwf	AsicPreCalc@y^(0+256),w
  5089  034F  0021               	movlb	1	; select bank1
  5090  0350  00AF               	movwf	??_AsicPreCalc^(0+128)
  5091  0351  0022               	movlb	2	; select bank2
  5092  0352  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  5093  0353  0651               	xorwf	(AsicPreCalc@y+1)^(0+256),w
  5094  0354  0021               	movlb	1	; select bank1
  5095  0355  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5096  0356  0022               	movlb	2	; select bank2
  5097  0357  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  5098  0358  0652               	xorwf	(AsicPreCalc@y+2)^(0+256),w
  5099  0359  0021               	movlb	1	; select bank1
  5100  035A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5101  035B  0022               	movlb	2	; select bank2
  5102  035C  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  5103  035D  0653               	xorwf	(AsicPreCalc@y+3)^(0+256),w
  5104  035E  0021               	movlb	1	; select bank1
  5105  035F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5106  0360  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5107  0361  0022               	movlb	2	; select bank2
  5108  0362  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  5109  0363  0021               	movlb	1	; select bank1
  5110  0364  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5111  0365  0022               	movlb	2	; select bank2
  5112  0366  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  5113  0367  0021               	movlb	1	; select bank1
  5114  0368  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5115  0369  0022               	movlb	2	; select bank2
  5116  036A  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  5117  036B  0021               	movlb	1	; select bank1
  5118  036C  082F               	movf	??_AsicPreCalc^(0+128),w
  5119  036D  0022               	movlb	2	; select bank2
  5120  036E  00D0               	movwf	AsicPreCalc@y^(0+256)
  5121                           
  5122                           ;asic.c: 347: x = m[((0-n)&7)] | m[((1-n)&7)];
  5123  036F  0358               	decf	AsicPreCalc@n^(0+256),w
  5124  0370  3AFF               	xorlw	255
  5125  0371  3E01               	addlw	1
  5126  0372  3907               	andlw	7
  5127  0373  0021               	movlb	1	; select bank1
  5128  0374  00AF               	movwf	??_AsicPreCalc^(0+128)
  5129  0375  3001               	movlw	1
  5130  0376                     u4895:	
  5131  0376  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5132  0377  3EFF               	addlw	-1
  5133  0378  1D03               	skipz
  5134  0379  2B76               	goto	u4895
  5135  037A  352F               	lslf	??_AsicPreCalc^(0+128),w
  5136  037B  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5137  037C  0086               	movwf	6
  5138  037D  3001               	movlw	1	; select bank2/3
  5139  037E  0087               	movwf	7
  5140  037F  3F40               	moviw [0]fsr1
  5141  0380  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5142  0381  3F41               	moviw [1]fsr1
  5143  0382  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5144  0383  3F42               	moviw [2]fsr1
  5145  0384  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5146  0385  3F43               	moviw [3]fsr1
  5147  0386  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5148  0387  0022               	movlb	2	; select bank2
  5149  0388  0358               	decf	AsicPreCalc@n^(0+256),w
  5150  0389  3AFF               	xorlw	255
  5151  038A  3907               	andlw	7
  5152  038B  0021               	movlb	1	; select bank1
  5153  038C  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5154  038D  3001               	movlw	1
  5155  038E                     u4905:	
  5156  038E  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5157  038F  3EFF               	addlw	-1
  5158  0390  1D03               	skipz
  5159  0391  2B8E               	goto	u4905
  5160  0392  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5161  0393  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5162  0394  0086               	movwf	6
  5163  0395  3001               	movlw	1	; select bank2/3
  5164  0396  0087               	movwf	7
  5165  0397  3F40               	moviw [0]fsr1
  5166  0398  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  5167  0399  3F41               	moviw [1]fsr1
  5168  039A  00B6               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5169  039B  3F42               	moviw [2]fsr1
  5170  039C  00B7               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5171  039D  3F43               	moviw [3]fsr1
  5172  039E  00B8               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5173  039F  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5174  03A0  0435               	iorwf	(??_AsicPreCalc+6)^(0+128),w
  5175  03A1  0022               	movlb	2	; select bank2
  5176  03A2  00D4               	movwf	AsicPreCalc@x^(0+256)
  5177  03A3  0021               	movlb	1	; select bank1
  5178  03A4  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5179  03A5  0436               	iorwf	(??_AsicPreCalc+7)^(0+128),w
  5180  03A6  0022               	movlb	2	; select bank2
  5181  03A7  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5182  03A8  0021               	movlb	1	; select bank1
  5183  03A9  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5184  03AA  0437               	iorwf	(??_AsicPreCalc+8)^(0+128),w
  5185  03AB  0022               	movlb	2	; select bank2
  5186  03AC  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5187  03AD  0021               	movlb	1	; select bank1
  5188  03AE  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5189  03AF  0438               	iorwf	(??_AsicPreCalc+9)^(0+128),w
  5190  03B0  0022               	movlb	2	; select bank2
  5191  03B1  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5192                           
  5193                           ;asic.c: 348: x = m[((2-n)&7)] & x;
  5194  03B2  0358               	decf	AsicPreCalc@n^(0+256),w
  5195  03B3  3AFF               	xorlw	255
  5196  03B4  3E02               	addlw	2
  5197  03B5  3907               	andlw	7
  5198  03B6  0021               	movlb	1	; select bank1
  5199  03B7  00AF               	movwf	??_AsicPreCalc^(0+128)
  5200  03B8  3001               	movlw	1
  5201  03B9                     u4915:	
  5202  03B9  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5203  03BA  3EFF               	addlw	-1
  5204  03BB  1D03               	skipz
  5205  03BC  2BB9               	goto	u4915
  5206  03BD  352F               	lslf	??_AsicPreCalc^(0+128),w
  5207  03BE  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5208  03BF  0086               	movwf	6
  5209  03C0  3001               	movlw	1	; select bank2/3
  5210  03C1  0087               	movwf	7
  5211  03C2  0022               	movlb	2	; select bank2
  5212  03C3  0854               	movf	AsicPreCalc@x^(0+256),w
  5213  03C4  0501               	andwf	1,w
  5214  03C5  0021               	movlb	1	; select bank1
  5215  03C6  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5216  03C7  3141               	addfsr 1,1
  5217  03C8  0022               	movlb	2	; select bank2
  5218  03C9  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  5219  03CA  0501               	andwf	1,w
  5220  03CB  0021               	movlb	1	; select bank1
  5221  03CC  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5222  03CD  3141               	addfsr 1,1
  5223  03CE  0022               	movlb	2	; select bank2
  5224  03CF  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  5225  03D0  0501               	andwf	1,w
  5226  03D1  0021               	movlb	1	; select bank1
  5227  03D2  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5228  03D3  3141               	addfsr 1,1
  5229  03D4  0022               	movlb	2	; select bank2
  5230  03D5  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  5231  03D6  0501               	andwf	1,w
  5232  03D7  0021               	movlb	1	; select bank1
  5233  03D8  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5234  03D9  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5235  03DA  0022               	movlb	2	; select bank2
  5236  03DB  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5237  03DC  0021               	movlb	1	; select bank1
  5238  03DD  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5239  03DE  0022               	movlb	2	; select bank2
  5240  03DF  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5241  03E0  0021               	movlb	1	; select bank1
  5242  03E1  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5243  03E2  0022               	movlb	2	; select bank2
  5244  03E3  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5245  03E4  0021               	movlb	1	; select bank1
  5246  03E5  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5247  03E6  0022               	movlb	2	; select bank2
  5248  03E7  00D4               	movwf	AsicPreCalc@x^(0+256)
  5249                           
  5250                           ;asic.c: 349: z = m[((0-n)&7)] & m[((1-n)&7)];
  5251  03E8  0358               	decf	AsicPreCalc@n^(0+256),w
  5252  03E9  3AFF               	xorlw	255
  5253  03EA  3E01               	addlw	1
  5254  03EB  3907               	andlw	7
  5255  03EC  0021               	movlb	1	; select bank1
  5256  03ED  00AF               	movwf	??_AsicPreCalc^(0+128)
  5257  03EE  3001               	movlw	1
  5258  03EF                     u4925:	
  5259  03EF  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5260  03F0  3EFF               	addlw	-1
  5261  03F1  1D03               	skipz
  5262  03F2  2BEF               	goto	u4925
  5263  03F3  352F               	lslf	??_AsicPreCalc^(0+128),w
  5264  03F4  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5265  03F5  0086               	movwf	6
  5266  03F6  3001               	movlw	1	; select bank2/3
  5267  03F7  0087               	movwf	7
  5268  03F8  3F40               	moviw [0]fsr1
  5269  03F9  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5270  03FA  3F41               	moviw [1]fsr1
  5271  03FB  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5272  03FC  3F42               	moviw [2]fsr1
  5273  03FD  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5274  03FE  3F43               	moviw [3]fsr1
  5275  03FF  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5276  0400  0022               	movlb	2	; select bank2
  5277  0401  0358               	decf	AsicPreCalc@n^(0+256),w
  5278  0402  3AFF               	xorlw	255
  5279  0403  3907               	andlw	7
  5280  0404  0021               	movlb	1	; select bank1
  5281  0405  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5282  0406  3001               	movlw	1
  5283  0407                     u4935:	
  5284  0407  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5285  0408  3EFF               	addlw	-1
  5286  0409  1D03               	skipz
  5287  040A  2C07               	goto	u4935
  5288  040B  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5289  040C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5290  040D  0086               	movwf	6
  5291  040E  3001               	movlw	1	; select bank2/3
  5292  040F  0087               	movwf	7
  5293  0410  3F40               	moviw [0]fsr1
  5294  0411  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  5295  0412  3F41               	moviw [1]fsr1
  5296  0413  00B6               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5297  0414  3F42               	moviw [2]fsr1
  5298  0415  00B7               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5299  0416  3F43               	moviw [3]fsr1
  5300  0417  00B8               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5301  0418  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5302  0419  0535               	andwf	(??_AsicPreCalc+6)^(0+128),w
  5303  041A  0022               	movlb	2	; select bank2
  5304  041B  00CC               	movwf	AsicPreCalc@z^(0+256)
  5305  041C  0021               	movlb	1	; select bank1
  5306  041D  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5307  041E  0536               	andwf	(??_AsicPreCalc+7)^(0+128),w
  5308  041F  0022               	movlb	2	; select bank2
  5309  0420  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  5310  0421  0021               	movlb	1	; select bank1
  5311  0422  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5312  0423  0537               	andwf	(??_AsicPreCalc+8)^(0+128),w
  5313  0424  0022               	movlb	2	; select bank2
  5314  0425  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  5315  0426  0021               	movlb	1	; select bank1
  5316  0427  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5317  0428  0538               	andwf	(??_AsicPreCalc+9)^(0+128),w
  5318  0429  0022               	movlb	2	; select bank2
  5319  042A  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  5320                           
  5321                           ;asic.c: 350: x = x | z;
  5322  042B  0854               	movf	AsicPreCalc@x^(0+256),w
  5323  042C  044C               	iorwf	AsicPreCalc@z^(0+256),w
  5324  042D  0021               	movlb	1	; select bank1
  5325  042E  00AF               	movwf	??_AsicPreCalc^(0+128)
  5326  042F  0022               	movlb	2	; select bank2
  5327  0430  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  5328  0431  044D               	iorwf	(AsicPreCalc@z+1)^(0+256),w
  5329  0432  0021               	movlb	1	; select bank1
  5330  0433  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5331  0434  0022               	movlb	2	; select bank2
  5332  0435  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  5333  0436  044E               	iorwf	(AsicPreCalc@z+2)^(0+256),w
  5334  0437  0021               	movlb	1	; select bank1
  5335  0438  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5336  0439  0022               	movlb	2	; select bank2
  5337  043A  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  5338  043B  044F               	iorwf	(AsicPreCalc@z+3)^(0+256),w
  5339  043C  0021               	movlb	1	; select bank1
  5340  043D  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5341  043E  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5342  043F  0022               	movlb	2	; select bank2
  5343  0440  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5344  0441  0021               	movlb	1	; select bank1
  5345  0442  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5346  0443  0022               	movlb	2	; select bank2
  5347  0444  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5348  0445  0021               	movlb	1	; select bank1
  5349  0446  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5350  0447  0022               	movlb	2	; select bank2
  5351  0448  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5352  0449  0021               	movlb	1	; select bank1
  5353  044A  082F               	movf	??_AsicPreCalc^(0+128),w
  5354  044B  0022               	movlb	2	; select bank2
  5355  044C  00D4               	movwf	AsicPreCalc@x^(0+256)
  5356                           
  5357                           ;asic.c: 351: m[7-n] += y + x;
  5358  044D  0850               	movf	AsicPreCalc@y^(0+256),w
  5359  044E  0754               	addwf	AsicPreCalc@x^(0+256),w
  5360  044F  0021               	movlb	1	; select bank1
  5361  0450  00AF               	movwf	??_AsicPreCalc^(0+128)
  5362  0451  0022               	movlb	2	; select bank2
  5363  0452  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  5364  0453  3D55               	addwfc	(AsicPreCalc@x+1)^(0+256),w
  5365  0454  0021               	movlb	1	; select bank1
  5366  0455  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5367  0456  0022               	movlb	2	; select bank2
  5368  0457  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  5369  0458  3D56               	addwfc	(AsicPreCalc@x+2)^(0+256),w
  5370  0459  0021               	movlb	1	; select bank1
  5371  045A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5372  045B  0022               	movlb	2	; select bank2
  5373  045C  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  5374  045D  3D57               	addwfc	(AsicPreCalc@x+3)^(0+256),w
  5375  045E  0021               	movlb	1	; select bank1
  5376  045F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5377  0460  0022               	movlb	2	; select bank2
  5378  0461  0358               	decf	AsicPreCalc@n^(0+256),w
  5379  0462  3AFF               	xorlw	255
  5380  0463  0021               	movlb	1	; select bank1
  5381  0464  00B3               	movwf	(??_AsicPreCalc+4)^(0+128)
  5382  0465  3001               	movlw	1
  5383  0466                     u4945:	
  5384  0466  35B3               	lslf	(??_AsicPreCalc+4)^(0+128),f
  5385  0467  3EFF               	addlw	-1
  5386  0468  1D03               	skipz
  5387  0469  2C66               	goto	u4945
  5388  046A  3533               	lslf	(??_AsicPreCalc+4)^(0+128),w
  5389  046B  3E1C               	addlw	28
  5390  046C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5391  046D  0086               	movwf	6
  5392  046E  3001               	movlw	1	; select bank2/3
  5393  046F  0087               	movwf	7
  5394  0470  082F               	movf	??_AsicPreCalc^(0+128),w
  5395  0471  0781               	addwf	1,f
  5396  0472  3141               	addfsr 1,1
  5397  0473  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5398  0474  3D81               	addwfc	1,f
  5399  0475  3141               	addfsr 1,1
  5400  0476  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5401  0477  3D81               	addwfc	1,f
  5402  0478  3141               	addfsr 1,1
  5403  0479  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5404  047A  3D81               	addwfc	1,f
  5405                           
  5406                           ;asic.c: 353: PrecalcHashes[2-n] = m[7-n];
  5407  047B  0022               	movlb	2	; select bank2
  5408  047C  0358               	decf	AsicPreCalc@n^(0+256),w
  5409  047D  3AFF               	xorlw	255
  5410  047E  0021               	movlb	1	; select bank1
  5411  047F  00AF               	movwf	??_AsicPreCalc^(0+128)
  5412  0480  3001               	movlw	1
  5413  0481                     u4955:	
  5414  0481  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5415  0482  3EFF               	addlw	-1
  5416  0483  1D03               	skipz
  5417  0484  2C81               	goto	u4955
  5418  0485  352F               	lslf	??_AsicPreCalc^(0+128),w
  5419  0486  3E1C               	addlw	28
  5420  0487  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5421  0488  0086               	movwf	6
  5422  0489  3001               	movlw	1	; select bank2/3
  5423  048A  0087               	movwf	7
  5424  048B  3F40               	moviw [0]fsr1
  5425  048C  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5426  048D  3F41               	moviw [1]fsr1
  5427  048E  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5428  048F  3F42               	moviw [2]fsr1
  5429  0490  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5430  0491  3F43               	moviw [3]fsr1
  5431  0492  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5432  0493  0022               	movlb	2	; select bank2
  5433  0494  0358               	decf	AsicPreCalc@n^(0+256),w
  5434  0495  3AFF               	xorlw	255
  5435  0496  0021               	movlb	1	; select bank1
  5436  0497  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5437  0498  3001               	movlw	1
  5438  0499                     u4965:	
  5439  0499  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5440  049A  3EFF               	addlw	-1
  5441  049B  1D03               	skipz
  5442  049C  2C99               	goto	u4965
  5443  049D  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5444  049E  3E08               	addlw	8
  5445  049F  3E40               	addlw	_PrecalcHashes& (0+255)
  5446  04A0  0086               	movwf	6
  5447  04A1  3003               	movlw	3	; select bank6/7
  5448  04A2  0087               	movwf	7
  5449  04A3  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5450  04A4  3FC0               	movwi [0]fsr1
  5451  04A5  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5452  04A6  3FC1               	movwi [1]fsr1
  5453  04A7  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5454  04A8  3FC2               	movwi [2]fsr1
  5455  04A9  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5456  04AA  3FC3               	movwi [3]fsr1
  5457                           
  5458                           ;asic.c: 354: PrecalcHashes[5-n] = m[3-n];
  5459  04AB  0022               	movlb	2	; select bank2
  5460  04AC  0358               	decf	AsicPreCalc@n^(0+256),w
  5461  04AD  3AFF               	xorlw	255
  5462  04AE  0021               	movlb	1	; select bank1
  5463  04AF  00AF               	movwf	??_AsicPreCalc^(0+128)
  5464  04B0  3001               	movlw	1
  5465  04B1                     u4975:	
  5466  04B1  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5467  04B2  3EFF               	addlw	-1
  5468  04B3  1D03               	skipz
  5469  04B4  2CB1               	goto	u4975
  5470  04B5  352F               	lslf	??_AsicPreCalc^(0+128),w
  5471  04B6  3E0C               	addlw	12
  5472  04B7  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5473  04B8  0086               	movwf	6
  5474  04B9  3001               	movlw	1	; select bank2/3
  5475  04BA  0087               	movwf	7
  5476  04BB  3F40               	moviw [0]fsr1
  5477  04BC  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5478  04BD  3F41               	moviw [1]fsr1
  5479  04BE  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5480  04BF  3F42               	moviw [2]fsr1
  5481  04C0  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5482  04C1  3F43               	moviw [3]fsr1
  5483  04C2  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5484  04C3  0022               	movlb	2	; select bank2
  5485  04C4  0358               	decf	AsicPreCalc@n^(0+256),w
  5486  04C5  3AFF               	xorlw	255
  5487  04C6  0021               	movlb	1	; select bank1
  5488  04C7  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5489  04C8  3001               	movlw	1
  5490  04C9                     u4985:	
  5491  04C9  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5492  04CA  3EFF               	addlw	-1
  5493  04CB  1D03               	skipz
  5494  04CC  2CC9               	goto	u4985
  5495  04CD  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5496  04CE  3E14               	addlw	20
  5497  04CF  3E40               	addlw	_PrecalcHashes& (0+255)
  5498  04D0  0086               	movwf	6
  5499  04D1  3003               	movlw	3	; select bank6/7
  5500  04D2  0087               	movwf	7
  5501  04D3  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5502  04D4  3FC0               	movwi [0]fsr1
  5503  04D5  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5504  04D6  3FC1               	movwi [1]fsr1
  5505  04D7  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5506  04D8  3FC2               	movwi [2]fsr1
  5507  04D9  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5508  04DA  3FC3               	movwi [3]fsr1
  5509  04DB  3001               	movlw	1
  5510  04DC  00AF               	movwf	??_AsicPreCalc^(0+128)
  5511  04DD  082F               	movf	??_AsicPreCalc^(0+128),w
  5512  04DE  0022               	movlb	2	; select bank2
  5513  04DF  07D8               	addwf	AsicPreCalc@n^(0+256),f
  5514  04E0  2864               	goto	L5
  5515  04E1                     __end_of_AsicPreCalc:	
  5516                           
  5517                           	psect	text9
  5518  1D10                     __ptext9:	
  5519 ;; *************** function _rotate *****************
  5520 ;; Defined at:
  5521 ;;		line 313 in file "asic.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  x               4    0[BANK1 ] unsigned long 
  5524 ;;  y               1    4[BANK1 ] unsigned char 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  4    0[BANK1 ] unsigned long 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5536 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;Total ram usage:       13 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    4
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_AsicPreCalc
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           
  5551                           ;psect for function _rotate
  5552  1D10                     _rotate:	
  5553                           
  5554                           ;asic.c: 314: return ((x<<y) | (x>>(32-y)));
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in _rotate: [wreg+status,2+status,0]
  5558  1D10  0021               	movlb	1	; select bank1
  5559  1D11  0820               	movf	rotate@x^(0+128),w
  5560  1D12  00A5               	movwf	??_rotate^(0+128)
  5561  1D13  0821               	movf	(rotate@x+1)^(0+128),w
  5562  1D14  00A6               	movwf	(??_rotate^(0+128)+1)
  5563  1D15  0822               	movf	(rotate@x+2)^(0+128),w
  5564  1D16  00A7               	movwf	(??_rotate^(0+128)+2)
  5565  1D17  0823               	movf	(rotate@x+3)^(0+128),w
  5566  1D18  00A8               	movwf	(??_rotate^(0+128)+3)
  5567  1D19  0324               	decf	rotate@y^(0+128),w
  5568  1D1A  3AFF               	xorlw	255
  5569  1D1B  3E20               	addlw	32
  5570  1D1C  0A89               	incf	9,f
  5571  1D1D  2D23               	goto	u4660
  5572  1D1E                     u4665:	
  5573  1D1E  1003               	clrc
  5574  1D1F  0CA8               	rrf	(??_rotate^(0+128)+3),f
  5575  1D20  0CA7               	rrf	(??_rotate^(0+128)+2),f
  5576  1D21  0CA6               	rrf	(??_rotate^(0+128)+1),f
  5577  1D22  0CA5               	rrf	??_rotate^(0+128),f
  5578  1D23                     u4660:	
  5579  1D23  3EFF               	addlw	-1
  5580  1D24  1D03               	skipz
  5581  1D25  2D1E               	goto	u4665
  5582  1D26  0820               	movf	rotate@x^(0+128),w
  5583  1D27  00A9               	movwf	(??_rotate+4)^(0+128)
  5584  1D28  0821               	movf	(rotate@x+1)^(0+128),w
  5585  1D29  00AA               	movwf	((??_rotate+4)^(0+128)+1)
  5586  1D2A  0822               	movf	(rotate@x+2)^(0+128),w
  5587  1D2B  00AB               	movwf	((??_rotate+4)^(0+128)+2)
  5588  1D2C  0823               	movf	(rotate@x+3)^(0+128),w
  5589  1D2D  00AC               	movwf	((??_rotate+4)^(0+128)+3)
  5590  1D2E  0A24               	incf	rotate@y^(0+128),w
  5591  1D2F  2D34               	goto	u4670
  5592  1D30                     u4675:	
  5593  1D30  35A9               	lslf	(??_rotate+4)^(0+128),f
  5594  1D31  0DAA               	rlf	((??_rotate+4)^(0+128)+1),f
  5595  1D32  0DAB               	rlf	((??_rotate+4)^(0+128)+2),f
  5596  1D33  0DAC               	rlf	((??_rotate+4)^(0+128)+3),f
  5597  1D34                     u4670:	
  5598  1D34  0B89               	decfsz	9,f
  5599  1D35  2D30               	goto	u4675
  5600  1D36  0829               	movf	(??_rotate+4)^(0+128),w
  5601  1D37  04A5               	iorwf	??_rotate^(0+128),f
  5602  1D38  082A               	movf	(??_rotate+5)^(0+128),w
  5603  1D39  04A6               	iorwf	(??_rotate^(0+128)+1),f
  5604  1D3A  082B               	movf	(??_rotate+6)^(0+128),w
  5605  1D3B  04A7               	iorwf	(??_rotate^(0+128)+2),f
  5606  1D3C  082C               	movf	(??_rotate+7)^(0+128),w
  5607  1D3D  04A8               	iorwf	(??_rotate^(0+128)+3),f
  5608  1D3E  0828               	movf	(??_rotate+3)^(0+128),w
  5609  1D3F  00A3               	movwf	(?_rotate+3)^(0+128)
  5610  1D40  0827               	movf	(??_rotate+2)^(0+128),w
  5611  1D41  00A2               	movwf	(?_rotate+2)^(0+128)
  5612  1D42  0826               	movf	(??_rotate+1)^(0+128),w
  5613  1D43  00A1               	movwf	(?_rotate+1)^(0+128)
  5614  1D44  0825               	movf	??_rotate^(0+128),w
  5615  1D45  00A0               	movwf	?_rotate^(0+128)
  5616  1D46  0008               	return
  5617  1D47                     __end_of_rotate:	
  5618                           
  5619                           	psect	text10
  5620  16D4                     __ptext10:	
  5621 ;; *************** function _SendAsicData *****************
  5622 ;; Defined at:
  5623 ;;		line 36 in file "asic.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  work            2    2[BANK1 ] PTR struct _worktask
  5626 ;;		 -> WorkQue(180), 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;		None               void
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5638 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;Total ram usage:        6 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    5
  5645 ;; This function calls:
  5646 ;;		_Send32
  5647 ;; This function is called by:
  5648 ;;		_AsicPushWork
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _SendAsicData
  5654  16D4                     _SendAsicData:	
  5655                           
  5656                           ;asic.c: 37: GIE = 0;
  5657                           
  5658                           ;incstack = 0
  5659                           ; Regs used in _SendAsicData: [wreg+status,2+status,0+pclath+cstack]
  5660  16D4  138B               	bcf	11,7	;volatile
  5661                           
  5662                           ;asic.c: 38: last_bit0 = 0x48; last_bit1 = 0x90;
  5663  16D5  3048               	movlw	72
  5664  16D6  0021               	movlb	1	; select bank1
  5665  16D7  00A4               	movwf	??_SendAsicData^(0+128)
  5666  16D8  0824               	movf	??_SendAsicData^(0+128),w
  5667  16D9  0022               	movlb	2	; select bank2
  5668  16DA  00EC               	movwf	_last_bit0^(0+256)
  5669  16DB  3090               	movlw	144
  5670  16DC  0021               	movlb	1	; select bank1
  5671  16DD  00A4               	movwf	??_SendAsicData^(0+128)
  5672  16DE  0824               	movf	??_SendAsicData^(0+128),w
  5673  16DF  0022               	movlb	2	; select bank2
  5674  16E0  00ED               	movwf	_last_bit1^(0+256)
  5675                           
  5676                           ;asic.c: 39: send32_data = (WORD)&ClockCfg; send32_count = 2;
  5677  16E1  30B9               	movlw	low _ClockCfg
  5678  16E2  00DD               	movwf	_send32_data^(0+256)
  5679  16E3  3001               	movlw	high _ClockCfg
  5680  16E4  00DE               	movwf	(_send32_data+1)^(0+256)
  5681  16E5  3002               	movlw	2
  5682  16E6  0021               	movlb	1	; select bank1
  5683  16E7  00A4               	movwf	??_SendAsicData^(0+128)
  5684  16E8  0824               	movf	??_SendAsicData^(0+128),w
  5685  16E9  0022               	movlb	2	; select bank2
  5686  16EA  00EF               	movwf	_send32_count^(0+256)
  5687                           
  5688                           ;asic.c: 40: Send32();
  5689  16EB  3188  20D2  3196   	fcall	_Send32
  5690                           
  5691                           ;asic.c: 41: send32_data = (WORD)&work->Merkle; send32_count = 3;
  5692  16EE  0021               	movlb	1	; select bank1
  5693  16EF  0822               	movf	SendAsicData@work^(0+128),w
  5694  16F0  3E21               	addlw	33
  5695  16F1  0022               	movlb	2	; select bank2
  5696  16F2  00DD               	movwf	_send32_data^(0+256)
  5697  16F3  3000               	movlw	0
  5698  16F4  0021               	movlb	1	; select bank1
  5699  16F5  3D23               	addwfc	(SendAsicData@work+1)^(0+128),w
  5700  16F6  0022               	movlb	2	; select bank2
  5701  16F7  00DE               	movwf	(_send32_data+1)^(0+256)
  5702  16F8  3003               	movlw	3
  5703  16F9  0021               	movlb	1	; select bank1
  5704  16FA  00A4               	movwf	??_SendAsicData^(0+128)
  5705  16FB  0824               	movf	??_SendAsicData^(0+128),w
  5706  16FC  0022               	movlb	2	; select bank2
  5707  16FD  00EF               	movwf	_send32_count^(0+256)
  5708                           
  5709                           ;asic.c: 42: Send32();
  5710  16FE  3188  20D2  3196   	fcall	_Send32
  5711                           
  5712                           ;asic.c: 43: send32_data = (WORD)&PrecalcHashes[1]; send32_count = 5;
  5713  1701  3044               	movlw	low (_PrecalcHashes+4)
  5714  1702  0022               	movlb	2	; select bank2
  5715  1703  00DD               	movwf	_send32_data^(0+256)
  5716  1704  3003               	movlw	high (_PrecalcHashes+4)
  5717  1705  00DE               	movwf	(_send32_data+1)^(0+256)
  5718  1706  3005               	movlw	5
  5719  1707  0021               	movlb	1	; select bank1
  5720  1708  00A4               	movwf	??_SendAsicData^(0+128)
  5721  1709  0824               	movf	??_SendAsicData^(0+128),w
  5722  170A  0022               	movlb	2	; select bank2
  5723  170B  00EF               	movwf	_send32_count^(0+256)
  5724                           
  5725                           ;asic.c: 44: Send32();
  5726  170C  3188  20D2  3196   	fcall	_Send32
  5727                           
  5728                           ;asic.c: 45: send32_data = (WORD)&work->MidState; send32_count = 8;
  5729  170F  0021               	movlb	1	; select bank1
  5730  1710  0822               	movf	SendAsicData@work^(0+128),w
  5731  1711  3E01               	addlw	1
  5732  1712  0022               	movlb	2	; select bank2
  5733  1713  00DD               	movwf	_send32_data^(0+256)
  5734  1714  3000               	movlw	0
  5735  1715  0021               	movlb	1	; select bank1
  5736  1716  3D23               	addwfc	(SendAsicData@work+1)^(0+128),w
  5737  1717  0022               	movlb	2	; select bank2
  5738  1718  00DE               	movwf	(_send32_data+1)^(0+256)
  5739  1719  3008               	movlw	8
  5740  171A  0021               	movlb	1	; select bank1
  5741  171B  00A4               	movwf	??_SendAsicData^(0+128)
  5742  171C  0824               	movf	??_SendAsicData^(0+128),w
  5743  171D  0022               	movlb	2	; select bank2
  5744  171E  00EF               	movwf	_send32_count^(0+256)
  5745                           
  5746                           ;asic.c: 46: Send32();
  5747  171F  3188  20D2  3196   	fcall	_Send32
  5748                           
  5749                           ;asic.c: 47: send32_data = (WORD)&PrecalcHashes; send32_count = 1;
  5750  1722  3040               	movlw	low _PrecalcHashes
  5751  1723  0022               	movlb	2	; select bank2
  5752  1724  00DD               	movwf	_send32_data^(0+256)
  5753  1725  3003               	movlw	high _PrecalcHashes
  5754  1726  00DE               	movwf	(_send32_data+1)^(0+256)
  5755  1727  01EF               	clrf	_send32_count^(0+256)
  5756  1728  0AEF               	incf	_send32_count^(0+256),f
  5757                           
  5758                           ;asic.c: 48: Send32();
  5759  1729  3188  20D2  3196   	fcall	_Send32
  5760                           
  5761                           ;asic.c: 49: last_bit0 = last_bit1 = 0x50;
  5762  172C  3050               	movlw	80
  5763  172D  0022               	movlb	2	; select bank2
  5764  172E  00ED               	movwf	_last_bit1^(0+256)
  5765  172F  0021               	movlb	1	; select bank1
  5766  1730  00A4               	movwf	??_SendAsicData^(0+128)
  5767  1731  0824               	movf	??_SendAsicData^(0+128),w
  5768  1732  0022               	movlb	2	; select bank2
  5769  1733  00EC               	movwf	_last_bit0^(0+256)
  5770                           
  5771                           ;asic.c: 50: send32_data = (WORD)&NonceRanges; send32_count = BankSize;
  5772  1734  3020               	movlw	low _NonceRanges
  5773  1735  00DD               	movwf	_send32_data^(0+256)
  5774  1736  3003               	movlw	high _NonceRanges
  5775  1737  00DE               	movwf	(_send32_data+1)^(0+256)
  5776  1738  0023               	movlb	3	; select bank3
  5777  1739  0869               	movf	_BankSize^(0+384),w
  5778  173A  0021               	movlb	1	; select bank1
  5779  173B  00A4               	movwf	??_SendAsicData^(0+128)
  5780  173C  0824               	movf	??_SendAsicData^(0+128),w
  5781  173D  0022               	movlb	2	; select bank2
  5782  173E  00EF               	movwf	_send32_count^(0+256)
  5783                           
  5784                           ;asic.c: 51: Send32();
  5785  173F  3188  20D2         	fcall	_Send32
  5786                           
  5787                           ;asic.c: 52: LATC = 0xD8;;
  5788  1741  30D8               	movlw	216
  5789  1742  0022               	movlb	2	; select bank2
  5790  1743  008E               	movwf	14	;volatile
  5791                           
  5792                           ;asic.c: 53: GIE = 1;
  5793  1744  178B               	bsf	11,7	;volatile
  5794                           
  5795                           ;asic.c: 54: ClockCfg[0] = ClockCfg[0] & ~0x00000002;
  5796  1745  30FD               	movlw	253
  5797  1746  0023               	movlb	3	; select bank3
  5798  1747  0539               	andwf	_ClockCfg^(0+384),w
  5799  1748  0021               	movlb	1	; select bank1
  5800  1749  00A4               	movwf	??_SendAsicData^(0+128)
  5801  174A  30FF               	movlw	255
  5802  174B  0023               	movlb	3	; select bank3
  5803  174C  053A               	andwf	(_ClockCfg+1)^(0+384),w
  5804  174D  0021               	movlb	1	; select bank1
  5805  174E  00A5               	movwf	(??_SendAsicData^(0+128)+1)
  5806  174F  30FF               	movlw	255
  5807  1750  0023               	movlb	3	; select bank3
  5808  1751  053B               	andwf	(_ClockCfg+2)^(0+384),w
  5809  1752  0021               	movlb	1	; select bank1
  5810  1753  00A6               	movwf	(??_SendAsicData^(0+128)+2)
  5811  1754  30FF               	movlw	255
  5812  1755  0023               	movlb	3	; select bank3
  5813  1756  053C               	andwf	(_ClockCfg+3)^(0+384),w
  5814  1757  0021               	movlb	1	; select bank1
  5815  1758  00A7               	movwf	(??_SendAsicData^(0+128)+3)
  5816  1759  0827               	movf	(??_SendAsicData+3)^(0+128),w
  5817  175A  0023               	movlb	3	; select bank3
  5818  175B  00BC               	movwf	(_ClockCfg+3)^(0+384)
  5819  175C  0021               	movlb	1	; select bank1
  5820  175D  0826               	movf	(??_SendAsicData+2)^(0+128),w
  5821  175E  0023               	movlb	3	; select bank3
  5822  175F  00BB               	movwf	(_ClockCfg+2)^(0+384)
  5823  1760  0021               	movlb	1	; select bank1
  5824  1761  0825               	movf	(??_SendAsicData+1)^(0+128),w
  5825  1762  0023               	movlb	3	; select bank3
  5826  1763  00BA               	movwf	(_ClockCfg+1)^(0+384)
  5827  1764  0021               	movlb	1	; select bank1
  5828  1765  0824               	movf	??_SendAsicData^(0+128),w
  5829  1766  0023               	movlb	3	; select bank3
  5830  1767  00B9               	movwf	_ClockCfg^(0+384)
  5831  1768  0008               	return
  5832  1769                     __end_of_SendAsicData:	
  5833                           
  5834                           	psect	text11
  5835  08D2                     __ptext11:	
  5836 ;; *************** function _Send32 *****************
  5837 ;; Defined at:
  5838 ;;		line 58 in file "asic.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;		None               void
  5845 ;; Registers used:
  5846 ;;		None
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    4
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_SendAsicData
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           
  5867                           ;psect for function _Send32
  5868  08D2                     _Send32:	
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in _Send32: []
  5872  08D2  0022               	banksel	270	;# 
  5873  08D3  085D               	movf	_send32_data& (0+127),w	;# 
  5874  08D4  0086               	movwf	6	;# 
  5875  08D5  085E               	movf	(_send32_data+1)& (0+127),w	;# 
  5876  08D6  0087               	movwf	7	;# 
  5877  08D7                     next_word:	
  5878                           
  5879                           ;# 
  5880  08D7  3048               	movlw	72	;# 
  5881  08D8  018E               	clrf	14	;# 
  5882  08D9  1801               	btfsc	1,0	;# 
  5883  08DA  3090               	movlw	144	;# 
  5884  08DB  008E               	movwf	14	;# 
  5885  08DC  3048               	movlw	72	;# 
  5886  08DD  018E               	clrf	14	;# 
  5887  08DE  1881               	btfsc	1,1	;# 
  5888  08DF  3090               	movlw	144	;# 
  5889  08E0  008E               	movwf	14	;# 
  5890  08E1  3048               	movlw	72	;# 
  5891  08E2  018E               	clrf	14	;# 
  5892  08E3  1901               	btfsc	1,2	;# 
  5893  08E4  3090               	movlw	144	;# 
  5894  08E5  008E               	movwf	14	;# 
  5895  08E6  3048               	movlw	72	;# 
  5896  08E7  018E               	clrf	14	;# 
  5897  08E8  1981               	btfsc	1,3	;# 
  5898  08E9  3090               	movlw	144	;# 
  5899  08EA  008E               	movwf	14	;# 
  5900  08EB  3048               	movlw	72	;# 
  5901  08EC  018E               	clrf	14	;# 
  5902  08ED  1A01               	btfsc	1,4	;# 
  5903  08EE  3090               	movlw	144	;# 
  5904  08EF  008E               	movwf	14	;# 
  5905  08F0  3048               	movlw	72	;# 
  5906  08F1  018E               	clrf	14	;# 
  5907  08F2  1A81               	btfsc	1,5	;# 
  5908  08F3  3090               	movlw	144	;# 
  5909  08F4  008E               	movwf	14	;# 
  5910  08F5  3048               	movlw	72	;# 
  5911  08F6  018E               	clrf	14	;# 
  5912  08F7  1B01               	btfsc	1,6	;# 
  5913  08F8  3090               	movlw	144	;# 
  5914  08F9  008E               	movwf	14	;# 
  5915  08FA  3048               	movlw	72	;# 
  5916  08FB  018E               	clrf	14	;# 
  5917  08FC  1B81               	btfsc	1,7	;# 
  5918  08FD  3090               	movlw	144	;# 
  5919  08FE  008E               	movwf	14	;# 
  5920  08FF  3141               	addfsr 1,1	;# 
  5921  0900  3048               	movlw	72	;# 
  5922  0901  018E               	clrf	14	;# 
  5923  0902  1801               	btfsc	1,0	;# 
  5924  0903  3090               	movlw	144	;# 
  5925  0904  008E               	movwf	14	;# 
  5926  0905  3048               	movlw	72	;# 
  5927  0906  018E               	clrf	14	;# 
  5928  0907  1881               	btfsc	1,1	;# 
  5929  0908  3090               	movlw	144	;# 
  5930  0909  008E               	movwf	14	;# 
  5931  090A  3048               	movlw	72	;# 
  5932  090B  018E               	clrf	14	;# 
  5933  090C  1901               	btfsc	1,2	;# 
  5934  090D  3090               	movlw	144	;# 
  5935  090E  008E               	movwf	14	;# 
  5936  090F  3048               	movlw	72	;# 
  5937  0910  018E               	clrf	14	;# 
  5938  0911  1981               	btfsc	1,3	;# 
  5939  0912  3090               	movlw	144	;# 
  5940  0913  008E               	movwf	14	;# 
  5941  0914  3048               	movlw	72	;# 
  5942  0915  018E               	clrf	14	;# 
  5943  0916  1A01               	btfsc	1,4	;# 
  5944  0917  3090               	movlw	144	;# 
  5945  0918  008E               	movwf	14	;# 
  5946  0919  3048               	movlw	72	;# 
  5947  091A  018E               	clrf	14	;# 
  5948  091B  1A81               	btfsc	1,5	;# 
  5949  091C  3090               	movlw	144	;# 
  5950  091D  008E               	movwf	14	;# 
  5951  091E  3048               	movlw	72	;# 
  5952  091F  018E               	clrf	14	;# 
  5953  0920  1B01               	btfsc	1,6	;# 
  5954  0921  3090               	movlw	144	;# 
  5955  0922  008E               	movwf	14	;# 
  5956  0923  3048               	movlw	72	;# 
  5957  0924  018E               	clrf	14	;# 
  5958  0925  1B81               	btfsc	1,7	;# 
  5959  0926  3090               	movlw	144	;# 
  5960  0927  008E               	movwf	14	;# 
  5961  0928  3141               	addfsr 1,1	;# 
  5962  0929  3048               	movlw	72	;# 
  5963  092A  018E               	clrf	14	;# 
  5964  092B  1801               	btfsc	1,0	;# 
  5965  092C  3090               	movlw	144	;# 
  5966  092D  008E               	movwf	14	;# 
  5967  092E  3048               	movlw	72	;# 
  5968  092F  018E               	clrf	14	;# 
  5969  0930  1881               	btfsc	1,1	;# 
  5970  0931  3090               	movlw	144	;# 
  5971  0932  008E               	movwf	14	;# 
  5972  0933  3048               	movlw	72	;# 
  5973  0934  018E               	clrf	14	;# 
  5974  0935  1901               	btfsc	1,2	;# 
  5975  0936  3090               	movlw	144	;# 
  5976  0937  008E               	movwf	14	;# 
  5977  0938  3048               	movlw	72	;# 
  5978  0939  018E               	clrf	14	;# 
  5979  093A  1981               	btfsc	1,3	;# 
  5980  093B  3090               	movlw	144	;# 
  5981  093C  008E               	movwf	14	;# 
  5982  093D  3048               	movlw	72	;# 
  5983  093E  018E               	clrf	14	;# 
  5984  093F  1A01               	btfsc	1,4	;# 
  5985  0940  3090               	movlw	144	;# 
  5986  0941  008E               	movwf	14	;# 
  5987  0942  3048               	movlw	72	;# 
  5988  0943  018E               	clrf	14	;# 
  5989  0944  1A81               	btfsc	1,5	;# 
  5990  0945  3090               	movlw	144	;# 
  5991  0946  008E               	movwf	14	;# 
  5992  0947  3048               	movlw	72	;# 
  5993  0948  018E               	clrf	14	;# 
  5994  0949  1B01               	btfsc	1,6	;# 
  5995  094A  3090               	movlw	144	;# 
  5996  094B  008E               	movwf	14	;# 
  5997  094C  3048               	movlw	72	;# 
  5998  094D  018E               	clrf	14	;# 
  5999  094E  1B81               	btfsc	1,7	;# 
  6000  094F  3090               	movlw	144	;# 
  6001  0950  008E               	movwf	14	;# 
  6002  0951  3141               	addfsr 1,1	;# 
  6003  0952  3048               	movlw	72	;# 
  6004  0953  018E               	clrf	14	;# 
  6005  0954  1801               	btfsc	1,0	;# 
  6006  0955  3090               	movlw	144	;# 
  6007  0956  008E               	movwf	14	;# 
  6008  0957  3048               	movlw	72	;# 
  6009  0958  018E               	clrf	14	;# 
  6010  0959  1881               	btfsc	1,1	;# 
  6011  095A  3090               	movlw	144	;# 
  6012  095B  008E               	movwf	14	;# 
  6013  095C  3048               	movlw	72	;# 
  6014  095D  018E               	clrf	14	;# 
  6015  095E  1901               	btfsc	1,2	;# 
  6016  095F  3090               	movlw	144	;# 
  6017  0960  008E               	movwf	14	;# 
  6018  0961  3048               	movlw	72	;# 
  6019  0962  018E               	clrf	14	;# 
  6020  0963  1981               	btfsc	1,3	;# 
  6021  0964  3090               	movlw	144	;# 
  6022  0965  008E               	movwf	14	;# 
  6023  0966  3048               	movlw	72	;# 
  6024  0967  018E               	clrf	14	;# 
  6025  0968  1A01               	btfsc	1,4	;# 
  6026  0969  3090               	movlw	144	;# 
  6027  096A  008E               	movwf	14	;# 
  6028  096B  3048               	movlw	72	;# 
  6029  096C  018E               	clrf	14	;# 
  6030  096D  1A81               	btfsc	1,5	;# 
  6031  096E  3090               	movlw	144	;# 
  6032  096F  008E               	movwf	14	;# 
  6033  0970  3048               	movlw	72	;# 
  6034  0971  018E               	clrf	14	;# 
  6035  0972  1B01               	btfsc	1,6	;# 
  6036  0973  3090               	movlw	144	;# 
  6037  0974  008E               	movwf	14	;# 
  6038  0975  086C               	movf	_last_bit0& (0+127),w	;# 
  6039  0976  018E               	clrf	14	;# 
  6040  0977  1B81               	btfsc	1,7	;# 
  6041  0978  086D               	movf	_last_bit1& (0+127),w	;# 
  6042  0979  008E               	movwf	14	;# 
  6043  097A  3141               	addfsr 1,1	;# 
  6044  097B  0BEF               	decfsz	_send32_count& (0+127),f	;# 
  6045  097C  28D7               	goto	next_word	;# 
  6046  097D  0008               	return
  6047  097E                     __end_of_Send32:	
  6048                           
  6049                           	psect	text12
  6050  1BBD                     __ptext12:	
  6051 ;; *************** function _InitializeSystem *****************
  6052 ;; Defined at:
  6053 ;;		line 146 in file "main.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;		None
  6058 ;; Return value:  Size  Location     Type
  6059 ;;		None               void
  6060 ;; Registers used:
  6061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;Total ram usage:        0 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    7
  6074 ;; This function calls:
  6075 ;;		_USBDeviceInit
  6076 ;;		_UserInit
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _InitializeSystem
  6084  1BBD                     _InitializeSystem:	
  6085                           
  6086                           ;main.c: 148: ANSELA = 0x00;
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _InitializeSystem: [allreg]
  6090  1BBD  0023               	movlb	3	; select bank3
  6091  1BBE  018C               	clrf	12	;volatile
  6092                           
  6093                           ;main.c: 149: ANSELB = 0x00;
  6094  1BBF  018D               	clrf	13	;volatile
  6095                           
  6096                           ;main.c: 150: ANSELC = 0x04;
  6097  1BC0  3004               	movlw	4
  6098  1BC1  008E               	movwf	14	;volatile
  6099                           
  6100                           ;main.c: 153: OSCTUNE = 0;
  6101  1BC2  0021               	movlb	1	; select bank1
  6102  1BC3  0198               	clrf	24	;volatile
  6103                           
  6104                           ;main.c: 154: OSCCON = 0xFC;
  6105  1BC4  30FC               	movlw	252
  6106  1BC5  0099               	movwf	25	;volatile
  6107                           
  6108                           ;main.c: 155: ACTCON = 0x90;
  6109  1BC6  3090               	movlw	144
  6110  1BC7  0027               	movlb	7	; select bank7
  6111  1BC8  009B               	movwf	27	;volatile
  6112                           
  6113                           ;main.c: 158: USBGenericOutHandle = 0;
  6114  1BC9  0022               	movlb	2	; select bank2
  6115  1BCA  01E8               	clrf	_USBGenericOutHandle^(0+256)
  6116                           
  6117                           ;main.c: 159: USBGenericInHandle = 0;
  6118  1BCB  01E7               	clrf	_USBGenericInHandle^(0+256)
  6119                           
  6120                           ;main.c: 160: WQI = WQX = 0;
  6121  1BCC  0020               	movlb	0	; select bank0
  6122  1BCD  01ED               	clrf	_WQX
  6123  1BCE  0021               	movlb	1	; select bank1
  6124  1BCF  01EF               	clrf	_WQI^(0+128)
  6125                           
  6126                           ;main.c: 162: UserInit();
  6127  1BD0  319B  2336  319B   	fcall	_UserInit
  6128                           
  6129                           ;main.c: 164: USBDeviceInit();
  6130  1BD3  3189  217E         	fcall	_USBDeviceInit
  6131  1BD5  0008               	return
  6132  1BD6                     __end_of_InitializeSystem:	
  6133                           
  6134                           	psect	text13
  6135  1B36                     __ptext13:	
  6136 ;; *************** function _UserInit *****************
  6137 ;; Defined at:
  6138 ;;		line 170 in file "main.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;		None               void
  6145 ;; Registers used:
  6146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;Total ram usage:        0 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    6
  6159 ;; This function calls:
  6160 ;;		_DetectAsics
  6161 ;;		_InitFAN
  6162 ;;		_InitTempSensor
  6163 ;;		_InitWorkTick
  6164 ;;		_InitResultRx
  6165 ;; This function is called by:
  6166 ;;		_InitializeSystem
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _UserInit
  6172  1B36                     _UserInit:	
  6173                           
  6174                           ;main.c: 171: TRISAbits.TRISA5 = 0; LATAbits.LATA5 = 1;;
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in _UserInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6178  1B36  0021               	movlb	1	; select bank1
  6179  1B37  128C               	bcf	12,5	;volatile
  6180  1B38  0022               	movlb	2	; select bank2
  6181  1B39  168C               	bsf	12,5	;volatile
  6182                           
  6183                           ;main.c: 172: InitTempSensor();
  6184  1B3A  319B  235E  319B   	fcall	_InitTempSensor
  6185                           
  6186                           ;main.c: 173: InitFAN();
  6187  1B3D  319B  23D6  319B   	fcall	_InitFAN
  6188                           
  6189                           ;main.c: 174: InitWorkTick();
  6190  1B40  319B  2349  319B   	fcall	_InitWorkTick
  6191                           
  6192                           ;main.c: 176: InitResultRx();
  6193  1B43  319B  2323  319B   	fcall	_InitResultRx
  6194                           
  6195                           ;main.c: 177: DetectAsics();
  6196  1B46  318C  2447         	fcall	_DetectAsics
  6197  1B48  0008               	return
  6198  1B49                     __end_of_UserInit:	
  6199                           
  6200                           	psect	text14
  6201  1B23                     __ptext14:	
  6202 ;; *************** function _InitResultRx *****************
  6203 ;; Defined at:
  6204 ;;		line 313 in file "klondike.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;		None               void
  6211 ;; Registers used:
  6212 ;;		wreg, status,2
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    4
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_UserInit
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           
  6233                           ;psect for function _InitResultRx
  6234  1B23                     _InitResultRx:	
  6235                           
  6236                           ;klondike.c: 314: ResultQC = 0;
  6237                           
  6238                           ;incstack = 0
  6239                           ; Regs used in _InitResultRx: [wreg+status,2]
  6240  1B23  0022               	movlb	2	; select bank2
  6241  1B24  01E3               	clrf	_ResultQC^(0+256)
  6242                           
  6243                           ;klondike.c: 315: TXSTAbits.SYNC = 1;
  6244  1B25  0023               	movlb	3	; select bank3
  6245  1B26  161E               	bsf	30,4	;volatile
  6246                           
  6247                           ;klondike.c: 316: RCSTAbits.SPEN = 1;
  6248  1B27  179D               	bsf	29,7	;volatile
  6249                           
  6250                           ;klondike.c: 317: TXSTAbits.CSRC = 0;
  6251  1B28  139E               	bcf	30,7	;volatile
  6252                           
  6253                           ;klondike.c: 318: BAUDCONbits.SCKP = 0;
  6254  1B29  121F               	bcf	31,4	;volatile
  6255                           
  6256                           ;klondike.c: 319: BAUDCONbits.BRG16 = 1;
  6257  1B2A  159F               	bsf	31,3	;volatile
  6258                           
  6259                           ;klondike.c: 320: ANSELBbits.ANSB5 = 0;
  6260  1B2B  128D               	bcf	13,5	;volatile
  6261                           
  6262                           ;klondike.c: 321: IOCBPbits.IOCBP7 = 1;
  6263  1B2C  0027               	movlb	7	; select bank7
  6264  1B2D  1794               	bsf	20,7	;volatile
  6265                           
  6266                           ;klondike.c: 322: INTCONbits.IOCIE = 1;
  6267  1B2E  158B               	bsf	11,3	;volatile
  6268                           
  6269                           ;klondike.c: 323: IOCBF = 0;
  6270  1B2F  0196               	clrf	22	;volatile
  6271                           
  6272                           ;klondike.c: 324: INTCONbits.GIE = 1;
  6273  1B30  178B               	bsf	11,7	;volatile
  6274                           
  6275                           ;klondike.c: 325: RCSTAbits.CREN = 1;
  6276  1B31  0023               	movlb	3	; select bank3
  6277  1B32  161D               	bsf	29,4	;volatile
  6278                           
  6279                           ;klondike.c: 326: RCREG = 0xFF;
  6280  1B33  30FF               	movlw	255
  6281  1B34  0099               	movwf	25	;volatile
  6282  1B35  0008               	return
  6283  1B36                     __end_of_InitResultRx:	
  6284                           
  6285                           	psect	text15
  6286  1B49                     __ptext15:	
  6287 ;; *************** function _InitWorkTick *****************
  6288 ;; Defined at:
  6289 ;;		line 297 in file "klondike.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;		None               void
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    4
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_UserInit
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           
  6318                           ;psect for function _InitWorkTick
  6319  1B49                     _InitWorkTick:	
  6320                           
  6321                           ;klondike.c: 298: TMR0CS = 0;
  6322                           
  6323                           ;incstack = 0
  6324                           ; Regs used in _InitWorkTick: [wreg+status,2+status,0]
  6325  1B49  0021               	movlb	1	; select bank1
  6326  1B4A  1295               	bcf	21,5	;volatile
  6327                           
  6328                           ;klondike.c: 299: OPTION_REGbits.PSA = 0;
  6329  1B4B  1195               	bcf	21,3	;volatile
  6330                           
  6331                           ;klondike.c: 300: OPTION_REGbits.PS = 7;
  6332  1B4C  3007               	movlw	7
  6333  1B4D  0495               	iorwf	21,f	;volatile
  6334                           
  6335                           ;klondike.c: 301: TMR0 = HashTime;
  6336  1B4E  0020               	movlb	0	; select bank0
  6337  1B4F  086E               	movf	_HashTime,w
  6338  1B50  0095               	movwf	21	;volatile
  6339                           
  6340                           ;klondike.c: 303: TRISCbits.TRISC7 = 0;
  6341  1B51  0021               	movlb	1	; select bank1
  6342  1B52  138E               	bcf	14,7	;volatile
  6343                           
  6344                           ;klondike.c: 304: TRISCbits.TRISC6 = 0;
  6345  1B53  130E               	bcf	14,6	;volatile
  6346                           
  6347                           ;klondike.c: 305: TRISCbits.TRISC4 = 0;
  6348  1B54  120E               	bcf	14,4	;volatile
  6349                           
  6350                           ;klondike.c: 306: TRISCbits.TRISC3 = 0;
  6351  1B55  118E               	bcf	14,3	;volatile
  6352                           
  6353                           ;klondike.c: 307: LATC = 0xD8;;
  6354  1B56  30D8               	movlw	216
  6355  1B57  0022               	movlb	2	; select bank2
  6356  1B58  008E               	movwf	14	;volatile
  6357                           
  6358                           ;klondike.c: 308: TRISAbits.TRISA4 = 0;
  6359  1B59  0021               	movlb	1	; select bank1
  6360  1B5A  120C               	bcf	12,4	;volatile
  6361                           
  6362                           ;klondike.c: 309: LATAbits.LATA4 = 0;
  6363  1B5B  0022               	movlb	2	; select bank2
  6364  1B5C  120C               	bcf	12,4	;volatile
  6365  1B5D  0008               	return
  6366  1B5E                     __end_of_InitWorkTick:	
  6367                           
  6368                           	psect	text16
  6369  1B5E                     __ptext16:	
  6370 ;; *************** function _InitTempSensor *****************
  6371 ;; Defined at:
  6372 ;;		line 283 in file "klondike.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;		None               void
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;Total ram usage:        1 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    4
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_UserInit
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           
  6401                           ;psect for function _InitTempSensor
  6402  1B5E                     _InitTempSensor:	
  6403                           
  6404                           ;klondike.c: 284: TRISCbits.TRISC2=1;
  6405                           
  6406                           ;incstack = 0
  6407                           ; Regs used in _InitTempSensor: [wreg+status,2+status,0]
  6408  1B5E  0021               	movlb	1	; select bank1
  6409  1B5F  150E               	bsf	14,2	;volatile
  6410                           
  6411                           ;klondike.c: 287: ADCON0bits.CHS = 6;
  6412  1B60  081D               	movf	29,w	;volatile
  6413  1B61  3983               	andlw	-125
  6414  1B62  3818               	iorlw	24
  6415  1B63  009D               	movwf	29	;volatile
  6416                           
  6417                           ;klondike.c: 288: ADCON0bits.ADON = 1;
  6418  1B64  141D               	bsf	29,0	;volatile
  6419                           
  6420                           ;klondike.c: 289: ADCON1bits.ADFM = 0;
  6421  1B65  139E               	bcf	30,7	;volatile
  6422                           
  6423                           ;klondike.c: 290: ADCON1bits.ADCS = 6;
  6424  1B66  081E               	movf	30,w	;volatile
  6425  1B67  398F               	andlw	-113
  6426  1B68  3860               	iorlw	96
  6427  1B69  009E               	movwf	30	;volatile
  6428                           
  6429                           ;klondike.c: 291: ADCON1bits.ADPREF = 0;
  6430  1B6A  30FC               	movlw	-4
  6431  1B6B  059E               	andwf	30,f	;volatile
  6432                           
  6433                           ;klondike.c: 292: ADCON2bits.TRIGSEL = 0;
  6434  1B6C  308F               	movlw	-113
  6435  1B6D  059F               	andwf	31,f	;volatile
  6436                           
  6437                           ;klondike.c: 293: TempTarget = 143;
  6438  1B6E  308F               	movlw	143
  6439  1B6F  0020               	movlb	0	; select bank0
  6440  1B70  00DE               	movwf	??_InitTempSensor
  6441  1B71  085E               	movf	??_InitTempSensor,w
  6442  1B72  0023               	movlb	3	; select bank3
  6443  1B73  00E8               	movwf	_TempTarget^(0+384)
  6444  1B74  0008               	return
  6445  1B75                     __end_of_InitTempSensor:	
  6446                           
  6447                           	psect	text17
  6448  1BD6                     __ptext17:	
  6449 ;; *************** function _InitFAN *****************
  6450 ;; Defined at:
  6451 ;;		line 263 in file "klondike.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;		None
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;		None               void
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    4
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_UserInit
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           
  6480                           ;psect for function _InitFAN
  6481  1BD6                     _InitFAN:	
  6482                           
  6483                           ;klondike.c: 264: TRISCbits.TRISC5 = 1;
  6484                           
  6485                           ;incstack = 0
  6486                           ; Regs used in _InitFAN: [wreg+status,2+status,0]
  6487  1BD6  0021               	movlb	1	; select bank1
  6488  1BD7  168E               	bsf	14,5	;volatile
  6489                           
  6490                           ;klondike.c: 265: PWM1CON = 0;
  6491  1BD8  002C               	movlb	12	; select bank12
  6492  1BD9  0193               	clrf	19	;volatile
  6493                           
  6494                           ;klondike.c: 266: PR2 = 0xFF;
  6495  1BDA  30FF               	movlw	255
  6496  1BDB  0020               	movlb	0	; select bank0
  6497  1BDC  009B               	movwf	27	;volatile
  6498                           
  6499                           ;klondike.c: 267: PWM1CON = 0xC0;
  6500  1BDD  30C0               	movlw	192
  6501  1BDE  002C               	movlb	12	; select bank12
  6502  1BDF  0093               	movwf	19	;volatile
  6503                           
  6504                           ;klondike.c: 268: PWM1DCH = FanLevel = 230;
  6505  1BE0  30E6               	movlw	230
  6506  1BE1  0023               	movlb	3	; select bank3
  6507  1BE2  00E7               	movwf	_FanLevel^(0+384)
  6508  1BE3  002C               	movlb	12	; select bank12
  6509  1BE4  0092               	movwf	18	;volatile
  6510                           
  6511                           ;klondike.c: 269: PWM1DCL = 0;
  6512  1BE5  0191               	clrf	17	;volatile
  6513                           
  6514                           ;klondike.c: 270: TMR2IF = 0;
  6515  1BE6  0020               	movlb	0	; select bank0
  6516  1BE7  1091               	bcf	17,1	;volatile
  6517                           
  6518                           ;klondike.c: 271: T2CONbits.T2CKPS = 1;
  6519  1BE8  081C               	movf	28,w	;volatile
  6520  1BE9  39FC               	andlw	-4
  6521  1BEA  3801               	iorlw	1
  6522  1BEB  009C               	movwf	28	;volatile
  6523                           
  6524                           ;klondike.c: 272: TMR2ON = 1;
  6525  1BEC  151C               	bsf	28,2	;volatile
  6526                           
  6527                           ;klondike.c: 273: TRISCbits.TRISC5 = 0;
  6528  1BED  0021               	movlb	1	; select bank1
  6529  1BEE  128E               	bcf	14,5	;volatile
  6530                           
  6531                           ;klondike.c: 274: PWM1OE=1;
  6532  1BEF  002C               	movlb	12	; select bank12
  6533  1BF0  1713               	bsf	19,6	;volatile
  6534  1BF1  0008               	return
  6535  1BF2                     __end_of_InitFAN:	
  6536                           
  6537                           	psect	text18
  6538  0C47                     __ptext18:	
  6539 ;; *************** function _DetectAsics *****************
  6540 ;; Defined at:
  6541 ;;		line 147 in file "klondike.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  x               1   14[BANK1 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;		None               void
  6548 ;; Registers used:
  6549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;Total ram usage:       10 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    5
  6562 ;; This function calls:
  6563 ;;		___awdiv
  6564 ;; This function is called by:
  6565 ;;		_UserInit
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function _DetectAsics
  6571  0C47                     _DetectAsics:	
  6572                           
  6573                           ;klondike.c: 148: Status.ChipCount = 16;
  6574                           
  6575                           ;incstack = 0
  6576                           ; Regs used in _DetectAsics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6577  0C47  3010               	movlw	16
  6578  0C48  0021               	movlb	1	; select bank1
  6579  0C49  00A5               	movwf	??_DetectAsics^(0+128)
  6580  0C4A  0825               	movf	??_DetectAsics^(0+128),w
  6581  0C4B  0023               	movlb	3	; select bank3
  6582  0C4C  00AD               	movwf	(_Status^(0+384)+1)	;volatile
  6583                           
  6584                           ;klondike.c: 151: BankSize = (Status.ChipCount)/2;
  6585  0C4D  3002               	movlw	2
  6586  0C4E  0020               	movlb	0	; select bank0
  6587  0C4F  00DE               	movwf	?___awdiv
  6588  0C50  3000               	movlw	0
  6589  0C51  00DF               	movwf	?___awdiv+1
  6590  0C52  0023               	movlb	3	; select bank3
  6591  0C53  082D               	movf	(_Status^(0+384)+1),w	;volatile
  6592  0C54  0021               	movlb	1	; select bank1
  6593  0C55  00A5               	movwf	??_DetectAsics^(0+128)
  6594  0C56  01A6               	clrf	(??_DetectAsics^(0+128)+1)
  6595  0C57  0825               	movf	??_DetectAsics^(0+128),w
  6596  0C58  0020               	movlb	0	; select bank0
  6597  0C59  00E0               	movwf	?___awdiv+2
  6598  0C5A  0021               	movlb	1	; select bank1
  6599  0C5B  0826               	movf	(??_DetectAsics+1)^(0+128),w
  6600  0C5C  0020               	movlb	0	; select bank0
  6601  0C5D  00E1               	movwf	?___awdiv+3
  6602  0C5E  3190  20F8  318C   	fcall	___awdiv
  6603  0C61  0020               	movlb	0	; select bank0
  6604  0C62  085E               	movf	?___awdiv,w
  6605  0C63  0021               	movlb	1	; select bank1
  6606  0C64  00A7               	movwf	(??_DetectAsics+2)^(0+128)
  6607  0C65  0827               	movf	(??_DetectAsics+2)^(0+128),w
  6608  0C66  0023               	movlb	3	; select bank3
  6609  0C67  00E9               	movwf	_BankSize^(0+384)
  6610                           
  6611                           ;klondike.c: 152: Status.MaxCount = 16384 / BankSize / 2;
  6612  0C68  0869               	movf	_BankSize^(0+384),w
  6613  0C69  0021               	movlb	1	; select bank1
  6614  0C6A  00A5               	movwf	??_DetectAsics^(0+128)
  6615  0C6B  01A6               	clrf	(??_DetectAsics^(0+128)+1)
  6616  0C6C  0825               	movf	??_DetectAsics^(0+128),w
  6617  0C6D  0020               	movlb	0	; select bank0
  6618  0C6E  00DE               	movwf	?___awdiv
  6619  0C6F  0021               	movlb	1	; select bank1
  6620  0C70  0826               	movf	(??_DetectAsics+1)^(0+128),w
  6621  0C71  0020               	movlb	0	; select bank0
  6622  0C72  00DF               	movwf	?___awdiv+1
  6623  0C73  3000               	movlw	0
  6624  0C74  00E0               	movwf	?___awdiv+2
  6625  0C75  3040               	movlw	64
  6626  0C76  00E1               	movwf	?___awdiv+3
  6627  0C77  3190  20F8  318C   	fcall	___awdiv
  6628  0C7A  0020               	movlb	0	; select bank0
  6629  0C7B  085F               	movf	?___awdiv+1,w
  6630  0C7C  0021               	movlb	1	; select bank1
  6631  0C7D  01AD               	clrf	(_DetectAsics$2875+1)^(0+128)
  6632  0C7E  07AD               	addwf	(_DetectAsics$2875+1)^(0+128),f
  6633  0C7F  0020               	movlb	0	; select bank0
  6634  0C80  085E               	movf	?___awdiv,w
  6635  0C81  0021               	movlb	1	; select bank1
  6636  0C82  01AC               	clrf	_DetectAsics$2875^(0+128)
  6637  0C83  07AC               	addwf	_DetectAsics$2875^(0+128),f
  6638                           
  6639                           ;klondike.c: 152: Status.MaxCount = 16384 / BankSize / 2;
  6640  0C84  3002               	movlw	2
  6641  0C85  0020               	movlb	0	; select bank0
  6642  0C86  00DE               	movwf	?___awdiv
  6643  0C87  3000               	movlw	0
  6644  0C88  00DF               	movwf	?___awdiv+1
  6645  0C89  0021               	movlb	1	; select bank1
  6646  0C8A  082D               	movf	(_DetectAsics$2875+1)^(0+128),w
  6647  0C8B  0020               	movlb	0	; select bank0
  6648  0C8C  01E1               	clrf	?___awdiv+3
  6649  0C8D  07E1               	addwf	?___awdiv+3,f
  6650  0C8E  0021               	movlb	1	; select bank1
  6651  0C8F  082C               	movf	_DetectAsics$2875^(0+128),w
  6652  0C90  0020               	movlb	0	; select bank0
  6653  0C91  01E0               	clrf	?___awdiv+2
  6654  0C92  07E0               	addwf	?___awdiv+2,f
  6655  0C93  3190  20F8  318C   	fcall	___awdiv
  6656  0C96  0020               	movlb	0	; select bank0
  6657  0C97  085F               	movf	?___awdiv+1,w
  6658  0C98  0023               	movlb	3	; select bank3
  6659  0C99  01B7               	clrf	((_Status+1)^(0+384)+10)	;volatile
  6660  0C9A  07B7               	addwf	((_Status+1)^(0+384)+10),f	;volatile
  6661  0C9B  0020               	movlb	0	; select bank0
  6662  0C9C  085E               	movf	?___awdiv,w
  6663  0C9D  0023               	movlb	3	; select bank3
  6664  0C9E  01B6               	clrf	(_Status^(0+384)+10)	;volatile
  6665  0C9F  07B6               	addwf	(_Status^(0+384)+10),f	;volatile
  6666                           
  6667                           ;klondike.c: 154: NonceRanges[0] = 0;
  6668  0CA0  3000               	movlw	0
  6669  0CA1  0026               	movlb	6	; select bank6
  6670  0CA2  00A3               	movwf	(_NonceRanges+3)^(0+768)
  6671  0CA3  3000               	movlw	0
  6672  0CA4  00A2               	movwf	(_NonceRanges+2)^(0+768)
  6673  0CA5  3000               	movlw	0
  6674  0CA6  00A1               	movwf	(_NonceRanges+1)^(0+768)
  6675  0CA7  3000               	movlw	0
  6676  0CA8  00A0               	movwf	_NonceRanges^(0+768)
  6677                           
  6678                           ;klondike.c: 155: for(BYTE x = 1; x < BankSize; x++)
  6679  0CA9  0021               	movlb	1	; select bank1
  6680  0CAA  01AE               	clrf	DetectAsics@x^(0+128)
  6681  0CAB  0AAE               	incf	DetectAsics@x^(0+128),f
  6682  0CAC                     l5510:	
  6683  0CAC  0023               	movlb	3	; select bank3
  6684  0CAD  0869               	movf	_BankSize^(0+384),w
  6685  0CAE  0021               	movlb	1	; select bank1
  6686  0CAF  022E               	subwf	DetectAsics@x^(0+128),w
  6687  0CB0  1803               	btfsc	3,0
  6688  0CB1  2CF7               	goto	l5512
  6689                           
  6690                           ;klondike.c: 156: NonceRanges[x] = NonceRanges[x-1] + BankRanges[BankSize-1];
  6691  0CB2  0023               	movlb	3	; select bank3
  6692  0CB3  0869               	movf	_BankSize^(0+384),w
  6693  0CB4  0021               	movlb	1	; select bank1
  6694  0CB5  00A5               	movwf	??_DetectAsics^(0+128)
  6695  0CB6  3001               	movlw	1
  6696  0CB7                     u5395:	
  6697  0CB7  35A5               	lslf	??_DetectAsics^(0+128),f
  6698  0CB8  3EFF               	addlw	-1
  6699  0CB9  1D03               	skipz
  6700  0CBA  2CB7               	goto	u5395
  6701  0CBB  3525               	lslf	??_DetectAsics^(0+128),w
  6702  0CBC  3EFC               	addlw	252
  6703  0CBD  3EA0               	addlw	_BankRanges& (0+255)
  6704  0CBE  0086               	movwf	6
  6705  0CBF  3003               	movlw	3	; select bank7/8
  6706  0CC0  0087               	movwf	7
  6707  0CC1  3F40               	moviw [0]fsr1
  6708  0CC2  00A6               	movwf	(??_DetectAsics+1)^(0+128)
  6709  0CC3  3F41               	moviw [1]fsr1
  6710  0CC4  00A7               	movwf	((??_DetectAsics+1)^(0+128)+1)
  6711  0CC5  3F42               	moviw [2]fsr1
  6712  0CC6  00A8               	movwf	((??_DetectAsics+1)^(0+128)+2)
  6713  0CC7  3F43               	moviw [3]fsr1
  6714  0CC8  00A9               	movwf	((??_DetectAsics+1)^(0+128)+3)
  6715  0CC9  082E               	movf	DetectAsics@x^(0+128),w
  6716  0CCA  00AA               	movwf	(??_DetectAsics+5)^(0+128)
  6717  0CCB  3001               	movlw	1
  6718  0CCC                     u5405:	
  6719  0CCC  35AA               	lslf	(??_DetectAsics+5)^(0+128),f
  6720  0CCD  3EFF               	addlw	-1
  6721  0CCE  1D03               	skipz
  6722  0CCF  2CCC               	goto	u5405
  6723  0CD0  352A               	lslf	(??_DetectAsics+5)^(0+128),w
  6724  0CD1  3EFC               	addlw	252
  6725  0CD2  3E20               	addlw	_NonceRanges& (0+255)
  6726  0CD3  0086               	movwf	6
  6727  0CD4  3003               	movlw	3	; select bank6/7
  6728  0CD5  0087               	movwf	7
  6729  0CD6  3F40               	moviw [0]fsr1
  6730  0CD7  07A6               	addwf	(??_DetectAsics+1)^(0+128),f
  6731  0CD8  3F41               	moviw [1]fsr1
  6732  0CD9  3DA7               	addwfc	((??_DetectAsics+1)^(0+128)+1),f
  6733  0CDA  3F42               	moviw [2]fsr1
  6734  0CDB  3DA8               	addwfc	((??_DetectAsics+1)^(0+128)+2),f
  6735  0CDC  3F43               	moviw [3]fsr1
  6736  0CDD  3DA9               	addwfc	((??_DetectAsics+1)^(0+128)+3),f
  6737  0CDE  082E               	movf	DetectAsics@x^(0+128),w
  6738  0CDF  00AB               	movwf	(??_DetectAsics+6)^(0+128)
  6739  0CE0  3001               	movlw	1
  6740  0CE1                     u5415:	
  6741  0CE1  35AB               	lslf	(??_DetectAsics+6)^(0+128),f
  6742  0CE2  3EFF               	addlw	-1
  6743  0CE3  1D03               	skipz
  6744  0CE4  2CE1               	goto	u5415
  6745  0CE5  352B               	lslf	(??_DetectAsics+6)^(0+128),w
  6746  0CE6  3E20               	addlw	_NonceRanges& (0+255)
  6747  0CE7  0086               	movwf	6
  6748  0CE8  3003               	movlw	3	; select bank6/7
  6749  0CE9  0087               	movwf	7
  6750  0CEA  0826               	movf	(??_DetectAsics+1)^(0+128),w
  6751  0CEB  3FC0               	movwi [0]fsr1
  6752  0CEC  0827               	movf	(??_DetectAsics+2)^(0+128),w
  6753  0CED  3FC1               	movwi [1]fsr1
  6754  0CEE  0828               	movf	(??_DetectAsics+3)^(0+128),w
  6755  0CEF  3FC2               	movwi [2]fsr1
  6756  0CF0  0829               	movf	(??_DetectAsics+4)^(0+128),w
  6757  0CF1  3FC3               	movwi [3]fsr1
  6758  0CF2  3001               	movlw	1
  6759  0CF3  00A5               	movwf	??_DetectAsics^(0+128)
  6760  0CF4  0825               	movf	??_DetectAsics^(0+128),w
  6761  0CF5  07AE               	addwf	DetectAsics@x^(0+128),f
  6762  0CF6  2CAC               	goto	l5510
  6763  0CF7                     l5512:	
  6764                           
  6765                           ;klondike.c: 158: Status.State = 'R';
  6766  0CF7  3052               	movlw	82
  6767  0CF8  00A5               	movwf	??_DetectAsics^(0+128)
  6768  0CF9  0825               	movf	??_DetectAsics^(0+128),w
  6769  0CFA  0023               	movlb	3	; select bank3
  6770  0CFB  00AC               	movwf	_Status^(0+384)	;volatile
  6771                           
  6772                           ;klondike.c: 159: Status.HashCount = 0;
  6773  0CFC  01B4               	clrf	(_Status^(0+384)+8)	;volatile
  6774  0CFD  01B5               	clrf	((_Status+1)^(0+384)+8)	;volatile
  6775  0CFE  0008               	return
  6776  0CFF                     __end_of_DetectAsics:	
  6777                           
  6778                           	psect	text19
  6779  10F8                     __ptext19:	
  6780 ;; *************** function ___awdiv *****************
  6781 ;; Defined at:
  6782 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  divisor         2   14[BANK0 ] int 
  6785 ;;  dividend        2   16[BANK0 ] int 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  quotient        2    3[BANK1 ] int 
  6788 ;;  sign            1    2[BANK1 ] unsigned char 
  6789 ;;  counter         1    1[BANK1 ] unsigned char 
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  2   14[BANK0 ] int 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Totals:         0       4       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;Total ram usage:        9 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    4
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_DetectAsics
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           
  6814                           ;psect for function ___awdiv
  6815  10F8                     ___awdiv:	
  6816                           
  6817                           ;incstack = 0
  6818                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6819  10F8  0021               	movlb	1	; select bank1
  6820  10F9  01A2               	clrf	___awdiv@sign^(0+128)
  6821  10FA  0020               	movlb	0	; select bank0
  6822  10FB  1FDF               	btfss	___awdiv@divisor+1,7
  6823  10FC  2905               	goto	l5776
  6824  10FD  09DE               	comf	___awdiv@divisor,f
  6825  10FE  09DF               	comf	___awdiv@divisor+1,f
  6826  10FF  0ADE               	incf	___awdiv@divisor,f
  6827  1100  1903               	skipnz
  6828  1101  0ADF               	incf	___awdiv@divisor+1,f
  6829  1102  0021               	movlb	1	; select bank1
  6830  1103  01A2               	clrf	___awdiv@sign^(0+128)
  6831  1104  0AA2               	incf	___awdiv@sign^(0+128),f
  6832  1105                     l5776:	
  6833  1105  0020               	movlb	0	; select bank0
  6834  1106  1FE1               	btfss	___awdiv@dividend+1,7
  6835  1107  2912               	goto	l5782
  6836  1108  09E0               	comf	___awdiv@dividend,f
  6837  1109  09E1               	comf	___awdiv@dividend+1,f
  6838  110A  0AE0               	incf	___awdiv@dividend,f
  6839  110B  1903               	skipnz
  6840  110C  0AE1               	incf	___awdiv@dividend+1,f
  6841  110D  3001               	movlw	1
  6842  110E  0021               	movlb	1	; select bank1
  6843  110F  00A0               	movwf	??___awdiv^(0+128)
  6844  1110  0820               	movf	??___awdiv^(0+128),w
  6845  1111  06A2               	xorwf	___awdiv@sign^(0+128),f
  6846  1112                     l5782:	
  6847  1112  0021               	movlb	1	; select bank1
  6848  1113  01A3               	clrf	___awdiv@quotient^(0+128)
  6849  1114  01A4               	clrf	(___awdiv@quotient+1)^(0+128)
  6850  1115  0020               	movlb	0	; select bank0
  6851  1116  085F               	movf	___awdiv@divisor+1,w
  6852  1117  045E               	iorwf	___awdiv@divisor,w
  6853  1118  1903               	skipnz
  6854  1119  294C               	goto	l5804
  6855  111A  0021               	movlb	1	; select bank1
  6856  111B  01A1               	clrf	___awdiv@counter^(0+128)
  6857  111C  0AA1               	incf	___awdiv@counter^(0+128),f
  6858  111D                     l5792:	
  6859  111D  0020               	movlb	0	; select bank0
  6860  111E  1BDF               	btfsc	___awdiv@divisor+1,7
  6861  111F  292C               	goto	l5794
  6862  1120  3001               	movlw	1
  6863  1121  0020               	movlb	0	; select bank0
  6864  1122                     u5795:	
  6865  1122  35DE               	lslf	___awdiv@divisor,f
  6866  1123  0DDF               	rlf	___awdiv@divisor+1,f
  6867  1124  0B89               	decfsz	9,f
  6868  1125  2922               	goto	u5795
  6869  1126  3001               	movlw	1
  6870  1127  0021               	movlb	1	; select bank1
  6871  1128  00A0               	movwf	??___awdiv^(0+128)
  6872  1129  0820               	movf	??___awdiv^(0+128),w
  6873  112A  07A1               	addwf	___awdiv@counter^(0+128),f
  6874  112B  291D               	goto	l5792
  6875  112C                     l5794:	
  6876  112C  3001               	movlw	1
  6877  112D  0021               	movlb	1	; select bank1
  6878  112E                     u5815:	
  6879  112E  35A3               	lslf	___awdiv@quotient^(0+128),f
  6880  112F  0DA4               	rlf	(___awdiv@quotient+1)^(0+128),f
  6881  1130  0B89               	decfsz	9,f
  6882  1131  292E               	goto	u5815
  6883  1132  0020               	movlb	0	; select bank0
  6884  1133  085F               	movf	___awdiv@divisor+1,w
  6885  1134  0261               	subwf	___awdiv@dividend+1,w
  6886  1135  1D03               	skipz
  6887  1136  2939               	goto	u5825
  6888  1137  085E               	movf	___awdiv@divisor,w
  6889  1138  0260               	subwf	___awdiv@dividend,w
  6890  1139                     u5825:	
  6891  1139  1C03               	skipc
  6892  113A  2941               	goto	l5800
  6893  113B  085E               	movf	___awdiv@divisor,w
  6894  113C  02E0               	subwf	___awdiv@dividend,f
  6895  113D  085F               	movf	___awdiv@divisor+1,w
  6896  113E  3BE1               	subwfb	___awdiv@dividend+1,f
  6897  113F  0021               	movlb	1	; select bank1
  6898  1140  1423               	bsf	___awdiv@quotient^(0+128),0
  6899  1141                     l5800:	
  6900  1141  3001               	movlw	1
  6901  1142  0020               	movlb	0	; select bank0
  6902  1143                     u5835:	
  6903  1143  36DF               	lsrf	___awdiv@divisor+1,f
  6904  1144  0CDE               	rrf	___awdiv@divisor,f
  6905  1145  0B89               	decfsz	9,f
  6906  1146  2943               	goto	u5835
  6907  1147  3001               	movlw	1
  6908  1148  0021               	movlb	1	; select bank1
  6909  1149  02A1               	subwf	___awdiv@counter^(0+128),f
  6910  114A  1D03               	btfss	3,2
  6911  114B  292C               	goto	l5794
  6912  114C                     l5804:	
  6913  114C  0021               	movlb	1	; select bank1
  6914  114D  0822               	movf	___awdiv@sign^(0+128),w
  6915  114E  1903               	btfsc	3,2
  6916  114F  2955               	goto	l5808
  6917  1150  09A3               	comf	___awdiv@quotient^(0+128),f
  6918  1151  09A4               	comf	(___awdiv@quotient+1)^(0+128),f
  6919  1152  0AA3               	incf	___awdiv@quotient^(0+128),f
  6920  1153  1903               	skipnz
  6921  1154  0AA4               	incf	(___awdiv@quotient+1)^(0+128),f
  6922  1155                     l5808:	
  6923  1155  0824               	movf	(___awdiv@quotient+1)^(0+128),w
  6924  1156  0020               	movlb	0	; select bank0
  6925  1157  01DF               	clrf	?___awdiv+1
  6926  1158  07DF               	addwf	?___awdiv+1,f
  6927  1159  0021               	movlb	1	; select bank1
  6928  115A  0823               	movf	___awdiv@quotient^(0+128),w
  6929  115B  0020               	movlb	0	; select bank0
  6930  115C  01DE               	clrf	?___awdiv
  6931  115D  07DE               	addwf	?___awdiv,f
  6932  115E  0008               	return
  6933  115F                     __end_of___awdiv:	
  6934                           
  6935                           	psect	text20
  6936  1034                     __ptext20:	
  6937 ;; *************** function _WorkTick *****************
  6938 ;; Defined at:
  6939 ;;		line 165 in file "klondike.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;		None               void
  6946 ;; Registers used:
  6947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6956 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;Total ram usage:        3 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    7
  6960 ;; This function calls:
  6961 ;;		_UpdateFanLevel
  6962 ;;		___awmod
  6963 ;; This function is called by:
  6964 ;;		_main
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _WorkTick
  6970  1034                     _WorkTick:	
  6971                           
  6972                           ;klondike.c: 166: TMR0 += HashTime;
  6973                           
  6974                           ;incstack = 0
  6975                           ; Regs used in _WorkTick: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  6976  1034  0020               	movlb	0	; select bank0
  6977  1035  086E               	movf	_HashTime,w
  6978  1036  0021               	movlb	1	; select bank1
  6979  1037  00DF               	movwf	??_WorkTick^(0+128)
  6980  1038  085F               	movf	??_WorkTick^(0+128),w
  6981  1039  0020               	movlb	0	; select bank0
  6982  103A  0795               	addwf	21,f	;volatile
  6983                           
  6984                           ;klondike.c: 167: TMR0IF = 0;
  6985  103B  110B               	bcf	11,2	;volatile
  6986                           
  6987                           ;klondike.c: 169: if((Status.State == 'W') && (++Status.HashCount == Status.MaxCount)) {
  6988  103C  0023               	movlb	3	; select bank3
  6989  103D  082C               	movf	_Status^(0+384),w	;volatile
  6990  103E  3A57               	xorlw	87
  6991  103F  1D03               	skipz
  6992  1040  285F               	goto	l6272
  6993  1041  3008               	movlw	8
  6994  1042  3EAC               	addlw	_Status& (0+255)
  6995  1043  0086               	movwf	6
  6996  1044  3001               	movlw	1	; select bank3/4
  6997  1045  0087               	movwf	7
  6998  1046  3001               	movlw	1
  6999  1047  0781               	addwf	1,f
  7000  1048  3141               	addfsr 1,1
  7001  1049  1803               	skipnc
  7002  104A  0A81               	incf	1,f
  7003  104B  317F               	addfsr 1,-1
  7004  104C  3F40               	moviw [0]fsr1
  7005  104D  0636               	xorwf	(_Status^(0+384)+10),w	;volatile
  7006  104E  1D03               	skipz
  7007  104F  2852               	goto	u6725
  7008  1050  3F41               	moviw [1]fsr1
  7009  1051  0637               	xorwf	((_Status+1)^(0+384)+10),w	;volatile
  7010  1052                     u6725:	
  7011  1052  1D03               	skipz
  7012  1053  285F               	goto	l6272
  7013                           
  7014                           ;klondike.c: 170: if(Status.WorkQC > 0) {
  7015  1054  082F               	movf	(_Status^(0+384)+3),w	;volatile
  7016  1055  1903               	btfsc	3,2
  7017  1056  2859               	goto	l6270
  7018                           
  7019                           ;klondike.c: 171: Status.State = 'P';
  7020  1057  3050               	movlw	80
  7021  1058  285A               	goto	L6
  7022  1059                     l6270:	
  7023                           ;klondike.c: 172: }
  7024                           
  7025                           
  7026                           ;klondike.c: 173: else {
  7027                           ;klondike.c: 174: Status.State = 'R';
  7028  1059  3052               	movlw	82
  7029  105A                     L6:	
  7030  105A  0021               	movlb	1	; select bank1
  7031  105B  00DF               	movwf	??_WorkTick^(0+128)
  7032  105C  085F               	movf	??_WorkTick^(0+128),w
  7033  105D  0023               	movlb	3	; select bank3
  7034  105E  00AC               	movwf	_Status^(0+384)	;volatile
  7035  105F                     l6272:	
  7036                           
  7037                           ;klondike.c: 175: }
  7038                           ;klondike.c: 176: }
  7039                           ;klondike.c: 178: if(++SlowTick == 0) {
  7040  105F  3001               	movlw	1
  7041  1060  0021               	movlb	1	; select bank1
  7042  1061  00DF               	movwf	??_WorkTick^(0+128)
  7043  1062  085F               	movf	??_WorkTick^(0+128),w
  7044  1063  0023               	movlb	3	; select bank3
  7045  1064  07D6               	addwf	_SlowTick^(0+384),f
  7046  1065  1D03               	btfss	3,2
  7047  1066  0008               	return
  7048                           
  7049                           ;klondike.c: 179: LATAbits.LATA5 = 0;;
  7050  1067  0022               	movlb	2	; select bank2
  7051  1068  128C               	bcf	12,5	;volatile
  7052                           
  7053                           ;klondike.c: 180: Status.Temp = ADRESH;
  7054  1069  0021               	movlb	1	; select bank1
  7055  106A  081C               	movf	28,w	;volatile
  7056  106B  00DF               	movwf	??_WorkTick^(0+128)
  7057  106C  085F               	movf	??_WorkTick^(0+128),w
  7058  106D  0023               	movlb	3	; select bank3
  7059  106E  00B1               	movwf	(_Status^(0+384)+5)	;volatile
  7060                           
  7061                           ;klondike.c: 181: ADCON0bits.GO_nDONE = 1;
  7062  106F  0021               	movlb	1	; select bank1
  7063  1070  149D               	bsf	29,1	;volatile
  7064                           
  7065                           ;klondike.c: 182: if((++VerySlowTick % 15) == 0) {
  7066  1071  300F               	movlw	15
  7067  1072  0020               	movlb	0	; select bank0
  7068  1073  00DE               	movwf	?___awmod
  7069  1074  3000               	movlw	0
  7070  1075  00DF               	movwf	?___awmod+1
  7071  1076  3001               	movlw	1
  7072  1077  0021               	movlb	1	; select bank1
  7073  1078  00DF               	movwf	??_WorkTick^(0+128)
  7074  1079  085F               	movf	??_WorkTick^(0+128),w
  7075  107A  0023               	movlb	3	; select bank3
  7076  107B  07D8               	addwf	_VerySlowTick^(0+384),f
  7077  107C  0858               	movf	_VerySlowTick^(0+384),w
  7078  107D  0021               	movlb	1	; select bank1
  7079  107E  00E0               	movwf	(??_WorkTick+1)^(0+128)
  7080  107F  01E1               	clrf	((??_WorkTick+1)^(0+128)+1)
  7081  1080  0860               	movf	(??_WorkTick+1)^(0+128),w
  7082  1081  0020               	movlb	0	; select bank0
  7083  1082  00E0               	movwf	?___awmod+2
  7084  1083  0021               	movlb	1	; select bank1
  7085  1084  0861               	movf	(??_WorkTick+2)^(0+128),w
  7086  1085  0020               	movlb	0	; select bank0
  7087  1086  00E1               	movwf	?___awmod+3
  7088  1087  319E  26FC  3190   	fcall	___awmod
  7089  108A  0020               	movlb	0	; select bank0
  7090  108B  085F               	movf	?___awmod+1,w
  7091  108C  045E               	iorwf	?___awmod,w
  7092  108D  1D03               	skipz
  7093  108E  0008               	return
  7094                           
  7095                           ;klondike.c: 183: UpdateFanLevel();
  7096  108F  3186  2651         	fcall	_UpdateFanLevel
  7097  1091  0008               	return
  7098  1092                     __end_of_WorkTick:	
  7099                           
  7100                           	psect	text21
  7101  1EFC                     __ptext21:	
  7102 ;; *************** function ___awmod *****************
  7103 ;; Defined at:
  7104 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awmod.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  divisor         2   14[BANK0 ] int 
  7107 ;;  dividend        2   16[BANK0 ] int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  sign            1    2[BANK1 ] unsigned char 
  7110 ;;  counter         1    1[BANK1 ] unsigned char 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  2   14[BANK0 ] int 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;Total ram usage:        7 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    4
  7127 ;; This function calls:
  7128 ;;		Nothing
  7129 ;; This function is called by:
  7130 ;;		_WorkTick
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           
  7135                           ;psect for function ___awmod
  7136  1EFC                     ___awmod:	
  7137                           
  7138                           ;incstack = 0
  7139                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7140  1EFC  0021               	movlb	1	; select bank1
  7141  1EFD  01A2               	clrf	___awmod@sign^(0+128)
  7142  1EFE  0020               	movlb	0	; select bank0
  7143  1EFF  1FE1               	btfss	___awmod@dividend+1,7
  7144  1F00  2F09               	goto	l6358
  7145  1F01  09E0               	comf	___awmod@dividend,f
  7146  1F02  09E1               	comf	___awmod@dividend+1,f
  7147  1F03  0AE0               	incf	___awmod@dividend,f
  7148  1F04  1903               	skipnz
  7149  1F05  0AE1               	incf	___awmod@dividend+1,f
  7150  1F06  0021               	movlb	1	; select bank1
  7151  1F07  01A2               	clrf	___awmod@sign^(0+128)
  7152  1F08  0AA2               	incf	___awmod@sign^(0+128),f
  7153  1F09                     l6358:	
  7154  1F09  0020               	movlb	0	; select bank0
  7155  1F0A  1FDF               	btfss	___awmod@divisor+1,7
  7156  1F0B  2F11               	goto	l6362
  7157  1F0C  09DE               	comf	___awmod@divisor,f
  7158  1F0D  09DF               	comf	___awmod@divisor+1,f
  7159  1F0E  0ADE               	incf	___awmod@divisor,f
  7160  1F0F  1903               	skipnz
  7161  1F10  0ADF               	incf	___awmod@divisor+1,f
  7162  1F11                     l6362:	
  7163  1F11  085F               	movf	___awmod@divisor+1,w
  7164  1F12  045E               	iorwf	___awmod@divisor,w
  7165  1F13  1903               	skipnz
  7166  1F14  2F3E               	goto	l6380
  7167  1F15  0021               	movlb	1	; select bank1
  7168  1F16  01A1               	clrf	___awmod@counter^(0+128)
  7169  1F17  0AA1               	incf	___awmod@counter^(0+128),f
  7170  1F18                     l6370:	
  7171  1F18  0020               	movlb	0	; select bank0
  7172  1F19  1BDF               	btfsc	___awmod@divisor+1,7
  7173  1F1A  2F27               	goto	l6372
  7174  1F1B  3001               	movlw	1
  7175  1F1C  0020               	movlb	0	; select bank0
  7176  1F1D                     u6965:	
  7177  1F1D  35DE               	lslf	___awmod@divisor,f
  7178  1F1E  0DDF               	rlf	___awmod@divisor+1,f
  7179  1F1F  0B89               	decfsz	9,f
  7180  1F20  2F1D               	goto	u6965
  7181  1F21  3001               	movlw	1
  7182  1F22  0021               	movlb	1	; select bank1
  7183  1F23  00A0               	movwf	??___awmod^(0+128)
  7184  1F24  0820               	movf	??___awmod^(0+128),w
  7185  1F25  07A1               	addwf	___awmod@counter^(0+128),f
  7186  1F26  2F18               	goto	l6370
  7187  1F27                     l6372:	
  7188  1F27  0020               	movlb	0	; select bank0
  7189  1F28  085F               	movf	___awmod@divisor+1,w
  7190  1F29  0261               	subwf	___awmod@dividend+1,w
  7191  1F2A  1D03               	skipz
  7192  1F2B  2F2E               	goto	u6985
  7193  1F2C  085E               	movf	___awmod@divisor,w
  7194  1F2D  0260               	subwf	___awmod@dividend,w
  7195  1F2E                     u6985:	
  7196  1F2E  1C03               	skipc
  7197  1F2F  2F34               	goto	l6376
  7198  1F30  085E               	movf	___awmod@divisor,w
  7199  1F31  02E0               	subwf	___awmod@dividend,f
  7200  1F32  085F               	movf	___awmod@divisor+1,w
  7201  1F33  3BE1               	subwfb	___awmod@dividend+1,f
  7202  1F34                     l6376:	
  7203  1F34  3001               	movlw	1
  7204  1F35                     u6995:	
  7205  1F35  36DF               	lsrf	___awmod@divisor+1,f
  7206  1F36  0CDE               	rrf	___awmod@divisor,f
  7207  1F37  0B89               	decfsz	9,f
  7208  1F38  2F35               	goto	u6995
  7209  1F39  3001               	movlw	1
  7210  1F3A  0021               	movlb	1	; select bank1
  7211  1F3B  02A1               	subwf	___awmod@counter^(0+128),f
  7212  1F3C  1D03               	btfss	3,2
  7213  1F3D  2F27               	goto	l6372
  7214  1F3E                     l6380:	
  7215  1F3E  0021               	movlb	1	; select bank1
  7216  1F3F  0822               	movf	___awmod@sign^(0+128),w
  7217  1F40  1903               	btfsc	3,2
  7218  1F41  2F48               	goto	l6384
  7219  1F42  0020               	movlb	0	; select bank0
  7220  1F43  09E0               	comf	___awmod@dividend,f
  7221  1F44  09E1               	comf	___awmod@dividend+1,f
  7222  1F45  0AE0               	incf	___awmod@dividend,f
  7223  1F46  1903               	skipnz
  7224  1F47  0AE1               	incf	___awmod@dividend+1,f
  7225  1F48                     l6384:	
  7226  1F48  0020               	movlb	0	; select bank0
  7227  1F49  0861               	movf	___awmod@dividend+1,w
  7228  1F4A  01DF               	clrf	?___awmod+1
  7229  1F4B  07DF               	addwf	?___awmod+1,f
  7230  1F4C  0860               	movf	___awmod@dividend,w
  7231  1F4D  01DE               	clrf	?___awmod
  7232  1F4E  07DE               	addwf	?___awmod,f
  7233  1F4F  0008               	return
  7234  1F50                     __end_of___awmod:	
  7235                           
  7236                           	psect	text22
  7237  0651                     __ptext22:	
  7238 ;; *************** function _UpdateFanLevel *****************
  7239 ;; Defined at:
  7240 ;;		line 230 in file "klondike.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;		None               void
  7247 ;; Registers used:
  7248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;Total ram usage:        7 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    6
  7261 ;; This function calls:
  7262 ;;		___awtoft
  7263 ;;		___ftadd
  7264 ;;		___ftmul
  7265 ;;		___ftneg
  7266 ;;		___fttol
  7267 ;; This function is called by:
  7268 ;;		_WorkTick
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           
  7273                           ;psect for function _UpdateFanLevel
  7274  0651                     _UpdateFanLevel:	
  7275                           
  7276                           ;klondike.c: 231: Error = Status.Temp - TempTarget;
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in _UpdateFanLevel: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  7280  0651  0023               	movlb	3	; select bank3
  7281  0652  0868               	movf	_TempTarget^(0+384),w
  7282  0653  0021               	movlb	1	; select bank1
  7283  0654  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7284  0655  01D9               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7285  0656  09D8               	comf	??_UpdateFanLevel^(0+128),f
  7286  0657  09D9               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7287  0658  0AD8               	incf	??_UpdateFanLevel^(0+128),f
  7288  0659  1903               	skipnz
  7289  065A  0AD9               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7290  065B  0023               	movlb	3	; select bank3
  7291  065C  0831               	movf	(_Status^(0+384)+5),w	;volatile
  7292  065D  0021               	movlb	1	; select bank1
  7293  065E  0758               	addwf	??_UpdateFanLevel^(0+128),w
  7294  065F  00DA               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7295  0660  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7296  0661  1803               	skipnc
  7297  0662  0A59               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7298  0663  00DB               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7299  0664  085A               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7300  0665  0023               	movlb	3	; select bank3
  7301  0666  00E5               	movwf	_Error^(0+384)
  7302  0667  0021               	movlb	1	; select bank1
  7303  0668  085B               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7304  0669  0023               	movlb	3	; select bank3
  7305  066A  00E6               	movwf	(_Error+1)^(0+384)
  7306                           
  7307                           ;klondike.c: 232: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  7308  066B  0866               	movf	(_Error+1)^(0+384),w
  7309  066C  0021               	movlb	1	; select bank1
  7310  066D  01A6               	clrf	(?___awtoft+1)^(0+128)
  7311  066E  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7312  066F  0023               	movlb	3	; select bank3
  7313  0670  0865               	movf	_Error^(0+384),w
  7314  0671  0021               	movlb	1	; select bank1
  7315  0672  01A5               	clrf	?___awtoft^(0+128)
  7316  0673  07A5               	addwf	?___awtoft^(0+128),f
  7317  0674  319C  2471  3186   	fcall	___awtoft
  7318  0677  0021               	movlb	1	; select bank1
  7319  0678  0825               	movf	?___awtoft^(0+128),w
  7320  0679  00C0               	movwf	(?___ftadd^(0+128)+3)
  7321  067A  0826               	movf	(?___awtoft+1)^(0+128),w
  7322  067B  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7323  067C  0827               	movf	(?___awtoft+2)^(0+128),w
  7324  067D  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7325  067E  0023               	movlb	3	; select bank3
  7326  067F  0831               	movf	(_Status^(0+384)+5),w	;volatile
  7327  0680  0021               	movlb	1	; select bank1
  7328  0681  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7329  0682  01D9               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7330  0683  09D8               	comf	??_UpdateFanLevel^(0+128),f
  7331  0684  09D9               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7332  0685  0AD8               	incf	??_UpdateFanLevel^(0+128),f
  7333  0686  1903               	skipnz
  7334  0687  0AD9               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7335  0688  0023               	movlb	3	; select bank3
  7336  0689  0855               	movf	_LastTemp^(0+384),w
  7337  068A  0021               	movlb	1	; select bank1
  7338  068B  0758               	addwf	??_UpdateFanLevel^(0+128),w
  7339  068C  00DA               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7340  068D  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7341  068E  1803               	skipnc
  7342  068F  0A59               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7343  0690  00DB               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7344  0691  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7345  0692  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7346  0693  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7347  0694  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7348  0695  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7349  0696  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7350  0697  085A               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7351  0698  00A5               	movwf	?___awtoft^(0+128)
  7352  0699  085B               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7353  069A  00A6               	movwf	(?___awtoft+1)^(0+128)
  7354  069B  319C  2471  3186   	fcall	___awtoft
  7355  069E  0021               	movlb	1	; select bank1
  7356  069F  0825               	movf	?___awtoft^(0+128),w
  7357  06A0  00BA               	movwf	?___ftneg^(0+128)
  7358  06A1  0826               	movf	(?___awtoft+1)^(0+128),w
  7359  06A2  00BB               	movwf	(?___ftneg+1)^(0+128)
  7360  06A3  0827               	movf	(?___awtoft+2)^(0+128),w
  7361  06A4  00BC               	movwf	(?___ftneg+2)^(0+128)
  7362  06A5  319A  22DF  3186   	fcall	___ftneg
  7363  06A8  0021               	movlb	1	; select bank1
  7364  06A9  083A               	movf	?___ftneg^(0+128),w
  7365  06AA  00BD               	movwf	?___ftadd^(0+128)
  7366  06AB  083B               	movf	(?___ftneg+1)^(0+128),w
  7367  06AC  00BE               	movwf	(?___ftadd+1)^(0+128)
  7368  06AD  083C               	movf	(?___ftneg+2)^(0+128),w
  7369  06AE  00BF               	movwf	(?___ftadd+2)^(0+128)
  7370  06AF  318D  25F0  3186   	fcall	___ftadd
  7371  06B2  0021               	movlb	1	; select bank1
  7372  06B3  083D               	movf	?___ftadd^(0+128),w
  7373  06B4  00DC               	movwf	_UpdateFanLevel$2878^(0+128)
  7374  06B5  083E               	movf	(?___ftadd+1)^(0+128),w
  7375  06B6  00DD               	movwf	(_UpdateFanLevel$2878+1)^(0+128)
  7376  06B7  083F               	movf	(?___ftadd+2)^(0+128),w
  7377  06B8  00DE               	movwf	(_UpdateFanLevel$2878+2)^(0+128)
  7378                           
  7379                           ;klondike.c: 232: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  7380  06B9  085C               	movf	_UpdateFanLevel$2878^(0+128),w
  7381  06BA  00C0               	movwf	(?___ftadd^(0+128)+3)
  7382  06BB  085D               	movf	(_UpdateFanLevel$2878+1)^(0+128),w
  7383  06BC  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7384  06BD  085E               	movf	(_UpdateFanLevel$2878+2)^(0+128),w
  7385  06BE  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7386  06BF  0023               	movlb	3	; select bank3
  7387  06C0  0850               	movf	(_LastError+1)^(0+384),w
  7388  06C1  0021               	movlb	1	; select bank1
  7389  06C2  01A6               	clrf	(?___awtoft+1)^(0+128)
  7390  06C3  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7391  06C4  0023               	movlb	3	; select bank3
  7392  06C5  084F               	movf	_LastError^(0+384),w
  7393  06C6  0021               	movlb	1	; select bank1
  7394  06C7  01A5               	clrf	?___awtoft^(0+128)
  7395  06C8  07A5               	addwf	?___awtoft^(0+128),f
  7396  06C9  319C  2471  3186   	fcall	___awtoft
  7397  06CC  0021               	movlb	1	; select bank1
  7398  06CD  0825               	movf	?___awtoft^(0+128),w
  7399  06CE  00AD               	movwf	(?___ftmul^(0+128)+3)
  7400  06CF  0826               	movf	(?___awtoft+1)^(0+128),w
  7401  06D0  00AE               	movwf	((?___ftmul+1)^(0+128)+3)
  7402  06D1  0827               	movf	(?___awtoft+2)^(0+128),w
  7403  06D2  00AF               	movwf	((?___ftmul+2)^(0+128)+3)
  7404  06D3  3000               	movlw	0
  7405  06D4  00AA               	movwf	?___ftmul^(0+128)
  7406  06D5  3000               	movlw	0
  7407  06D6  00AB               	movwf	(?___ftmul+1)^(0+128)
  7408  06D7  303F               	movlw	63
  7409  06D8  00AC               	movwf	(?___ftmul+2)^(0+128)
  7410  06D9  318B  2393  3186   	fcall	___ftmul
  7411  06DC  0021               	movlb	1	; select bank1
  7412  06DD  082A               	movf	?___ftmul^(0+128),w
  7413  06DE  00BA               	movwf	?___ftneg^(0+128)
  7414  06DF  082B               	movf	(?___ftmul+1)^(0+128),w
  7415  06E0  00BB               	movwf	(?___ftneg+1)^(0+128)
  7416  06E1  082C               	movf	(?___ftmul+2)^(0+128),w
  7417  06E2  00BC               	movwf	(?___ftneg+2)^(0+128)
  7418  06E3  319A  22DF  3186   	fcall	___ftneg
  7419  06E6  0021               	movlb	1	; select bank1
  7420  06E7  083A               	movf	?___ftneg^(0+128),w
  7421  06E8  00BD               	movwf	?___ftadd^(0+128)
  7422  06E9  083B               	movf	(?___ftneg+1)^(0+128),w
  7423  06EA  00BE               	movwf	(?___ftadd+1)^(0+128)
  7424  06EB  083C               	movf	(?___ftneg+2)^(0+128),w
  7425  06EC  00BF               	movwf	(?___ftadd+2)^(0+128)
  7426  06ED  318D  25F0  3186   	fcall	___ftadd
  7427  06F0  0021               	movlb	1	; select bank1
  7428  06F1  083D               	movf	?___ftadd^(0+128),w
  7429  06F2  00CA               	movwf	?___fttol^(0+128)
  7430  06F3  083E               	movf	(?___ftadd+1)^(0+128),w
  7431  06F4  00CB               	movwf	(?___fttol+1)^(0+128)
  7432  06F5  083F               	movf	(?___ftadd+2)^(0+128),w
  7433  06F6  00CC               	movwf	(?___fttol+2)^(0+128)
  7434  06F7  3194  24A5  3186   	fcall	___fttol
  7435  06FA  0021               	movlb	1	; select bank1
  7436  06FB  084B               	movf	(?___fttol^(0+128)+1),w
  7437  06FC  0022               	movlb	2	; select bank2
  7438  06FD  01DA               	clrf	(_Step+1)^(0+256)
  7439  06FE  07DA               	addwf	(_Step+1)^(0+256),f
  7440  06FF  0021               	movlb	1	; select bank1
  7441  0700  084A               	movf	?___fttol^(0+128),w
  7442  0701  0022               	movlb	2	; select bank2
  7443  0702  01D9               	clrf	_Step^(0+256)
  7444  0703  07D9               	addwf	_Step^(0+256),f
  7445                           
  7446                           ;klondike.c: 234: if(FanLevel + Step > 75 && FanLevel + Step <= 255) {
  7447  0704  0023               	movlb	3	; select bank3
  7448  0705  0867               	movf	_FanLevel^(0+384),w
  7449  0706  0022               	movlb	2	; select bank2
  7450  0707  0759               	addwf	_Step^(0+256),w
  7451  0708  0021               	movlb	1	; select bank1
  7452  0709  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7453  070A  0022               	movlb	2	; select bank2
  7454  070B  085A               	movf	(_Step+1)^(0+256),w
  7455  070C  1803               	skipnc
  7456  070D  0A5A               	incf	(_Step+1)^(0+256),w
  7457  070E  0021               	movlb	1	; select bank1
  7458  070F  00D9               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7459  0710  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7460  0711  3A80               	xorlw	128
  7461  0712  00FF               	movwf	127
  7462  0713  3080               	movlw	128
  7463  0714  027F               	subwf	127,w
  7464  0715  1D03               	skipz
  7465  0716  2F19               	goto	u6765
  7466  0717  304C               	movlw	76
  7467  0718  0258               	subwf	??_UpdateFanLevel^(0+128),w
  7468  0719                     u6765:	
  7469  0719  1C03               	skipc
  7470  071A  2F3A               	goto	l6296
  7471  071B  0023               	movlb	3	; select bank3
  7472  071C  0867               	movf	_FanLevel^(0+384),w
  7473  071D  0022               	movlb	2	; select bank2
  7474  071E  0759               	addwf	_Step^(0+256),w
  7475  071F  0021               	movlb	1	; select bank1
  7476  0720  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7477  0721  0022               	movlb	2	; select bank2
  7478  0722  085A               	movf	(_Step+1)^(0+256),w
  7479  0723  1803               	skipnc
  7480  0724  0A5A               	incf	(_Step+1)^(0+256),w
  7481  0725  0021               	movlb	1	; select bank1
  7482  0726  00D9               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7483  0727  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7484  0728  3A80               	xorlw	128
  7485  0729  00FF               	movwf	127
  7486  072A  3081               	movlw	129
  7487  072B  027F               	subwf	127,w
  7488  072C  1D03               	skipz
  7489  072D  2F30               	goto	u6775
  7490  072E  3000               	movlw	0
  7491  072F  0258               	subwf	??_UpdateFanLevel^(0+128),w
  7492  0730                     u6775:	
  7493  0730  1803               	skipnc
  7494  0731  2F3A               	goto	l6296
  7495                           
  7496                           ;klondike.c: 235: FanLevel += Step;
  7497  0732  0022               	movlb	2	; select bank2
  7498  0733  0859               	movf	_Step^(0+256),w
  7499  0734  0021               	movlb	1	; select bank1
  7500  0735  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7501  0736  0858               	movf	??_UpdateFanLevel^(0+128),w
  7502  0737  0023               	movlb	3	; select bank3
  7503  0738  07E7               	addwf	_FanLevel^(0+384),f
  7504                           
  7505                           ;klondike.c: 236: }
  7506  0739  2F70               	goto	l754
  7507  073A                     l6296:	
  7508                           
  7509                           ;klondike.c: 237: else if(FanLevel + Step > 255) {
  7510  073A  0023               	movlb	3	; select bank3
  7511  073B  0867               	movf	_FanLevel^(0+384),w
  7512  073C  0022               	movlb	2	; select bank2
  7513  073D  0759               	addwf	_Step^(0+256),w
  7514  073E  0021               	movlb	1	; select bank1
  7515  073F  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7516  0740  0022               	movlb	2	; select bank2
  7517  0741  085A               	movf	(_Step+1)^(0+256),w
  7518  0742  1803               	skipnc
  7519  0743  0A5A               	incf	(_Step+1)^(0+256),w
  7520  0744  0021               	movlb	1	; select bank1
  7521  0745  00D9               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7522  0746  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7523  0747  3A80               	xorlw	128
  7524  0748  00FF               	movwf	127
  7525  0749  3081               	movlw	129
  7526  074A  027F               	subwf	127,w
  7527  074B  1D03               	skipz
  7528  074C  2F4F               	goto	u6785
  7529  074D  3000               	movlw	0
  7530  074E  0258               	subwf	??_UpdateFanLevel^(0+128),w
  7531  074F                     u6785:	
  7532  074F  1C03               	skipc
  7533  0750  2F53               	goto	l6300
  7534                           
  7535                           ;klondike.c: 238: FanLevel = 255;
  7536  0751  30FF               	movlw	255
  7537  0752  2F6B               	goto	L7
  7538  0753                     l6300:	
  7539                           ;klondike.c: 239: }
  7540                           
  7541                           
  7542                           ;klondike.c: 240: else if(FanLevel + Step < 75) {
  7543  0753  0023               	movlb	3	; select bank3
  7544  0754  0867               	movf	_FanLevel^(0+384),w
  7545  0755  0022               	movlb	2	; select bank2
  7546  0756  0759               	addwf	_Step^(0+256),w
  7547  0757  0021               	movlb	1	; select bank1
  7548  0758  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7549  0759  0022               	movlb	2	; select bank2
  7550  075A  085A               	movf	(_Step+1)^(0+256),w
  7551  075B  1803               	skipnc
  7552  075C  0A5A               	incf	(_Step+1)^(0+256),w
  7553  075D  0021               	movlb	1	; select bank1
  7554  075E  00D9               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7555  075F  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7556  0760  3A80               	xorlw	128
  7557  0761  00FF               	movwf	127
  7558  0762  3080               	movlw	128
  7559  0763  027F               	subwf	127,w
  7560  0764  1D03               	skipz
  7561  0765  2F68               	goto	u6795
  7562  0766  304B               	movlw	75
  7563  0767  0258               	subwf	??_UpdateFanLevel^(0+128),w
  7564  0768                     u6795:	
  7565  0768  1803               	skipnc
  7566  0769  2F70               	goto	l754
  7567                           
  7568                           ;klondike.c: 241: FanLevel = 75;
  7569  076A  304B               	movlw	75
  7570  076B                     L7:	
  7571  076B  0021               	movlb	1	; select bank1
  7572  076C  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7573  076D  0858               	movf	??_UpdateFanLevel^(0+128),w
  7574  076E  0023               	movlb	3	; select bank3
  7575  076F  00E7               	movwf	_FanLevel^(0+384)
  7576  0770                     l754:	
  7577                           
  7578                           ;klondike.c: 242: }
  7579                           ;klondike.c: 244: LastTemp = Status.Temp;
  7580  0770  0023               	movlb	3	; select bank3
  7581  0771  0831               	movf	(_Status^(0+384)+5),w	;volatile
  7582  0772  0021               	movlb	1	; select bank1
  7583  0773  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7584  0774  0858               	movf	??_UpdateFanLevel^(0+128),w
  7585  0775  0023               	movlb	3	; select bank3
  7586  0776  00D5               	movwf	_LastTemp^(0+384)
  7587                           
  7588                           ;klondike.c: 245: LastError = Error;
  7589  0777  0866               	movf	(_Error+1)^(0+384),w
  7590  0778  01D0               	clrf	(_LastError+1)^(0+384)
  7591  0779  07D0               	addwf	(_LastError+1)^(0+384),f
  7592  077A  0865               	movf	_Error^(0+384),w
  7593  077B  01CF               	clrf	_LastError^(0+384)
  7594  077C  07CF               	addwf	_LastError^(0+384),f
  7595                           
  7596                           ;klondike.c: 247: PWM1DCH = Status.FanSpeed = FanLevel;
  7597  077D  3006               	movlw	6
  7598  077E  3EAC               	addlw	_Status& (0+255)
  7599  077F  0086               	movwf	6
  7600  0780  3001               	movlw	1	; select bank3/4
  7601  0781  0087               	movwf	7
  7602  0782  0867               	movf	_FanLevel^(0+384),w
  7603  0783  3FC0               	movwi [0]fsr1
  7604  0784  002C               	movlb	12	; select bank12
  7605  0785  0092               	movwf	18	;volatile
  7606  0786  0008               	return
  7607  0787                     __end_of_UpdateFanLevel:	
  7608                           
  7609                           	psect	text23
  7610  14A5                     __ptext23:	
  7611 ;; *************** function ___fttol *****************
  7612 ;; Defined at:
  7613 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  f1              3   42[BANK1 ] float 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  lval            4   51[BANK1 ] unsigned long 
  7618 ;;  exp1            1   55[BANK1 ] unsigned char 
  7619 ;;  sign1           1   50[BANK1 ] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  4   42[BANK1 ] long 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7629 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;Total ram usage:       14 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    4
  7636 ;; This function calls:
  7637 ;;		Nothing
  7638 ;; This function is called by:
  7639 ;;		_UpdateFanLevel
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           
  7644                           ;psect for function ___fttol
  7645  14A5                     ___fttol:	
  7646                           
  7647                           ;incstack = 0
  7648                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7649  14A5  0021               	movlb	1	; select bank1
  7650  14A6  084A               	movf	___fttol@f1^(0+128),w
  7651  14A7  00CE               	movwf	??___fttol^(0+128)
  7652  14A8  084B               	movf	(___fttol@f1+1)^(0+128),w
  7653  14A9  00CF               	movwf	(??___fttol^(0+128)+1)
  7654  14AA  084C               	movf	(___fttol@f1+2)^(0+128),w
  7655  14AB  00D0               	movwf	(??___fttol^(0+128)+2)
  7656  14AC  1003               	clrc
  7657  14AD  0D4F               	rlf	(??___fttol^(0+128)+1),w
  7658  14AE  0D50               	rlf	(??___fttol^(0+128)+2),w
  7659  14AF  00D1               	movwf	(??___fttol+3)^(0+128)
  7660  14B0  0851               	movf	(??___fttol+3)^(0+128),w
  7661  14B1  00D7               	movwf	___fttol@exp1^(0+128)
  7662  14B2  08D7               	movf	___fttol@exp1^(0+128),f
  7663  14B3  1D03               	skipz
  7664  14B4  2CBE               	goto	l6536
  7665  14B5  3000               	movlw	0
  7666  14B6  00CD               	movwf	(?___fttol+3)^(0+128)
  7667  14B7  3000               	movlw	0
  7668  14B8  00CC               	movwf	(?___fttol+2)^(0+128)
  7669  14B9  3000               	movlw	0
  7670  14BA  00CB               	movwf	(?___fttol+1)^(0+128)
  7671  14BB  3000               	movlw	0
  7672  14BC  00CA               	movwf	?___fttol^(0+128)
  7673  14BD  0008               	return
  7674  14BE                     l6536:	
  7675  14BE  084A               	movf	___fttol@f1^(0+128),w
  7676  14BF  00CE               	movwf	??___fttol^(0+128)
  7677  14C0  084B               	movf	(___fttol@f1+1)^(0+128),w
  7678  14C1  00CF               	movwf	(??___fttol^(0+128)+1)
  7679  14C2  084C               	movf	(___fttol@f1+2)^(0+128),w
  7680  14C3  00D0               	movwf	(??___fttol^(0+128)+2)
  7681  14C4  3017               	movlw	23
  7682  14C5                     u7405:	
  7683  14C5  36D0               	lsrf	(??___fttol^(0+128)+2),f
  7684  14C6  0CCF               	rrf	(??___fttol^(0+128)+1),f
  7685  14C7  0CCE               	rrf	??___fttol^(0+128),f
  7686  14C8  0B89               	decfsz	9,f
  7687  14C9  2CC5               	goto	u7405
  7688  14CA  084E               	movf	??___fttol^(0+128),w
  7689  14CB  00D1               	movwf	(??___fttol+3)^(0+128)
  7690  14CC  0851               	movf	(??___fttol+3)^(0+128),w
  7691  14CD  00D2               	movwf	___fttol@sign1^(0+128)
  7692  14CE  17CB               	bsf	(___fttol@f1^(0+128)+1),7
  7693  14CF  30FF               	movlw	255
  7694  14D0  05CA               	andwf	___fttol@f1^(0+128),f
  7695  14D1  30FF               	movlw	255
  7696  14D2  05CB               	andwf	(___fttol@f1+1)^(0+128),f
  7697  14D3  3000               	movlw	0
  7698  14D4  05CC               	andwf	(___fttol@f1+2)^(0+128),f
  7699  14D5  084A               	movf	___fttol@f1^(0+128),w
  7700  14D6  00D3               	movwf	___fttol@lval^(0+128)
  7701  14D7  084B               	movf	(___fttol@f1+1)^(0+128),w
  7702  14D8  00D4               	movwf	(___fttol@lval^(0+128)+1)
  7703  14D9  084C               	movf	(___fttol@f1+2)^(0+128),w
  7704  14DA  00D5               	movwf	(___fttol@lval^(0+128)+2)
  7705  14DB  01D6               	clrf	(___fttol@lval^(0+128)+3)
  7706  14DC  308E               	movlw	142
  7707  14DD  02D7               	subwf	___fttol@exp1^(0+128),f
  7708  14DE  1FD7               	btfss	___fttol@exp1^(0+128),7
  7709  14DF  2CFC               	goto	l6556
  7710  14E0  0857               	movf	___fttol@exp1^(0+128),w
  7711  14E1  3A80               	xorlw	128
  7712  14E2  3E8F               	addlw	143
  7713  14E3  1803               	skipnc
  7714  14E4  2CEE               	goto	l6554
  7715  14E5  3000               	movlw	0
  7716  14E6  00CD               	movwf	(?___fttol+3)^(0+128)
  7717  14E7  3000               	movlw	0
  7718  14E8  00CC               	movwf	(?___fttol+2)^(0+128)
  7719  14E9  3000               	movlw	0
  7720  14EA  00CB               	movwf	(?___fttol+1)^(0+128)
  7721  14EB  3000               	movlw	0
  7722  14EC  00CA               	movwf	?___fttol^(0+128)
  7723  14ED  0008               	return
  7724  14EE                     l6554:	
  7725  14EE  3001               	movlw	1
  7726  14EF                     u7435:	
  7727  14EF  36D6               	lsrf	(___fttol@lval+3)^(0+128),f
  7728  14F0  0CD5               	rrf	(___fttol@lval+2)^(0+128),f
  7729  14F1  0CD4               	rrf	(___fttol@lval+1)^(0+128),f
  7730  14F2  0CD3               	rrf	___fttol@lval^(0+128),f
  7731  14F3  0B89               	decfsz	9,f
  7732  14F4  2CEF               	goto	u7435
  7733  14F5  3001               	movlw	1
  7734  14F6  00CE               	movwf	??___fttol^(0+128)
  7735  14F7  084E               	movf	??___fttol^(0+128),w
  7736  14F8  07D7               	addwf	___fttol@exp1^(0+128),f
  7737  14F9  1903               	btfsc	3,2
  7738  14FA  2D15               	goto	l6566
  7739  14FB  2CEE               	goto	l6554
  7740  14FC                     l6556:	
  7741  14FC  3018               	movlw	24
  7742  14FD  0257               	subwf	___fttol@exp1^(0+128),w
  7743  14FE  1C03               	skipc
  7744  14FF  2D12               	goto	l6564
  7745  1500  3000               	movlw	0
  7746  1501  00CD               	movwf	(?___fttol+3)^(0+128)
  7747  1502  3000               	movlw	0
  7748  1503  00CC               	movwf	(?___fttol+2)^(0+128)
  7749  1504  3000               	movlw	0
  7750  1505  00CB               	movwf	(?___fttol+1)^(0+128)
  7751  1506  3000               	movlw	0
  7752  1507  00CA               	movwf	?___fttol^(0+128)
  7753  1508  0008               	return
  7754  1509                     l6562:	
  7755  1509  3001               	movlw	1
  7756  150A                     u7465:	
  7757  150A  35D3               	lslf	___fttol@lval^(0+128),f
  7758  150B  0DD4               	rlf	(___fttol@lval+1)^(0+128),f
  7759  150C  0DD5               	rlf	(___fttol@lval+2)^(0+128),f
  7760  150D  0DD6               	rlf	(___fttol@lval+3)^(0+128),f
  7761  150E  0B89               	decfsz	9,f
  7762  150F  2D0A               	goto	u7465
  7763  1510  3001               	movlw	1
  7764  1511  02D7               	subwf	___fttol@exp1^(0+128),f
  7765  1512                     l6564:	
  7766  1512  08D7               	movf	___fttol@exp1^(0+128),f
  7767  1513  1D03               	skipz
  7768  1514  2D09               	goto	l6562
  7769  1515                     l6566:	
  7770  1515  0852               	movf	___fttol@sign1^(0+128),w
  7771  1516  1903               	btfsc	3,2
  7772  1517  2D23               	goto	l6570
  7773  1518  09D3               	comf	___fttol@lval^(0+128),f
  7774  1519  09D4               	comf	(___fttol@lval+1)^(0+128),f
  7775  151A  09D5               	comf	(___fttol@lval+2)^(0+128),f
  7776  151B  09D6               	comf	(___fttol@lval+3)^(0+128),f
  7777  151C  0AD3               	incf	___fttol@lval^(0+128),f
  7778  151D  1903               	skipnz
  7779  151E  0AD4               	incf	(___fttol@lval+1)^(0+128),f
  7780  151F  1903               	skipnz
  7781  1520  0AD5               	incf	(___fttol@lval+2)^(0+128),f
  7782  1521  1903               	skipnz
  7783  1522  0AD6               	incf	(___fttol@lval+3)^(0+128),f
  7784  1523                     l6570:	
  7785  1523  0856               	movf	(___fttol@lval+3)^(0+128),w
  7786  1524  00CD               	movwf	(?___fttol+3)^(0+128)
  7787  1525  0855               	movf	(___fttol@lval+2)^(0+128),w
  7788  1526  00CC               	movwf	(?___fttol+2)^(0+128)
  7789  1527  0854               	movf	(___fttol@lval+1)^(0+128),w
  7790  1528  00CB               	movwf	(?___fttol+1)^(0+128)
  7791  1529  0853               	movf	___fttol@lval^(0+128),w
  7792  152A  00CA               	movwf	?___fttol^(0+128)
  7793  152B  0008               	return
  7794  152C                     __end_of___fttol:	
  7795                           
  7796                           	psect	text24
  7797  1ADF                     __ptext24:	
  7798 ;; *************** function ___ftneg *****************
  7799 ;; Defined at:
  7800 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  f1              3   26[BANK1 ] float 
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  3   26[BANK1 ] float 
  7807 ;; Registers used:
  7808 ;;		wreg
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7814 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;Total ram usage:        3 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:    4
  7821 ;; This function calls:
  7822 ;;		Nothing
  7823 ;; This function is called by:
  7824 ;;		_UpdateFanLevel
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function ___ftneg
  7830  1ADF                     ___ftneg:	
  7831                           
  7832                           ;incstack = 0
  7833                           ; Regs used in ___ftneg: [wreg]
  7834  1ADF  0021               	movlb	1	; select bank1
  7835  1AE0  083C               	movf	(___ftneg@f1+2)^(0+128),w
  7836  1AE1  043B               	iorwf	(___ftneg@f1+1)^(0+128),w
  7837  1AE2  043A               	iorwf	___ftneg@f1^(0+128),w
  7838  1AE3  1903               	skipnz
  7839  1AE4  0008               	return
  7840  1AE5  3080               	movlw	128
  7841  1AE6  06BC               	xorwf	(___ftneg@f1+2)^(0+128),f
  7842  1AE7  0008               	return
  7843  1AE8                     __end_of___ftneg:	
  7844                           
  7845                           	psect	text25
  7846  0B93                     __ptext25:	
  7847 ;; *************** function ___ftmul *****************
  7848 ;; Defined at:
  7849 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  f1              3   10[BANK1 ] float 
  7852 ;;  f2              3   13[BANK1 ] float 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  f3_as_produc    3   21[BANK1 ] unsigned um
  7855 ;;  sign            1   25[BANK1 ] unsigned char 
  7856 ;;  cntr            1   24[BANK1 ] unsigned char 
  7857 ;;  exp             1   20[BANK1 ] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  3   10[BANK1 ] float 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0, pclath, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7867 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;Total ram usage:       16 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    5
  7874 ;; This function calls:
  7875 ;;		___ftpack
  7876 ;; This function is called by:
  7877 ;;		_UpdateFanLevel
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function ___ftmul
  7883  0B93                     ___ftmul:	
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7887  0B93  0021               	movlb	1	; select bank1
  7888  0B94  082A               	movf	___ftmul@f1^(0+128),w
  7889  0B95  00B0               	movwf	??___ftmul^(0+128)
  7890  0B96  082B               	movf	(___ftmul@f1+1)^(0+128),w
  7891  0B97  00B1               	movwf	(??___ftmul^(0+128)+1)
  7892  0B98  082C               	movf	(___ftmul@f1+2)^(0+128),w
  7893  0B99  00B2               	movwf	(??___ftmul^(0+128)+2)
  7894  0B9A  1003               	clrc
  7895  0B9B  0D31               	rlf	(??___ftmul^(0+128)+1),w
  7896  0B9C  0D32               	rlf	(??___ftmul^(0+128)+2),w
  7897  0B9D  00B3               	movwf	(??___ftmul+3)^(0+128)
  7898  0B9E  0833               	movf	(??___ftmul+3)^(0+128),w
  7899  0B9F  00B4               	movwf	___ftmul@exp^(0+128)
  7900  0BA0  08B4               	movf	___ftmul@exp^(0+128),f
  7901  0BA1  1D03               	skipz
  7902  0BA2  2BAA               	goto	l6478
  7903  0BA3  3000               	movlw	0
  7904  0BA4  00AA               	movwf	?___ftmul^(0+128)
  7905  0BA5  3000               	movlw	0
  7906  0BA6  00AB               	movwf	(?___ftmul+1)^(0+128)
  7907  0BA7  3000               	movlw	0
  7908  0BA8  00AC               	movwf	(?___ftmul+2)^(0+128)
  7909  0BA9  0008               	return
  7910  0BAA                     l6478:	
  7911  0BAA  082D               	movf	___ftmul@f2^(0+128),w
  7912  0BAB  00B0               	movwf	??___ftmul^(0+128)
  7913  0BAC  082E               	movf	(___ftmul@f2+1)^(0+128),w
  7914  0BAD  00B1               	movwf	(??___ftmul^(0+128)+1)
  7915  0BAE  082F               	movf	(___ftmul@f2+2)^(0+128),w
  7916  0BAF  00B2               	movwf	(??___ftmul^(0+128)+2)
  7917  0BB0  1003               	clrc
  7918  0BB1  0D31               	rlf	(??___ftmul^(0+128)+1),w
  7919  0BB2  0D32               	rlf	(??___ftmul^(0+128)+2),w
  7920  0BB3  00B3               	movwf	(??___ftmul+3)^(0+128)
  7921  0BB4  0833               	movf	(??___ftmul+3)^(0+128),w
  7922  0BB5  00B9               	movwf	___ftmul@sign^(0+128)
  7923  0BB6  08B9               	movf	___ftmul@sign^(0+128),f
  7924  0BB7  1D03               	skipz
  7925  0BB8  2BC0               	goto	l6484
  7926  0BB9  3000               	movlw	0
  7927  0BBA  00AA               	movwf	?___ftmul^(0+128)
  7928  0BBB  3000               	movlw	0
  7929  0BBC  00AB               	movwf	(?___ftmul+1)^(0+128)
  7930  0BBD  3000               	movlw	0
  7931  0BBE  00AC               	movwf	(?___ftmul+2)^(0+128)
  7932  0BBF  0008               	return
  7933  0BC0                     l6484:	
  7934  0BC0  0839               	movf	___ftmul@sign^(0+128),w
  7935  0BC1  3E7B               	addlw	123
  7936  0BC2  00B0               	movwf	??___ftmul^(0+128)
  7937  0BC3  0830               	movf	??___ftmul^(0+128),w
  7938  0BC4  07B4               	addwf	___ftmul@exp^(0+128),f
  7939  0BC5  082A               	movf	___ftmul@f1^(0+128),w
  7940  0BC6  00B0               	movwf	??___ftmul^(0+128)
  7941  0BC7  082B               	movf	(___ftmul@f1+1)^(0+128),w
  7942  0BC8  00B1               	movwf	(??___ftmul^(0+128)+1)
  7943  0BC9  082C               	movf	(___ftmul@f1+2)^(0+128),w
  7944  0BCA  00B2               	movwf	(??___ftmul^(0+128)+2)
  7945  0BCB  3010               	movlw	16
  7946  0BCC                     u7285:	
  7947  0BCC  36B2               	lsrf	(??___ftmul^(0+128)+2),f
  7948  0BCD  0CB1               	rrf	(??___ftmul^(0+128)+1),f
  7949  0BCE  0CB0               	rrf	??___ftmul^(0+128),f
  7950  0BCF  0B89               	decfsz	9,f
  7951  0BD0  2BCC               	goto	u7285
  7952  0BD1  0830               	movf	??___ftmul^(0+128),w
  7953  0BD2  00B3               	movwf	(??___ftmul+3)^(0+128)
  7954  0BD3  0833               	movf	(??___ftmul+3)^(0+128),w
  7955  0BD4  00B9               	movwf	___ftmul@sign^(0+128)
  7956  0BD5  082D               	movf	___ftmul@f2^(0+128),w
  7957  0BD6  00B0               	movwf	??___ftmul^(0+128)
  7958  0BD7  082E               	movf	(___ftmul@f2+1)^(0+128),w
  7959  0BD8  00B1               	movwf	(??___ftmul^(0+128)+1)
  7960  0BD9  082F               	movf	(___ftmul@f2+2)^(0+128),w
  7961  0BDA  00B2               	movwf	(??___ftmul^(0+128)+2)
  7962  0BDB  3010               	movlw	16
  7963  0BDC                     u7295:	
  7964  0BDC  36B2               	lsrf	(??___ftmul^(0+128)+2),f
  7965  0BDD  0CB1               	rrf	(??___ftmul^(0+128)+1),f
  7966  0BDE  0CB0               	rrf	??___ftmul^(0+128),f
  7967  0BDF  0B89               	decfsz	9,f
  7968  0BE0  2BDC               	goto	u7295
  7969  0BE1  0830               	movf	??___ftmul^(0+128),w
  7970  0BE2  00B3               	movwf	(??___ftmul+3)^(0+128)
  7971  0BE3  0833               	movf	(??___ftmul+3)^(0+128),w
  7972  0BE4  06B9               	xorwf	___ftmul@sign^(0+128),f
  7973  0BE5  3080               	movlw	128
  7974  0BE6  00B0               	movwf	??___ftmul^(0+128)
  7975  0BE7  0830               	movf	??___ftmul^(0+128),w
  7976  0BE8  05B9               	andwf	___ftmul@sign^(0+128),f
  7977  0BE9  17AB               	bsf	(___ftmul@f1^(0+128)+1),7
  7978  0BEA  17AE               	bsf	(___ftmul@f2^(0+128)+1),7
  7979  0BEB  30FF               	movlw	255
  7980  0BEC  05AD               	andwf	___ftmul@f2^(0+128),f
  7981  0BED  30FF               	movlw	255
  7982  0BEE  05AE               	andwf	(___ftmul@f2+1)^(0+128),f
  7983  0BEF  3000               	movlw	0
  7984  0BF0  05AF               	andwf	(___ftmul@f2+2)^(0+128),f
  7985  0BF1  3000               	movlw	0
  7986  0BF2  00B5               	movwf	___ftmul@f3_as_product^(0+128)
  7987  0BF3  3000               	movlw	0
  7988  0BF4  00B6               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  7989  0BF5  3000               	movlw	0
  7990  0BF6  00B7               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  7991  0BF7  3007               	movlw	7
  7992  0BF8  00B0               	movwf	??___ftmul^(0+128)
  7993  0BF9  0830               	movf	??___ftmul^(0+128),w
  7994  0BFA  00B8               	movwf	___ftmul@cntr^(0+128)
  7995  0BFB                     l6496:	
  7996  0BFB  1C2A               	btfss	___ftmul@f1^(0+128),0
  7997  0BFC  2C03               	goto	l6500
  7998  0BFD  082D               	movf	___ftmul@f2^(0+128),w
  7999  0BFE  07B5               	addwf	___ftmul@f3_as_product^(0+128),f
  8000  0BFF  082E               	movf	(___ftmul@f2+1)^(0+128),w
  8001  0C00  3DB6               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8002  0C01  082F               	movf	(___ftmul@f2+2)^(0+128),w
  8003  0C02  3DB7               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8004  0C03                     l6500:	
  8005  0C03  3001               	movlw	1
  8006  0C04                     u7315:	
  8007  0C04  36AC               	lsrf	(___ftmul@f1+2)^(0+128),f
  8008  0C05  0CAB               	rrf	(___ftmul@f1+1)^(0+128),f
  8009  0C06  0CAA               	rrf	___ftmul@f1^(0+128),f
  8010  0C07  0B89               	decfsz	9,f
  8011  0C08  2C04               	goto	u7315
  8012  0C09  3001               	movlw	1
  8013  0C0A                     u7325:	
  8014  0C0A  35AD               	lslf	___ftmul@f2^(0+128),f
  8015  0C0B  0DAE               	rlf	(___ftmul@f2+1)^(0+128),f
  8016  0C0C  0DAF               	rlf	(___ftmul@f2+2)^(0+128),f
  8017  0C0D  0B89               	decfsz	9,f
  8018  0C0E  2C0A               	goto	u7325
  8019  0C0F  3001               	movlw	1
  8020  0C10  02B8               	subwf	___ftmul@cntr^(0+128),f
  8021  0C11  1D03               	btfss	3,2
  8022  0C12  2BFB               	goto	l6496
  8023  0C13  3009               	movlw	9
  8024  0C14  00B0               	movwf	??___ftmul^(0+128)
  8025  0C15  0830               	movf	??___ftmul^(0+128),w
  8026  0C16  00B8               	movwf	___ftmul@cntr^(0+128)
  8027  0C17                     l6508:	
  8028  0C17  1C2A               	btfss	___ftmul@f1^(0+128),0
  8029  0C18  2C1F               	goto	l6512
  8030  0C19  082D               	movf	___ftmul@f2^(0+128),w
  8031  0C1A  07B5               	addwf	___ftmul@f3_as_product^(0+128),f
  8032  0C1B  082E               	movf	(___ftmul@f2+1)^(0+128),w
  8033  0C1C  3DB6               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8034  0C1D  082F               	movf	(___ftmul@f2+2)^(0+128),w
  8035  0C1E  3DB7               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8036  0C1F                     l6512:	
  8037  0C1F  3001               	movlw	1
  8038  0C20                     u7355:	
  8039  0C20  36AC               	lsrf	(___ftmul@f1+2)^(0+128),f
  8040  0C21  0CAB               	rrf	(___ftmul@f1+1)^(0+128),f
  8041  0C22  0CAA               	rrf	___ftmul@f1^(0+128),f
  8042  0C23  0B89               	decfsz	9,f
  8043  0C24  2C20               	goto	u7355
  8044  0C25  3001               	movlw	1
  8045  0C26                     u7365:	
  8046  0C26  36B7               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8047  0C27  0CB6               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8048  0C28  0CB5               	rrf	___ftmul@f3_as_product^(0+128),f
  8049  0C29  0B89               	decfsz	9,f
  8050  0C2A  2C26               	goto	u7365
  8051  0C2B  3001               	movlw	1
  8052  0C2C  02B8               	subwf	___ftmul@cntr^(0+128),f
  8053  0C2D  1D03               	btfss	3,2
  8054  0C2E  2C17               	goto	l6508
  8055  0C2F  0835               	movf	___ftmul@f3_as_product^(0+128),w
  8056  0C30  00A0               	movwf	?___ftpack^(0+128)
  8057  0C31  0836               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8058  0C32  00A1               	movwf	(?___ftpack+1)^(0+128)
  8059  0C33  0837               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8060  0C34  00A2               	movwf	(?___ftpack+2)^(0+128)
  8061  0C35  0834               	movf	___ftmul@exp^(0+128),w
  8062  0C36  00B0               	movwf	??___ftmul^(0+128)
  8063  0C37  0830               	movf	??___ftmul^(0+128),w
  8064  0C38  00A3               	movwf	(?___ftpack^(0+128)+3)
  8065  0C39  0839               	movf	___ftmul@sign^(0+128),w
  8066  0C3A  00B1               	movwf	(??___ftmul+1)^(0+128)
  8067  0C3B  0831               	movf	(??___ftmul+1)^(0+128),w
  8068  0C3C  00A4               	movwf	(?___ftpack^(0+128)+4)
  8069  0C3D  3191  215F         	fcall	___ftpack
  8070  0C3F  0021               	movlb	1	; select bank1
  8071  0C40  0820               	movf	?___ftpack^(0+128),w
  8072  0C41  00AA               	movwf	?___ftmul^(0+128)
  8073  0C42  0821               	movf	(?___ftpack+1)^(0+128),w
  8074  0C43  00AB               	movwf	(?___ftmul+1)^(0+128)
  8075  0C44  0822               	movf	(?___ftpack+2)^(0+128),w
  8076  0C45  00AC               	movwf	(?___ftmul+2)^(0+128)
  8077  0C46  0008               	return
  8078  0C47                     __end_of___ftmul:	
  8079                           
  8080                           	psect	text26
  8081  0DF0                     __ptext26:	
  8082 ;; *************** function ___ftadd *****************
  8083 ;; Defined at:
  8084 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  f1              3   29[BANK1 ] float 
  8087 ;;  f2              3   32[BANK1 ] float 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  exp1            1   41[BANK1 ] unsigned char 
  8090 ;;  exp2            1   40[BANK1 ] unsigned char 
  8091 ;;  sign            1   39[BANK1 ] unsigned char 
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  3   29[BANK1 ] float 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0, pclath, cstack
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8101 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8103 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8105 ;;Total ram usage:       13 bytes
  8106 ;; Hardware stack levels used:    1
  8107 ;; Hardware stack levels required when called:    5
  8108 ;; This function calls:
  8109 ;;		___ftpack
  8110 ;; This function is called by:
  8111 ;;		_UpdateFanLevel
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           
  8116                           ;psect for function ___ftadd
  8117  0DF0                     ___ftadd:	
  8118                           
  8119                           ;incstack = 0
  8120                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8121  0DF0  0021               	movlb	1	; select bank1
  8122  0DF1  083D               	movf	___ftadd@f1^(0+128),w
  8123  0DF2  00C3               	movwf	??___ftadd^(0+128)
  8124  0DF3  083E               	movf	(___ftadd@f1+1)^(0+128),w
  8125  0DF4  00C4               	movwf	(??___ftadd^(0+128)+1)
  8126  0DF5  083F               	movf	(___ftadd@f1+2)^(0+128),w
  8127  0DF6  00C5               	movwf	(??___ftadd^(0+128)+2)
  8128  0DF7  1003               	clrc
  8129  0DF8  0D44               	rlf	(??___ftadd^(0+128)+1),w
  8130  0DF9  0D45               	rlf	(??___ftadd^(0+128)+2),w
  8131  0DFA  00C6               	movwf	(??___ftadd+3)^(0+128)
  8132  0DFB  0846               	movf	(??___ftadd+3)^(0+128),w
  8133  0DFC  00C9               	movwf	___ftadd@exp1^(0+128)
  8134  0DFD  0840               	movf	___ftadd@f2^(0+128),w
  8135  0DFE  00C3               	movwf	??___ftadd^(0+128)
  8136  0DFF  0841               	movf	(___ftadd@f2+1)^(0+128),w
  8137  0E00  00C4               	movwf	(??___ftadd^(0+128)+1)
  8138  0E01  0842               	movf	(___ftadd@f2+2)^(0+128),w
  8139  0E02  00C5               	movwf	(??___ftadd^(0+128)+2)
  8140  0E03  1003               	clrc
  8141  0E04  0D44               	rlf	(??___ftadd^(0+128)+1),w
  8142  0E05  0D45               	rlf	(??___ftadd^(0+128)+2),w
  8143  0E06  00C6               	movwf	(??___ftadd+3)^(0+128)
  8144  0E07  0846               	movf	(??___ftadd+3)^(0+128),w
  8145  0E08  00C8               	movwf	___ftadd@exp2^(0+128)
  8146  0E09  0849               	movf	___ftadd@exp1^(0+128),w
  8147  0E0A  1903               	btfsc	3,2
  8148  0E0B  2E18               	goto	l6408
  8149  0E0C  0848               	movf	___ftadd@exp2^(0+128),w
  8150  0E0D  0249               	subwf	___ftadd@exp1^(0+128),w
  8151  0E0E  1803               	skipnc
  8152  0E0F  2E1F               	goto	l6412
  8153  0E10  0349               	decf	___ftadd@exp1^(0+128),w
  8154  0E11  3AFF               	xorlw	255
  8155  0E12  0748               	addwf	___ftadd@exp2^(0+128),w
  8156  0E13  00C3               	movwf	??___ftadd^(0+128)
  8157  0E14  3019               	movlw	25
  8158  0E15  0243               	subwf	??___ftadd^(0+128),w
  8159  0E16  1C03               	skipc
  8160  0E17  2E1F               	goto	l6412
  8161  0E18                     l6408:	
  8162  0E18  0840               	movf	___ftadd@f2^(0+128),w
  8163  0E19  00BD               	movwf	?___ftadd^(0+128)
  8164  0E1A  0841               	movf	(___ftadd@f2+1)^(0+128),w
  8165  0E1B  00BE               	movwf	(?___ftadd+1)^(0+128)
  8166  0E1C  0842               	movf	(___ftadd@f2+2)^(0+128),w
  8167  0E1D  00BF               	movwf	(?___ftadd+2)^(0+128)
  8168  0E1E  0008               	return
  8169  0E1F                     l6412:	
  8170  0E1F  0848               	movf	___ftadd@exp2^(0+128),w
  8171  0E20  1903               	btfsc	3,2
  8172  0E21  0008               	return
  8173  0E22  0849               	movf	___ftadd@exp1^(0+128),w
  8174  0E23  0248               	subwf	___ftadd@exp2^(0+128),w
  8175  0E24  1803               	skipnc
  8176  0E25  2E2E               	goto	l6418
  8177  0E26  0348               	decf	___ftadd@exp2^(0+128),w
  8178  0E27  3AFF               	xorlw	255
  8179  0E28  0749               	addwf	___ftadd@exp1^(0+128),w
  8180  0E29  00C3               	movwf	??___ftadd^(0+128)
  8181  0E2A  3019               	movlw	25
  8182  0E2B  0243               	subwf	??___ftadd^(0+128),w
  8183  0E2C  1803               	btfsc	3,0
  8184  0E2D  0008               	return
  8185  0E2E                     l6418:	
  8186  0E2E  3006               	movlw	6
  8187  0E2F  00C3               	movwf	??___ftadd^(0+128)
  8188  0E30  0843               	movf	??___ftadd^(0+128),w
  8189  0E31  00C7               	movwf	___ftadd@sign^(0+128)
  8190  0E32  1BBF               	btfsc	(___ftadd@f1+2)^(0+128),7
  8191  0E33  17C7               	bsf	___ftadd@sign^(0+128),7
  8192  0E34  1BC2               	btfsc	(___ftadd@f2+2)^(0+128),7
  8193  0E35  1747               	bsf	___ftadd@sign^(0+128),6
  8194  0E36  17BE               	bsf	(___ftadd@f1^(0+128)+1),7
  8195  0E37  30FF               	movlw	255
  8196  0E38  05BD               	andwf	___ftadd@f1^(0+128),f
  8197  0E39  30FF               	movlw	255
  8198  0E3A  05BE               	andwf	(___ftadd@f1+1)^(0+128),f
  8199  0E3B  3000               	movlw	0
  8200  0E3C  05BF               	andwf	(___ftadd@f1+2)^(0+128),f
  8201  0E3D  17C1               	bsf	(___ftadd@f2^(0+128)+1),7
  8202  0E3E  30FF               	movlw	255
  8203  0E3F  05C0               	andwf	___ftadd@f2^(0+128),f
  8204  0E40  30FF               	movlw	255
  8205  0E41  05C1               	andwf	(___ftadd@f2+1)^(0+128),f
  8206  0E42  3000               	movlw	0
  8207  0E43  05C2               	andwf	(___ftadd@f2+2)^(0+128),f
  8208  0E44  0848               	movf	___ftadd@exp2^(0+128),w
  8209  0E45  0249               	subwf	___ftadd@exp1^(0+128),w
  8210  0E46  1803               	skipnc
  8211  0E47  2E6A               	goto	l6440
  8212  0E48                     l6430:	
  8213  0E48  3001               	movlw	1
  8214  0E49                     u7125:	
  8215  0E49  35C0               	lslf	___ftadd@f2^(0+128),f
  8216  0E4A  0DC1               	rlf	(___ftadd@f2+1)^(0+128),f
  8217  0E4B  0DC2               	rlf	(___ftadd@f2+2)^(0+128),f
  8218  0E4C  0B89               	decfsz	9,f
  8219  0E4D  2E49               	goto	u7125
  8220  0E4E  3001               	movlw	1
  8221  0E4F  02C8               	subwf	___ftadd@exp2^(0+128),f
  8222  0E50  0848               	movf	___ftadd@exp2^(0+128),w
  8223  0E51  0649               	xorwf	___ftadd@exp1^(0+128),w
  8224  0E52  1903               	skipnz
  8225  0E53  2E65               	goto	l6438
  8226  0E54  3001               	movlw	1
  8227  0E55  02C7               	subwf	___ftadd@sign^(0+128),f
  8228  0E56  0847               	movf	___ftadd@sign^(0+128),w
  8229  0E57  3907               	andlw	7
  8230  0E58  1903               	btfsc	3,2
  8231  0E59  2E65               	goto	l6438
  8232  0E5A  2E48               	goto	l6430
  8233  0E5B                     l6436:	
  8234  0E5B  3001               	movlw	1
  8235  0E5C                     u7155:	
  8236  0E5C  36BF               	lsrf	(___ftadd@f1+2)^(0+128),f
  8237  0E5D  0CBE               	rrf	(___ftadd@f1+1)^(0+128),f
  8238  0E5E  0CBD               	rrf	___ftadd@f1^(0+128),f
  8239  0E5F  0B89               	decfsz	9,f
  8240  0E60  2E5C               	goto	u7155
  8241  0E61  3001               	movlw	1
  8242  0E62  00C3               	movwf	??___ftadd^(0+128)
  8243  0E63  0843               	movf	??___ftadd^(0+128),w
  8244  0E64  07C9               	addwf	___ftadd@exp1^(0+128),f
  8245  0E65                     l6438:	
  8246  0E65  0849               	movf	___ftadd@exp1^(0+128),w
  8247  0E66  0648               	xorwf	___ftadd@exp2^(0+128),w
  8248  0E67  1903               	btfsc	3,2
  8249  0E68  2E8F               	goto	l1115
  8250  0E69  2E5B               	goto	l6436
  8251  0E6A                     l6440:	
  8252  0E6A  0849               	movf	___ftadd@exp1^(0+128),w
  8253  0E6B  0248               	subwf	___ftadd@exp2^(0+128),w
  8254  0E6C  1803               	skipnc
  8255  0E6D  2E8F               	goto	l1115
  8256  0E6E                     l6442:	
  8257  0E6E  3001               	movlw	1
  8258  0E6F                     u7185:	
  8259  0E6F  35BD               	lslf	___ftadd@f1^(0+128),f
  8260  0E70  0DBE               	rlf	(___ftadd@f1+1)^(0+128),f
  8261  0E71  0DBF               	rlf	(___ftadd@f1+2)^(0+128),f
  8262  0E72  0B89               	decfsz	9,f
  8263  0E73  2E6F               	goto	u7185
  8264  0E74  3001               	movlw	1
  8265  0E75  02C9               	subwf	___ftadd@exp1^(0+128),f
  8266  0E76  0848               	movf	___ftadd@exp2^(0+128),w
  8267  0E77  0649               	xorwf	___ftadd@exp1^(0+128),w
  8268  0E78  1903               	skipnz
  8269  0E79  2E8B               	goto	l6450
  8270  0E7A  3001               	movlw	1
  8271  0E7B  02C7               	subwf	___ftadd@sign^(0+128),f
  8272  0E7C  0847               	movf	___ftadd@sign^(0+128),w
  8273  0E7D  3907               	andlw	7
  8274  0E7E  1903               	btfsc	3,2
  8275  0E7F  2E8B               	goto	l6450
  8276  0E80  2E6E               	goto	l6442
  8277  0E81                     l6448:	
  8278  0E81  3001               	movlw	1
  8279  0E82                     u7215:	
  8280  0E82  36C2               	lsrf	(___ftadd@f2+2)^(0+128),f
  8281  0E83  0CC1               	rrf	(___ftadd@f2+1)^(0+128),f
  8282  0E84  0CC0               	rrf	___ftadd@f2^(0+128),f
  8283  0E85  0B89               	decfsz	9,f
  8284  0E86  2E82               	goto	u7215
  8285  0E87  3001               	movlw	1
  8286  0E88  00C3               	movwf	??___ftadd^(0+128)
  8287  0E89  0843               	movf	??___ftadd^(0+128),w
  8288  0E8A  07C8               	addwf	___ftadd@exp2^(0+128),f
  8289  0E8B                     l6450:	
  8290  0E8B  0849               	movf	___ftadd@exp1^(0+128),w
  8291  0E8C  0648               	xorwf	___ftadd@exp2^(0+128),w
  8292  0E8D  1D03               	skipz
  8293  0E8E  2E81               	goto	l6448
  8294  0E8F                     l1115:	
  8295  0E8F  1FC7               	btfss	___ftadd@sign^(0+128),7
  8296  0E90  2EA1               	goto	l6454
  8297  0E91  30FF               	movlw	255
  8298  0E92  06BD               	xorwf	___ftadd@f1^(0+128),f
  8299  0E93  30FF               	movlw	255
  8300  0E94  06BE               	xorwf	(___ftadd@f1+1)^(0+128),f
  8301  0E95  30FF               	movlw	255
  8302  0E96  06BF               	xorwf	(___ftadd@f1+2)^(0+128),f
  8303  0E97  3001               	movlw	1
  8304  0E98  07BD               	addwf	___ftadd@f1^(0+128),f
  8305  0E99  3000               	movlw	0
  8306  0E9A  1803               	skipnc
  8307  0E9B  3001               	movlw	1
  8308  0E9C  07BE               	addwf	(___ftadd@f1+1)^(0+128),f
  8309  0E9D  3000               	movlw	0
  8310  0E9E  1803               	skipnc
  8311  0E9F  3001               	movlw	1
  8312  0EA0  07BF               	addwf	(___ftadd@f1+2)^(0+128),f
  8313  0EA1                     l6454:	
  8314  0EA1  1F47               	btfss	___ftadd@sign^(0+128),6
  8315  0EA2  2EB3               	goto	l6458
  8316  0EA3  30FF               	movlw	255
  8317  0EA4  06C0               	xorwf	___ftadd@f2^(0+128),f
  8318  0EA5  30FF               	movlw	255
  8319  0EA6  06C1               	xorwf	(___ftadd@f2+1)^(0+128),f
  8320  0EA7  30FF               	movlw	255
  8321  0EA8  06C2               	xorwf	(___ftadd@f2+2)^(0+128),f
  8322  0EA9  3001               	movlw	1
  8323  0EAA  07C0               	addwf	___ftadd@f2^(0+128),f
  8324  0EAB  3000               	movlw	0
  8325  0EAC  1803               	skipnc
  8326  0EAD  3001               	movlw	1
  8327  0EAE  07C1               	addwf	(___ftadd@f2+1)^(0+128),f
  8328  0EAF  3000               	movlw	0
  8329  0EB0  1803               	skipnc
  8330  0EB1  3001               	movlw	1
  8331  0EB2  07C2               	addwf	(___ftadd@f2+2)^(0+128),f
  8332  0EB3                     l6458:	
  8333  0EB3  01C7               	clrf	___ftadd@sign^(0+128)
  8334  0EB4  083D               	movf	___ftadd@f1^(0+128),w
  8335  0EB5  07C0               	addwf	___ftadd@f2^(0+128),f
  8336  0EB6  083E               	movf	(___ftadd@f1+1)^(0+128),w
  8337  0EB7  3DC1               	addwfc	(___ftadd@f2+1)^(0+128),f
  8338  0EB8  083F               	movf	(___ftadd@f1+2)^(0+128),w
  8339  0EB9  3DC2               	addwfc	(___ftadd@f2+2)^(0+128),f
  8340  0EBA  1FC2               	btfss	(___ftadd@f2+2)^(0+128),7
  8341  0EBB  2ECE               	goto	l6468
  8342  0EBC  30FF               	movlw	255
  8343  0EBD  06C0               	xorwf	___ftadd@f2^(0+128),f
  8344  0EBE  30FF               	movlw	255
  8345  0EBF  06C1               	xorwf	(___ftadd@f2+1)^(0+128),f
  8346  0EC0  30FF               	movlw	255
  8347  0EC1  06C2               	xorwf	(___ftadd@f2+2)^(0+128),f
  8348  0EC2  3001               	movlw	1
  8349  0EC3  07C0               	addwf	___ftadd@f2^(0+128),f
  8350  0EC4  3000               	movlw	0
  8351  0EC5  1803               	skipnc
  8352  0EC6  3001               	movlw	1
  8353  0EC7  07C1               	addwf	(___ftadd@f2+1)^(0+128),f
  8354  0EC8  3000               	movlw	0
  8355  0EC9  1803               	skipnc
  8356  0ECA  3001               	movlw	1
  8357  0ECB  07C2               	addwf	(___ftadd@f2+2)^(0+128),f
  8358  0ECC  01C7               	clrf	___ftadd@sign^(0+128)
  8359  0ECD  0AC7               	incf	___ftadd@sign^(0+128),f
  8360  0ECE                     l6468:	
  8361  0ECE  0840               	movf	___ftadd@f2^(0+128),w
  8362  0ECF  00A0               	movwf	?___ftpack^(0+128)
  8363  0ED0  0841               	movf	(___ftadd@f2+1)^(0+128),w
  8364  0ED1  00A1               	movwf	(?___ftpack+1)^(0+128)
  8365  0ED2  0842               	movf	(___ftadd@f2+2)^(0+128),w
  8366  0ED3  00A2               	movwf	(?___ftpack+2)^(0+128)
  8367  0ED4  0849               	movf	___ftadd@exp1^(0+128),w
  8368  0ED5  00C3               	movwf	??___ftadd^(0+128)
  8369  0ED6  0843               	movf	??___ftadd^(0+128),w
  8370  0ED7  00A3               	movwf	(?___ftpack^(0+128)+3)
  8371  0ED8  0847               	movf	___ftadd@sign^(0+128),w
  8372  0ED9  00C4               	movwf	(??___ftadd+1)^(0+128)
  8373  0EDA  0844               	movf	(??___ftadd+1)^(0+128),w
  8374  0EDB  00A4               	movwf	(?___ftpack^(0+128)+4)
  8375  0EDC  3191  215F         	fcall	___ftpack
  8376  0EDE  0021               	movlb	1	; select bank1
  8377  0EDF  0820               	movf	?___ftpack^(0+128),w
  8378  0EE0  00BD               	movwf	?___ftadd^(0+128)
  8379  0EE1  0821               	movf	(?___ftpack+1)^(0+128),w
  8380  0EE2  00BE               	movwf	(?___ftadd+1)^(0+128)
  8381  0EE3  0822               	movf	(?___ftpack+2)^(0+128),w
  8382  0EE4  00BF               	movwf	(?___ftadd+2)^(0+128)
  8383  0EE5  0008               	return
  8384  0EE6                     __end_of___ftadd:	
  8385                           
  8386                           	psect	text27
  8387  1C71                     __ptext27:	
  8388 ;; *************** function ___awtoft *****************
  8389 ;; Defined at:
  8390 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awtoft.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  c               2    5[BANK1 ] int 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  sign            1   17[BANK0 ] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  3    5[BANK1 ] float 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0, pclath, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8404 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;Total ram usage:        6 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:    5
  8411 ;; This function calls:
  8412 ;;		___ftpack
  8413 ;; This function is called by:
  8414 ;;		_UpdateFanLevel
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           
  8419                           ;psect for function ___awtoft
  8420  1C71                     ___awtoft:	
  8421                           
  8422                           ;incstack = 0
  8423                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8424  1C71  0020               	movlb	0	; select bank0
  8425  1C72  01E1               	clrf	___awtoft@sign
  8426  1C73  0021               	movlb	1	; select bank1
  8427  1C74  1FA6               	btfss	(___awtoft@c+1)^(0+128),7
  8428  1C75  2C7E               	goto	l6396
  8429  1C76  09A5               	comf	___awtoft@c^(0+128),f
  8430  1C77  09A6               	comf	(___awtoft@c+1)^(0+128),f
  8431  1C78  0AA5               	incf	___awtoft@c^(0+128),f
  8432  1C79  1903               	skipnz
  8433  1C7A  0AA6               	incf	(___awtoft@c+1)^(0+128),f
  8434  1C7B  0020               	movlb	0	; select bank0
  8435  1C7C  01E1               	clrf	___awtoft@sign
  8436  1C7D  0AE1               	incf	___awtoft@sign,f
  8437  1C7E                     l6396:	
  8438  1C7E  0021               	movlb	1	; select bank1
  8439  1C7F  0825               	movf	___awtoft@c^(0+128),w
  8440  1C80  00A0               	movwf	?___ftpack^(0+128)
  8441  1C81  0826               	movf	(___awtoft@c+1)^(0+128),w
  8442  1C82  00A1               	movwf	(?___ftpack+1)^(0+128)
  8443  1C83  01A2               	clrf	(?___ftpack+2)^(0+128)
  8444  1C84  308E               	movlw	142
  8445  1C85  00A8               	movwf	??___awtoft^(0+128)
  8446  1C86  0828               	movf	??___awtoft^(0+128),w
  8447  1C87  00A3               	movwf	(?___ftpack^(0+128)+3)
  8448  1C88  0020               	movlb	0	; select bank0
  8449  1C89  0861               	movf	___awtoft@sign,w
  8450  1C8A  0021               	movlb	1	; select bank1
  8451  1C8B  00A9               	movwf	(??___awtoft+1)^(0+128)
  8452  1C8C  0829               	movf	(??___awtoft+1)^(0+128),w
  8453  1C8D  00A4               	movwf	(?___ftpack^(0+128)+4)
  8454  1C8E  3191  215F         	fcall	___ftpack
  8455  1C90  0021               	movlb	1	; select bank1
  8456  1C91  0820               	movf	?___ftpack^(0+128),w
  8457  1C92  00A5               	movwf	?___awtoft^(0+128)
  8458  1C93  0821               	movf	(?___ftpack+1)^(0+128),w
  8459  1C94  00A6               	movwf	(?___awtoft+1)^(0+128)
  8460  1C95  0822               	movf	(?___ftpack+2)^(0+128),w
  8461  1C96  00A7               	movwf	(?___awtoft+2)^(0+128)
  8462  1C97  0008               	return
  8463  1C98                     __end_of___awtoft:	
  8464                           
  8465                           	psect	text28
  8466  115F                     __ptext28:	
  8467 ;; *************** function ___ftpack *****************
  8468 ;; Defined at:
  8469 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  arg             3    0[BANK1 ] unsigned um
  8472 ;;  exp             1    3[BANK1 ] unsigned char 
  8473 ;;  sign            1    4[BANK1 ] unsigned char 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  3    0[BANK1 ] float 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8485 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;Total ram usage:        8 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    4
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		___awtoft
  8496 ;;		___ftadd
  8497 ;;		___ftmul
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function ___ftpack
  8503  115F                     ___ftpack:	
  8504                           
  8505                           ;incstack = 0
  8506                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8507  115F  0021               	movlb	1	; select bank1
  8508  1160  0823               	movf	___ftpack@exp^(0+128),w
  8509  1161  1903               	btfsc	3,2
  8510  1162  2968               	goto	l6324
  8511  1163  0822               	movf	(___ftpack@arg+2)^(0+128),w
  8512  1164  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  8513  1165  0420               	iorwf	___ftpack@arg^(0+128),w
  8514  1166  1D03               	skipz
  8515  1167  297B               	goto	l6330
  8516  1168                     l6324:	
  8517  1168  3000               	movlw	0
  8518  1169  00A0               	movwf	?___ftpack^(0+128)
  8519  116A  3000               	movlw	0
  8520  116B  00A1               	movwf	(?___ftpack+1)^(0+128)
  8521  116C  3000               	movlw	0
  8522  116D  00A2               	movwf	(?___ftpack+2)^(0+128)
  8523  116E  0008               	return
  8524  116F                     l6328:	
  8525  116F  3001               	movlw	1
  8526  1170  0020               	movlb	0	; select bank0
  8527  1171  00DE               	movwf	??___ftpack
  8528  1172  085E               	movf	??___ftpack,w
  8529  1173  0021               	movlb	1	; select bank1
  8530  1174  07A3               	addwf	___ftpack@exp^(0+128),f
  8531  1175  3001               	movlw	1
  8532  1176                     u6845:	
  8533  1176  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  8534  1177  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  8535  1178  0CA0               	rrf	___ftpack@arg^(0+128),f
  8536  1179  0B89               	decfsz	9,f
  8537  117A  2976               	goto	u6845
  8538  117B                     l6330:	
  8539  117B  30FE               	movlw	254
  8540  117C  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  8541  117D  1903               	btfsc	3,2
  8542  117E  2996               	goto	l1086
  8543  117F  296F               	goto	l6328
  8544  1180                     l6332:	
  8545  1180  3001               	movlw	1
  8546  1181  0020               	movlb	0	; select bank0
  8547  1182  00DE               	movwf	??___ftpack
  8548  1183  085E               	movf	??___ftpack,w
  8549  1184  0021               	movlb	1	; select bank1
  8550  1185  07A3               	addwf	___ftpack@exp^(0+128),f
  8551  1186  3001               	movlw	1
  8552  1187  07A0               	addwf	___ftpack@arg^(0+128),f
  8553  1188  3000               	movlw	0
  8554  1189  1803               	skipnc
  8555  118A  3001               	movlw	1
  8556  118B  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  8557  118C  3000               	movlw	0
  8558  118D  1803               	skipnc
  8559  118E  3001               	movlw	1
  8560  118F  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  8561  1190  3001               	movlw	1
  8562  1191                     u6865:	
  8563  1191  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  8564  1192  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  8565  1193  0CA0               	rrf	___ftpack@arg^(0+128),f
  8566  1194  0B89               	decfsz	9,f
  8567  1195  2991               	goto	u6865
  8568  1196                     l1086:	
  8569  1196  30FF               	movlw	255
  8570  1197  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  8571  1198  1903               	btfsc	3,2
  8572  1199  29A3               	goto	l6340
  8573  119A  2980               	goto	l6332
  8574  119B                     l6338:	
  8575  119B  3001               	movlw	1
  8576  119C  02A3               	subwf	___ftpack@exp^(0+128),f
  8577  119D  3001               	movlw	1
  8578  119E                     u6885:	
  8579  119E  35A0               	lslf	___ftpack@arg^(0+128),f
  8580  119F  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  8581  11A0  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  8582  11A1  0B89               	decfsz	9,f
  8583  11A2  299E               	goto	u6885
  8584  11A3                     l6340:	
  8585  11A3  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  8586  11A4  299B               	goto	l6338
  8587  11A5  1823               	btfsc	___ftpack@exp^(0+128),0
  8588  11A6  29AD               	goto	l1092
  8589  11A7  30FF               	movlw	255
  8590  11A8  05A0               	andwf	___ftpack@arg^(0+128),f
  8591  11A9  307F               	movlw	127
  8592  11AA  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  8593  11AB  30FF               	movlw	255
  8594  11AC  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  8595  11AD                     l1092:	
  8596  11AD  1003               	clrc
  8597  11AE  0CA3               	rrf	___ftpack@exp^(0+128),f
  8598  11AF  0823               	movf	___ftpack@exp^(0+128),w
  8599  11B0  0020               	movlb	0	; select bank0
  8600  11B1  00DE               	movwf	??___ftpack
  8601  11B2  01DF               	clrf	??___ftpack+1
  8602  11B3  01E0               	clrf	??___ftpack+2
  8603  11B4  3010               	movlw	16
  8604  11B5                     u6915:	
  8605  11B5  35DE               	lslf	??___ftpack,f
  8606  11B6  0DDF               	rlf	??___ftpack+1,f
  8607  11B7  0DE0               	rlf	??___ftpack+2,f
  8608  11B8  0B89               	decfsz	9,f
  8609  11B9  29B5               	goto	u6915
  8610  11BA  085E               	movf	??___ftpack,w
  8611  11BB  0021               	movlb	1	; select bank1
  8612  11BC  04A0               	iorwf	___ftpack@arg^(0+128),f
  8613  11BD  0020               	movlb	0	; select bank0
  8614  11BE  085F               	movf	??___ftpack+1,w
  8615  11BF  0021               	movlb	1	; select bank1
  8616  11C0  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  8617  11C1  0020               	movlb	0	; select bank0
  8618  11C2  0860               	movf	??___ftpack+2,w
  8619  11C3  0021               	movlb	1	; select bank1
  8620  11C4  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  8621  11C5  0824               	movf	___ftpack@sign^(0+128),w
  8622  11C6  1903               	btfsc	3,2
  8623  11C7  0008               	return
  8624  11C8  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  8625  11C9  0008               	return
  8626  11CA                     __end_of___ftpack:	
  8627                           
  8628                           	psect	text29
  8629  0CFF                     __ptext29:	
  8630 ;; *************** function _USBDeviceTasks *****************
  8631 ;; Defined at:
  8632 ;;		line 669 in file "../USB/usb_device.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;		None
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  i               1   31[BANK1 ] unsigned char 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;		None               void
  8639 ;; Registers used:
  8640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;Total ram usage:        3 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:   12
  8653 ;; This function calls:
  8654 ;;		_USBDeviceInit
  8655 ;;		_USBWakeFromSuspend
  8656 ;;		_USBSuspend
  8657 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8658 ;;		_USBCtrlEPAllowStatusStage
  8659 ;;		_USBStallHandler
  8660 ;;		_USBCtrlEPService
  8661 ;; This function is called by:
  8662 ;;		_main
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           
  8667                           ;psect for function _USBDeviceTasks
  8668  0CFF                     _USBDeviceTasks:	
  8669                           
  8670                           ;usb_device.c: 735: }
  8671                           ;usb_device.c: 757: if(USBDeviceState == DETACHED_STATE)
  8672                           
  8673                           ;usb_device.c: 734: return;
  8674                           
  8675                           ;usb_device.c: 733: PIR2bits.USBIF = 0;;
  8676                           
  8677                           ;usb_device.c: 705: USBDeviceState = DETACHED_STATE;
  8678                           
  8679                           ;usb_device.c: 702: UIE = 0;
  8680                           
  8681                           ;usb_device.c: 697: {
  8682                           ;usb_device.c: 699: UCON = 0;
  8683                           
  8684                           ;usb_device.c: 670: BYTE i;
  8685                           ;usb_device.c: 696: if (1 != 1)
  8686                           
  8687                           ;incstack = 0
  8688                           ; Regs used in _USBDeviceTasks: [allreg]
  8689  0CFF  0021               	movlb	1	; select bank1
  8690  0D00  08E5               	movf	_USBDeviceState^(0+128),f
  8691  0D01  1D03               	skipz
  8692  0D02  2D13               	goto	l4284
  8693                           
  8694                           ;usb_device.c: 758: {
  8695                           ;usb_device.c: 760: UCON = 0;
  8696  0D03  003D               	movlb	29	; select bank29
  8697  0D04  018E               	clrf	14	;volatile
  8698                           
  8699                           ;usb_device.c: 763: UIE = 0;
  8700  0D05  0192               	clrf	18	;volatile
  8701                           
  8702                           ;usb_device.c: 767: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8703  0D06  3016               	movlw	22
  8704  0D07  0091               	movwf	17	;volatile
  8705  0D08  309F               	movlw	159
  8706  0D09  0097               	movwf	23	;volatile
  8707  0D0A  307B               	movlw	123
  8708  0D0B  0092               	movwf	18	;volatile
  8709  0D0C                     l140:	
  8710                           ;usb_device.c: 770: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8711                           
  8712  0D0C  198E               	btfsc	14,3	;volatile
  8713  0D0D  2D10               	goto	l142
  8714  0D0E  158E               	bsf	14,3	;volatile
  8715  0D0F  2D0C               	goto	l140
  8716  0D10                     l142:	
  8717                           
  8718                           ;usb_device.c: 773: USBDeviceState = ATTACHED_STATE;
  8719  0D10  0021               	movlb	1	; select bank1
  8720  0D11  01E5               	clrf	_USBDeviceState^(0+128)
  8721  0D12  0AE5               	incf	_USBDeviceState^(0+128),f
  8722  0D13                     l4284:	
  8723                           
  8724                           ;usb_device.c: 778: }
  8725                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  8726  0D13  0865               	movf	_USBDeviceState^(0+128),w
  8727  0D14  3A01               	xorlw	1
  8728  0D15  1D03               	skipz
  8729  0D16  2D23               	goto	l4296
  8730                           
  8731                           ;usb_device.c: 782: {
  8732                           ;usb_device.c: 792: if(!UCONbits.SE0)
  8733  0D17  003D               	movlb	29	; select bank29
  8734  0D18  1A8E               	btfsc	14,5	;volatile
  8735  0D19  2D23               	goto	l4296
  8736                           
  8737                           ;usb_device.c: 793: {
  8738                           ;usb_device.c: 794: UIR = 0;;
  8739  0D1A  0190               	clrf	16	;volatile
  8740                           
  8741                           ;usb_device.c: 796: UIE=0;
  8742  0D1B  0192               	clrf	18	;volatile
  8743                           
  8744                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  8745  0D1C  1412               	bsf	18,0	;volatile
  8746                           
  8747                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  8748  0D1D  1612               	bsf	18,4	;volatile
  8749                           
  8750                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  8751  0D1E  3002               	movlw	2
  8752  0D1F  0021               	movlb	1	; select bank1
  8753  0D20  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8754  0D21  083D               	movf	??_USBDeviceTasks^(0+128),w
  8755  0D22  00E5               	movwf	_USBDeviceState^(0+128)
  8756  0D23                     l4296:	
  8757                           
  8758                           ;usb_device.c: 801: }
  8759                           ;usb_device.c: 802: }
  8760                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  8761  0D23  003D               	movlb	29	; select bank29
  8762  0D24  1910               	btfsc	16,2	;volatile
  8763  0D25  1D12               	btfss	18,2	;volatile
  8764  0D26  2D30               	goto	l4304
  8765                           
  8766                           ;usb_device.c: 819: {
  8767                           ;usb_device.c: 820: (UIR &= 0xFB);
  8768  0D27  30FB               	movlw	251
  8769  0D28  0021               	movlb	1	; select bank1
  8770  0D29  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8771  0D2A  083D               	movf	??_USBDeviceTasks^(0+128),w
  8772  0D2B  003D               	movlb	29	; select bank29
  8773  0D2C  0590               	andwf	16,f	;volatile
  8774                           
  8775                           ;usb_device.c: 824: USBWakeFromSuspend();
  8776  0D2D  319B  238C  318C   	fcall	_USBWakeFromSuspend
  8777  0D30                     l4304:	
  8778                           
  8779                           ;usb_device.c: 826: }
  8780                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  8781  0D30  003D               	movlb	29	; select bank29
  8782  0D31  1C8E               	btfss	14,1	;volatile
  8783  0D32  2D36               	goto	l146
  8784                           
  8785                           ;usb_device.c: 832: {
  8786                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  8787  0D33  0020               	movlb	0	; select bank0
  8788  0D34  1112               	bcf	18,2	;volatile
  8789                           
  8790                           ;usb_device.c: 834: return;
  8791  0D35  0008               	return
  8792  0D36                     l146:	
  8793                           
  8794                           ;usb_device.c: 835: }
  8795                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8796  0D36  1810               	btfsc	16,0	;volatile
  8797  0D37  1C12               	btfss	18,0	;volatile
  8798  0D38  2D46               	goto	l4316
  8799                           
  8800                           ;usb_device.c: 848: {
  8801                           ;usb_device.c: 849: USBDeviceInit();
  8802  0D39  3189  217E  318C   	fcall	_USBDeviceInit
  8803                           
  8804                           ;usb_device.c: 853: ;
  8805                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  8806  0D3C  3004               	movlw	4
  8807  0D3D  0021               	movlb	1	; select bank1
  8808  0D3E  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8809  0D3F  083D               	movf	??_USBDeviceTasks^(0+128),w
  8810  0D40  00E5               	movwf	_USBDeviceState^(0+128)
  8811                           
  8812                           ;usb_device.c: 865: (UIR &= 0xFE);
  8813  0D41  30FE               	movlw	254
  8814  0D42  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8815  0D43  083D               	movf	??_USBDeviceTasks^(0+128),w
  8816  0D44  003D               	movlb	29	; select bank29
  8817  0D45  0590               	andwf	16,f	;volatile
  8818  0D46                     l4316:	
  8819                           
  8820                           ;usb_device.c: 866: }
  8821                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8822  0D46  1A10               	btfsc	16,4	;volatile
  8823  0D47  1E12               	btfss	18,4	;volatile
  8824  0D48  2D52               	goto	l4324
  8825                           
  8826                           ;usb_device.c: 872: {
  8827                           ;usb_device.c: 877: USBSuspend();
  8828  0D49  319B  23A4  318C   	fcall	_USBSuspend
  8829                           
  8830                           ;usb_device.c: 880: (UIR &= 0xEF);
  8831  0D4C  30EF               	movlw	239
  8832  0D4D  0021               	movlb	1	; select bank1
  8833  0D4E  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8834  0D4F  083D               	movf	??_USBDeviceTasks^(0+128),w
  8835  0D50  003D               	movlb	29	; select bank29
  8836  0D51  0590               	andwf	16,f	;volatile
  8837  0D52                     l4324:	
  8838                           
  8839                           ;usb_device.c: 881: }
  8840                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  8841  0D52  1F10               	btfss	16,6	;volatile
  8842  0D53  2D75               	goto	l4340
  8843                           
  8844                           ;usb_device.c: 884: {
  8845                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  8846  0D54  1F12               	btfss	18,6	;volatile
  8847  0D55  2D63               	goto	l4330
  8848                           
  8849                           ;usb_device.c: 886: {
  8850                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8851  0D56  3073               	movlw	115
  8852  0D57  0021               	movlb	1	; select bank1
  8853  0D58  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8854  0D59  3000               	movlw	0
  8855  0D5A  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8856  0D5B  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  8857  0D5C  3001               	movlw	1
  8858  0D5D  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
  8859  0D5E  3000               	movlw	0
  8860  0D5F  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  8861  0D60  319D  2547  318C   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8862  0D63                     l4330:	
  8863                           
  8864                           ;usb_device.c: 888: }
  8865                           ;usb_device.c: 889: (UIR &= 0xBF);
  8866  0D63  30BF               	movlw	191
  8867  0D64  0021               	movlb	1	; select bank1
  8868  0D65  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8869  0D66  083D               	movf	??_USBDeviceTasks^(0+128),w
  8870  0D67  003D               	movlb	29	; select bank29
  8871  0D68  0590               	andwf	16,f	;volatile
  8872                           
  8873                           ;usb_device.c: 914: if(USBStatusStageTimeoutCounter != 0u)
  8874  0D69  0022               	movlb	2	; select bank2
  8875  0D6A  086B               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  8876  0D6B  1903               	btfsc	3,2
  8877  0D6C  2D6F               	goto	l4336
  8878                           
  8879                           ;usb_device.c: 915: {
  8880                           ;usb_device.c: 916: USBStatusStageTimeoutCounter--;
  8881  0D6D  3001               	movlw	1
  8882  0D6E  02EB               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  8883  0D6F                     l4336:	
  8884                           
  8885                           ;usb_device.c: 917: }
  8886                           ;usb_device.c: 923: if(USBStatusStageTimeoutCounter == 0)
  8887  0D6F  08EB               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  8888  0D70  1D03               	skipz
  8889  0D71  2D75               	goto	l4340
  8890                           
  8891                           ;usb_device.c: 924: {
  8892                           ;usb_device.c: 925: USBCtrlEPAllowStatusStage();
  8893  0D72  3191  21CA  318C   	fcall	_USBCtrlEPAllowStatusStage
  8894  0D75                     l4340:	
  8895                           
  8896                           ;usb_device.c: 926: }
  8897                           ;usb_device.c: 928: }
  8898                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8899  0D75  003D               	movlb	29	; select bank29
  8900  0D76  1A90               	btfsc	16,5	;volatile
  8901  0D77  1E92               	btfss	18,5	;volatile
  8902  0D78  2D7C               	goto	l4346
  8903                           
  8904                           ;usb_device.c: 931: {
  8905                           ;usb_device.c: 932: USBStallHandler();
  8906  0D79  319C  244C  318C   	fcall	_USBStallHandler
  8907  0D7C                     l4346:	
  8908                           
  8909                           ;usb_device.c: 933: }
  8910                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8911  0D7C  003D               	movlb	29	; select bank29
  8912  0D7D  1890               	btfsc	16,1	;volatile
  8913  0D7E  1C92               	btfss	18,1	;volatile
  8914  0D7F  2D8F               	goto	l4354
  8915                           
  8916                           ;usb_device.c: 936: {
  8917                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8918  0D80  30FF               	movlw	255
  8919  0D81  0021               	movlb	1	; select bank1
  8920  0D82  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8921  0D83  307F               	movlw	127
  8922  0D84  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8923  0D85  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  8924  0D86  3001               	movlw	1
  8925  0D87  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
  8926  0D88  3000               	movlw	0
  8927  0D89  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  8928  0D8A  319D  2547  318C   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8929                           
  8930                           ;usb_device.c: 938: UEIR = 0;;
  8931  0D8D  003D               	movlb	29	; select bank29
  8932  0D8E  0193               	clrf	19	;volatile
  8933  0D8F                     l4354:	
  8934                           
  8935                           ;usb_device.c: 946: }
  8936                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  8937  0D8F  3004               	movlw	4
  8938  0D90  0021               	movlb	1	; select bank1
  8939  0D91  0265               	subwf	_USBDeviceState^(0+128),w
  8940  0D92  1803               	skipnc
  8941  0D93  2D97               	goto	l155
  8942                           
  8943                           ;usb_device.c: 954: {
  8944                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  8945  0D94  0020               	movlb	0	; select bank0
  8946  0D95  1112               	bcf	18,2	;volatile
  8947                           
  8948                           ;usb_device.c: 956: return;
  8949  0D96  0008               	return
  8950  0D97                     l155:	
  8951                           
  8952                           ;usb_device.c: 957: }
  8953                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  8954  0D97  003D               	movlb	29	; select bank29
  8955  0D98  1D92               	btfss	18,3	;volatile
  8956  0D99  2DED               	goto	l156
  8957                           
  8958                           ;usb_device.c: 963: {
  8959                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  8960  0D9A  0021               	movlb	1	; select bank1
  8961  0D9B  01BF               	clrf	USBDeviceTasks@i^(0+128)
  8962  0D9C  2DE6               	goto	L9
  8963  0D9D                     l4364:	
  8964                           
  8965                           ;usb_device.c: 967: {
  8966                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  8967  0D9D  080F               	movf	15,w	;volatile
  8968  0D9E  0021               	movlb	1	; select bank1
  8969  0D9F  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8970  0DA0  083D               	movf	??_USBDeviceTasks^(0+128),w
  8971  0DA1  00EE               	movwf	_USTATcopy^(0+128)
  8972                           
  8973                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  8974  0DA2  0C6E               	rrf	_USTATcopy^(0+128),w
  8975  0DA3  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8976  0DA4  0CBD               	rrf	??_USBDeviceTasks^(0+128),f
  8977  0DA5  0C3D               	rrf	??_USBDeviceTasks^(0+128),w
  8978  0DA6  390F               	andlw	15
  8979  0DA7  00BE               	movwf	(??_USBDeviceTasks+1)^(0+128)
  8980  0DA8  083E               	movf	(??_USBDeviceTasks+1)^(0+128),w
  8981  0DA9  0020               	movlb	0	; select bank0
  8982  0DAA  00E8               	movwf	_endpoint_number
  8983                           
  8984                           ;usb_device.c: 972: (UIR &= 0xF7);
  8985  0DAB  30F7               	movlw	247
  8986  0DAC  0021               	movlb	1	; select bank1
  8987  0DAD  00BD               	movwf	??_USBDeviceTasks^(0+128)
  8988  0DAE  083D               	movf	??_USBDeviceTasks^(0+128),w
  8989  0DAF  003D               	movlb	29	; select bank29
  8990  0DB0  0590               	andwf	16,f	;volatile
  8991                           
  8992                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  8993  0DB1  0021               	movlb	1	; select bank1
  8994  0DB2  196E               	btfsc	_USTATcopy^(0+128),2
  8995  0DB3  2DB8               	goto	l4374
  8996                           
  8997                           ;usb_device.c: 978: {
  8998                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8999  0DB4  0020               	movlb	0	; select bank0
  9000  0DB5  0868               	movf	_endpoint_number,w
  9001  0DB6  3ED3               	addlw	_ep_data_out& (0+255)
  9002  0DB7  2DBB               	goto	L8
  9003  0DB8                     l4374:	
  9004                           ;usb_device.c: 980: }
  9005                           
  9006                           
  9007                           ;usb_device.c: 981: else
  9008                           ;usb_device.c: 982: {
  9009                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9010  0DB8  0020               	movlb	0	; select bank0
  9011  0DB9  0868               	movf	_endpoint_number,w
  9012  0DBA  3ED1               	addlw	_ep_data_in& (0+255)
  9013  0DBB                     L8:	
  9014  0DBB  0086               	movwf	6
  9015  0DBC  3001               	movlw	1	; select bank3/4
  9016  0DBD  0087               	movwf	7
  9017  0DBE  0801               	movf	1,w
  9018  0DBF  3901               	andlw	1
  9019  0DC0  0021               	movlb	1	; select bank1
  9020  0DC1  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9021  0DC2  3001               	movlw	1
  9022  0DC3  06BD               	xorwf	??_USBDeviceTasks^(0+128),f
  9023  0DC4  0801               	movf	1,w
  9024  0DC5  063D               	xorwf	??_USBDeviceTasks^(0+128),w
  9025  0DC6  39FE               	andlw	-2
  9026  0DC7  063D               	xorwf	??_USBDeviceTasks^(0+128),w
  9027  0DC8  0081               	movwf	1
  9028                           
  9029                           ;usb_device.c: 984: }
  9030                           ;usb_device.c: 989: if(endpoint_number == 0)
  9031  0DC9  0020               	movlb	0	; select bank0
  9032  0DCA  08E8               	movf	_endpoint_number,f
  9033  0DCB  1D03               	skipz
  9034  0DCC  2DD1               	goto	l4380
  9035                           
  9036                           ;usb_device.c: 990: {
  9037                           ;usb_device.c: 991: USBCtrlEPService();
  9038  0DCD  3187  2787  318C   	fcall	_USBCtrlEPService
  9039                           
  9040                           ;usb_device.c: 992: }
  9041  0DD0  2DE1               	goto	l4382
  9042  0DD1                     l4380:	
  9043                           
  9044                           ;usb_device.c: 993: else
  9045                           ;usb_device.c: 994: {
  9046                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  9047  0DD1  3072               	movlw	114
  9048  0DD2  0021               	movlb	1	; select bank1
  9049  0DD3  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9050  0DD4  3000               	movlw	0
  9051  0DD5  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9052  0DD6  30EE               	movlw	_USTATcopy& (0+255)
  9053  0DD7  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9054  0DD8  083D               	movf	??_USBDeviceTasks^(0+128),w
  9055  0DD9  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9056  0DDA  3000               	movlw	0
  9057  0DDB  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
  9058  0DDC  3000               	movlw	0
  9059  0DDD  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9060  0DDE  319D  2547  318C   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9061  0DE1                     l4382:	
  9062                           ;usb_device.c: 998: else
  9063                           ;usb_device.c: 999: break;
  9064                           
  9065                           ;usb_device.c: 996: }
  9066                           ;usb_device.c: 997: }
  9067                           
  9068  0DE1  3001               	movlw	1
  9069  0DE2  0021               	movlb	1	; select bank1
  9070  0DE3  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9071  0DE4  083D               	movf	??_USBDeviceTasks^(0+128),w
  9072  0DE5  07BF               	addwf	USBDeviceTasks@i^(0+128),f
  9073  0DE6                     L9:	
  9074  0DE6  3004               	movlw	4
  9075  0DE7  023F               	subwf	USBDeviceTasks@i^(0+128),w
  9076  0DE8  1803               	btfsc	3,0
  9077  0DE9  2DED               	goto	l156
  9078                           
  9079                           ;usb_device.c: 965: {
  9080                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  9081  0DEA  003D               	movlb	29	; select bank29
  9082  0DEB  1990               	btfsc	16,3	;volatile
  9083  0DEC  2D9D               	goto	l4364
  9084  0DED                     l156:	
  9085                           
  9086                           ;usb_device.c: 1000: }
  9087                           ;usb_device.c: 1001: }
  9088                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  9089  0DED  0020               	movlb	0	; select bank0
  9090  0DEE  1112               	bcf	18,2	;volatile
  9091  0DEF  0008               	return
  9092  0DF0                     __end_of_USBDeviceTasks:	
  9093                           
  9094                           	psect	text30
  9095  0787                     __ptext30:	
  9096 ;; *************** function _USBCtrlEPService *****************
  9097 ;; Defined at:
  9098 ;;		line 2523 in file "../USB/usb_device.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;		None
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;  setup_cnt       1   28[BANK1 ] unsigned char 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;		None               void
  9105 ;; Registers used:
  9106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;Total ram usage:        4 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:   11
  9119 ;; This function calls:
  9120 ;;		_USBCtrlTrfSetupHandler
  9121 ;;		_USBCtrlTrfOutHandler
  9122 ;;		_USBCtrlTrfInHandler
  9123 ;; This function is called by:
  9124 ;;		_USBDeviceTasks
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128                           
  9129                           ;psect for function _USBCtrlEPService
  9130  0787                     _USBCtrlEPService:	
  9131                           
  9132                           ;usb_device.c: 2528: USBStatusStageTimeoutCounter = (BYTE)40;
  9133                           
  9134                           ;incstack = 0
  9135                           ; Regs used in _USBCtrlEPService: [allreg]
  9136  0787  3028               	movlw	40
  9137  0788  0021               	movlb	1	; select bank1
  9138  0789  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9139  078A  0839               	movf	??_USBCtrlEPService^(0+128),w
  9140  078B  0022               	movlb	2	; select bank2
  9141  078C  00EB               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  9142                           
  9143                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  9144  078D  0021               	movlb	1	; select bank1
  9145  078E  086E               	movf	_USTATcopy^(0+128),w
  9146  078F  39FD               	andlw	253
  9147  0790  1D03               	btfss	3,2
  9148  0791  2FF0               	goto	l4506
  9149                           
  9150                           ;usb_device.c: 2533: {
  9151                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9152  0792  366E               	lsrf	_USTATcopy^(0+128),w
  9153  0793  393F               	andlw	63
  9154  0794  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9155  0795  3001               	movlw	1
  9156  0796                     u3825:	
  9157  0796  35B9               	lslf	??_USBCtrlEPService^(0+128),f
  9158  0797  3EFF               	addlw	-1
  9159  0798  1D03               	skipz
  9160  0799  2F96               	goto	u3825
  9161  079A  3539               	lslf	??_USBCtrlEPService^(0+128),w
  9162  079B  3E20               	addlw	32
  9163  079C  00BA               	movwf	(??_USBCtrlEPService+1)^(0+128)
  9164  079D  083A               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9165  079E  00E7               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  9166                           
  9167                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9168  079F  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9169  07A0  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9170  07A1  0839               	movf	??_USBCtrlEPService^(0+128),w
  9171  07A2  0020               	movlb	0	; select bank0
  9172  07A3  00E9               	movwf	_pBDTEntryEP0OutNext
  9173                           
  9174                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9175  07A4  3004               	movlw	4
  9176  07A5  0021               	movlb	1	; select bank1
  9177  07A6  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9178  07A7  0839               	movf	??_USBCtrlEPService^(0+128),w
  9179  07A8  0020               	movlb	0	; select bank0
  9180  07A9  06E9               	xorwf	_pBDTEntryEP0OutNext,f
  9181                           
  9182                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9183  07AA  0021               	movlb	1	; select bank1
  9184  07AB  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9185  07AC  0086               	movwf	6
  9186  07AD  0187               	clrf	7
  9187  07AE  0C01               	rrf	1,w
  9188  07AF  0C89               	rrf	9,f
  9189  07B0  390F               	andlw	15
  9190  07B1  3A0D               	xorlw	13
  9191  07B2  1D03               	skipz
  9192  07B3  2FED               	goto	l4504
  9193                           
  9194                           ;usb_device.c: 2550: {
  9195                           ;usb_device.c: 2551: unsigned char setup_cnt;
  9196                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  9197  07B4  01BC               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  9198  07B5  3008               	movlw	8
  9199  07B6  023C               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9200  07B7  1803               	btfsc	3,0
  9201  07B8  2FDE               	goto	l4500
  9202  07B9                     l4494:	
  9203                           
  9204                           ;usb_device.c: 2558: {
  9205                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  9206  07B9  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9207  07BA  3E02               	addlw	2
  9208  07BB  0086               	movwf	6
  9209  07BC  0187               	clrf	7
  9210  07BD  3F40               	moviw [0]fsr1
  9211  07BE  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9212  07BF  3F41               	moviw [1]fsr1
  9213  07C0  00BA               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9214  07C1  0839               	movf	??_USBCtrlEPService^(0+128),w
  9215  07C2  0086               	movwf	6
  9216  07C3  083A               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9217  07C4  0087               	movwf	7
  9218  07C5  0801               	movf	1,w
  9219  07C6  00BB               	movwf	(??_USBCtrlEPService+2)^(0+128)
  9220  07C7  083C               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  9221  07C8  3E40               	addlw	64
  9222  07C9  0086               	movwf	6
  9223  07CA  0187               	clrf	7
  9224  07CB  083B               	movf	(??_USBCtrlEPService+2)^(0+128),w
  9225  07CC  0081               	movwf	1
  9226                           
  9227                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  9228  07CD  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9229  07CE  3E02               	addlw	2
  9230  07CF  0086               	movwf	6
  9231  07D0  0187               	clrf	7
  9232  07D1  3001               	movlw	1
  9233  07D2  0781               	addwf	1,f
  9234  07D3  3141               	addfsr 1,1
  9235  07D4  1803               	skipnc
  9236  07D5  0A81               	incf	1,f
  9237  07D6  3001               	movlw	1
  9238  07D7  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9239  07D8  0839               	movf	??_USBCtrlEPService^(0+128),w
  9240  07D9  07BC               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  9241  07DA  3008               	movlw	8
  9242  07DB  023C               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9243  07DC  1C03               	skipc
  9244  07DD  2FB9               	goto	l4494
  9245  07DE                     l4500:	
  9246                           
  9247                           ;usb_device.c: 2561: }
  9248                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9249  07DE  3040               	movlw	64
  9250  07DF  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9251  07E0  3000               	movlw	0
  9252  07E1  00BA               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9253  07E2  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9254  07E3  3E02               	addlw	2
  9255  07E4  0086               	movwf	6
  9256  07E5  0187               	clrf	7
  9257  07E6  0839               	movf	??_USBCtrlEPService^(0+128),w
  9258  07E7  3FC0               	movwi [0]fsr1
  9259  07E8  083A               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9260  07E9  3FC1               	movwi [1]fsr1
  9261                           
  9262                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  9263  07EA  319D  2586         	fcall	_USBCtrlTrfSetupHandler
  9264                           
  9265                           ;usb_device.c: 2566: }
  9266  07EC  0008               	return
  9267  07ED                     l4504:	
  9268                           
  9269                           ;usb_device.c: 2567: else
  9270                           ;usb_device.c: 2568: {
  9271                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  9272  07ED  3190  2001         	fcall	_USBCtrlTrfOutHandler
  9273                           
  9274                           ;usb_device.c: 2571: }
  9275                           ;usb_device.c: 2572: }
  9276  07EF  0008               	return
  9277  07F0                     l4506:	
  9278                           
  9279                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  9280  07F0  30FD               	movlw	253
  9281  07F1  0021               	movlb	1	; select bank1
  9282  07F2  056E               	andwf	_USTATcopy^(0+128),w
  9283  07F3  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9284  07F4  0839               	movf	??_USBCtrlEPService^(0+128),w
  9285  07F5  3A04               	xorlw	4
  9286  07F6  1D03               	skipz
  9287  07F7  0008               	return
  9288                           
  9289                           ;usb_device.c: 2574: {
  9290                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  9291  07F8  3190  2092         	fcall	_USBCtrlTrfInHandler
  9292  07FA  0008               	return
  9293  07FB                     __end_of_USBCtrlEPService:	
  9294                           
  9295                           	psect	text31
  9296  1092                     __ptext31:	
  9297 ;; *************** function _USBCtrlTrfInHandler *****************
  9298 ;; Defined at:
  9299 ;;		line 2748 in file "../USB/usb_device.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;		None
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  lastDTS         1   17[BANK0 ] unsigned char 
  9304 ;; Return value:  Size  Location     Type
  9305 ;;		None               void
  9306 ;; Registers used:
  9307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9315 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;Total ram usage:        3 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:    5
  9320 ;; This function calls:
  9321 ;;		_USBCtrlTrfTxService
  9322 ;; This function is called by:
  9323 ;;		_USBCtrlEPService
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           
  9328                           ;psect for function _USBCtrlTrfInHandler
  9329  1092                     _USBCtrlTrfInHandler:	
  9330                           
  9331                           ;usb_device.c: 2749: BYTE lastDTS;
  9332                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9336  1092  0021               	movlb	1	; select bank1
  9337  1093  0862               	movf	_pBDTEntryIn^(0+128),w
  9338  1094  0086               	movwf	6
  9339  1095  0187               	clrf	7
  9340  1096  3000               	movlw	0
  9341  1097  1B01               	btfsc	1,6
  9342  1098  3001               	movlw	1
  9343  1099  0020               	movlb	0	; select bank0
  9344  109A  00E1               	movwf	USBCtrlTrfInHandler@lastDTS
  9345                           
  9346                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9347  109B  3004               	movlw	4
  9348  109C  0021               	movlb	1	; select bank1
  9349  109D  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9350  109E  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9351  109F  06E2               	xorwf	_pBDTEntryIn^(0+128),f
  9352                           
  9353                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  9354  10A0  0865               	movf	_USBDeviceState^(0+128),w
  9355  10A1  3A08               	xorlw	8
  9356  10A2  1D03               	skipz
  9357  10A3  28B2               	goto	l315
  9358                           
  9359                           ;usb_device.c: 2760: {
  9360                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  9361  10A4  0020               	movlb	0	; select bank0
  9362  10A5  0842               	movf	66,w	;volatile
  9363  10A6  003D               	movlb	29	; select bank29
  9364  10A7  0096               	movwf	22	;volatile
  9365                           
  9366                           ;usb_device.c: 2762: if(UADDR != 0u)
  9367  10A8  0816               	movf	22,w	;volatile
  9368  10A9  1903               	btfsc	3,2
  9369  10AA  28AD               	goto	l4884
  9370                           
  9371                           ;usb_device.c: 2763: {
  9372                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  9373  10AB  3010               	movlw	16
  9374  10AC  28AE               	goto	L10
  9375  10AD                     l4884:	
  9376                           ;usb_device.c: 2765: }
  9377                           
  9378                           
  9379                           ;usb_device.c: 2766: else
  9380                           ;usb_device.c: 2767: {
  9381                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  9382  10AD  3004               	movlw	4
  9383  10AE                     L10:	
  9384  10AE  0021               	movlb	1	; select bank1
  9385  10AF  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9386  10B0  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9387  10B1  00E5               	movwf	_USBDeviceState^(0+128)
  9388  10B2                     l315:	
  9389                           
  9390                           ;usb_device.c: 2769: }
  9391                           ;usb_device.c: 2770: }
  9392                           ;usb_device.c: 2773: if(controlTransferState == 1)
  9393  10B2  0020               	movlb	0	; select bank0
  9394  10B3  0867               	movf	_controlTransferState,w
  9395  10B4  3A01               	xorlw	1
  9396  10B5  1D03               	skipz
  9397  10B6  28EB               	goto	l318
  9398                           
  9399                           ;usb_device.c: 2774: {
  9400                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  9401  10B7  3048               	movlw	72
  9402  10B8  0021               	movlb	1	; select bank1
  9403  10B9  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9404  10BA  3000               	movlw	0
  9405  10BB  00A1               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  9406  10BC  0862               	movf	_pBDTEntryIn^(0+128),w
  9407  10BD  3E02               	addlw	2
  9408  10BE  0086               	movwf	6
  9409  10BF  0187               	clrf	7
  9410  10C0  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9411  10C1  3FC0               	movwi [0]fsr1
  9412  10C2  0821               	movf	(??_USBCtrlTrfInHandler+1)^(0+128),w
  9413  10C3  3FC1               	movwi [1]fsr1
  9414                           
  9415                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  9416  10C4  3195  25B4  3190   	fcall	_USBCtrlTrfTxService
  9417                           
  9418                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  9419  10C7  0020               	movlb	0	; select bank0
  9420  10C8  086B               	movf	_shortPacketStatus,w
  9421  10C9  3A02               	xorlw	2
  9422  10CA  1D03               	skipz
  9423  10CB  28D5               	goto	l4894
  9424                           
  9425                           ;usb_device.c: 2783: {
  9426                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  9427  10CC  3084               	movlw	132
  9428  10CD  0021               	movlb	1	; select bank1
  9429  10CE  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9430  10CF  0862               	movf	_pBDTEntryIn^(0+128),w
  9431  10D0  0086               	movwf	6
  9432  10D1  0187               	clrf	7
  9433  10D2  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9434  10D3  0081               	movwf	1
  9435                           
  9436                           ;usb_device.c: 2787: }
  9437  10D4  0008               	return
  9438  10D5                     l4894:	
  9439                           
  9440                           ;usb_device.c: 2788: else
  9441                           ;usb_device.c: 2789: {
  9442                           ;usb_device.c: 2790: if(lastDTS == 0)
  9443  10D5  0020               	movlb	0	; select bank0
  9444  10D6  08E1               	movf	USBCtrlTrfInHandler@lastDTS,f
  9445  10D7  1D03               	skipz
  9446  10D8  28E2               	goto	l4898
  9447                           
  9448                           ;usb_device.c: 2791: {
  9449                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9450  10D9  30C8               	movlw	200
  9451  10DA  0021               	movlb	1	; select bank1
  9452  10DB  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9453  10DC  0862               	movf	_pBDTEntryIn^(0+128),w
  9454  10DD  0086               	movwf	6
  9455  10DE  0187               	clrf	7
  9456  10DF  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9457  10E0  0081               	movwf	1
  9458                           
  9459                           ;usb_device.c: 2793: }
  9460  10E1  0008               	return
  9461  10E2                     l4898:	
  9462                           
  9463                           ;usb_device.c: 2794: else
  9464                           ;usb_device.c: 2795: {
  9465                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9466  10E2  3088               	movlw	136
  9467  10E3  0021               	movlb	1	; select bank1
  9468  10E4  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9469  10E5  0862               	movf	_pBDTEntryIn^(0+128),w
  9470  10E6  0086               	movwf	6
  9471  10E7  0187               	clrf	7
  9472  10E8  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9473  10E9  0081               	movwf	1
  9474                           
  9475                           ;usb_device.c: 2797: }
  9476                           ;usb_device.c: 2798: }
  9477                           ;usb_device.c: 2799: }
  9478  10EA  0008               	return
  9479  10EB                     l318:	
  9480                           
  9481                           ;usb_device.c: 2800: else
  9482                           ;usb_device.c: 2801: {
  9483                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  9484  10EB  0023               	movlb	3	; select bank3
  9485  10EC  1FC9               	btfss	(_outPipes^(0+384)+2),7
  9486  10ED  28F5               	goto	l4906
  9487                           
  9488                           ;usb_device.c: 2806: {
  9489                           ;usb_device.c: 2807: if(outPipes[0].pFunc != (0))
  9490  10EE  084C               	movf	(_outPipes+5)^(0+384),w
  9491  10EF  1903               	btfsc	3,2
  9492  10F0  28F4               	goto	l4904
  9493                           
  9494                           ;usb_device.c: 2808: {
  9495                           ;usb_device.c: 2809: outPipes[0].pFunc();
  9496  10F1  084C               	movf	(_outPipes+5)^(0+384),w
  9497  10F2  3190  2892         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9498  10F4                     l4904:	
  9499                           
  9500                           ;usb_device.c: 2810: }
  9501                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  9502  10F4  13C9               	bcf	(_outPipes^(0+384)+2),7
  9503  10F5                     l4906:	
  9504                           
  9505                           ;usb_device.c: 2812: }
  9506                           ;usb_device.c: 2814: controlTransferState = 0;
  9507  10F5  0020               	movlb	0	; select bank0
  9508  10F6  01E7               	clrf	_controlTransferState
  9509  10F7  0008               	return
  9510  10F8                     __end_of_USBCtrlTrfInHandler:	
  9511                           
  9512                           	psect	text32
  9513  1001                     __ptext32:	
  9514 ;; *************** function _USBCtrlTrfOutHandler *****************
  9515 ;; Defined at:
  9516 ;;		line 2695 in file "../USB/usb_device.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;		None
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;		None               void
  9523 ;; Registers used:
  9524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;Total ram usage:        2 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    6
  9537 ;; This function calls:
  9538 ;;		_USBCtrlTrfRxService
  9539 ;; This function is called by:
  9540 ;;		_USBCtrlEPService
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           
  9545                           ;psect for function _USBCtrlTrfOutHandler
  9546  1001                     _USBCtrlTrfOutHandler:	
  9547                           
  9548                           ;usb_device.c: 2696: if(controlTransferState == 2)
  9549                           
  9550                           ;incstack = 0
  9551                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9552  1001  0020               	movlb	0	; select bank0
  9553  1002  0867               	movf	_controlTransferState,w
  9554  1003  3A02               	xorlw	2
  9555  1004  1D03               	skipz
  9556  1005  2809               	goto	l4866
  9557                           
  9558                           ;usb_device.c: 2697: {
  9559                           ;usb_device.c: 2698: USBCtrlTrfRxService();
  9560  1006  318A  222E         	fcall	_USBCtrlTrfRxService
  9561                           
  9562                           ;usb_device.c: 2699: }
  9563  1008  0008               	return
  9564  1009                     l4866:	
  9565                           
  9566                           ;usb_device.c: 2700: else
  9567                           ;usb_device.c: 2701: {
  9568                           ;usb_device.c: 2704: controlTransferState = 0;
  9569  1009  0020               	movlb	0	; select bank0
  9570  100A  01E7               	clrf	_controlTransferState
  9571                           
  9572                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
  9573  100B  0022               	movlb	2	; select bank2
  9574  100C  08DF               	movf	_BothEP0OutUOWNsSet^(0+256),f
  9575  100D  1D03               	skipz
  9576  100E  2831               	goto	l4872
  9577                           
  9578                           ;usb_device.c: 2712: {
  9579                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
  9580  100F  3008               	movlw	8
  9581  1010  0021               	movlb	1	; select bank1
  9582  1011  00A2               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  9583  1012  0020               	movlb	0	; select bank0
  9584  1013  0A69               	incf	_pBDTEntryEP0OutNext,w
  9585  1014  0086               	movwf	6
  9586  1015  0187               	clrf	7
  9587  1016  0021               	movlb	1	; select bank1
  9588  1017  0822               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  9589  1018  0081               	movwf	1
  9590                           
  9591                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9592  1019  3040               	movlw	64
  9593  101A  00A2               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  9594  101B  3000               	movlw	0
  9595  101C  00A3               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  9596  101D  0020               	movlb	0	; select bank0
  9597  101E  0869               	movf	_pBDTEntryEP0OutNext,w
  9598  101F  3E02               	addlw	2
  9599  1020  0086               	movwf	6
  9600  1021  0187               	clrf	7
  9601  1022  0021               	movlb	1	; select bank1
  9602  1023  0822               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  9603  1024  3FC0               	movwi [0]fsr1
  9604  1025  0823               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  9605  1026  3FC1               	movwi [1]fsr1
  9606                           
  9607                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  9608  1027  308C               	movlw	140
  9609  1028  00A2               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  9610  1029  0020               	movlb	0	; select bank0
  9611  102A  0869               	movf	_pBDTEntryEP0OutNext,w
  9612  102B  0086               	movwf	6
  9613  102C  0187               	clrf	7
  9614  102D  0021               	movlb	1	; select bank1
  9615  102E  0822               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  9616  102F  0081               	movwf	1
  9617                           
  9618                           ;usb_device.c: 2716: }
  9619  1030  0008               	return
  9620  1031                     l4872:	
  9621                           
  9622                           ;usb_device.c: 2717: else
  9623                           ;usb_device.c: 2718: {
  9624                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
  9625  1031  0022               	movlb	2	; select bank2
  9626  1032  01DF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  9627  1033  0008               	return
  9628  1034                     __end_of_USBCtrlTrfOutHandler:	
  9629                           
  9630                           	psect	text33
  9631  0A2E                     __ptext33:	
  9632 ;; *************** function _USBCtrlTrfRxService *****************
  9633 ;; Defined at:
  9634 ;;		line 2019 in file "../USB/usb_device.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;		None
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;  byteToRead      1    1[BANK1 ] unsigned char 
  9639 ;;  i               1    0[BANK1 ] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;		None               void
  9642 ;; Registers used:
  9643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;Total ram usage:        4 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    5
  9656 ;; This function calls:
  9657 ;;		_USBCtrlEPAllowStatusStage
  9658 ;; This function is called by:
  9659 ;;		_USBCtrlTrfOutHandler
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function _USBCtrlTrfRxService
  9665  0A2E                     _USBCtrlTrfRxService:	
  9666                           
  9667                           ;usb_device.c: 2020: BYTE byteToRead;
  9668                           ;usb_device.c: 2021: BYTE i;
  9669                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9673  0A2E  0021               	movlb	1	; select bank1
  9674  0A2F  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9675  0A30  0086               	movwf	6
  9676  0A31  0187               	clrf	7
  9677  0A32  3F41               	moviw [1]fsr1
  9678  0A33  00A1               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  9679                           
  9680                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
  9681  0A34  0821               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  9682  0A35  0020               	movlb	0	; select bank0
  9683  0A36  00E0               	movwf	??_USBCtrlTrfRxService
  9684  0A37  01E1               	clrf	??_USBCtrlTrfRxService+1
  9685  0A38  0861               	movf	??_USBCtrlTrfRxService+1,w
  9686  0A39  0023               	movlb	3	; select bank3
  9687  0A3A  024B               	subwf	((_outPipes+1)^(0+384)+3),w
  9688  0A3B  1D03               	skipz
  9689  0A3C  2A41               	goto	u4195
  9690  0A3D  0020               	movlb	0	; select bank0
  9691  0A3E  0860               	movf	??_USBCtrlTrfRxService,w
  9692  0A3F  0023               	movlb	3	; select bank3
  9693  0A40  024A               	subwf	(_outPipes^(0+384)+3),w
  9694  0A41                     u4195:	
  9695  0A41  1803               	skipnc
  9696  0A42  2A49               	goto	l4690
  9697                           
  9698                           ;usb_device.c: 2032: {
  9699                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
  9700  0A43  084A               	movf	(_outPipes^(0+384)+3),w
  9701  0A44  0020               	movlb	0	; select bank0
  9702  0A45  00E0               	movwf	??_USBCtrlTrfRxService
  9703  0A46  0860               	movf	??_USBCtrlTrfRxService,w
  9704  0A47  0021               	movlb	1	; select bank1
  9705  0A48  00A1               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  9706  0A49                     l4690:	
  9707                           
  9708                           ;usb_device.c: 2034: }
  9709                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
  9710  0A49  3003               	movlw	3
  9711  0A4A  3EC7               	addlw	_outPipes& (0+255)
  9712  0A4B  0086               	movwf	6
  9713  0A4C  3001               	movlw	1	; select bank3/4
  9714  0A4D  0087               	movwf	7
  9715  0A4E  0021               	movlb	1	; select bank1
  9716  0A4F  0821               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  9717  0A50  0020               	movlb	0	; select bank0
  9718  0A51  00E0               	movwf	??_USBCtrlTrfRxService
  9719  0A52  01E1               	clrf	??_USBCtrlTrfRxService+1
  9720  0A53  09E0               	comf	??_USBCtrlTrfRxService,f
  9721  0A54  09E1               	comf	??_USBCtrlTrfRxService+1,f
  9722  0A55  0AE0               	incf	??_USBCtrlTrfRxService,f
  9723  0A56  1903               	skipnz
  9724  0A57  0AE1               	incf	??_USBCtrlTrfRxService+1,f
  9725  0A58  3F40               	moviw [0]fsr1
  9726  0A59  0760               	addwf	??_USBCtrlTrfRxService,w
  9727  0A5A  0023               	movlb	3	; select bank3
  9728  0A5B  00CA               	movwf	(_outPipes^(0+384)+3)
  9729  0A5C  3F41               	moviw [1]fsr1
  9730  0A5D  0020               	movlb	0	; select bank0
  9731  0A5E  3D61               	addwfc	??_USBCtrlTrfRxService+1,w
  9732  0A5F  0023               	movlb	3	; select bank3
  9733  0A60  00CB               	movwf	(_outPipes^(0+384)+4)
  9734                           
  9735                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
  9736  0A61  0021               	movlb	1	; select bank1
  9737  0A62  01A0               	clrf	USBCtrlTrfRxService@i^(0+128)
  9738  0A63                     l4700:	
  9739  0A63  0821               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  9740  0A64  0220               	subwf	USBCtrlTrfRxService@i^(0+128),w
  9741  0A65  1803               	btfsc	3,0
  9742  0A66  2A81               	goto	l4702
  9743                           
  9744                           ;usb_device.c: 2041: {
  9745                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9746  0A67  0820               	movf	USBCtrlTrfRxService@i^(0+128),w
  9747  0A68  3E48               	addlw	72
  9748  0A69  0086               	movwf	6
  9749  0A6A  0187               	clrf	7
  9750  0A6B  0801               	movf	1,w
  9751  0A6C  0020               	movlb	0	; select bank0
  9752  0A6D  00E0               	movwf	??_USBCtrlTrfRxService
  9753  0A6E  0023               	movlb	3	; select bank3
  9754  0A6F  0847               	movf	_outPipes^(0+384),w
  9755  0A70  0086               	movwf	6
  9756  0A71  0187               	clrf	7
  9757  0A72  0020               	movlb	0	; select bank0
  9758  0A73  0860               	movf	??_USBCtrlTrfRxService,w
  9759  0A74  0081               	movwf	1
  9760  0A75  3001               	movlw	1
  9761  0A76  00E0               	movwf	??_USBCtrlTrfRxService
  9762  0A77  0860               	movf	??_USBCtrlTrfRxService,w
  9763  0A78  0023               	movlb	3	; select bank3
  9764  0A79  07C7               	addwf	_outPipes^(0+384),f
  9765  0A7A  3001               	movlw	1
  9766  0A7B  0020               	movlb	0	; select bank0
  9767  0A7C  00E0               	movwf	??_USBCtrlTrfRxService
  9768  0A7D  0860               	movf	??_USBCtrlTrfRxService,w
  9769  0A7E  0021               	movlb	1	; select bank1
  9770  0A7F  07A0               	addwf	USBCtrlTrfRxService@i^(0+128),f
  9771  0A80  2A63               	goto	l4700
  9772  0A81                     l4702:	
  9773                           
  9774                           ;usb_device.c: 2043: }
  9775                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
  9776  0A81  3003               	movlw	3
  9777  0A82  3EC7               	addlw	_outPipes& (0+255)
  9778  0A83  0086               	movwf	6
  9779  0A84  3001               	movlw	1	; select bank3/4
  9780  0A85  0087               	movwf	7
  9781  0A86  0016               	moviw fsr1++
  9782  0A87  0401               	iorwf	1,w
  9783  0A88  1903               	skipnz
  9784  0A89  2AB6               	goto	l4710
  9785                           
  9786                           ;usb_device.c: 2048: {
  9787                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
  9788  0A8A  3008               	movlw	8
  9789  0A8B  0020               	movlb	0	; select bank0
  9790  0A8C  00E0               	movwf	??_USBCtrlTrfRxService
  9791  0A8D  0A69               	incf	_pBDTEntryEP0OutNext,w
  9792  0A8E  0086               	movwf	6
  9793  0A8F  0187               	clrf	7
  9794  0A90  0860               	movf	??_USBCtrlTrfRxService,w
  9795  0A91  0081               	movwf	1
  9796                           
  9797                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  9798  0A92  3048               	movlw	72
  9799  0A93  00E0               	movwf	??_USBCtrlTrfRxService
  9800  0A94  3000               	movlw	0
  9801  0A95  00E1               	movwf	??_USBCtrlTrfRxService+1
  9802  0A96  0869               	movf	_pBDTEntryEP0OutNext,w
  9803  0A97  3E02               	addlw	2
  9804  0A98  0086               	movwf	6
  9805  0A99  0187               	clrf	7
  9806  0A9A  0860               	movf	??_USBCtrlTrfRxService,w
  9807  0A9B  3FC0               	movwi [0]fsr1
  9808  0A9C  0861               	movf	??_USBCtrlTrfRxService+1,w
  9809  0A9D  3FC1               	movwi [1]fsr1
  9810                           
  9811                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9812  0A9E  0021               	movlb	1	; select bank1
  9813  0A9F  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9814  0AA0  0086               	movwf	6
  9815  0AA1  0187               	clrf	7
  9816  0AA2  1B01               	btfsc	1,6
  9817  0AA3  2AAD               	goto	l4708
  9818                           
  9819                           ;usb_device.c: 2052: {
  9820                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9821  0AA4  30C8               	movlw	200
  9822  0AA5  0020               	movlb	0	; select bank0
  9823  0AA6  00E0               	movwf	??_USBCtrlTrfRxService
  9824  0AA7  0869               	movf	_pBDTEntryEP0OutNext,w
  9825  0AA8  0086               	movwf	6
  9826  0AA9  0187               	clrf	7
  9827  0AAA  0860               	movf	??_USBCtrlTrfRxService,w
  9828  0AAB  0081               	movwf	1
  9829                           
  9830                           ;usb_device.c: 2054: }
  9831  0AAC  0008               	return
  9832  0AAD                     l4708:	
  9833                           
  9834                           ;usb_device.c: 2055: else
  9835                           ;usb_device.c: 2056: {
  9836                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9837  0AAD  3088               	movlw	136
  9838  0AAE  0020               	movlb	0	; select bank0
  9839  0AAF  00E0               	movwf	??_USBCtrlTrfRxService
  9840  0AB0  0869               	movf	_pBDTEntryEP0OutNext,w
  9841  0AB1  0086               	movwf	6
  9842  0AB2  0187               	clrf	7
  9843  0AB3  0860               	movf	??_USBCtrlTrfRxService,w
  9844  0AB4  0081               	movwf	1
  9845                           
  9846                           ;usb_device.c: 2058: }
  9847                           ;usb_device.c: 2059: }
  9848  0AB5  0008               	return
  9849  0AB6                     l4710:	
  9850                           
  9851                           ;usb_device.c: 2060: else
  9852                           ;usb_device.c: 2061: {
  9853                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
  9854  0AB6  3008               	movlw	8
  9855  0AB7  0020               	movlb	0	; select bank0
  9856  0AB8  00E0               	movwf	??_USBCtrlTrfRxService
  9857  0AB9  0A69               	incf	_pBDTEntryEP0OutNext,w
  9858  0ABA  0086               	movwf	6
  9859  0ABB  0187               	clrf	7
  9860  0ABC  0860               	movf	??_USBCtrlTrfRxService,w
  9861  0ABD  0081               	movwf	1
  9862                           
  9863                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9864  0ABE  3040               	movlw	64
  9865  0ABF  00E0               	movwf	??_USBCtrlTrfRxService
  9866  0AC0  3000               	movlw	0
  9867  0AC1  00E1               	movwf	??_USBCtrlTrfRxService+1
  9868  0AC2  0869               	movf	_pBDTEntryEP0OutNext,w
  9869  0AC3  3E02               	addlw	2
  9870  0AC4  0086               	movwf	6
  9871  0AC5  0187               	clrf	7
  9872  0AC6  0860               	movf	??_USBCtrlTrfRxService,w
  9873  0AC7  3FC0               	movwi [0]fsr1
  9874  0AC8  0861               	movf	??_USBCtrlTrfRxService+1,w
  9875  0AC9  3FC1               	movwi [1]fsr1
  9876                           
  9877                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  9878  0ACA  3084               	movlw	132
  9879  0ACB  00E0               	movwf	??_USBCtrlTrfRxService
  9880  0ACC  0869               	movf	_pBDTEntryEP0OutNext,w
  9881  0ACD  0086               	movwf	6
  9882  0ACE  0187               	clrf	7
  9883  0ACF  0860               	movf	??_USBCtrlTrfRxService,w
  9884  0AD0  0081               	movwf	1
  9885                           
  9886                           ;usb_device.c: 2077: if(outPipes[0].pFunc != (0))
  9887  0AD1  0023               	movlb	3	; select bank3
  9888  0AD2  084C               	movf	(_outPipes+5)^(0+384),w
  9889  0AD3  1903               	btfsc	3,2
  9890  0AD4  2AD8               	goto	l4716
  9891                           
  9892                           ;usb_device.c: 2078: {
  9893                           ;usb_device.c: 2084: outPipes[0].pFunc();
  9894  0AD5  084C               	movf	(_outPipes+5)^(0+384),w
  9895  0AD6  318A  2A2E         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9896  0AD8                     l4716:	
  9897                           
  9898                           ;usb_device.c: 2089: }
  9899                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
  9900  0AD8  13C9               	bcf	(_outPipes^(0+384)+2),7
  9901                           
  9902                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
  9903  0AD9  0020               	movlb	0	; select bank0
  9904  0ADA  08E6               	movf	_USBDeferStatusStagePacket,f
  9905  0ADB  1D03               	skipz
  9906  0ADC  0008               	return
  9907                           
  9908                           ;usb_device.c: 2105: {
  9909                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
  9910  0ADD  3191  21CA         	fcall	_USBCtrlEPAllowStatusStage
  9911  0ADF  0008               	return
  9912  0AE0                     __end_of_USBCtrlTrfRxService:	
  9913                           
  9914                           	psect	text34
  9915  1D86                     __ptext34:	
  9916 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9917 ;; Defined at:
  9918 ;;		line 2623 in file "../USB/usb_device.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;		None
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;		None
  9923 ;; Return value:  Size  Location     Type
  9924 ;;		None               void
  9925 ;; Registers used:
  9926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;Total ram usage:        1 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:   10
  9939 ;; This function calls:
  9940 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9941 ;;		_USBCtrlEPServiceComplete
  9942 ;;		_USBCheckStdRequest
  9943 ;; This function is called by:
  9944 ;;		_USBCtrlEPService
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948                           
  9949                           ;psect for function _USBCtrlTrfSetupHandler
  9950  1D86                     _USBCtrlTrfSetupHandler:	
  9951                           
  9952                           ;usb_device.c: 2627: shortPacketStatus = 0;
  9953                           
  9954                           ;incstack = 0
  9955                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  9956  1D86  0020               	movlb	0	; select bank0
  9957  1D87  01EB               	clrf	_shortPacketStatus
  9958                           
  9959                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
  9960  1D88  01E6               	clrf	_USBDeferStatusStagePacket	;volatile
  9961                           
  9962                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
  9963  1D89  0022               	movlb	2	; select bank2
  9964  1D8A  01E5               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  9965                           
  9966                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
  9967  1D8B  01E6               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  9968                           
  9969                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
  9970  1D8C  01DF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  9971                           
  9972                           ;usb_device.c: 2632: controlTransferState = 0;
  9973  1D8D  0020               	movlb	0	; select bank0
  9974  1D8E  01E7               	clrf	_controlTransferState
  9975                           
  9976                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9977  1D8F  307F               	movlw	127
  9978  1D90  0021               	movlb	1	; select bank1
  9979  1D91  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9980  1D92  0862               	movf	_pBDTEntryIn^(0+128),w
  9981  1D93  0086               	movwf	6
  9982  1D94  0187               	clrf	7
  9983  1D95  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9984  1D96  0581               	andwf	1,f
  9985                           
  9986                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9987  1D97  3004               	movlw	4
  9988  1D98  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9989  1D99  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9990  1D9A  06E2               	xorwf	_pBDTEntryIn^(0+128),f
  9991                           
  9992                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9993  1D9B  307F               	movlw	127
  9994  1D9C  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9995  1D9D  0862               	movf	_pBDTEntryIn^(0+128),w
  9996  1D9E  0086               	movwf	6
  9997  1D9F  0187               	clrf	7
  9998  1DA0  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9999  1DA1  0581               	andwf	1,f
 10000                           
 10001                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10002  1DA2  3004               	movlw	4
 10003  1DA3  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10004  1DA4  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10005  1DA5  06E2               	xorwf	_pBDTEntryIn^(0+128),f
 10006                           
 10007                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10008  1DA6  307F               	movlw	127
 10009  1DA7  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10010  1DA8  0020               	movlb	0	; select bank0
 10011  1DA9  0869               	movf	_pBDTEntryEP0OutNext,w
 10012  1DAA  0086               	movwf	6
 10013  1DAB  0187               	clrf	7
 10014  1DAC  0021               	movlb	1	; select bank1
 10015  1DAD  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10016  1DAE  0581               	andwf	1,f
 10017                           
 10018                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
 10019  1DAF  01EA               	clrf	(_inPipes^(0+128)+2)
 10020                           
 10021                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
 10022  1DB0  01EB               	clrf	(_inPipes^(0+128)+3)
 10023  1DB1  01EC               	clrf	((_inPipes+1)^(0+128)+3)
 10024                           
 10025                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
 10026  1DB2  0023               	movlb	3	; select bank3
 10027  1DB3  01C9               	clrf	(_outPipes^(0+384)+2)
 10028                           
 10029                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
 10030  1DB4  01CA               	clrf	(_outPipes^(0+384)+3)
 10031  1DB5  01CB               	clrf	((_outPipes+1)^(0+384)+3)
 10032                           
 10033                           ;usb_device.c: 2656: USBCheckStdRequest();
 10034  1DB6  319F  27A7  319D   	fcall	_USBCheckStdRequest
 10035                           
 10036                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10037  1DB9  3003               	movlw	3
 10038  1DBA  0021               	movlb	1	; select bank1
 10039  1DBB  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10040  1DBC  3000               	movlw	0
 10041  1DBD  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10042  1DBE  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10043  1DBF  3000               	movlw	0
 10044  1DC0  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 10045  1DC1  3000               	movlw	0
 10046  1DC2  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10047  1DC3  319D  2547  319D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10048                           
 10049                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
 10050  1DC6  3195  252C         	fcall	_USBCtrlEPServiceComplete
 10051  1DC8  0008               	return
 10052  1DC9                     __end_of_USBCtrlTrfSetupHandler:	
 10053                           
 10054                           	psect	text35
 10055  1FA7                     __ptext35:	
 10056 ;; *************** function _USBCheckStdRequest *****************
 10057 ;; Defined at:
 10058 ;;		line 2839 in file "../USB/usb_device.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;		None
 10063 ;; Return value:  Size  Location     Type
 10064 ;;		None               void
 10065 ;; Registers used:
 10066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10074 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;Total ram usage:        1 bytes
 10077 ;; Hardware stack levels used:    1
 10078 ;; Hardware stack levels required when called:    9
 10079 ;; This function calls:
 10080 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10081 ;;		_USBStdSetCfgHandler
 10082 ;;		_USBStdGetDscHandler
 10083 ;;		_USBStdGetStatusHandler
 10084 ;;		_USBStdFeatureReqHandler
 10085 ;; This function is called by:
 10086 ;;		_USBCtrlTrfSetupHandler
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           
 10091                           ;psect for function _USBCheckStdRequest
 10092  1FA7                     _USBCheckStdRequest:	
 10093                           
 10094                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
 10095                           
 10096                           ;incstack = 0
 10097                           ; Regs used in _USBCheckStdRequest: [allreg]
 10098  1FA7  0020               	movlb	0	; select bank0
 10099  1FA8  0E40               	swapf	64,w	;volatile
 10100  1FA9  0C89               	rrf	9,f
 10101  1FAA  3903               	andlw	3
 10102  1FAB  3A00               	xorlw	0
 10103  1FAC  1D03               	btfss	3,2
 10104  1FAD  0008               	return
 10105  1FAE  2FF4               	goto	l4944
 10106  1FAF                     l332:	
 10107                           ;usb_device.c: 2843: {
 10108                           ;usb_device.c: 2844: case 5:
 10109                           
 10110                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
 10111                           
 10112                           
 10113                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
 10114  1FAF  0021               	movlb	1	; select bank1
 10115  1FB0  17EA               	bsf	(_inPipes^(0+128)+2),7
 10116                           
 10117                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
 10118  1FB1  3008               	movlw	8
 10119  1FB2  00B7               	movwf	??_USBCheckStdRequest^(0+128)
 10120  1FB3  0837               	movf	??_USBCheckStdRequest^(0+128),w
 10121  1FB4  00E5               	movwf	_USBDeviceState^(0+128)
 10122                           
 10123                           ;usb_device.c: 2848: break;
 10124  1FB5  0008               	return
 10125  1FB6                     l4914:	
 10126                           ;usb_device.c: 2849: case 6:
 10127                           
 10128                           
 10129                           ;usb_device.c: 2850: USBStdGetDscHandler();
 10130  1FB6  3193  2323         	fcall	_USBStdGetDscHandler
 10131                           
 10132                           ;usb_device.c: 2851: break;
 10133  1FB8  0008               	return
 10134  1FB9                     l4916:	
 10135                           ;usb_device.c: 2852: case 9:
 10136                           
 10137                           
 10138                           ;usb_device.c: 2853: USBStdSetCfgHandler();
 10139  1FB9  3193  23A2         	fcall	_USBStdSetCfgHandler
 10140                           
 10141                           ;usb_device.c: 2854: break;
 10142  1FBB  0008               	return
 10143  1FBC                     l4918:	
 10144                           ;usb_device.c: 2855: case 8:
 10145                           
 10146                           
 10147                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
 10148  1FBC  30ED               	movlw	low _USBActiveConfiguration
 10149  1FBD  0021               	movlb	1	; select bank1
 10150  1FBE  00E8               	movwf	_inPipes^(0+128)
 10151  1FBF  3000               	movlw	high _USBActiveConfiguration
 10152  1FC0  00E9               	movwf	(_inPipes+1)^(0+128)
 10153                           
 10154                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10155  1FC1  146A               	bsf	(_inPipes^(0+128)+2),0
 10156                           
 10157                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
 10158  1FC2  01EB               	clrf	(_inPipes^(0+128)+3)
 10159  1FC3  0AEB               	incf	(_inPipes^(0+128)+3),f
 10160                           
 10161                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
 10162  1FC4  17EA               	bsf	(_inPipes^(0+128)+2),7
 10163                           
 10164                           ;usb_device.c: 2860: break;
 10165  1FC5  0008               	return
 10166  1FC6                     l4926:	
 10167                           ;usb_device.c: 2861: case 0:
 10168                           
 10169                           
 10170                           ;usb_device.c: 2862: USBStdGetStatusHandler();
 10171  1FC6  319E  26A9         	fcall	_USBStdGetStatusHandler
 10172                           
 10173                           ;usb_device.c: 2863: break;
 10174  1FC8  0008               	return
 10175  1FC9                     l4928:	
 10176                           ;usb_device.c: 2864: case 1:
 10177                           
 10178                           
 10179                           ;usb_device.c: 2865: case 3:
 10180                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
 10181  1FC9  318E  26E6         	fcall	_USBStdFeatureReqHandler
 10182                           
 10183                           ;usb_device.c: 2867: break;
 10184  1FCB  0008               	return
 10185  1FCC                     l4930:	
 10186                           ;usb_device.c: 2868: case 10:
 10187                           
 10188                           
 10189                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
 10190  1FCC  0020               	movlb	0	; select bank0
 10191  1FCD  0844               	movf	68,w	;volatile
 10192  1FCE  3E6C               	addlw	_USBAlternateInterface& (0+255)
 10193  1FCF  0021               	movlb	1	; select bank1
 10194  1FD0  00E8               	movwf	_inPipes^(0+128)
 10195  1FD1  3000               	movlw	0
 10196  1FD2  00E9               	movwf	(_inPipes+1)^(0+128)
 10197                           
 10198                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10199  1FD3  146A               	bsf	(_inPipes^(0+128)+2),0
 10200                           
 10201                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
 10202  1FD4  01EB               	clrf	(_inPipes^(0+128)+3)
 10203  1FD5  0AEB               	incf	(_inPipes^(0+128)+3),f
 10204                           
 10205                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
 10206  1FD6  17EA               	bsf	(_inPipes^(0+128)+2),7
 10207                           
 10208                           ;usb_device.c: 2873: break;
 10209  1FD7  0008               	return
 10210  1FD8                     l341:	
 10211                           ;usb_device.c: 2874: case 11:
 10212                           
 10213                           
 10214                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
 10215  1FD8  0021               	movlb	1	; select bank1
 10216  1FD9  17EA               	bsf	(_inPipes^(0+128)+2),7
 10217                           
 10218                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10219  1FDA  0020               	movlb	0	; select bank0
 10220  1FDB  0842               	movf	66,w	;volatile
 10221  1FDC  0021               	movlb	1	; select bank1
 10222  1FDD  00B7               	movwf	??_USBCheckStdRequest^(0+128)
 10223  1FDE  0020               	movlb	0	; select bank0
 10224  1FDF  0844               	movf	68,w	;volatile
 10225  1FE0  3E6C               	addlw	_USBAlternateInterface& (0+255)
 10226  1FE1  0086               	movwf	6
 10227  1FE2  0187               	clrf	7
 10228  1FE3  0021               	movlb	1	; select bank1
 10229  1FE4  0837               	movf	??_USBCheckStdRequest^(0+128),w
 10230  1FE5  0081               	movwf	1
 10231                           
 10232                           ;usb_device.c: 2877: break;
 10233  1FE6  0008               	return
 10234  1FE7                     l4940:	
 10235                           ;usb_device.c: 2878: case 7:
 10236                           
 10237                           
 10238                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10239  1FE7  3002               	movlw	2
 10240  1FE8  0021               	movlb	1	; select bank1
 10241  1FE9  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10242  1FEA  3000               	movlw	0
 10243  1FEB  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10244  1FEC  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10245  1FED  3000               	movlw	0
 10246  1FEE  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 10247  1FEF  3000               	movlw	0
 10248  1FF0  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10249  1FF1  319D  2547         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10250                           
 10251                           ;usb_device.c: 2884: }
 10252                           
 10253                           ;usb_device.c: 2883: break;
 10254                           
 10255                           ;usb_device.c: 2882: default:
 10256                           
 10257                           ;usb_device.c: 2881: case 12:
 10258                           
 10259                           ;usb_device.c: 2880: break;
 10260  1FF3  0008               	return
 10261  1FF4                     l4944:	
 10262  1FF4  0020               	movlb	0	; select bank0
 10263  1FF5  0841               	movf	65,w	;volatile
 10264                           
 10265                           ; Switch size 1, requested type "space"
 10266                           ; Number of cases is 11, Range of values is 0 to 12
 10267                           ; switch strategies available:
 10268                           ; Name         Instructions Cycles
 10269                           ; direct_byte           32     6 (fixed)
 10270                           ; simple_byte           34    18 (average)
 10271                           ; jumptable            260     6 (fixed)
 10272                           ; rangetable            17     4 (fixed)
 10273                           ; spacedrange           31     6 (fixed)
 10274                           ; locatedrange          13     3 (fixed)
 10275                           ;	Chosen strategy is direct_byte
 10276  1FF6  0084               	movwf	4
 10277  1FF7  300D               	movlw	13
 10278  1FF8  0204               	subwf	4,w
 10279  1FF9  1803               	skipnc
 10280  1FFA  0008               	return
 10281  1FFB  3198               	movlp	high S6638
 10282  1FFC  3504               	lslf	4,w
 10283  1FFD  3E00               	addlw	low S6638
 10284  1FFE  0082               	movwf	2
 10285  1FFF                     l330:	
 10286  1FFF  0008               	return
 10287  2000                     __end_of_USBCheckStdRequest:	
 10288                           
 10289                           	psect	swtext1
 10290  1800                     __pswtext1:	
 10291  1800                     S6638:	
 10292  1800  319F  2FC6         	ljmp	l4926
 10293  1802  319F  2FC9         	ljmp	l4928
 10294  1804  319F  2FFF         	ljmp	l330
 10295  1806  319F  2FC9         	ljmp	l4928
 10296  1808  319F  2FFF         	ljmp	l330
 10297  180A  319F  2FAF         	ljmp	l332
 10298  180C  319F  2FB6         	ljmp	l4914
 10299  180E  319F  2FE7         	ljmp	l4940
 10300  1810  319F  2FBC         	ljmp	l4918
 10301  1812  319F  2FB9         	ljmp	l4916
 10302  1814  319F  2FCC         	ljmp	l4930
 10303  1816  319F  2FD8         	ljmp	l341
 10304  1818  319F  2FFF         	ljmp	l330
 10305                           
 10306                           	psect	text36
 10307  0EE6                     __ptext36:	
 10308 ;; *************** function _USBStdFeatureReqHandler *****************
 10309 ;; Defined at:
 10310 ;;		line 2907 in file "../USB/usb_device.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  pUEP            2   19[BANK1 ] PTR unsigned char 
 10315 ;;		 -> UEP0(1), 
 10316 ;;  p               1   22[BANK1 ] PTR struct __BDT
 10317 ;;		 -> NULL(0), BDT(32), 
 10318 ;;  current_ep_d    1   21[BANK1 ] struct .
 10319 ;; Return value:  Size  Location     Type
 10320 ;;		None               void
 10321 ;; Registers used:
 10322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10330 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10331 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10332 ;;Total ram usage:        6 bytes
 10333 ;; Hardware stack levels used:    1
 10334 ;; Hardware stack levels required when called:    8
 10335 ;; This function calls:
 10336 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10337 ;; This function is called by:
 10338 ;;		_USBCheckStdRequest
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _USBStdFeatureReqHandler
 10344  0EE6                     _USBStdFeatureReqHandler:	
 10345                           
 10346                           ;usb_device.c: 2908: BDT_ENTRY *p;
 10347                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
 10348                           ;usb_device.c: 2913: unsigned char* pUEP;
 10349                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
 10350                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
 10351                           
 10352                           ;incstack = 0
 10353                           ; Regs used in _USBStdFeatureReqHandler: [allreg]
 10354  0EE6  0020               	movlb	0	; select bank0
 10355  0EE7  0842               	movf	66,w	;volatile
 10356  0EE8  3A01               	xorlw	1
 10357  0EE9  1D03               	skipz
 10358  0EEA  2EFD               	goto	l4962
 10359  0EEB  0840               	movf	64,w	;volatile
 10360  0EEC  391F               	andlw	31
 10361  0EED  3800               	iorlw	0
 10362  0EEE  1D03               	skipz
 10363  0EEF  2EFD               	goto	l4962
 10364                           
 10365                           ;usb_device.c: 2953: {
 10366                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
 10367  0EF0  0021               	movlb	1	; select bank1
 10368  0EF1  17EA               	bsf	(_inPipes^(0+128)+2),7
 10369                           
 10370                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
 10371  0EF2  0020               	movlb	0	; select bank0
 10372  0EF3  0841               	movf	65,w	;volatile
 10373  0EF4  3A03               	xorlw	3
 10374  0EF5  1D03               	skipz
 10375  0EF6  2EFB               	goto	l4960
 10376                           
 10377                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
 10378  0EF7  0022               	movlb	2	; select bank2
 10379  0EF8  01E2               	clrf	_RemoteWakeup^(0+256)
 10380  0EF9  0AE2               	incf	_RemoteWakeup^(0+256),f
 10381  0EFA  2EFD               	goto	l4962
 10382  0EFB                     l4960:	
 10383                           
 10384                           ;usb_device.c: 2957: else
 10385                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
 10386  0EFB  0022               	movlb	2	; select bank2
 10387  0EFC  01E2               	clrf	_RemoteWakeup^(0+256)
 10388  0EFD                     l4962:	
 10389                           
 10390                           ;usb_device.c: 2959: }
 10391                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
 10392                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
 10393                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 10394                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
 10395  0EFD  0020               	movlb	0	; select bank0
 10396  0EFE  0842               	movf	66,w
 10397  0EFF  1D03               	skipz
 10398  0F00  0008               	return
 10399  0F01  0840               	movf	64,w	;volatile
 10400  0F02  391F               	andlw	31
 10401  0F03  3A02               	xorlw	2
 10402  0F04  1D03               	skipz
 10403  0F05  0008               	return
 10404  0F06  0844               	movf	68,w	;volatile
 10405  0F07  390F               	andlw	15
 10406  0F08  3A00               	xorlw	0
 10407  0F09  1903               	skipnz
 10408  0F0A  0008               	return
 10409  0F0B  0844               	movf	68,w	;volatile
 10410  0F0C  390F               	andlw	15
 10411  0F0D  0021               	movlb	1	; select bank1
 10412  0F0E  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10413  0F0F  3002               	movlw	2
 10414  0F10  0231               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 10415  0F11  1803               	skipnc
 10416  0F12  0008               	return
 10417  0F13  0865               	movf	_USBDeviceState^(0+128),w
 10418  0F14  3A20               	xorlw	32
 10419  0F15  1D03               	skipz
 10420  0F16  0008               	return
 10421                           
 10422                           ;usb_device.c: 2966: {
 10423                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
 10424  0F17  17EA               	bsf	(_inPipes^(0+128)+2),7
 10425                           
 10426                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
 10427  0F18  0020               	movlb	0	; select bank0
 10428  0F19  1BC4               	btfsc	68,7	;volatile
 10429  0F1A  2F2B               	goto	l4976
 10430                           
 10431                           ;usb_device.c: 2973: {
 10432                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10433  0F1B  0844               	movf	68,w	;volatile
 10434  0F1C  390F               	andlw	15
 10435  0F1D  3E5B               	addlw	_pBDTEntryOut& (0+255)
 10436  0F1E  0086               	movwf	6
 10437  0F1F  3001               	movlw	1	; select bank2/3
 10438  0F20  0087               	movwf	7
 10439  0F21  0801               	movf	1,w
 10440  0F22  0021               	movlb	1	; select bank1
 10441  0F23  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10442  0F24  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10443  0F25  00B6               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10444                           
 10445                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10446  0F26  0020               	movlb	0	; select bank0
 10447  0F27  0844               	movf	68,w	;volatile
 10448  0F28  390F               	andlw	15
 10449  0F29  3ED3               	addlw	_ep_data_out& (0+255)
 10450  0F2A  2F3A               	goto	L11
 10451  0F2B                     l4976:	
 10452                           ;usb_device.c: 2976: }
 10453                           
 10454                           
 10455                           ;usb_device.c: 2977: else
 10456                           ;usb_device.c: 2978: {
 10457                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10458  0F2B  0020               	movlb	0	; select bank0
 10459  0F2C  0844               	movf	68,w	;volatile
 10460  0F2D  390F               	andlw	15
 10461  0F2E  3EE2               	addlw	_pBDTEntryIn& (0+255)
 10462  0F2F  0086               	movwf	6
 10463  0F30  0187               	clrf	7
 10464  0F31  0801               	movf	1,w
 10465  0F32  0021               	movlb	1	; select bank1
 10466  0F33  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10467  0F34  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10468  0F35  00B6               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10469                           
 10470                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10471  0F36  0020               	movlb	0	; select bank0
 10472  0F37  0844               	movf	68,w	;volatile
 10473  0F38  390F               	andlw	15
 10474  0F39  3ED1               	addlw	_ep_data_in& (0+255)
 10475  0F3A                     L11:	
 10476  0F3A  0086               	movwf	6
 10477  0F3B  3001               	movlw	1	; select bank3/4
 10478  0F3C  0087               	movwf	7
 10479  0F3D  0801               	movf	1,w
 10480  0F3E  0021               	movlb	1	; select bank1
 10481  0F3F  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10482  0F40  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10483  0F41  00B5               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 10484                           
 10485                           ;usb_device.c: 2981: }
 10486                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
 10487  0F42  1835               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 10488  0F43  2F49               	goto	l353
 10489                           
 10490                           ;usb_device.c: 2988: {
 10491                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
 10492  0F44  30FB               	movlw	251
 10493  0F45  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10494  0F46  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10495  0F47  05B6               	andwf	USBStdFeatureReqHandler@p^(0+128),f
 10496                           
 10497                           ;usb_device.c: 2990: }
 10498  0F48  2F4A               	goto	l354
 10499  0F49                     l353:	
 10500                           
 10501                           ;usb_device.c: 2991: else
 10502                           ;usb_device.c: 2992: {
 10503                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
 10504  0F49  1536               	bsf	USBStdFeatureReqHandler@p^(0+128),2
 10505  0F4A                     l354:	
 10506                           
 10507                           ;usb_device.c: 2994: }
 10508                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
 10509  0F4A  0020               	movlb	0	; select bank0
 10510  0F4B  1BC4               	btfsc	68,7	;volatile
 10511  0F4C  2F58               	goto	l4984
 10512                           
 10513                           ;usb_device.c: 3000: {
 10514                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10515  0F4D  0021               	movlb	1	; select bank1
 10516  0F4E  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10517  0F4F  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10518  0F50  0020               	movlb	0	; select bank0
 10519  0F51  0844               	movf	68,w	;volatile
 10520  0F52  390F               	andlw	15
 10521  0F53  3E5B               	addlw	_pBDTEntryOut& (0+255)
 10522  0F54  0086               	movwf	6
 10523  0F55  3001               	movlw	1	; select bank2/3
 10524  0F56  0087               	movwf	7
 10525  0F57  2F61               	goto	L12
 10526  0F58                     l4984:	
 10527                           ;usb_device.c: 3002: }
 10528                           
 10529                           
 10530                           ;usb_device.c: 3003: else
 10531                           ;usb_device.c: 3004: {
 10532                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10533  0F58  0021               	movlb	1	; select bank1
 10534  0F59  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10535  0F5A  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10536  0F5B  0020               	movlb	0	; select bank0
 10537  0F5C  0844               	movf	68,w	;volatile
 10538  0F5D  390F               	andlw	15
 10539  0F5E  3EE2               	addlw	_pBDTEntryIn& (0+255)
 10540  0F5F  0086               	movwf	6
 10541  0F60  0187               	clrf	7
 10542  0F61                     L12:	
 10543  0F61  0021               	movlb	1	; select bank1
 10544  0F62  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10545  0F63  0081               	movwf	1
 10546                           
 10547                           ;usb_device.c: 3006: }
 10548                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
 10549  0F64  0020               	movlb	0	; select bank0
 10550  0F65  0841               	movf	65,w	;volatile
 10551  0F66  3A03               	xorlw	3
 10552  0F67  1D03               	skipz
 10553  0F68  2F86               	goto	l4996
 10554                           
 10555                           ;usb_device.c: 3010: {
 10556                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
 10557  0F69  0021               	movlb	1	; select bank1
 10558  0F6A  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10559  0F6B  0086               	movwf	6
 10560  0F6C  0187               	clrf	7
 10561  0F6D  1F81               	btfss	1,7
 10562  0F6E  2F7D               	goto	l358
 10563                           
 10564                           ;usb_device.c: 3012: {
 10565                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
 10566  0F6F  0020               	movlb	0	; select bank0
 10567  0F70  1BC4               	btfsc	68,7	;volatile
 10568  0F71  2F76               	goto	l4994
 10569                           
 10570                           ;usb_device.c: 3016: {
 10571                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10572  0F72  0844               	movf	68,w	;volatile
 10573  0F73  390F               	andlw	15
 10574  0F74  3ED3               	addlw	_ep_data_out& (0+255)
 10575  0F75  2F79               	goto	L13
 10576  0F76                     l4994:	
 10577                           ;usb_device.c: 3018: }
 10578                           
 10579                           
 10580                           ;usb_device.c: 3019: else
 10581                           ;usb_device.c: 3020: {
 10582                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10583  0F76  0844               	movf	68,w	;volatile
 10584  0F77  390F               	andlw	15
 10585  0F78  3ED1               	addlw	_ep_data_in& (0+255)
 10586  0F79                     L13:	
 10587  0F79  0086               	movwf	6
 10588  0F7A  3001               	movlw	1	; select bank3/4
 10589  0F7B  0087               	movwf	7
 10590  0F7C  1481               	bsf	1,1
 10591  0F7D                     l358:	
 10592                           
 10593                           ;usb_device.c: 3022: }
 10594                           ;usb_device.c: 3023: }
 10595                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
 10596  0F7D  3084               	movlw	132
 10597  0F7E  0021               	movlb	1	; select bank1
 10598  0F7F  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10599  0F80  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10600  0F81  0086               	movwf	6
 10601  0F82  0187               	clrf	7
 10602  0F83  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10603  0F84  0481               	iorwf	1,f
 10604                           
 10605                           ;usb_device.c: 3027: }
 10606  0F85  0008               	return
 10607  0F86                     l4996:	
 10608                           
 10609                           ;usb_device.c: 3028: else
 10610                           ;usb_device.c: 3029: {
 10611                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10612  0F86  3004               	movlw	4
 10613  0F87  0021               	movlb	1	; select bank1
 10614  0F88  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10615  0F89  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10616  0F8A  06B6               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10617                           
 10618                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
 10619  0F8B  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10620  0F8C  0086               	movwf	6
 10621  0F8D  0187               	clrf	7
 10622  0F8E  1F81               	btfss	1,7
 10623  0F8F  2FAB               	goto	l5006
 10624                           
 10625                           ;usb_device.c: 3036: {
 10626                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
 10627  0F90  307F               	movlw	127
 10628  0F91  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10629  0F92  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10630  0F93  0086               	movwf	6
 10631  0F94  0187               	clrf	7
 10632  0F95  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10633  0F96  0581               	andwf	1,f
 10634                           
 10635                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
 10636  0F97  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10637  0F98  0086               	movwf	6
 10638  0F99  0187               	clrf	7
 10639  0F9A  1701               	bsf	1,6
 10640                           
 10641                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10642  0F9B  3005               	movlw	5
 10643  0F9C  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10644  0F9D  3000               	movlw	0
 10645  0F9E  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10646  0F9F  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10647  0FA0  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10648  0FA1  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10649  0FA2  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10650  0FA3  3001               	movlw	1
 10651  0FA4  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 10652  0FA5  3000               	movlw	0
 10653  0FA6  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10654  0FA7  319D  2547  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10655                           
 10656                           ;usb_device.c: 3042: }
 10657  0FAA  2FB0               	goto	l5008
 10658  0FAB                     l5006:	
 10659                           
 10660                           ;usb_device.c: 3043: else
 10661                           ;usb_device.c: 3044: {
 10662                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
 10663  0FAB  0021               	movlb	1	; select bank1
 10664  0FAC  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10665  0FAD  0086               	movwf	6
 10666  0FAE  0187               	clrf	7
 10667  0FAF  1701               	bsf	1,6
 10668  0FB0                     l5008:	
 10669                           
 10670                           ;usb_device.c: 3047: }
 10671                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10672  0FB0  3004               	movlw	4
 10673  0FB1  0021               	movlb	1	; select bank1
 10674  0FB2  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10675  0FB3  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10676  0FB4  06B6               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10677                           
 10678                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10679  0FB5  18B5               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 10680  0FB6  2FBC               	goto	l366
 10681  0FB7  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10682  0FB8  0086               	movwf	6
 10683  0FB9  0187               	clrf	7
 10684  0FBA  1F81               	btfss	1,7
 10685  0FBB  2FE2               	goto	l5020
 10686  0FBC                     l366:	
 10687                           
 10688                           ;usb_device.c: 3058: {
 10689                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
 10690  0FBC  0020               	movlb	0	; select bank0
 10691  0FBD  1BC4               	btfsc	68,7	;volatile
 10692  0FBE  2FC3               	goto	l5016
 10693                           
 10694                           ;usb_device.c: 3060: {
 10695                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10696  0FBF  0844               	movf	68,w	;volatile
 10697  0FC0  390F               	andlw	15
 10698  0FC1  3ED3               	addlw	_ep_data_out& (0+255)
 10699  0FC2  2FC6               	goto	L14
 10700  0FC3                     l5016:	
 10701                           ;usb_device.c: 3062: }
 10702                           
 10703                           
 10704                           ;usb_device.c: 3063: else
 10705                           ;usb_device.c: 3064: {
 10706                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10707  0FC3  0844               	movf	68,w	;volatile
 10708  0FC4  390F               	andlw	15
 10709  0FC5  3ED1               	addlw	_ep_data_in& (0+255)
 10710  0FC6                     L14:	
 10711  0FC6  0086               	movwf	6
 10712  0FC7  3001               	movlw	1	; select bank3/4
 10713  0FC8  0087               	movwf	7
 10714  0FC9  1081               	bcf	1,1
 10715                           
 10716                           ;usb_device.c: 3066: }
 10717                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10718  0FCA  303B               	movlw	59
 10719  0FCB  0021               	movlb	1	; select bank1
 10720  0FCC  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10721  0FCD  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10722  0FCE  0086               	movwf	6
 10723  0FCF  0187               	clrf	7
 10724  0FD0  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10725  0FD1  0581               	andwf	1,f
 10726                           
 10727                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10728  0FD2  3005               	movlw	5
 10729  0FD3  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10730  0FD4  3000               	movlw	0
 10731  0FD5  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10732  0FD6  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10733  0FD7  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10734  0FD8  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10735  0FD9  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10736  0FDA  3001               	movlw	1
 10737  0FDB  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 10738  0FDC  3000               	movlw	0
 10739  0FDD  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10740  0FDE  319D  2547  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10741                           
 10742                           ;usb_device.c: 3072: }
 10743  0FE1  2FEA               	goto	l5022
 10744  0FE2                     l5020:	
 10745                           
 10746                           ;usb_device.c: 3073: else
 10747                           ;usb_device.c: 3074: {
 10748                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10749  0FE2  303B               	movlw	59
 10750  0FE3  0021               	movlb	1	; select bank1
 10751  0FE4  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10752  0FE5  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10753  0FE6  0086               	movwf	6
 10754  0FE7  0187               	clrf	7
 10755  0FE8  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10756  0FE9  0581               	andwf	1,f
 10757  0FEA                     l5022:	
 10758                           
 10759                           ;usb_device.c: 3077: }
 10760                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10761  0FEA  0020               	movlb	0	; select bank0
 10762  0FEB  0844               	movf	68,w	;volatile
 10763  0FEC  390F               	andlw	15
 10764  0FED  3E98               	addlw	152
 10765  0FEE  0021               	movlb	1	; select bank1
 10766  0FEF  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10767  0FF0  01B2               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 10768  0FF1  300E               	movlw	14
 10769  0FF2  3DB2               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 10770  0FF3  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10771  0FF4  00B3               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 10772  0FF5  0832               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 10773  0FF6  00B4               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 10774                           
 10775                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
 10776  0FF7  30FE               	movlw	254
 10777  0FF8  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10778  0FF9  0833               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 10779  0FFA  0086               	movwf	6
 10780  0FFB  0834               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 10781  0FFC  0087               	movwf	7
 10782  0FFD  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10783  0FFE  0581               	andwf	1,f
 10784  0FFF  0008               	return
 10785  1000                     __end_of_USBStdFeatureReqHandler:	
 10786                           
 10787                           	psect	text37
 10788  1EA9                     __ptext37:	
 10789 ;; *************** function _USBStdGetStatusHandler *****************
 10790 ;; Defined at:
 10791 ;;		line 2283 in file "../USB/usb_device.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;		None
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  p               1   15[BANK0 ] PTR struct __BDT
 10796 ;;		 -> NULL(0), BDT(32), 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;		None               void
 10799 ;; Registers used:
 10800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        2 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    4
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_USBCheckStdRequest
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           
 10821                           ;psect for function _USBStdGetStatusHandler
 10822  1EA9                     _USBStdGetStatusHandler:	
 10823                           
 10824                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
 10825                           
 10826                           ;incstack = 0
 10827                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 10828  1EA9  0020               	movlb	0	; select bank0
 10829  1EAA  01C8               	clrf	72	;volatile
 10830                           
 10831                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
 10832  1EAB  3000               	movlw	0
 10833  1EAC  00C9               	movwf	73	;volatile
 10834                           
 10835                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
 10836  1EAD  2EE1               	goto	l4828
 10837  1EAE                     l271:	
 10838                           ;usb_device.c: 2288: {
 10839                           ;usb_device.c: 2289: case (0x00):
 10840                           
 10841                           
 10842                           ;usb_device.c: 2295: if(1 == 1)
 10843  1EAE  0021               	movlb	1	; select bank1
 10844  1EAF  17EA               	bsf	(_inPipes^(0+128)+2),7
 10845                           
 10846                           ;usb_device.c: 2296: {
 10847                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
 10848  1EB0  0020               	movlb	0	; select bank0
 10849  1EB1  1448               	bsf	72,0	;volatile
 10850                           
 10851                           ;usb_device.c: 2298: }
 10852                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
 10853  1EB2  0022               	movlb	2	; select bank2
 10854  1EB3  0862               	movf	_RemoteWakeup^(0+256),w
 10855  1EB4  3A01               	xorlw	1
 10856  1EB5  1D03               	skipz
 10857  1EB6  2EED               	goto	l274
 10858                           
 10859                           ;usb_device.c: 2301: {
 10860                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
 10861  1EB7  0020               	movlb	0	; select bank0
 10862  1EB8  14C8               	bsf	72,1	;volatile
 10863                           
 10864                           ;usb_device.c: 2303: }
 10865                           ;usb_device.c: 2304: break;
 10866  1EB9  2EED               	goto	l274
 10867  1EBA                     l275:	
 10868                           ;usb_device.c: 2305: case (0x01):
 10869                           
 10870                           
 10871                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
 10872  1EBA  0021               	movlb	1	; select bank1
 10873  1EBB  17EA               	bsf	(_inPipes^(0+128)+2),7
 10874                           
 10875                           ;usb_device.c: 2307: break;
 10876  1EBC  2EED               	goto	l274
 10877  1EBD                     l276:	
 10878                           ;usb_device.c: 2308: case (0x02):
 10879                           
 10880                           
 10881                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
 10882  1EBD  0021               	movlb	1	; select bank1
 10883  1EBE  17EA               	bsf	(_inPipes^(0+128)+2),7
 10884                           
 10885                           ;usb_device.c: 2313: {
 10886                           ;usb_device.c: 2314: BDT_ENTRY *p;
 10887                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
 10888  1EBF  0020               	movlb	0	; select bank0
 10889  1EC0  1BC4               	btfsc	68,7	;volatile
 10890  1EC1  2EC9               	goto	l4818
 10891                           
 10892                           ;usb_device.c: 2317: {
 10893                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10894  1EC2  0844               	movf	68,w	;volatile
 10895  1EC3  390F               	andlw	15
 10896  1EC4  3E5B               	addlw	_pBDTEntryOut& (0+255)
 10897  1EC5  0086               	movwf	6
 10898  1EC6  3001               	movlw	1	; select bank2/3
 10899  1EC7  0087               	movwf	7
 10900  1EC8  2ECE               	goto	L15
 10901  1EC9                     l4818:	
 10902                           ;usb_device.c: 2319: }
 10903                           
 10904                           
 10905                           ;usb_device.c: 2320: else
 10906                           ;usb_device.c: 2321: {
 10907                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10908  1EC9  0844               	movf	68,w	;volatile
 10909  1ECA  390F               	andlw	15
 10910  1ECB  3EE2               	addlw	_pBDTEntryIn& (0+255)
 10911  1ECC  0086               	movwf	6
 10912  1ECD  0187               	clrf	7
 10913  1ECE                     L15:	
 10914  1ECE  0801               	movf	1,w
 10915  1ECF  00DE               	movwf	??_USBStdGetStatusHandler
 10916  1ED0  085E               	movf	??_USBStdGetStatusHandler,w
 10917  1ED1  00DF               	movwf	USBStdGetStatusHandler@p
 10918                           
 10919                           ;usb_device.c: 2323: }
 10920                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10921  1ED2  085F               	movf	USBStdGetStatusHandler@p,w
 10922  1ED3  0086               	movwf	6
 10923  1ED4  0187               	clrf	7
 10924  1ED5  1F81               	btfss	1,7
 10925  1ED6  2EED               	goto	l274
 10926  1ED7  085F               	movf	USBStdGetStatusHandler@p,w
 10927  1ED8  0086               	movwf	6
 10928  1ED9  0187               	clrf	7
 10929  1EDA  1D01               	btfss	1,2
 10930  1EDB  2EED               	goto	l274
 10931                           
 10932                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
 10933  1EDC  3001               	movlw	1
 10934  1EDD  00DE               	movwf	??_USBStdGetStatusHandler
 10935  1EDE  085E               	movf	??_USBStdGetStatusHandler,w
 10936  1EDF  00C8               	movwf	72	;volatile
 10937                           
 10938                           ;usb_device.c: 2328: }
 10939                           ;usb_device.c: 2329: }
 10940                           
 10941                           ;usb_device.c: 2327: break;
 10942  1EE0  2EED               	goto	l274
 10943  1EE1                     l4828:	
 10944  1EE1  0840               	movf	64,w	;volatile
 10945  1EE2  391F               	andlw	31
 10946                           
 10947                           ; Switch size 1, requested type "space"
 10948                           ; Number of cases is 3, Range of values is 0 to 2
 10949                           ; switch strategies available:
 10950                           ; Name         Instructions Cycles
 10951                           ; simple_byte           10     6 (average)
 10952                           ; direct_byte           12     6 (fixed)
 10953                           ; jumptable            260     6 (fixed)
 10954                           ; rangetable             7     4 (fixed)
 10955                           ; spacedrange           11     6 (fixed)
 10956                           ; locatedrange           3     3 (fixed)
 10957                           ;	Chosen strategy is simple_byte
 10958  1EE3  3A00               	xorlw	0	; case 0
 10959  1EE4  1903               	skipnz
 10960  1EE5  2EAE               	goto	l271
 10961  1EE6  3A01               	xorlw	1	; case 1
 10962  1EE7  1903               	skipnz
 10963  1EE8  2EBA               	goto	l275
 10964  1EE9  3A03               	xorlw	3	; case 2
 10965  1EEA  1903               	skipnz
 10966  1EEB  2EBD               	goto	l276
 10967  1EEC  2EED               	goto	l274
 10968  1EED                     l274:	
 10969                           
 10970                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
 10971  1EED  0021               	movlb	1	; select bank1
 10972  1EEE  1FEA               	btfss	(_inPipes^(0+128)+2),7
 10973  1EEF  0008               	return
 10974                           
 10975                           ;usb_device.c: 2332: {
 10976                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
 10977  1EF0  3048               	movlw	72
 10978  1EF1  00E8               	movwf	_inPipes^(0+128)
 10979  1EF2  3000               	movlw	0
 10980  1EF3  00E9               	movwf	(_inPipes+1)^(0+128)
 10981                           
 10982                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10983  1EF4  146A               	bsf	(_inPipes^(0+128)+2),0
 10984                           
 10985                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
 10986  1EF5  3002               	movlw	2
 10987  1EF6  0020               	movlb	0	; select bank0
 10988  1EF7  00DE               	movwf	??_USBStdGetStatusHandler
 10989  1EF8  085E               	movf	??_USBStdGetStatusHandler,w
 10990  1EF9  0021               	movlb	1	; select bank1
 10991  1EFA  00EB               	movwf	(_inPipes^(0+128)+3)
 10992  1EFB  0008               	return
 10993  1EFC                     __end_of_USBStdGetStatusHandler:	
 10994                           
 10995                           	psect	text38
 10996  1323                     __ptext38:	
 10997 ;; *************** function _USBStdGetDscHandler *****************
 10998 ;; Defined at:
 10999 ;;		line 2207 in file "../USB/usb_device.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;		None
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;		None
 11004 ;; Return value:  Size  Location     Type
 11005 ;;		None               void
 11006 ;; Registers used:
 11007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;Total ram usage:        3 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    4
 11020 ;; This function calls:
 11021 ;;		Nothing
 11022 ;; This function is called by:
 11023 ;;		_USBCheckStdRequest
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           
 11028                           ;psect for function _USBStdGetDscHandler
 11029  1323                     _USBStdGetDscHandler:	
 11030                           
 11031                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
 11032                           
 11033                           ;incstack = 0
 11034                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11035  1323  0020               	movlb	0	; select bank0
 11036  1324  0840               	movf	64,w	;volatile
 11037  1325  3A80               	xorlw	128
 11038  1326  1D03               	skipz
 11039  1327  0008               	return
 11040                           
 11041                           ;usb_device.c: 2209: {
 11042                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11043  1328  30C0               	movlw	192
 11044  1329  00DE               	movwf	??_USBStdGetDscHandler
 11045  132A  085E               	movf	??_USBStdGetDscHandler,w
 11046  132B  0021               	movlb	1	; select bank1
 11047  132C  00EA               	movwf	(_inPipes^(0+128)+2)
 11048                           
 11049                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
 11050  132D  2B95               	goto	l4806
 11051  132E                     l4786:	
 11052                           ;usb_device.c: 2213: {
 11053                           ;usb_device.c: 2214: case 0x01:
 11054                           
 11055                           
 11056                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
 11057  132E  308D               	movlw	low (_device_dsc| (0+32768))
 11058  132F  0021               	movlb	1	; select bank1
 11059  1330  00E8               	movwf	_inPipes^(0+128)
 11060  1331  3088               	movlw	high (_device_dsc| (0+32768))
 11061  1332  00E9               	movwf	(_inPipes+1)^(0+128)
 11062                           
 11063                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
 11064  1333  3012               	movlw	18
 11065  1334  00EB               	movwf	(_inPipes^(0+128)+3)
 11066  1335  3000               	movlw	0
 11067  1336  00EC               	movwf	(_inPipes^(0+128)+4)
 11068                           
 11069                           ;usb_device.c: 2221: break;
 11070  1337  0008               	return
 11071  1338                     l4788:	
 11072                           ;usb_device.c: 2222: case 0x02:
 11073                           
 11074                           
 11075                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11076  1338  3004               	movlw	low (_USB_CD_Ptr| (0+32768))
 11077  1339  0084               	movwf	4
 11078  133A  3088               	movlw	high (_USB_CD_Ptr| (0+32768))
 11079  133B  0085               	movwf	5
 11080  133C  0020               	movlb	0	; select bank0
 11081  133D  0842               	movf	66,w	;volatile
 11082  133E  0784               	addwf	4,f
 11083  133F  1803               	skipnc
 11084  1340  0A85               	incf	5,f
 11085  1341  3F00               	moviw [0]fsr0
 11086  1342  0021               	movlb	1	; select bank1
 11087  1343  00E8               	movwf	_inPipes^(0+128)
 11088  1344  3088               	movlw	(high __stringtab)| (0+128)
 11089  1345  00E9               	movwf	(_inPipes+1)^(0+128)
 11090                           
 11091                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11092  1346  0869               	movf	(_inPipes+1)^(0+128),w
 11093  1347  0020               	movlb	0	; select bank0
 11094  1348  00DF               	movwf	??_USBStdGetDscHandler+1
 11095  1349  0021               	movlb	1	; select bank1
 11096  134A  0868               	movf	_inPipes^(0+128),w
 11097  134B  0020               	movlb	0	; select bank0
 11098  134C  00DE               	movwf	??_USBStdGetDscHandler
 11099  134D  3002               	movlw	2
 11100  134E  075E               	addwf	??_USBStdGetDscHandler,w
 11101  134F  0084               	movwf	4
 11102  1350  085F               	movf	??_USBStdGetDscHandler+1,w
 11103  1351  1803               	skipnc
 11104  1352  0A5F               	incf	??_USBStdGetDscHandler+1,w
 11105  1353  0085               	movwf	5
 11106  1354  0800               	movf	0,w	;code access
 11107  1355  00E0               	movwf	??_USBStdGetDscHandler+2
 11108  1356  0860               	movf	??_USBStdGetDscHandler+2,w
 11109  1357  0021               	movlb	1	; select bank1
 11110  1358  00EB               	movwf	(_inPipes^(0+128)+3)
 11111                           
 11112                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11113  1359  0869               	movf	(_inPipes+1)^(0+128),w
 11114  135A  0020               	movlb	0	; select bank0
 11115  135B  00DF               	movwf	??_USBStdGetDscHandler+1
 11116  135C  0021               	movlb	1	; select bank1
 11117  135D  0868               	movf	_inPipes^(0+128),w
 11118  135E  0020               	movlb	0	; select bank0
 11119  135F  00DE               	movwf	??_USBStdGetDscHandler
 11120  1360  3003               	movlw	3
 11121  1361  075E               	addwf	??_USBStdGetDscHandler,w
 11122  1362  0084               	movwf	4
 11123  1363  085F               	movf	??_USBStdGetDscHandler+1,w
 11124  1364  1803               	skipnc
 11125  1365  0A5F               	incf	??_USBStdGetDscHandler+1,w
 11126  1366  0085               	movwf	5
 11127  1367  0800               	movf	0,w	;code access
 11128  1368  00E0               	movwf	??_USBStdGetDscHandler+2
 11129  1369  0860               	movf	??_USBStdGetDscHandler+2,w
 11130  136A  0021               	movlb	1	; select bank1
 11131  136B  00EC               	movwf	(_inPipes^(0+128)+4)
 11132                           
 11133                           ;usb_device.c: 2234: break;
 11134  136C  0008               	return
 11135  136D                     l4794:	
 11136                           ;usb_device.c: 2235: case 0x03:
 11137                           
 11138                           
 11139                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
 11140  136D  3003               	movlw	3
 11141  136E  0020               	movlb	0	; select bank0
 11142  136F  0242               	subwf	66,w	;volatile
 11143  1370  1803               	skipnc
 11144  1371  2B8F               	goto	l4800
 11145                           
 11146                           ;usb_device.c: 2240: {
 11147                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11148  1372  3001               	movlw	low (_USB_SD_Ptr| (0+32768))
 11149  1373  0084               	movwf	4
 11150  1374  3088               	movlw	high (_USB_SD_Ptr| (0+32768))
 11151  1375  0085               	movwf	5
 11152  1376  0842               	movf	66,w	;volatile
 11153  1377  0784               	addwf	4,f
 11154  1378  1803               	skipnc
 11155  1379  0A85               	incf	5,f
 11156  137A  3F00               	moviw [0]fsr0
 11157  137B  0021               	movlb	1	; select bank1
 11158  137C  00E8               	movwf	_inPipes^(0+128)
 11159  137D  3088               	movlw	(high __stringtab)| (0+128)
 11160  137E  00E9               	movwf	(_inPipes+1)^(0+128)
 11161                           
 11162                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11163  137F  0868               	movf	_inPipes^(0+128),w
 11164  1380  0084               	movwf	4
 11165  1381  0869               	movf	(_inPipes+1)^(0+128),w
 11166  1382  0085               	movwf	5
 11167  1383  0800               	movf	0,w	;code access
 11168  1384  0020               	movlb	0	; select bank0
 11169  1385  00DE               	movwf	??_USBStdGetDscHandler
 11170  1386  01DF               	clrf	??_USBStdGetDscHandler+1
 11171  1387  085E               	movf	??_USBStdGetDscHandler,w
 11172  1388  0021               	movlb	1	; select bank1
 11173  1389  00EB               	movwf	(_inPipes^(0+128)+3)
 11174  138A  0020               	movlb	0	; select bank0
 11175  138B  085F               	movf	??_USBStdGetDscHandler+1,w
 11176  138C  0021               	movlb	1	; select bank1
 11177  138D  00EC               	movwf	((_inPipes+1)^(0+128)+3)
 11178                           
 11179                           ;usb_device.c: 2245: }
 11180  138E  0008               	return
 11181  138F                     l4800:	
 11182                           
 11183                           ;usb_device.c: 2255: else
 11184                           ;usb_device.c: 2256: {
 11185                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
 11186  138F  0021               	movlb	1	; select bank1
 11187  1390  01EA               	clrf	(_inPipes^(0+128)+2)
 11188                           
 11189                           ;usb_device.c: 2258: }
 11190                           ;usb_device.c: 2259: break;
 11191  1391  0008               	return
 11192  1392                     l4802:	
 11193                           ;usb_device.c: 2260: default:
 11194                           
 11195                           
 11196                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
 11197  1392  0021               	movlb	1	; select bank1
 11198  1393  01EA               	clrf	(_inPipes^(0+128)+2)
 11199                           
 11200                           ;usb_device.c: 2263: }
 11201                           
 11202                           ;usb_device.c: 2262: break;
 11203  1394  0008               	return
 11204  1395                     l4806:	
 11205  1395  0020               	movlb	0	; select bank0
 11206  1396  0843               	movf	67,w	;volatile
 11207                           
 11208                           ; Switch size 1, requested type "space"
 11209                           ; Number of cases is 3, Range of values is 1 to 3
 11210                           ; switch strategies available:
 11211                           ; Name         Instructions Cycles
 11212                           ; simple_byte           10     6 (average)
 11213                           ; direct_byte           15     9 (fixed)
 11214                           ; jumptable            263     9 (fixed)
 11215                           ;	Chosen strategy is simple_byte
 11216  1397  3A01               	xorlw	1	; case 1
 11217  1398  1903               	skipnz
 11218  1399  2B2E               	goto	l4786
 11219  139A  3A03               	xorlw	3	; case 2
 11220  139B  1903               	skipnz
 11221  139C  2B38               	goto	l4788
 11222  139D  3A01               	xorlw	1	; case 3
 11223  139E  1903               	skipnz
 11224  139F  2B6D               	goto	l4794
 11225  13A0  2B92               	goto	l4802
 11226  13A1  0008               	return
 11227  13A2                     __end_of_USBStdGetDscHandler:	
 11228                           
 11229                           	psect	text39
 11230  13A2                     __ptext39:	
 11231 ;; *************** function _USBStdSetCfgHandler *****************
 11232 ;; Defined at:
 11233 ;;		line 2132 in file "../USB/usb_device.c"
 11234 ;; Parameters:    Size  Location     Type
 11235 ;;		None
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  p               2   18[BANK1 ] PTR unsigned char 
 11238 ;;		 -> UEP1(1), 
 11239 ;;  i               1   20[BANK1 ] unsigned char 
 11240 ;;  i               1   21[BANK1 ] unsigned char 
 11241 ;; Return value:  Size  Location     Type
 11242 ;;		None               void
 11243 ;; Registers used:
 11244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;Total ram usage:        5 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    8
 11257 ;; This function calls:
 11258 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11259 ;;		_memset
 11260 ;; This function is called by:
 11261 ;;		_USBCheckStdRequest
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           
 11266                           ;psect for function _USBStdSetCfgHandler
 11267  13A2                     _USBStdSetCfgHandler:	
 11268                           
 11269                           ;usb_device.c: 2133: BYTE i;
 11270                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
 11271                           
 11272                           ;incstack = 0
 11273                           ; Regs used in _USBStdSetCfgHandler: [allreg]
 11274  13A2  0021               	movlb	1	; select bank1
 11275  13A3  17EA               	bsf	(_inPipes^(0+128)+2),7
 11276                           
 11277                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 11278  13A4  300E               	movlw	14
 11279  13A5  00B3               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 11280  13A6  3099               	movlw	153
 11281  13A7  00B2               	movwf	USBStdSetCfgHandler@p^(0+128)
 11282  13A8  01B4               	clrf	USBStdSetCfgHandler@i_1089^(0+128)
 11283  13A9  0834               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11284  13AA  1D03               	skipz
 11285  13AB  2BBC               	goto	l4738
 11286  13AC                     l4730:	
 11287  13AC  0832               	movf	USBStdSetCfgHandler@p^(0+128),w
 11288  13AD  0086               	movwf	6
 11289  13AE  0833               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 11290  13AF  0087               	movwf	7
 11291  13B0  0181               	clrf	1
 11292  13B1  3001               	movlw	1
 11293  13B2  07B2               	addwf	USBStdSetCfgHandler@p^(0+128),f
 11294  13B3  3000               	movlw	0
 11295  13B4  3DB3               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 11296  13B5  3001               	movlw	1
 11297  13B6  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11298  13B7  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11299  13B8  07B4               	addwf	USBStdSetCfgHandler@i_1089^(0+128),f
 11300  13B9  0834               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11301  13BA  1903               	btfsc	3,2
 11302  13BB  2BAC               	goto	l4730
 11303  13BC                     l4738:	
 11304                           
 11305                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11306  13BC  3000               	movlw	0
 11307  13BD  0020               	movlb	0	; select bank0
 11308  13BE  00DE               	movwf	?_memset
 11309  13BF  3000               	movlw	0
 11310  13C0  00DF               	movwf	?_memset+1
 11311  13C1  3020               	movlw	32
 11312  13C2  00E0               	movwf	?_memset+2
 11313  13C3  3000               	movlw	0
 11314  13C4  00E1               	movwf	?_memset+3
 11315  13C5  3020               	movlw	32
 11316  13C6  3188  20B1  3193   	fcall	_memset
 11317                           
 11318                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
 11319  13C9  003D               	movlb	29	; select bank29
 11320  13CA  170E               	bsf	14,6	;volatile
 11321                           
 11322                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(1+1u); i++)
 11323  13CB  0021               	movlb	1	; select bank1
 11324  13CC  01B5               	clrf	USBStdSetCfgHandler@i^(0+128)
 11325  13CD  3002               	movlw	2
 11326  13CE  0235               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11327  13CF  1803               	btfsc	3,0
 11328  13D0  2BE5               	goto	l4754
 11329  13D1                     l4748:	
 11330                           
 11331                           ;usb_device.c: 2151: {
 11332                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
 11333  13D1  0835               	movf	USBStdSetCfgHandler@i^(0+128),w
 11334  13D2  3ED1               	addlw	_ep_data_in& (0+255)
 11335  13D3  0086               	movwf	6
 11336  13D4  3001               	movlw	1	; select bank3/4
 11337  13D5  0087               	movwf	7
 11338  13D6  0181               	clrf	1
 11339                           
 11340                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
 11341  13D7  0835               	movf	USBStdSetCfgHandler@i^(0+128),w
 11342  13D8  3ED3               	addlw	_ep_data_out& (0+255)
 11343  13D9  0086               	movwf	6
 11344  13DA  3001               	movlw	1	; select bank3/4
 11345  13DB  0087               	movwf	7
 11346  13DC  0181               	clrf	1
 11347  13DD  3001               	movlw	1
 11348  13DE  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11349  13DF  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11350  13E0  07B5               	addwf	USBStdSetCfgHandler@i^(0+128),f
 11351  13E1  3002               	movlw	2
 11352  13E2  0235               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11353  13E3  1C03               	skipc
 11354  13E4  2BD1               	goto	l4748
 11355  13E5                     l4754:	
 11356                           
 11357                           ;usb_device.c: 2154: }
 11358                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,1);
 11359  13E5  3000               	movlw	0
 11360  13E6  0020               	movlb	0	; select bank0
 11361  13E7  00DE               	movwf	?_memset
 11362  13E8  3000               	movlw	0
 11363  13E9  00DF               	movwf	?_memset+1
 11364  13EA  3001               	movlw	1
 11365  13EB  00E0               	movwf	?_memset+2
 11366  13EC  3000               	movlw	0
 11367  13ED  00E1               	movwf	?_memset+3
 11368  13EE  306C               	movlw	_USBAlternateInterface& (0+255)
 11369  13EF  3188  20B1  3193   	fcall	_memset
 11370                           
 11371                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
 11372  13F2  003D               	movlb	29	; select bank29
 11373  13F3  130E               	bcf	14,6	;volatile
 11374                           
 11375                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11376  13F4  3028               	movlw	40
 11377  13F5  0021               	movlb	1	; select bank1
 11378  13F6  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11379  13F7  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11380  13F8  00E2               	movwf	_pBDTEntryIn^(0+128)
 11381                           
 11382                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11383  13F9  3020               	movlw	32
 11384  13FA  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11385  13FB  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11386  13FC  00E7               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 11387                           
 11388                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11389  13FD  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 11390  13FE  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11391  13FF  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11392  1400  0020               	movlb	0	; select bank0
 11393  1401  00E9               	movwf	_pBDTEntryEP0OutNext
 11394                           
 11395                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11396  1402  0842               	movf	66,w	;volatile
 11397  1403  0021               	movlb	1	; select bank1
 11398  1404  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11399  1405  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11400  1406  00ED               	movwf	_USBActiveConfiguration^(0+128)
 11401                           
 11402                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
 11403  1407  08ED               	movf	_USBActiveConfiguration^(0+128),f
 11404  1408  1D03               	skipz
 11405  1409  2C0F               	goto	l4770
 11406                           
 11407                           ;usb_device.c: 2173: {
 11408                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
 11409  140A  3010               	movlw	16
 11410  140B  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11411  140C  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11412  140D  00E5               	movwf	_USBDeviceState^(0+128)
 11413                           
 11414                           ;usb_device.c: 2176: }
 11415  140E  0008               	return
 11416  140F                     l4770:	
 11417                           
 11418                           ;usb_device.c: 2177: else
 11419                           ;usb_device.c: 2178: {
 11420                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11421  140F  3001               	movlw	1
 11422  1410  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11423  1411  3000               	movlw	0
 11424  1412  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11425  1413  30ED               	movlw	_USBActiveConfiguration& (0+255)
 11426  1414  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11427  1415  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11428  1416  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11429  1417  3001               	movlw	1
 11430  1418  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 11431  1419  3000               	movlw	0
 11432  141A  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11433  141B  319D  2547         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11434                           
 11435                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
 11436  141D  3020               	movlw	32
 11437  141E  0021               	movlb	1	; select bank1
 11438  141F  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11439  1420  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11440  1421  00E5               	movwf	_USBDeviceState^(0+128)
 11441  1422  0008               	return
 11442  1423                     __end_of_USBStdSetCfgHandler:	
 11443                           
 11444                           	psect	text40
 11445  08B1                     __ptext40:	
 11446 ;; *************** function _memset *****************
 11447 ;; Defined at:
 11448 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memset.c"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;  p1              1    wreg     PTR void 
 11451 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11452 ;;  c               2   14[BANK0 ] int 
 11453 ;;  n               2   16[BANK0 ] unsigned int 
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;  p1              1    1[BANK1 ] PTR void 
 11456 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11457 ;;  p               1    2[BANK1 ] PTR unsigned char 
 11458 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      PTR void 
 11461 ;; Registers used:
 11462 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;Total ram usage:        7 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    4
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_USBStdSetCfgHandler
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           
 11483                           ;psect for function _memset
 11484  08B1                     _memset:	
 11485                           
 11486                           ;incstack = 0
 11487                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11488                           ;memset@p1 stored from wreg
 11489  08B1  0021               	movlb	1	; select bank1
 11490  08B2  00A1               	movwf	memset@p1^(0+128)
 11491  08B3  0821               	movf	memset@p1^(0+128),w
 11492  08B4  00A0               	movwf	??_memset^(0+128)
 11493  08B5  0820               	movf	??_memset^(0+128),w
 11494  08B6  00A2               	movwf	memset@p^(0+128)
 11495  08B7                     l4780:	
 11496  08B7  3001               	movlw	1
 11497  08B8  0020               	movlb	0	; select bank0
 11498  08B9  02E0               	subwf	memset@n,f
 11499  08BA  3000               	movlw	0
 11500  08BB  3BE1               	subwfb	memset@n+1,f
 11501  08BC  30FF               	movlw	255
 11502  08BD  0661               	xorwf	memset@n+1,w
 11503  08BE  1D03               	skipz
 11504  08BF  28C2               	goto	u4305
 11505  08C0  30FF               	movlw	255
 11506  08C1  0660               	xorwf	memset@n,w
 11507  08C2                     u4305:	
 11508  08C2  1903               	btfsc	3,2
 11509  08C3  0008               	return
 11510  08C4  0020               	movlb	0	; select bank0
 11511  08C5  085E               	movf	memset@c,w
 11512  08C6  0021               	movlb	1	; select bank1
 11513  08C7  00A0               	movwf	??_memset^(0+128)
 11514  08C8  0822               	movf	memset@p^(0+128),w
 11515  08C9  0086               	movwf	6
 11516  08CA  0187               	clrf	7
 11517  08CB  0820               	movf	??_memset^(0+128),w
 11518  08CC  0081               	movwf	1
 11519  08CD  3001               	movlw	1
 11520  08CE  00A0               	movwf	??_memset^(0+128)
 11521  08CF  0820               	movf	??_memset^(0+128),w
 11522  08D0  07A2               	addwf	memset@p^(0+128),f
 11523  08D1  28B7               	goto	l4780
 11524  08D2                     __end_of_memset:	
 11525                           ;	Return value of _memset is never used
 11526                           
 11527                           
 11528                           	psect	text41
 11529  152C                     __ptext41:	
 11530 ;; *************** function _USBCtrlEPServiceComplete *****************
 11531 ;; Defined at:
 11532 ;;		line 1786 in file "../USB/usb_device.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;		None
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;		None
 11537 ;; Return value:  Size  Location     Type
 11538 ;;		None               void
 11539 ;; Registers used:
 11540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11549 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11550 ;;Total ram usage:        2 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:    6
 11553 ;; This function calls:
 11554 ;;		_USBCtrlEPAllowStatusStage
 11555 ;;		_USBCtrlEPAllowDataStage
 11556 ;; This function is called by:
 11557 ;;		_USBCtrlTrfSetupHandler
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           
 11562                           ;psect for function _USBCtrlEPServiceComplete
 11563  152C                     _USBCtrlEPServiceComplete:	
 11564                           
 11565                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
 11566                           
 11567                           ;incstack = 0
 11568                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11569  152C  003D               	movlb	29	; select bank29
 11570  152D  120E               	bcf	14,4	;volatile
 11571                           
 11572                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
 11573  152E  0021               	movlb	1	; select bank1
 11574  152F  1BEA               	btfsc	(_inPipes^(0+128)+2),7
 11575  1530  2D6D               	goto	l208
 11576                           
 11577                           ;usb_device.c: 1798: {
 11578                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
 11579  1531  0023               	movlb	3	; select bank3
 11580  1532  1FC9               	btfss	(_outPipes^(0+384)+2),7
 11581  1533  2D44               	goto	l4652
 11582                           
 11583                           ;usb_device.c: 1800: {
 11584                           ;usb_device.c: 1801: controlTransferState = 2;
 11585  1534  3002               	movlw	2
 11586  1535  0021               	movlb	1	; select bank1
 11587  1536  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11588  1537  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11589  1538  0020               	movlb	0	; select bank0
 11590  1539  00E7               	movwf	_controlTransferState
 11591                           
 11592                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
 11593  153A  0022               	movlb	2	; select bank2
 11594  153B  08E6               	movf	_USBDeferOUTDataStagePackets^(0+256),f
 11595  153C  1D03               	skipz
 11596  153D  2D40               	goto	l4648
 11597                           
 11598                           ;usb_device.c: 1813: {
 11599                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
 11600  153E  319F  2750         	fcall	_USBCtrlEPAllowDataStage
 11601  1540                     l4648:	
 11602                           
 11603                           ;usb_device.c: 1815: }
 11604                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
 11605  1540  0022               	movlb	2	; select bank2
 11606  1541  01EA               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11607                           
 11608                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
 11609  1542  01E9               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11610                           
 11611                           ;usb_device.c: 1821: }
 11612  1543  0008               	return
 11613  1544                     l4652:	
 11614                           
 11615                           ;usb_device.c: 1822: else
 11616                           ;usb_device.c: 1823: {
 11617                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
 11618  1544  3008               	movlw	8
 11619  1545  0021               	movlb	1	; select bank1
 11620  1546  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11621  1547  0020               	movlb	0	; select bank0
 11622  1548  0A69               	incf	_pBDTEntryEP0OutNext,w
 11623  1549  0086               	movwf	6
 11624  154A  0187               	clrf	7
 11625  154B  0021               	movlb	1	; select bank1
 11626  154C  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11627  154D  0081               	movwf	1
 11628                           
 11629                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 11630  154E  3040               	movlw	64
 11631  154F  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11632  1550  3000               	movlw	0
 11633  1551  00A3               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
 11634  1552  0020               	movlb	0	; select bank0
 11635  1553  0869               	movf	_pBDTEntryEP0OutNext,w
 11636  1554  3E02               	addlw	2
 11637  1555  0086               	movwf	6
 11638  1556  0187               	clrf	7
 11639  1557  0021               	movlb	1	; select bank1
 11640  1558  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11641  1559  3FC0               	movwi [0]fsr1
 11642  155A  0823               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
 11643  155B  3FC1               	movwi [1]fsr1
 11644                           
 11645                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 11646  155C  308C               	movlw	140
 11647  155D  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11648  155E  0020               	movlb	0	; select bank0
 11649  155F  0869               	movf	_pBDTEntryEP0OutNext,w
 11650  1560  0086               	movwf	6
 11651  1561  0187               	clrf	7
 11652  1562  0021               	movlb	1	; select bank1
 11653  1563  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11654  1564  0081               	movwf	1
 11655                           
 11656                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
 11657  1565  3084               	movlw	132
 11658  1566  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11659  1567  0862               	movf	_pBDTEntryIn^(0+128),w
 11660  1568  0086               	movwf	6
 11661  1569  0187               	clrf	7
 11662  156A  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11663  156B  0081               	movwf	1
 11664                           
 11665                           ;usb_device.c: 1832: }
 11666                           ;usb_device.c: 1833: }
 11667  156C  0008               	return
 11668  156D                     l208:	
 11669                           
 11670                           ;usb_device.c: 1834: else
 11671                           ;usb_device.c: 1835: {
 11672                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
 11673  156D  0020               	movlb	0	; select bank0
 11674  156E  1FC0               	btfss	64,7	;volatile
 11675  156F  2D83               	goto	l4668
 11676                           
 11677                           ;usb_device.c: 1837: {
 11678                           ;usb_device.c: 1838: controlTransferState = 1;
 11679  1570  01E7               	clrf	_controlTransferState
 11680  1571  0AE7               	incf	_controlTransferState,f
 11681                           
 11682                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
 11683  1572  0022               	movlb	2	; select bank2
 11684  1573  08E5               	movf	_USBDeferINDataStagePackets^(0+256),f
 11685  1574  1D03               	skipz
 11686  1575  2D79               	goto	l4660
 11687                           
 11688                           ;usb_device.c: 1853: {
 11689                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
 11690  1576  319F  2750  3195   	fcall	_USBCtrlEPAllowDataStage
 11691  1579                     l4660:	
 11692                           
 11693                           ;usb_device.c: 1855: }
 11694                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
 11695  1579  0022               	movlb	2	; select bank2
 11696  157A  01EA               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11697                           
 11698                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
 11699  157B  01E9               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11700                           
 11701                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
 11702  157C  0020               	movlb	0	; select bank0
 11703  157D  08E6               	movf	_USBDeferStatusStagePacket,f
 11704  157E  1D03               	skipz
 11705  157F  0008               	return
 11706                           
 11707                           ;usb_device.c: 1880: {
 11708                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
 11709  1580  3191  21CA         	fcall	_USBCtrlEPAllowStatusStage
 11710                           
 11711                           ;usb_device.c: 1882: }
 11712                           ;usb_device.c: 1883: }
 11713  1582  0008               	return
 11714  1583                     l4668:	
 11715                           
 11716                           ;usb_device.c: 1884: else
 11717                           ;usb_device.c: 1885: {
 11718                           ;usb_device.c: 1896: controlTransferState = 2;
 11719  1583  3002               	movlw	2
 11720  1584  0021               	movlb	1	; select bank1
 11721  1585  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11722  1586  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11723  1587  0020               	movlb	0	; select bank0
 11724  1588  00E7               	movwf	_controlTransferState
 11725                           
 11726                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
 11727  1589  3008               	movlw	8
 11728  158A  0021               	movlb	1	; select bank1
 11729  158B  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11730  158C  0020               	movlb	0	; select bank0
 11731  158D  0A69               	incf	_pBDTEntryEP0OutNext,w
 11732  158E  0086               	movwf	6
 11733  158F  0187               	clrf	7
 11734  1590  0021               	movlb	1	; select bank1
 11735  1591  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11736  1592  0081               	movwf	1
 11737                           
 11738                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 11739  1593  3040               	movlw	64
 11740  1594  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11741  1595  3000               	movlw	0
 11742  1596  00A3               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
 11743  1597  0020               	movlb	0	; select bank0
 11744  1598  0869               	movf	_pBDTEntryEP0OutNext,w
 11745  1599  3E02               	addlw	2
 11746  159A  0086               	movwf	6
 11747  159B  0187               	clrf	7
 11748  159C  0021               	movlb	1	; select bank1
 11749  159D  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11750  159E  3FC0               	movwi [0]fsr1
 11751  159F  0823               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
 11752  15A0  3FC1               	movwi [1]fsr1
 11753                           
 11754                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 11755  15A1  3084               	movlw	132
 11756  15A2  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11757  15A3  0020               	movlb	0	; select bank0
 11758  15A4  0869               	movf	_pBDTEntryEP0OutNext,w
 11759  15A5  0086               	movwf	6
 11760  15A6  0187               	clrf	7
 11761  15A7  0021               	movlb	1	; select bank1
 11762  15A8  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11763  15A9  0081               	movwf	1
 11764                           
 11765                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
 11766  15AA  0022               	movlb	2	; select bank2
 11767  15AB  01EA               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11768                           
 11769                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
 11770  15AC  01E9               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11771                           
 11772                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
 11773  15AD  0020               	movlb	0	; select bank0
 11774  15AE  08E6               	movf	_USBDeferStatusStagePacket,f
 11775  15AF  1D03               	skipz
 11776  15B0  0008               	return
 11777                           
 11778                           ;usb_device.c: 1907: {
 11779                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
 11780  15B1  3191  21CA         	fcall	_USBCtrlEPAllowStatusStage
 11781  15B3  0008               	return
 11782  15B4                     __end_of_USBCtrlEPServiceComplete:	
 11783                           
 11784                           	psect	text42
 11785  1F50                     __ptext42:	
 11786 ;; *************** function _USBCtrlEPAllowDataStage *****************
 11787 ;; Defined at:
 11788 ;;		line 1660 in file "../USB/usb_device.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;		None
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;		None
 11793 ;; Return value:  Size  Location     Type
 11794 ;;		None               void
 11795 ;; Registers used:
 11796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : 0/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;Total ram usage:        2 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:    5
 11809 ;; This function calls:
 11810 ;;		_USBCtrlTrfTxService
 11811 ;; This function is called by:
 11812 ;;		_USBCtrlEPServiceComplete
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           
 11817                           ;psect for function _USBCtrlEPAllowDataStage
 11818  1F50                     _USBCtrlEPAllowDataStage:	
 11819                           
 11820                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
 11821                           
 11822                           ;incstack = 0
 11823                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11824  1F50  0022               	movlb	2	; select bank2
 11825  1F51  01E5               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 11826                           
 11827                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
 11828  1F52  01E6               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 11829                           
 11830                           ;usb_device.c: 1664: if(controlTransferState == 2)
 11831  1F53  0020               	movlb	0	; select bank0
 11832  1F54  0867               	movf	_controlTransferState,w
 11833  1F55  3A02               	xorlw	2
 11834  1F56  1D03               	skipz
 11835  1F57  2F7A               	goto	l4586
 11836                           
 11837                           ;usb_device.c: 1665: {
 11838                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
 11839  1F58  3008               	movlw	8
 11840  1F59  0021               	movlb	1	; select bank1
 11841  1F5A  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 11842  1F5B  0020               	movlb	0	; select bank0
 11843  1F5C  0A69               	incf	_pBDTEntryEP0OutNext,w
 11844  1F5D  0086               	movwf	6
 11845  1F5E  0187               	clrf	7
 11846  1F5F  0021               	movlb	1	; select bank1
 11847  1F60  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 11848  1F61  0081               	movwf	1
 11849                           
 11850                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 11851  1F62  3048               	movlw	72
 11852  1F63  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 11853  1F64  3000               	movlw	0
 11854  1F65  00A1               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
 11855  1F66  0020               	movlb	0	; select bank0
 11856  1F67  0869               	movf	_pBDTEntryEP0OutNext,w
 11857  1F68  3E02               	addlw	2
 11858  1F69  0086               	movwf	6
 11859  1F6A  0187               	clrf	7
 11860  1F6B  0021               	movlb	1	; select bank1
 11861  1F6C  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 11862  1F6D  3FC0               	movwi [0]fsr1
 11863  1F6E  0821               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
 11864  1F6F  3FC1               	movwi [1]fsr1
 11865                           
 11866                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 11867  1F70  30C8               	movlw	200
 11868  1F71  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 11869  1F72  0020               	movlb	0	; select bank0
 11870  1F73  0869               	movf	_pBDTEntryEP0OutNext,w
 11871  1F74  0086               	movwf	6
 11872  1F75  0187               	clrf	7
 11873  1F76  0021               	movlb	1	; select bank1
 11874  1F77  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 11875  1F78  0081               	movwf	1
 11876                           
 11877                           ;usb_device.c: 1670: }
 11878  1F79  0008               	return
 11879  1F7A                     l4586:	
 11880                           
 11881                           ;usb_device.c: 1671: else
 11882                           ;usb_device.c: 1672: {
 11883                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11884  1F7A  0021               	movlb	1	; select bank1
 11885  1F7B  086C               	movf	((_inPipes+1)^(0+128)+3),w
 11886  1F7C  0020               	movlb	0	; select bank0
 11887  1F7D  0247               	subwf	71,w	;volatile
 11888  1F7E  1D03               	skipz
 11889  1F7F  2F84               	goto	u4055
 11890  1F80  0021               	movlb	1	; select bank1
 11891  1F81  086B               	movf	(_inPipes^(0+128)+3),w
 11892  1F82  0020               	movlb	0	; select bank0
 11893  1F83  0246               	subwf	70,w	;volatile
 11894  1F84                     u4055:	
 11895  1F84  1803               	skipnc
 11896  1F85  2F8F               	goto	l4590
 11897                           
 11898                           ;usb_device.c: 1676: {
 11899                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
 11900  1F86  0847               	movf	71,w	;volatile
 11901  1F87  0021               	movlb	1	; select bank1
 11902  1F88  01EC               	clrf	((_inPipes+1)^(0+128)+3)
 11903  1F89  07EC               	addwf	((_inPipes+1)^(0+128)+3),f
 11904  1F8A  0020               	movlb	0	; select bank0
 11905  1F8B  0846               	movf	70,w	;volatile
 11906  1F8C  0021               	movlb	1	; select bank1
 11907  1F8D  01EB               	clrf	(_inPipes^(0+128)+3)
 11908  1F8E  07EB               	addwf	(_inPipes^(0+128)+3),f
 11909  1F8F                     l4590:	
 11910                           
 11911                           ;usb_device.c: 1678: }
 11912                           ;usb_device.c: 1679: USBCtrlTrfTxService();
 11913  1F8F  3195  25B4  319F   	fcall	_USBCtrlTrfTxService
 11914                           
 11915                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 11916  1F92  3048               	movlw	72
 11917  1F93  0021               	movlb	1	; select bank1
 11918  1F94  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 11919  1F95  3000               	movlw	0
 11920  1F96  00A1               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
 11921  1F97  0862               	movf	_pBDTEntryIn^(0+128),w
 11922  1F98  3E02               	addlw	2
 11923  1F99  0086               	movwf	6
 11924  1F9A  0187               	clrf	7
 11925  1F9B  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 11926  1F9C  3FC0               	movwi [0]fsr1
 11927  1F9D  0821               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
 11928  1F9E  3FC1               	movwi [1]fsr1
 11929                           
 11930                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 11931  1F9F  30C8               	movlw	200
 11932  1FA0  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 11933  1FA1  0862               	movf	_pBDTEntryIn^(0+128),w
 11934  1FA2  0086               	movwf	6
 11935  1FA3  0187               	clrf	7
 11936  1FA4  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 11937  1FA5  0081               	movwf	1
 11938  1FA6  0008               	return
 11939  1FA7                     __end_of_USBCtrlEPAllowDataStage:	
 11940                           
 11941                           	psect	text43
 11942  15B4                     __ptext43:	
 11943 ;; *************** function _USBCtrlTrfTxService *****************
 11944 ;; Defined at:
 11945 ;;		line 1938 in file "../USB/usb_device.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;		None
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;  byteToSend      1   16[BANK0 ] unsigned char 
 11950 ;; Return value:  Size  Location     Type
 11951 ;;		None               void
 11952 ;; Registers used:
 11953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11963 ;;Total ram usage:        3 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    4
 11966 ;; This function calls:
 11967 ;;		Nothing
 11968 ;; This function is called by:
 11969 ;;		_USBCtrlEPAllowDataStage
 11970 ;;		_USBCtrlTrfInHandler
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           
 11974                           
 11975                           ;psect for function _USBCtrlTrfTxService
 11976  15B4                     _USBCtrlTrfTxService:	
 11977                           
 11978                           ;usb_device.c: 1939: BYTE byteToSend;
 11979                           ;usb_device.c: 1943: byteToSend = 8;
 11980                           
 11981                           ;incstack = 0
 11982                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 11983  15B4  3008               	movlw	8
 11984  15B5  0020               	movlb	0	; select bank0
 11985  15B6  00DE               	movwf	??_USBCtrlTrfTxService
 11986  15B7  085E               	movf	??_USBCtrlTrfTxService,w
 11987  15B8  00E0               	movwf	USBCtrlTrfTxService@byteToSend
 11988                           
 11989                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
 11990  15B9  3000               	movlw	0
 11991  15BA  0021               	movlb	1	; select bank1
 11992  15BB  026C               	subwf	((_inPipes+1)^(0+128)+3),w
 11993  15BC  3008               	movlw	8
 11994  15BD  1903               	skipnz
 11995  15BE  026B               	subwf	(_inPipes^(0+128)+3),w
 11996  15BF  1803               	skipnc
 11997  15C0  2DD4               	goto	l4608
 11998                           
 11999                           ;usb_device.c: 1945: {
 12000                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
 12001  15C1  086B               	movf	(_inPipes^(0+128)+3),w
 12002  15C2  0020               	movlb	0	; select bank0
 12003  15C3  00DE               	movwf	??_USBCtrlTrfTxService
 12004  15C4  085E               	movf	??_USBCtrlTrfTxService,w
 12005  15C5  00E0               	movwf	USBCtrlTrfTxService@byteToSend
 12006                           
 12007                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
 12008  15C6  08EB               	movf	_shortPacketStatus,f
 12009  15C7  1D03               	skipz
 12010  15C8  2DCC               	goto	l4604
 12011                           
 12012                           ;usb_device.c: 1954: {
 12013                           ;usb_device.c: 1955: shortPacketStatus = 1;
 12014  15C9  01EB               	clrf	_shortPacketStatus
 12015  15CA  0AEB               	incf	_shortPacketStatus,f
 12016                           
 12017                           ;usb_device.c: 1956: }
 12018  15CB  2DD4               	goto	l4608
 12019  15CC                     l4604:	
 12020                           
 12021                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
 12022  15CC  086B               	movf	_shortPacketStatus,w
 12023  15CD  3A01               	xorlw	1
 12024  15CE  1D03               	skipz
 12025  15CF  2DD4               	goto	l4608
 12026                           
 12027                           ;usb_device.c: 1958: {
 12028                           ;usb_device.c: 1959: shortPacketStatus = 2;
 12029  15D0  3002               	movlw	2
 12030  15D1  00DE               	movwf	??_USBCtrlTrfTxService
 12031  15D2  085E               	movf	??_USBCtrlTrfTxService,w
 12032  15D3  00EB               	movwf	_shortPacketStatus
 12033  15D4                     l4608:	
 12034                           
 12035                           ;usb_device.c: 1960: }
 12036                           ;usb_device.c: 1961: }
 12037                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
 12038  15D4  3003               	movlw	3
 12039  15D5  3EE8               	addlw	_inPipes& (0+255)
 12040  15D6  0086               	movwf	6
 12041  15D7  0187               	clrf	7
 12042  15D8  0020               	movlb	0	; select bank0
 12043  15D9  0860               	movf	USBCtrlTrfTxService@byteToSend,w
 12044  15DA  00DE               	movwf	??_USBCtrlTrfTxService
 12045  15DB  01DF               	clrf	??_USBCtrlTrfTxService+1
 12046  15DC  09DE               	comf	??_USBCtrlTrfTxService,f
 12047  15DD  09DF               	comf	??_USBCtrlTrfTxService+1,f
 12048  15DE  0ADE               	incf	??_USBCtrlTrfTxService,f
 12049  15DF  1903               	skipnz
 12050  15E0  0ADF               	incf	??_USBCtrlTrfTxService+1,f
 12051  15E1  3F40               	moviw [0]fsr1
 12052  15E2  075E               	addwf	??_USBCtrlTrfTxService,w
 12053  15E3  0021               	movlb	1	; select bank1
 12054  15E4  00EB               	movwf	(_inPipes^(0+128)+3)
 12055  15E5  3F41               	moviw [1]fsr1
 12056  15E6  0020               	movlb	0	; select bank0
 12057  15E7  3D5F               	addwfc	??_USBCtrlTrfTxService+1,w
 12058  15E8  0021               	movlb	1	; select bank1
 12059  15E9  00EC               	movwf	(_inPipes^(0+128)+4)
 12060                           
 12061                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
 12062  15EA  0020               	movlb	0	; select bank0
 12063  15EB  0860               	movf	USBCtrlTrfTxService@byteToSend,w
 12064  15EC  00DE               	movwf	??_USBCtrlTrfTxService
 12065  15ED  0021               	movlb	1	; select bank1
 12066  15EE  0A62               	incf	_pBDTEntryIn^(0+128),w
 12067  15EF  0086               	movwf	6
 12068  15F0  0187               	clrf	7
 12069  15F1  0020               	movlb	0	; select bank0
 12070  15F2  085E               	movf	??_USBCtrlTrfTxService,w
 12071  15F3  0081               	movwf	1
 12072                           
 12073                           ;usb_device.c: 1974: pDst = ( BYTE*)CtrlTrfData;
 12074  15F4  3048               	movlw	72
 12075  15F5  00DE               	movwf	??_USBCtrlTrfTxService
 12076  15F6  085E               	movf	??_USBCtrlTrfTxService,w
 12077  15F7  0022               	movlb	2	; select bank2
 12078  15F8  00EE               	movwf	_pDst^(0+256)
 12079                           
 12080                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12081  15F9  0021               	movlb	1	; select bank1
 12082  15FA  1C6A               	btfss	(_inPipes^(0+128)+2),0
 12083  15FB  2E1A               	goto	l4626
 12084  15FC  2E3C               	goto	l4636
 12085  15FD                     l4618:	
 12086                           ;usb_device.c: 1976: {
 12087                           ;usb_device.c: 1977: while(byteToSend)
 12088                           
 12089                           
 12090                           ;usb_device.c: 1978: {
 12091                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
 12092  15FD  0021               	movlb	1	; select bank1
 12093  15FE  0868               	movf	_inPipes^(0+128),w
 12094  15FF  0084               	movwf	4
 12095  1600  0869               	movf	(_inPipes+1)^(0+128),w
 12096  1601  0085               	movwf	5
 12097  1602  0800               	movf	0,w	;code access
 12098  1603  0020               	movlb	0	; select bank0
 12099  1604  00DE               	movwf	??_USBCtrlTrfTxService
 12100  1605  0022               	movlb	2	; select bank2
 12101  1606  086E               	movf	_pDst^(0+256),w
 12102  1607  0086               	movwf	6
 12103  1608  0187               	clrf	7
 12104  1609  0020               	movlb	0	; select bank0
 12105  160A  085E               	movf	??_USBCtrlTrfTxService,w
 12106  160B  0081               	movwf	1
 12107  160C  3001               	movlw	1
 12108  160D  0021               	movlb	1	; select bank1
 12109  160E  07E8               	addwf	_inPipes^(0+128),f
 12110  160F  3000               	movlw	0
 12111  1610  3DE9               	addwfc	(_inPipes+1)^(0+128),f
 12112  1611  3001               	movlw	1
 12113  1612  0020               	movlb	0	; select bank0
 12114  1613  00DE               	movwf	??_USBCtrlTrfTxService
 12115  1614  085E               	movf	??_USBCtrlTrfTxService,w
 12116  1615  0022               	movlb	2	; select bank2
 12117  1616  07EE               	addwf	_pDst^(0+256),f
 12118                           
 12119                           ;usb_device.c: 1980: byteToSend--;
 12120  1617  3001               	movlw	1
 12121  1618  0020               	movlb	0	; select bank0
 12122  1619  02E0               	subwf	USBCtrlTrfTxService@byteToSend,f
 12123  161A                     l4626:	
 12124  161A  0020               	movlb	0	; select bank0
 12125  161B  08E0               	movf	USBCtrlTrfTxService@byteToSend,f
 12126  161C  1903               	btfsc	3,2
 12127  161D  0008               	return
 12128  161E  2DFD               	goto	l4618
 12129  161F                     l4628:	
 12130                           ;usb_device.c: 1983: else
 12131                           ;usb_device.c: 1984: {
 12132                           ;usb_device.c: 1985: while(byteToSend)
 12133                           
 12134                           ;usb_device.c: 1981: }
 12135                           ;usb_device.c: 1982: }
 12136                           
 12137                           
 12138                           ;usb_device.c: 1986: {
 12139                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
 12140  161F  0021               	movlb	1	; select bank1
 12141  1620  0868               	movf	_inPipes^(0+128),w
 12142  1621  0084               	movwf	4
 12143  1622  0869               	movf	(_inPipes+1)^(0+128),w
 12144  1623  0085               	movwf	5
 12145  1624  0800               	movf	0,w	;code access
 12146  1625  0020               	movlb	0	; select bank0
 12147  1626  00DE               	movwf	??_USBCtrlTrfTxService
 12148  1627  0022               	movlb	2	; select bank2
 12149  1628  086E               	movf	_pDst^(0+256),w
 12150  1629  0086               	movwf	6
 12151  162A  0187               	clrf	7
 12152  162B  0020               	movlb	0	; select bank0
 12153  162C  085E               	movf	??_USBCtrlTrfTxService,w
 12154  162D  0081               	movwf	1
 12155  162E  3001               	movlw	1
 12156  162F  0021               	movlb	1	; select bank1
 12157  1630  07E8               	addwf	_inPipes^(0+128),f
 12158  1631  3000               	movlw	0
 12159  1632  3DE9               	addwfc	(_inPipes+1)^(0+128),f
 12160  1633  3001               	movlw	1
 12161  1634  0020               	movlb	0	; select bank0
 12162  1635  00DE               	movwf	??_USBCtrlTrfTxService
 12163  1636  085E               	movf	??_USBCtrlTrfTxService,w
 12164  1637  0022               	movlb	2	; select bank2
 12165  1638  07EE               	addwf	_pDst^(0+256),f
 12166                           
 12167                           ;usb_device.c: 1988: byteToSend--;
 12168  1639  3001               	movlw	1
 12169  163A  0020               	movlb	0	; select bank0
 12170  163B  02E0               	subwf	USBCtrlTrfTxService@byteToSend,f
 12171  163C                     l4636:	
 12172  163C  0020               	movlb	0	; select bank0
 12173  163D  08E0               	movf	USBCtrlTrfTxService@byteToSend,f
 12174  163E  1903               	btfsc	3,2
 12175  163F  0008               	return
 12176  1640  2E1F               	goto	l4628
 12177  1641                     __end_of_USBCtrlTrfTxService:	
 12178                           
 12179                           	psect	text44
 12180  11CA                     __ptext44:	
 12181 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12182 ;; Defined at:
 12183 ;;		line 1590 in file "../USB/usb_device.c"
 12184 ;; Parameters:    Size  Location     Type
 12185 ;;		None
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;		None
 12188 ;; Return value:  Size  Location     Type
 12189 ;;		None               void
 12190 ;; Registers used:
 12191 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12192 ;; Tracked objects:
 12193 ;;		On entry : 0/0
 12194 ;;		On exit  : 0/0
 12195 ;;		Unchanged: 0/0
 12196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;Total ram usage:        2 bytes
 12202 ;; Hardware stack levels used:    1
 12203 ;; Hardware stack levels required when called:    4
 12204 ;; This function calls:
 12205 ;;		Nothing
 12206 ;; This function is called by:
 12207 ;;		_USBDeviceTasks
 12208 ;;		_USBCtrlEPServiceComplete
 12209 ;;		_USBCtrlTrfRxService
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           
 12214                           ;psect for function _USBCtrlEPAllowStatusStage
 12215  11CA                     _USBCtrlEPAllowStatusStage:	
 12216                           
 12217                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
 12218                           
 12219                           ;incstack = 0
 12220                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 12221  11CA  0022               	movlb	2	; select bank2
 12222  11CB  08E9               	movf	_USBStatusStageEnabledFlag1^(0+256),f
 12223  11CC  1D03               	skipz
 12224  11CD  0008               	return
 12225                           
 12226                           ;usb_device.c: 1597: {
 12227                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
 12228  11CE  3001               	movlw	1
 12229  11CF  0020               	movlb	0	; select bank0
 12230  11D0  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12231  11D1  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12232  11D2  0022               	movlb	2	; select bank2
 12233  11D3  00E9               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12234                           
 12235                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
 12236  11D4  08EA               	movf	_USBStatusStageEnabledFlag2^(0+256),f
 12237  11D5  1D03               	skipz
 12238  11D6  0008               	return
 12239                           
 12240                           ;usb_device.c: 1600: {
 12241                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
 12242  11D7  3001               	movlw	1
 12243  11D8  0020               	movlb	0	; select bank0
 12244  11D9  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12245  11DA  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12246  11DB  0022               	movlb	2	; select bank2
 12247  11DC  00EA               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12248                           
 12249                           ;usb_device.c: 1605: if(controlTransferState == 2)
 12250  11DD  0020               	movlb	0	; select bank0
 12251  11DE  0867               	movf	_controlTransferState,w
 12252  11DF  3A02               	xorlw	2
 12253  11E0  1D03               	skipz
 12254  11E1  29F2               	goto	l4446
 12255                           
 12256                           ;usb_device.c: 1606: {
 12257                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
 12258  11E2  0021               	movlb	1	; select bank1
 12259  11E3  0A62               	incf	_pBDTEntryIn^(0+128),w
 12260  11E4  0086               	movwf	6
 12261  11E5  0187               	clrf	7
 12262  11E6  0181               	clrf	1
 12263                           
 12264                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12265  11E7  30C8               	movlw	200
 12266  11E8  0020               	movlb	0	; select bank0
 12267  11E9  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12268  11EA  0021               	movlb	1	; select bank1
 12269  11EB  0862               	movf	_pBDTEntryIn^(0+128),w
 12270  11EC  0086               	movwf	6
 12271  11ED  0187               	clrf	7
 12272  11EE  0020               	movlb	0	; select bank0
 12273  11EF  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12274  11F0  0081               	movwf	1
 12275                           
 12276                           ;usb_device.c: 1609: }
 12277  11F1  0008               	return
 12278  11F2                     l4446:	
 12279                           
 12280                           ;usb_device.c: 1610: else if(controlTransferState == 1)
 12281  11F2  0867               	movf	_controlTransferState,w
 12282  11F3  3A01               	xorlw	1
 12283  11F4  1D03               	skipz
 12284  11F5  0008               	return
 12285                           
 12286                           ;usb_device.c: 1611: {
 12287                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
 12288  11F6  0022               	movlb	2	; select bank2
 12289  11F7  01DF               	clrf	_BothEP0OutUOWNsSet^(0+256)
 12290                           
 12291                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
 12292  11F8  3008               	movlw	8
 12293  11F9  0020               	movlb	0	; select bank0
 12294  11FA  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12295  11FB  0021               	movlb	1	; select bank1
 12296  11FC  0A67               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
 12297  11FD  0086               	movwf	6
 12298  11FE  0187               	clrf	7
 12299  11FF  0020               	movlb	0	; select bank0
 12300  1200  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12301  1201  0081               	movwf	1
 12302                           
 12303                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12304  1202  3040               	movlw	64
 12305  1203  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12306  1204  3000               	movlw	0
 12307  1205  00DF               	movwf	??_USBCtrlEPAllowStatusStage+1
 12308  1206  0021               	movlb	1	; select bank1
 12309  1207  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12310  1208  3E02               	addlw	2
 12311  1209  0086               	movwf	6
 12312  120A  0187               	clrf	7
 12313  120B  0020               	movlb	0	; select bank0
 12314  120C  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12315  120D  3FC0               	movwi [0]fsr1
 12316  120E  085F               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12317  120F  3FC1               	movwi [1]fsr1
 12318                           
 12319                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
 12320  1210  3084               	movlw	132
 12321  1211  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12322  1212  0021               	movlb	1	; select bank1
 12323  1213  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12324  1214  0086               	movwf	6
 12325  1215  0187               	clrf	7
 12326  1216  0020               	movlb	0	; select bank0
 12327  1217  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12328  1218  0081               	movwf	1
 12329                           
 12330                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
 12331  1219  0022               	movlb	2	; select bank2
 12332  121A  01DF               	clrf	_BothEP0OutUOWNsSet^(0+256)
 12333  121B  0ADF               	incf	_BothEP0OutUOWNsSet^(0+256),f
 12334                           
 12335                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
 12336  121C  3008               	movlw	8
 12337  121D  0020               	movlb	0	; select bank0
 12338  121E  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12339  121F  0A69               	incf	_pBDTEntryEP0OutNext,w
 12340  1220  0086               	movwf	6
 12341  1221  0187               	clrf	7
 12342  1222  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12343  1223  0081               	movwf	1
 12344                           
 12345                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12346  1224  3040               	movlw	64
 12347  1225  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12348  1226  3000               	movlw	0
 12349  1227  00DF               	movwf	??_USBCtrlEPAllowStatusStage+1
 12350  1228  0869               	movf	_pBDTEntryEP0OutNext,w
 12351  1229  3E02               	addlw	2
 12352  122A  0086               	movwf	6
 12353  122B  0187               	clrf	7
 12354  122C  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12355  122D  3FC0               	movwi [0]fsr1
 12356  122E  085F               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12357  122F  3FC1               	movwi [1]fsr1
 12358                           
 12359                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12360  1230  3080               	movlw	128
 12361  1231  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12362  1232  0869               	movf	_pBDTEntryEP0OutNext,w
 12363  1233  0086               	movwf	6
 12364  1234  0187               	clrf	7
 12365  1235  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12366  1236  0081               	movwf	1
 12367  1237  0008               	return
 12368  1238                     __end_of_USBCtrlEPAllowStatusStage:	
 12369                           
 12370                           	psect	text45
 12371  1C4C                     __ptext45:	
 12372 ;; *************** function _USBStallHandler *****************
 12373 ;; Defined at:
 12374 ;;		line 2356 in file "../USB/usb_device.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;		None
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;		None               void
 12381 ;; Registers used:
 12382 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;Total ram usage:        1 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    4
 12395 ;; This function calls:
 12396 ;;		Nothing
 12397 ;; This function is called by:
 12398 ;;		_USBDeviceTasks
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           
 12403                           ;psect for function _USBStallHandler
 12404  1C4C                     _USBStallHandler:	
 12405                           
 12406                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
 12407                           
 12408                           ;incstack = 0
 12409                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12410  1C4C  003D               	movlb	29	; select bank29
 12411  1C4D  1C18               	btfss	24,0	;volatile
 12412  1C4E  2C6A               	goto	l4474
 12413                           
 12414                           ;usb_device.c: 2369: {
 12415                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12416  1C4F  0021               	movlb	1	; select bank1
 12417  1C50  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12418  1C51  0086               	movwf	6
 12419  1C52  0187               	clrf	7
 12420  1C53  0801               	movf	1,w
 12421  1C54  3A80               	xorlw	128
 12422  1C55  1D03               	skipz
 12423  1C56  2C68               	goto	l4472
 12424  1C57  0862               	movf	_pBDTEntryIn^(0+128),w
 12425  1C58  0086               	movwf	6
 12426  1C59  0187               	clrf	7
 12427  1C5A  0801               	movf	1,w
 12428  1C5B  3A84               	xorlw	132
 12429  1C5C  1D03               	skipz
 12430  1C5D  2C68               	goto	l4472
 12431                           
 12432                           ;usb_device.c: 2372: {
 12433                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12434  1C5E  308C               	movlw	140
 12435  1C5F  0020               	movlb	0	; select bank0
 12436  1C60  00DE               	movwf	??_USBStallHandler
 12437  1C61  0021               	movlb	1	; select bank1
 12438  1C62  0867               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12439  1C63  0086               	movwf	6
 12440  1C64  0187               	clrf	7
 12441  1C65  0020               	movlb	0	; select bank0
 12442  1C66  085E               	movf	??_USBStallHandler,w
 12443  1C67  0081               	movwf	1
 12444  1C68                     l4472:	
 12445                           
 12446                           ;usb_device.c: 2375: }
 12447                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
 12448  1C68  003D               	movlb	29	; select bank29
 12449  1C69  1018               	bcf	24,0	;volatile
 12450  1C6A                     l4474:	
 12451                           
 12452                           ;usb_device.c: 2377: }
 12453                           ;usb_device.c: 2379: (UIR &= 0xDF);
 12454  1C6A  30DF               	movlw	223
 12455  1C6B  0020               	movlb	0	; select bank0
 12456  1C6C  00DE               	movwf	??_USBStallHandler
 12457  1C6D  085E               	movf	??_USBStallHandler,w
 12458  1C6E  003D               	movlb	29	; select bank29
 12459  1C6F  0590               	andwf	16,f	;volatile
 12460  1C70  0008               	return
 12461  1C71                     __end_of_USBStallHandler:	
 12462                           
 12463                           	psect	text46
 12464  1BA4                     __ptext46:	
 12465 ;; *************** function _USBSuspend *****************
 12466 ;; Defined at:
 12467 ;;		line 2399 in file "../USB/usb_device.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;		None
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;		None               void
 12474 ;; Registers used:
 12475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12485 ;;Total ram usage:        1 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:    8
 12488 ;; This function calls:
 12489 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12490 ;; This function is called by:
 12491 ;;		_USBDeviceTasks
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           
 12496                           ;psect for function _USBSuspend
 12497  1BA4                     _USBSuspend:	
 12498                           
 12499                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
 12500                           
 12501                           ;incstack = 0
 12502                           ; Regs used in _USBSuspend: [allreg]
 12503  1BA4  003D               	movlb	29	; select bank29
 12504  1BA5  1512               	bsf	18,2	;volatile
 12505                           
 12506                           ;usb_device.c: 2424: (UIR &= 0xEF);
 12507  1BA6  30EF               	movlw	239
 12508  1BA7  0021               	movlb	1	; select bank1
 12509  1BA8  00B1               	movwf	??_USBSuspend^(0+128)
 12510  1BA9  0831               	movf	??_USBSuspend^(0+128),w
 12511  1BAA  003D               	movlb	29	; select bank29
 12512  1BAB  0590               	andwf	16,f	;volatile
 12513                           
 12514                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
 12515  1BAC  148E               	bsf	14,1	;volatile
 12516                           
 12517                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
 12518  1BAD  0022               	movlb	2	; select bank2
 12519  1BAE  01E4               	clrf	_USBBusIsSuspended^(0+256)
 12520  1BAF  0AE4               	incf	_USBBusIsSuspended^(0+256),f
 12521                           
 12522                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12523  1BB0  3075               	movlw	117
 12524  1BB1  0021               	movlb	1	; select bank1
 12525  1BB2  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12526  1BB3  3000               	movlw	0
 12527  1BB4  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12528  1BB5  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12529  1BB6  3000               	movlw	0
 12530  1BB7  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 12531  1BB8  3000               	movlw	0
 12532  1BB9  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12533  1BBA  319D  2547         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12534  1BBC  0008               	return
 12535  1BBD                     __end_of_USBSuspend:	
 12536                           
 12537                           	psect	text47
 12538  1B8C                     __ptext47:	
 12539 ;; *************** function _USBWakeFromSuspend *****************
 12540 ;; Defined at:
 12541 ;;		line 2456 in file "../USB/usb_device.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;		None
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;		None               void
 12548 ;; Registers used:
 12549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12557 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12558 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12559 ;;Total ram usage:        1 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    8
 12562 ;; This function calls:
 12563 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12564 ;; This function is called by:
 12565 ;;		_USBDeviceTasks
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569                           
 12570                           ;psect for function _USBWakeFromSuspend
 12571  1B8C                     _USBWakeFromSuspend:	
 12572                           
 12573                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
 12574                           
 12575                           ;incstack = 0
 12576                           ; Regs used in _USBWakeFromSuspend: [allreg]
 12577  1B8C  0022               	movlb	2	; select bank2
 12578  1B8D  01E4               	clrf	_USBBusIsSuspended^(0+256)
 12579                           
 12580                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12581  1B8E  3074               	movlw	116
 12582  1B8F  0021               	movlb	1	; select bank1
 12583  1B90  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12584  1B91  3000               	movlw	0
 12585  1B92  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12586  1B93  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12587  1B94  3000               	movlw	0
 12588  1B95  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 12589  1B96  3000               	movlw	0
 12590  1B97  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12591  1B98  319D  2547         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12592                           
 12593                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
 12594  1B9A  003D               	movlb	29	; select bank29
 12595  1B9B  108E               	bcf	14,1	;volatile
 12596                           
 12597                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
 12598  1B9C  1112               	bcf	18,2	;volatile
 12599                           
 12600                           ;usb_device.c: 2495: {
 12601                           ;usb_device.c: 2496: (UIR &= 0xFB);
 12602  1B9D  30FB               	movlw	251
 12603  1B9E  0021               	movlb	1	; select bank1
 12604  1B9F  00B1               	movwf	??_USBWakeFromSuspend^(0+128)
 12605  1BA0  0831               	movf	??_USBWakeFromSuspend^(0+128),w
 12606  1BA1  003D               	movlb	29	; select bank29
 12607  1BA2  0590               	andwf	16,f	;volatile
 12608  1BA3  0008               	return
 12609  1BA4                     __end_of_USBWakeFromSuspend:	
 12610                           
 12611                           	psect	text48
 12612  1D47                     __ptext48:	
 12613 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 12614 ;; Defined at:
 12615 ;;		line 630 in file "main.c"
 12616 ;; Parameters:    Size  Location     Type
 12617 ;;  event           2   12[BANK1 ] int 
 12618 ;;  pdata           1   14[BANK1 ] PTR void 
 12619 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(32), 
 12620 ;;  size            2   15[BANK1 ] unsigned short 
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;		None
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      enum E5
 12625 ;; Registers used:
 12626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12632 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;Total ram usage:        5 bytes
 12637 ;; Hardware stack levels used:    1
 12638 ;; Hardware stack levels required when called:    7
 12639 ;; This function calls:
 12640 ;;		_USBCBSuspend
 12641 ;;		_USBCBWakeFromSuspend
 12642 ;;		_USBCB_SOF_Handler
 12643 ;;		_USBCBErrorHandler
 12644 ;;		_USBCBCheckOtherReq
 12645 ;;		_USBCBStdSetDscHandler
 12646 ;;		_USBCBInitEP
 12647 ;; This function is called by:
 12648 ;;		_USBDeviceTasks
 12649 ;;		_USBStdSetCfgHandler
 12650 ;;		_USBSuspend
 12651 ;;		_USBWakeFromSuspend
 12652 ;;		_USBCtrlTrfSetupHandler
 12653 ;;		_USBCheckStdRequest
 12654 ;;		_USBStdFeatureReqHandler
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           
 12659                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 12660  1D47                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 12661                           
 12662                           ;main.c: 631: switch( event )
 12663                           
 12664                           ;incstack = 0
 12665                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [allreg]
 12666  1D47  2D5D               	goto	l4424
 12667  1D48                     l4408:	
 12668                           ;main.c: 636: case EVENT_SOF:
 12669                           
 12670                           ;main.c: 635: break;
 12671                           
 12672                           ;main.c: 632: {
 12673                           ;main.c: 633: case EVENT_TRANSFER:
 12674                           
 12675                           
 12676                           ;main.c: 637: USBCB_SOF_Handler();
 12677  1D48  3188  20B0         	fcall	_USBCB_SOF_Handler
 12678                           
 12679                           ;main.c: 638: break;
 12680  1D4A  0008               	return
 12681  1D4B                     l4410:	
 12682                           ;main.c: 639: case EVENT_SUSPEND:
 12683                           
 12684                           
 12685                           ;main.c: 640: USBCBSuspend();
 12686  1D4B  3190  2000         	fcall	_USBCBSuspend
 12687                           
 12688                           ;main.c: 641: break;
 12689  1D4D  0008               	return
 12690  1D4E                     l4412:	
 12691                           ;main.c: 642: case EVENT_RESUME:
 12692                           
 12693                           
 12694                           ;main.c: 643: USBCBWakeFromSuspend();
 12695  1D4E  3188  20AF         	fcall	_USBCBWakeFromSuspend
 12696                           
 12697                           ;main.c: 644: break;
 12698  1D50  0008               	return
 12699  1D51                     l4414:	
 12700                           ;main.c: 645: case EVENT_CONFIGURED:
 12701                           
 12702                           
 12703                           ;main.c: 646: USBCBInitEP();
 12704  1D51  319C  240F         	fcall	_USBCBInitEP
 12705                           
 12706                           ;main.c: 647: break;
 12707  1D53  0008               	return
 12708  1D54                     l4416:	
 12709                           ;main.c: 648: case EVENT_SET_DESCRIPTOR:
 12710                           
 12711                           
 12712                           ;main.c: 649: USBCBStdSetDscHandler();
 12713  1D54  3187  27FF         	fcall	_USBCBStdSetDscHandler
 12714                           
 12715                           ;main.c: 650: break;
 12716  1D56  0008               	return
 12717  1D57                     l4418:	
 12718                           ;main.c: 651: case EVENT_EP0_REQUEST:
 12719                           
 12720                           
 12721                           ;main.c: 652: USBCBCheckOtherReq();
 12722  1D57  3187  27FB         	fcall	_USBCBCheckOtherReq
 12723                           
 12724                           ;main.c: 653: break;
 12725  1D59  0008               	return
 12726  1D5A                     l4420:	
 12727                           ;main.c: 654: case EVENT_BUS_ERROR:
 12728                           
 12729                           
 12730                           ;main.c: 655: USBCBErrorHandler();
 12731  1D5A  3180  2002         	fcall	_USBCBErrorHandler
 12732                           
 12733                           ;main.c: 669: }
 12734                           
 12735                           ;main.c: 668: break;
 12736                           
 12737                           ;main.c: 667: default:
 12738                           
 12739                           ;main.c: 666: break;
 12740                           
 12741                           ;main.c: 657: case EVENT_TRANSFER_TERMINATED:
 12742                           
 12743                           ;main.c: 656: break;
 12744  1D5C  0008               	return
 12745  1D5D                     l4424:	
 12746                           
 12747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12748                           ; Switch size 1, requested type "space"
 12749                           ; Number of cases is 2, Range of values is 0 to 127
 12750                           ; switch strategies available:
 12751                           ; Name         Instructions Cycles
 12752                           ; simple_byte            7     4 (average)
 12753                           ; direct_byte          262     6 (fixed)
 12754                           ; jumptable            260     6 (fixed)
 12755                           ; rangetable           132     6 (fixed)
 12756                           ; spacedrange          261     8 (fixed)
 12757                           ; locatedrange         128     3 (fixed)
 12758                           ;	Chosen strategy is simple_byte
 12759  1D5D  0021               	movlb	1	; select bank1
 12760  1D5E  082D               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 12761  1D5F  3A00               	xorlw	0	; case 0
 12762  1D60  1903               	skipnz
 12763  1D61  2D66               	goto	l6640
 12764  1D62  3A7F               	xorlw	127	; case 127
 12765  1D63  1903               	skipnz
 12766  1D64  2D80               	goto	l6642
 12767  1D65  2D85               	goto	l939
 12768  1D66                     l6640:	
 12769                           
 12770                           ; Switch size 1, requested type "space"
 12771                           ; Number of cases is 8, Range of values is 1 to 117
 12772                           ; switch strategies available:
 12773                           ; Name         Instructions Cycles
 12774                           ; simple_byte           25    13 (average)
 12775                           ; direct_byte          243     9 (fixed)
 12776                           ; jumptable            263     9 (fixed)
 12777                           ;	Chosen strategy is simple_byte
 12778  1D66  082C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 12779  1D67  3A01               	xorlw	1	; case 1
 12780  1D68  1903               	skipnz
 12781  1D69  2D51               	goto	l4414
 12782  1D6A  3A03               	xorlw	3	; case 2
 12783  1D6B  1903               	skipnz
 12784  1D6C  2D54               	goto	l4416
 12785  1D6D  3A01               	xorlw	1	; case 3
 12786  1D6E  1903               	skipnz
 12787  1D6F  2D57               	goto	l4418
 12788  1D70  3A06               	xorlw	6	; case 5
 12789  1D71  1903               	skipnz
 12790  1D72  2D85               	goto	l939
 12791  1D73  3A77               	xorlw	119	; case 114
 12792  1D74  1903               	skipnz
 12793  1D75  2D85               	goto	l939
 12794  1D76  3A01               	xorlw	1	; case 115
 12795  1D77  1903               	skipnz
 12796  1D78  2D48               	goto	l4408
 12797  1D79  3A07               	xorlw	7	; case 116
 12798  1D7A  1903               	skipnz
 12799  1D7B  2D4E               	goto	l4412
 12800  1D7C  3A01               	xorlw	1	; case 117
 12801  1D7D  1903               	skipnz
 12802  1D7E  2D4B               	goto	l4410
 12803  1D7F  2D85               	goto	l939
 12804  1D80                     l6642:	
 12805                           
 12806                           ; Switch size 1, requested type "space"
 12807                           ; Number of cases is 1, Range of values is 255 to 255
 12808                           ; switch strategies available:
 12809                           ; Name         Instructions Cycles
 12810                           ; simple_byte            4     3 (average)
 12811                           ; direct_byte            7     5 (fixed)
 12812                           ; jumptable            263     9 (fixed)
 12813                           ;	Chosen strategy is simple_byte
 12814  1D80  082C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 12815  1D81  3AFF               	xorlw	255	; case 255
 12816  1D82  1903               	skipnz
 12817  1D83  2D5A               	goto	l4420
 12818  1D84  2D85               	goto	l939
 12819  1D85                     l939:	
 12820                           ;main.c: 670: return TRUE;
 12821                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 12822                           
 12823  1D85  0008               	return
 12824  1D86                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 12825                           
 12826                           	psect	text49
 12827  1C0F                     __ptext49:	
 12828 ;; *************** function _USBCBInitEP *****************
 12829 ;; Defined at:
 12830 ;;		line 460 in file "main.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;		None
 12833 ;; Auto vars:     Size  Location     Type
 12834 ;;		None
 12835 ;; Return value:  Size  Location     Type
 12836 ;;		None               void
 12837 ;; Registers used:
 12838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/0
 12841 ;;		On exit  : 0/0
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12846 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12847 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12848 ;;Total ram usage:        3 bytes
 12849 ;; Hardware stack levels used:    1
 12850 ;; Hardware stack levels required when called:    6
 12851 ;; This function calls:
 12852 ;;		_USBEnableEndpoint
 12853 ;;		_USBTransferOnePacket
 12854 ;; This function is called by:
 12855 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           
 12860                           ;psect for function _USBCBInitEP
 12861  1C0F                     _USBCBInitEP:	
 12862                           
 12863                           ;main.c: 462: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
 12864                           
 12865                           ;incstack = 0
 12866                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12867  1C0F  301E               	movlw	30
 12868  1C10  0021               	movlb	1	; select bank1
 12869  1C11  00A9               	movwf	??_USBCBInitEP^(0+128)
 12870  1C12  0829               	movf	??_USBCBInitEP^(0+128),w
 12871  1C13  0020               	movlb	0	; select bank0
 12872  1C14  00E1               	movwf	?_USBEnableEndpoint
 12873  1C15  3001               	movlw	1
 12874  1C16  319C  24E6  319C   	fcall	_USBEnableEndpoint
 12875                           
 12876                           ;main.c: 464: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
 12877  1C19  0021               	movlb	1	; select bank1
 12878  1C1A  01A0               	clrf	?_USBTransferOnePacket^(0+128)
 12879  1C1B  30A0               	movlw	160
 12880  1C1C  00A9               	movwf	??_USBCBInitEP^(0+128)
 12881  1C1D  0829               	movf	??_USBCBInitEP^(0+128),w
 12882  1C1E  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
 12883  1C1F  3040               	movlw	64
 12884  1C20  00AA               	movwf	(??_USBCBInitEP+1)^(0+128)
 12885  1C21  082A               	movf	(??_USBCBInitEP+1)^(0+128),w
 12886  1C22  00A2               	movwf	(?_USBTransferOnePacket^(0+128)+2)
 12887  1C23  3001               	movlw	1
 12888  1C24  319E  265B         	fcall	_USBTransferOnePacket
 12889  1C26  0021               	movlb	1	; select bank1
 12890  1C27  00AB               	movwf	(??_USBCBInitEP+2)^(0+128)
 12891  1C28  082B               	movf	(??_USBCBInitEP+2)^(0+128),w
 12892  1C29  0022               	movlb	2	; select bank2
 12893  1C2A  00E8               	movwf	_USBGenericOutHandle^(0+256)
 12894  1C2B  0008               	return
 12895  1C2C                     __end_of_USBCBInitEP:	
 12896                           
 12897                           	psect	text50
 12898  1E5B                     __ptext50:	
 12899 ;; *************** function _USBTransferOnePacket *****************
 12900 ;; Defined at:
 12901 ;;		line 1173 in file "../USB/usb_device.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;  ep              1    wreg     unsigned char 
 12904 ;;  dir             1    0[BANK1 ] unsigned char 
 12905 ;;  data            1    1[BANK1 ] PTR unsigned char 
 12906 ;;		 -> INPacket(64), OUTPacket(64), 
 12907 ;;  len             1    2[BANK1 ] unsigned char 
 12908 ;; Auto vars:     Size  Location     Type
 12909 ;;  ep              1    5[BANK1 ] unsigned char 
 12910 ;;  handle          1    6[BANK1 ] PTR volatile struct __BD
 12911 ;;		 -> NULL(0), BDT(32), 
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  1    wreg      PTR void 
 12914 ;; Registers used:
 12915 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12916 ;; Tracked objects:
 12917 ;;		On entry : 0/0
 12918 ;;		On exit  : 0/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12921 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;Total ram usage:        7 bytes
 12926 ;; Hardware stack levels used:    1
 12927 ;; Hardware stack levels required when called:    4
 12928 ;; This function calls:
 12929 ;;		Nothing
 12930 ;; This function is called by:
 12931 ;;		_ProcessIO
 12932 ;;		_USBCBInitEP
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936                           
 12937                           ;psect for function _USBTransferOnePacket
 12938  1E5B                     _USBTransferOnePacket:	
 12939                           
 12940                           ;incstack = 0
 12941                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 12942                           ;USBTransferOnePacket@ep stored from wreg
 12943  1E5B  0021               	movlb	1	; select bank1
 12944  1E5C  00A5               	movwf	USBTransferOnePacket@ep^(0+128)
 12945                           
 12946                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
 12947                           ;usb_device.c: 1177: if(dir != 0)
 12948  1E5D  0820               	movf	USBTransferOnePacket@dir^(0+128),w
 12949  1E5E  1903               	btfsc	3,2
 12950  1E5F  2E65               	goto	l4542
 12951                           
 12952                           ;usb_device.c: 1178: {
 12953                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
 12954  1E60  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 12955  1E61  3EE2               	addlw	_pBDTEntryIn& (0+255)
 12956  1E62  0086               	movwf	6
 12957  1E63  0187               	clrf	7
 12958  1E64  2E6A               	goto	L16
 12959  1E65                     l4542:	
 12960                           ;usb_device.c: 1181: }
 12961                           
 12962                           
 12963                           ;usb_device.c: 1182: else
 12964                           ;usb_device.c: 1183: {
 12965                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
 12966  1E65  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 12967  1E66  3E5B               	addlw	_pBDTEntryOut& (0+255)
 12968  1E67  0086               	movwf	6
 12969  1E68  3001               	movlw	1	; select bank2/3
 12970  1E69  0087               	movwf	7
 12971  1E6A                     L16:	
 12972  1E6A  0801               	movf	1,w
 12973  1E6B  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 12974  1E6C  0823               	movf	??_USBTransferOnePacket^(0+128),w
 12975  1E6D  00A6               	movwf	USBTransferOnePacket@handle^(0+128)
 12976                           
 12977                           ;usb_device.c: 1186: }
 12978                           ;usb_device.c: 1190: if(handle == 0)
 12979  1E6E  08A6               	movf	USBTransferOnePacket@handle^(0+128),f
 12980  1E6F  1D03               	skipz
 12981  1E70  2E73               	goto	l4550
 12982                           
 12983                           ;usb_device.c: 1191: {
 12984                           ;usb_device.c: 1192: return 0;
 12985  1E71  3000               	movlw	0
 12986  1E72  0008               	return
 12987  1E73                     l4550:	
 12988                           
 12989                           ;usb_device.c: 1193: }
 12990                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
 12991  1E73  0821               	movf	USBTransferOnePacket@data^(0+128),w
 12992  1E74  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 12993  1E75  3002               	movlw	2
 12994  1E76  00A4               	movwf	(??_USBTransferOnePacket^(0+128)+1)
 12995  1E77  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 12996  1E78  3E02               	addlw	2
 12997  1E79  0086               	movwf	6
 12998  1E7A  0187               	clrf	7
 12999  1E7B  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13000  1E7C  3FC0               	movwi [0]fsr1
 13001  1E7D  0824               	movf	(??_USBTransferOnePacket+1)^(0+128),w
 13002  1E7E  3FC1               	movwi [1]fsr1
 13003                           
 13004                           ;usb_device.c: 1207: handle->CNT = len;
 13005  1E7F  0822               	movf	USBTransferOnePacket@len^(0+128),w
 13006  1E80  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13007  1E81  0A26               	incf	USBTransferOnePacket@handle^(0+128),w
 13008  1E82  0086               	movwf	6
 13009  1E83  0187               	clrf	7
 13010  1E84  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13011  1E85  0081               	movwf	1
 13012                           
 13013                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
 13014  1E86  3040               	movlw	64
 13015  1E87  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13016  1E88  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 13017  1E89  0086               	movwf	6
 13018  1E8A  0187               	clrf	7
 13019  1E8B  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13020  1E8C  0581               	andwf	1,f
 13021                           
 13022                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
 13023  1E8D  3088               	movlw	136
 13024  1E8E  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13025  1E8F  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 13026  1E90  0086               	movwf	6
 13027  1E91  0187               	clrf	7
 13028  1E92  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13029  1E93  0481               	iorwf	1,f
 13030                           
 13031                           ;usb_device.c: 1212: if(dir != 0)
 13032  1E94  0820               	movf	USBTransferOnePacket@dir^(0+128),w
 13033  1E95  1903               	btfsc	3,2
 13034  1E96  2E9E               	goto	l4560
 13035                           
 13036                           ;usb_device.c: 1213: {
 13037                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
 13038  1E97  3004               	movlw	4
 13039  1E98  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13040  1E99  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 13041  1E9A  3EE2               	addlw	_pBDTEntryIn& (0+255)
 13042  1E9B  0086               	movwf	6
 13043  1E9C  0187               	clrf	7
 13044  1E9D  2EA5               	goto	L17
 13045  1E9E                     l4560:	
 13046                           ;usb_device.c: 1216: }
 13047                           
 13048                           
 13049                           ;usb_device.c: 1217: else
 13050                           ;usb_device.c: 1218: {
 13051                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
 13052  1E9E  3004               	movlw	4
 13053  1E9F  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13054  1EA0  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 13055  1EA1  3E5B               	addlw	_pBDTEntryOut& (0+255)
 13056  1EA2  0086               	movwf	6
 13057  1EA3  3001               	movlw	1	; select bank2/3
 13058  1EA4  0087               	movwf	7
 13059  1EA5                     L17:	
 13060  1EA5  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13061  1EA6  0681               	xorwf	1,f
 13062                           
 13063                           ;usb_device.c: 1221: }
 13064                           ;usb_device.c: 1222: return (void*)handle;
 13065  1EA7  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 13066  1EA8  0008               	return
 13067  1EA9                     __end_of_USBTransferOnePacket:	
 13068                           
 13069                           	psect	text51
 13070  1CE6                     __ptext51:	
 13071 ;; *************** function _USBEnableEndpoint *****************
 13072 ;; Defined at:
 13073 ;;		line 1056 in file "../USB/usb_device.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;  ep              1    wreg     unsigned char 
 13076 ;;  options         1   17[BANK0 ] unsigned char 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;  ep              1    8[BANK1 ] unsigned char 
 13079 ;;  p               2    6[BANK1 ] PTR unsigned char 
 13080 ;;		 -> UEP0(1), 
 13081 ;; Return value:  Size  Location     Type
 13082 ;;		None               void
 13083 ;; Registers used:
 13084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13090 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;Total ram usage:        6 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:    5
 13097 ;; This function calls:
 13098 ;;		_USBConfigureEndpoint
 13099 ;; This function is called by:
 13100 ;;		_USBCBInitEP
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104                           
 13105                           ;psect for function _USBEnableEndpoint
 13106  1CE6                     _USBEnableEndpoint:	
 13107                           
 13108                           ;incstack = 0
 13109                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13110                           ;USBEnableEndpoint@ep stored from wreg
 13111  1CE6  0021               	movlb	1	; select bank1
 13112  1CE7  00A8               	movwf	USBEnableEndpoint@ep^(0+128)
 13113                           
 13114                           ;usb_device.c: 1057: unsigned char* p;
 13115                           ;usb_device.c: 1061: if(options & 0x04)
 13116  1CE8  0020               	movlb	0	; select bank0
 13117  1CE9  1D61               	btfss	USBEnableEndpoint@options,2
 13118  1CEA  2CF1               	goto	l4514
 13119                           
 13120                           ;usb_device.c: 1062: {
 13121                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
 13122  1CEB  01DE               	clrf	?_USBConfigureEndpoint
 13123  1CEC  0021               	movlb	1	; select bank1
 13124  1CED  0828               	movf	USBEnableEndpoint@ep^(0+128),w
 13125  1CEE  319E  260E  319C   	fcall	_USBConfigureEndpoint
 13126  1CF1                     l4514:	
 13127                           
 13128                           ;usb_device.c: 1064: }
 13129                           ;usb_device.c: 1065: if(options & 0x02)
 13130  1CF1  0020               	movlb	0	; select bank0
 13131  1CF2  1CE1               	btfss	USBEnableEndpoint@options,1
 13132  1CF3  2CFA               	goto	l4518
 13133                           
 13134                           ;usb_device.c: 1066: {
 13135                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
 13136  1CF4  01DE               	clrf	?_USBConfigureEndpoint
 13137  1CF5  0ADE               	incf	?_USBConfigureEndpoint,f
 13138  1CF6  0021               	movlb	1	; select bank1
 13139  1CF7  0828               	movf	USBEnableEndpoint@ep^(0+128),w
 13140  1CF8  319E  260E         	fcall	_USBConfigureEndpoint
 13141  1CFA                     l4518:	
 13142                           
 13143                           ;usb_device.c: 1068: }
 13144                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
 13145  1CFA  0021               	movlb	1	; select bank1
 13146  1CFB  0828               	movf	USBEnableEndpoint@ep^(0+128),w
 13147  1CFC  3E98               	addlw	152
 13148  1CFD  00A4               	movwf	??_USBEnableEndpoint^(0+128)
 13149  1CFE  01A5               	clrf	(??_USBEnableEndpoint^(0+128)+1)
 13150  1CFF  300E               	movlw	14
 13151  1D00  3DA5               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
 13152  1D01  0824               	movf	??_USBEnableEndpoint^(0+128),w
 13153  1D02  00A6               	movwf	USBEnableEndpoint@p^(0+128)
 13154  1D03  0825               	movf	(??_USBEnableEndpoint+1)^(0+128),w
 13155  1D04  00A7               	movwf	(USBEnableEndpoint@p+1)^(0+128)
 13156                           
 13157                           ;usb_device.c: 1078: *p = options;
 13158  1D05  0020               	movlb	0	; select bank0
 13159  1D06  0861               	movf	USBEnableEndpoint@options,w
 13160  1D07  0021               	movlb	1	; select bank1
 13161  1D08  00A4               	movwf	??_USBEnableEndpoint^(0+128)
 13162  1D09  0826               	movf	USBEnableEndpoint@p^(0+128),w
 13163  1D0A  0086               	movwf	6
 13164  1D0B  0827               	movf	(USBEnableEndpoint@p+1)^(0+128),w
 13165  1D0C  0087               	movwf	7
 13166  1D0D  0824               	movf	??_USBEnableEndpoint^(0+128),w
 13167  1D0E  0081               	movwf	1
 13168  1D0F  0008               	return
 13169  1D10                     __end_of_USBEnableEndpoint:	
 13170                           
 13171                           	psect	text52
 13172  1E0E                     __ptext52:	
 13173 ;; *************** function _USBConfigureEndpoint *****************
 13174 ;; Defined at:
 13175 ;;		line 1713 in file "../USB/usb_device.c"
 13176 ;; Parameters:    Size  Location     Type
 13177 ;;  EPNum           1    wreg     unsigned char 
 13178 ;;  direction       1   14[BANK0 ] unsigned char 
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;  EPNum           1   15[BANK0 ] unsigned char 
 13181 ;;  handle          1   16[BANK0 ] PTR volatile struct __BD
 13182 ;;		 -> BDT(32), 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;		None               void
 13185 ;; Registers used:
 13186 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13192 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13196 ;;Total ram usage:        7 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    4
 13199 ;; This function calls:
 13200 ;;		Nothing
 13201 ;; This function is called by:
 13202 ;;		_USBEnableEndpoint
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _USBConfigureEndpoint
 13208  1E0E                     _USBConfigureEndpoint:	
 13209                           
 13210                           ;incstack = 0
 13211                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13212                           ;USBConfigureEndpoint@EPNum stored from wreg
 13213  1E0E  0020               	movlb	0	; select bank0
 13214  1E0F  00DF               	movwf	USBConfigureEndpoint@EPNum
 13215                           
 13216                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
 13217                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
 13218  1E10  3020               	movlw	32
 13219  1E11  0021               	movlb	1	; select bank1
 13220  1E12  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13221  1E13  0820               	movf	??_USBConfigureEndpoint^(0+128),w
 13222  1E14  0020               	movlb	0	; select bank0
 13223  1E15  00E0               	movwf	USBConfigureEndpoint@handle
 13224                           
 13225                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
 13226  1E16  085E               	movf	USBConfigureEndpoint@direction,w
 13227  1E17  0021               	movlb	1	; select bank1
 13228  1E18  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13229  1E19  3001               	movlw	1
 13230  1E1A                     u3895:	
 13231  1E1A  35A0               	lslf	??_USBConfigureEndpoint^(0+128),f
 13232  1E1B  0B89               	decfsz	9,f
 13233  1E1C  2E1A               	goto	u3895
 13234  1E1D  0020               	movlb	0	; select bank0
 13235  1E1E  085F               	movf	USBConfigureEndpoint@EPNum,w
 13236  1E1F  0021               	movlb	1	; select bank1
 13237  1E20  00A1               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
 13238  1E21  3001               	movlw	1
 13239  1E22                     u3905:	
 13240  1E22  35A1               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
 13241  1E23  3EFF               	addlw	-1
 13242  1E24  1D03               	skipz
 13243  1E25  2E22               	goto	u3905
 13244  1E26  3521               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
 13245  1E27  0720               	addwf	??_USBConfigureEndpoint^(0+128),w
 13246  1E28  00A2               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
 13247  1E29  3001               	movlw	1
 13248  1E2A                     u3915:	
 13249  1E2A  35A2               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
 13250  1E2B  3EFF               	addlw	-1
 13251  1E2C  1D03               	skipz
 13252  1E2D  2E2A               	goto	u3915
 13253  1E2E  3522               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
 13254  1E2F  00A3               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
 13255  1E30  0823               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
 13256  1E31  0020               	movlb	0	; select bank0
 13257  1E32  07E0               	addwf	USBConfigureEndpoint@handle,f
 13258                           
 13259                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
 13260  1E33  0860               	movf	USBConfigureEndpoint@handle,w
 13261  1E34  0086               	movwf	6
 13262  1E35  0187               	clrf	7
 13263  1E36  1381               	bcf	1,7
 13264                           
 13265                           ;usb_device.c: 1726: if(direction == 0)
 13266  1E37  08DE               	movf	USBConfigureEndpoint@direction,f
 13267  1E38  1D03               	skipz
 13268  1E39  2E44               	goto	l4532
 13269                           
 13270                           ;usb_device.c: 1727: {
 13271                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
 13272  1E3A  0860               	movf	USBConfigureEndpoint@handle,w
 13273  1E3B  0021               	movlb	1	; select bank1
 13274  1E3C  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13275  1E3D  0020               	movlb	0	; select bank0
 13276  1E3E  085F               	movf	USBConfigureEndpoint@EPNum,w
 13277  1E3F  3E5B               	addlw	_pBDTEntryOut& (0+255)
 13278  1E40  0086               	movwf	6
 13279  1E41  3001               	movlw	1	; select bank2/3
 13280  1E42  0087               	movwf	7
 13281  1E43  2E4D               	goto	L18
 13282  1E44                     l4532:	
 13283                           ;usb_device.c: 1729: }
 13284                           
 13285                           
 13286                           ;usb_device.c: 1730: else
 13287                           ;usb_device.c: 1731: {
 13288                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
 13289  1E44  0020               	movlb	0	; select bank0
 13290  1E45  0860               	movf	USBConfigureEndpoint@handle,w
 13291  1E46  0021               	movlb	1	; select bank1
 13292  1E47  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13293  1E48  0020               	movlb	0	; select bank0
 13294  1E49  085F               	movf	USBConfigureEndpoint@EPNum,w
 13295  1E4A  3EE2               	addlw	_pBDTEntryIn& (0+255)
 13296  1E4B  0086               	movwf	6
 13297  1E4C  0187               	clrf	7
 13298  1E4D                     L18:	
 13299  1E4D  0021               	movlb	1	; select bank1
 13300  1E4E  0820               	movf	??_USBConfigureEndpoint^(0+128),w
 13301  1E4F  0081               	movwf	1
 13302                           
 13303                           ;usb_device.c: 1733: }
 13304                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
 13305  1E50  0020               	movlb	0	; select bank0
 13306  1E51  0860               	movf	USBConfigureEndpoint@handle,w
 13307  1E52  0086               	movwf	6
 13308  1E53  0187               	clrf	7
 13309  1E54  1301               	bcf	1,6
 13310                           
 13311                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
 13312  1E55  0860               	movf	USBConfigureEndpoint@handle,w
 13313  1E56  3E04               	addlw	4
 13314  1E57  0086               	movwf	6
 13315  1E58  0187               	clrf	7
 13316  1E59  1701               	bsf	1,6
 13317  1E5A  0008               	return
 13318  1E5B                     __end_of_USBConfigureEndpoint:	
 13319                           
 13320                           	psect	text53
 13321  07FF                     __ptext53:	
 13322 ;; *************** function _USBCBStdSetDscHandler *****************
 13323 ;; Defined at:
 13324 ;;		line 434 in file "main.c"
 13325 ;; Parameters:    Size  Location     Type
 13326 ;;		None
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;		None
 13329 ;; Return value:  Size  Location     Type
 13330 ;;		None               void
 13331 ;; Registers used:
 13332 ;;		None
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;Total ram usage:        0 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; Hardware stack levels required when called:    4
 13345 ;; This function calls:
 13346 ;;		Nothing
 13347 ;; This function is called by:
 13348 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           
 13353                           ;psect for function _USBCBStdSetDscHandler
 13354  07FF                     _USBCBStdSetDscHandler:	
 13355                           
 13356                           ;incstack = 0
 13357                           ; Regs used in _USBCBStdSetDscHandler: []
 13358  07FF  0008               	return
 13359  0800                     __end_of_USBCBStdSetDscHandler:	
 13360                           
 13361                           	psect	text54
 13362  07FB                     __ptext54:	
 13363 ;; *************** function _USBCBCheckOtherReq *****************
 13364 ;; Defined at:
 13365 ;;		line 409 in file "main.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;		None
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;		None
 13370 ;; Return value:  Size  Location     Type
 13371 ;;		None               void
 13372 ;; Registers used:
 13373 ;;		status,2, status,0, pclath, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;Total ram usage:        0 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    5
 13386 ;; This function calls:
 13387 ;;		_USBCheckVendorRequest
 13388 ;; This function is called by:
 13389 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           
 13394                           ;psect for function _USBCBCheckOtherReq
 13395  07FB                     _USBCBCheckOtherReq:	
 13396                           
 13397                           ;main.c: 410: USBCheckVendorRequest();
 13398                           
 13399                           ;incstack = 0
 13400                           ; Regs used in _USBCBCheckOtherReq: [status,2+status,0+pclath+cstack]
 13401  07FB  3180  2003         	fcall	_USBCheckVendorRequest
 13402  07FD  0008               	return
 13403  07FE                     __end_of_USBCBCheckOtherReq:	
 13404                           
 13405                           	psect	text55
 13406  0003                     __ptext55:	
 13407 ;; *************** function _USBCheckVendorRequest *****************
 13408 ;; Defined at:
 13409 ;;		line 248 in file "../USB/usb_function_generic.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;		None
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;		None               void
 13416 ;; Registers used:
 13417 ;;		None
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;Total ram usage:        0 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:    4
 13430 ;; This function calls:
 13431 ;;		Nothing
 13432 ;; This function is called by:
 13433 ;;		_USBCBCheckOtherReq
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           
 13438                           ;psect for function _USBCheckVendorRequest
 13439  0003                     _USBCheckVendorRequest:	
 13440                           
 13441                           ;incstack = 0
 13442                           ; Regs used in _USBCheckVendorRequest: []
 13443  0003  0008               	return
 13444  0004                     __end_of_USBCheckVendorRequest:	
 13445                           
 13446                           	psect	text56
 13447  0002                     __ptext56:	
 13448 ;; *************** function _USBCBErrorHandler *****************
 13449 ;; Defined at:
 13450 ;;		line 358 in file "main.c"
 13451 ;; Parameters:    Size  Location     Type
 13452 ;;		None
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;		None               void
 13457 ;; Registers used:
 13458 ;;		None
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;Total ram usage:        0 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    4
 13471 ;; This function calls:
 13472 ;;		Nothing
 13473 ;; This function is called by:
 13474 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           
 13479                           ;psect for function _USBCBErrorHandler
 13480  0002                     _USBCBErrorHandler:	
 13481                           
 13482                           ;incstack = 0
 13483                           ; Regs used in _USBCBErrorHandler: []
 13484  0002  0008               	return
 13485  0003                     __end_of_USBCBErrorHandler:	
 13486                           
 13487                           	psect	text57
 13488  08B0                     __ptext57:	
 13489 ;; *************** function _USBCB_SOF_Handler *****************
 13490 ;; Defined at:
 13491 ;;		line 335 in file "main.c"
 13492 ;; Parameters:    Size  Location     Type
 13493 ;;		None
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;		None
 13496 ;; Return value:  Size  Location     Type
 13497 ;;		None               void
 13498 ;; Registers used:
 13499 ;;		None
 13500 ;; Tracked objects:
 13501 ;;		On entry : 0/0
 13502 ;;		On exit  : 0/0
 13503 ;;		Unchanged: 0/0
 13504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;Total ram usage:        0 bytes
 13510 ;; Hardware stack levels used:    1
 13511 ;; Hardware stack levels required when called:    4
 13512 ;; This function calls:
 13513 ;;		Nothing
 13514 ;; This function is called by:
 13515 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13516 ;; This function uses a non-reentrant model
 13517 ;;
 13518                           
 13519                           
 13520                           ;psect for function _USBCB_SOF_Handler
 13521  08B0                     _USBCB_SOF_Handler:	
 13522                           
 13523                           ;incstack = 0
 13524                           ; Regs used in _USBCB_SOF_Handler: []
 13525  08B0  0008               	return
 13526  08B1                     __end_of_USBCB_SOF_Handler:	
 13527                           
 13528                           	psect	text58
 13529  08AF                     __ptext58:	
 13530 ;; *************** function _USBCBWakeFromSuspend *****************
 13531 ;; Defined at:
 13532 ;;		line 305 in file "main.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;		None
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;		None
 13537 ;; Return value:  Size  Location     Type
 13538 ;;		None               void
 13539 ;; Registers used:
 13540 ;;		None
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;Total ram usage:        0 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; Hardware stack levels required when called:    4
 13553 ;; This function calls:
 13554 ;;		Nothing
 13555 ;; This function is called by:
 13556 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13557 ;;		_USBCBSendResume
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561                           
 13562                           ;psect for function _USBCBWakeFromSuspend
 13563  08AF                     _USBCBWakeFromSuspend:	
 13564                           
 13565                           ;incstack = 0
 13566                           ; Regs used in _USBCBWakeFromSuspend: []
 13567  08AF  0008               	return
 13568  08B0                     __end_of_USBCBWakeFromSuspend:	
 13569                           
 13570                           	psect	text59
 13571  1000                     __ptext59:	
 13572 ;; *************** function _USBCBSuspend *****************
 13573 ;; Defined at:
 13574 ;;		line 264 in file "main.c"
 13575 ;; Parameters:    Size  Location     Type
 13576 ;;		None
 13577 ;; Auto vars:     Size  Location     Type
 13578 ;;		None
 13579 ;; Return value:  Size  Location     Type
 13580 ;;		None               void
 13581 ;; Registers used:
 13582 ;;		None
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/0
 13585 ;;		On exit  : 0/0
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;Total ram usage:        0 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:    4
 13595 ;; This function calls:
 13596 ;;		Nothing
 13597 ;; This function is called by:
 13598 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13599 ;; This function uses a non-reentrant model
 13600 ;;
 13601                           
 13602                           
 13603                           ;psect for function _USBCBSuspend
 13604  1000                     _USBCBSuspend:	
 13605                           
 13606                           ;incstack = 0
 13607                           ; Regs used in _USBCBSuspend: []
 13608  1000  0008               	return
 13609  1001                     __end_of_USBCBSuspend:	
 13610                           
 13611                           	psect	text60
 13612  097E                     __ptext60:	
 13613 ;; *************** function _USBDeviceInit *****************
 13614 ;; Defined at:
 13615 ;;		line 467 in file "../USB/usb_device.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;		None
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;  p               2    0[BANK1 ] PTR unsigned char 
 13620 ;;		 -> UEP1(1), 
 13621 ;;  i               1    2[BANK1 ] unsigned char 
 13622 ;;  i               1    3[BANK1 ] unsigned char 
 13623 ;; Return value:  Size  Location     Type
 13624 ;;		None               void
 13625 ;; Registers used:
 13626 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;Total ram usage:        6 bytes
 13637 ;; Hardware stack levels used:    1
 13638 ;; Hardware stack levels required when called:    4
 13639 ;; This function calls:
 13640 ;;		Nothing
 13641 ;; This function is called by:
 13642 ;;		_USBDeviceTasks
 13643 ;;		_InitializeSystem
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           
 13648                           ;psect for function _USBDeviceInit
 13649  097E                     _USBDeviceInit:	
 13650                           
 13651                           ;usb_device.c: 468: BYTE i;
 13652                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
 13653                           
 13654                           ;incstack = 0
 13655                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 13656  097E  0021               	movlb	1	; select bank1
 13657  097F  1112               	bcf	18,2	;volatile
 13658                           
 13659                           ;usb_device.c: 473: UEIR = 0;;
 13660  0980  003D               	movlb	29	; select bank29
 13661  0981  0193               	clrf	19	;volatile
 13662                           
 13663                           ;usb_device.c: 476: UIR = 0;;
 13664  0982  0190               	clrf	16	;volatile
 13665                           
 13666                           ;usb_device.c: 479: UEP0 = 0;
 13667  0983  0198               	clrf	24	;volatile
 13668                           
 13669                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 13670  0984  300E               	movlw	14
 13671  0985  0021               	movlb	1	; select bank1
 13672  0986  00A1               	movwf	(USBDeviceInit@p+1)^(0+128)
 13673  0987  3099               	movlw	153
 13674  0988  00A0               	movwf	USBDeviceInit@p^(0+128)
 13675  0989  01A2               	clrf	USBDeviceInit@i_718^(0+128)
 13676  098A  0822               	movf	USBDeviceInit@i_718^(0+128),w
 13677  098B  1D03               	skipz
 13678  098C  299F               	goto	l4210
 13679  098D                     l4202:	
 13680  098D  0820               	movf	USBDeviceInit@p^(0+128),w
 13681  098E  0086               	movwf	6
 13682  098F  0821               	movf	(USBDeviceInit@p+1)^(0+128),w
 13683  0990  0087               	movwf	7
 13684  0991  0181               	clrf	1
 13685  0992  3001               	movlw	1
 13686  0993  07A0               	addwf	USBDeviceInit@p^(0+128),f
 13687  0994  3000               	movlw	0
 13688  0995  3DA1               	addwfc	(USBDeviceInit@p+1)^(0+128),f
 13689  0996  3001               	movlw	1
 13690  0997  0020               	movlb	0	; select bank0
 13691  0998  00DE               	movwf	??_USBDeviceInit
 13692  0999  085E               	movf	??_USBDeviceInit,w
 13693  099A  0021               	movlb	1	; select bank1
 13694  099B  07A2               	addwf	USBDeviceInit@i_718^(0+128),f
 13695  099C  0822               	movf	USBDeviceInit@i_718^(0+128),w
 13696  099D  1903               	btfsc	3,2
 13697  099E  298D               	goto	l4202
 13698  099F                     l4210:	
 13699                           
 13700                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13701  099F  3016               	movlw	22
 13702  09A0  003D               	movlb	29	; select bank29
 13703  09A1  0091               	movwf	17	;volatile
 13704  09A2  309F               	movlw	159
 13705  09A3  0097               	movwf	23	;volatile
 13706  09A4  307B               	movlw	123
 13707  09A5  0092               	movwf	18	;volatile
 13708                           
 13709                           ;usb_device.c: 486: ;
 13710                           ;usb_device.c: 489: ;
 13711                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13712  09A6  0021               	movlb	1	; select bank1
 13713  09A7  01A3               	clrf	USBDeviceInit@i^(0+128)
 13714  09A8  3008               	movlw	8
 13715  09A9  0223               	subwf	USBDeviceInit@i^(0+128),w
 13716  09AA  1803               	btfsc	3,0
 13717  09AB  29C7               	goto	l128
 13718  09AC                     l4218:	
 13719                           
 13720                           ;usb_device.c: 493: {
 13721                           ;usb_device.c: 494: BDT[i].Val = 0x00;
 13722  09AC  0823               	movf	USBDeviceInit@i^(0+128),w
 13723  09AD  0020               	movlb	0	; select bank0
 13724  09AE  00DE               	movwf	??_USBDeviceInit
 13725  09AF  3001               	movlw	1
 13726  09B0                     u3435:	
 13727  09B0  35DE               	lslf	??_USBDeviceInit,f
 13728  09B1  3EFF               	addlw	-1
 13729  09B2  1D03               	skipz
 13730  09B3  29B0               	goto	u3435
 13731  09B4  355E               	lslf	??_USBDeviceInit,w
 13732  09B5  3E20               	addlw	32
 13733  09B6  0086               	movwf	6
 13734  09B7  0187               	clrf	7
 13735  09B8  3000               	movlw	0
 13736  09B9  3FC0               	movwi [0]fsr1
 13737  09BA  3000               	movlw	0
 13738  09BB  3FC1               	movwi [1]fsr1
 13739  09BC  3FC2               	movwi [2]fsr1
 13740  09BD  3FC3               	movwi [3]fsr1
 13741  09BE  3001               	movlw	1
 13742  09BF  00DE               	movwf	??_USBDeviceInit
 13743  09C0  085E               	movf	??_USBDeviceInit,w
 13744  09C1  0021               	movlb	1	; select bank1
 13745  09C2  07A3               	addwf	USBDeviceInit@i^(0+128),f
 13746  09C3  3008               	movlw	8
 13747  09C4  0223               	subwf	USBDeviceInit@i^(0+128),w
 13748  09C5  1C03               	skipc
 13749  09C6  29AC               	goto	l4218
 13750  09C7                     l128:	
 13751                           
 13752                           ;usb_device.c: 495: }
 13753                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
 13754  09C7  003D               	movlb	29	; select bank29
 13755  09C8  170E               	bsf	14,6	;volatile
 13756                           
 13757                           ;usb_device.c: 501: UADDR = 0x00;
 13758  09C9  0196               	clrf	22	;volatile
 13759                           
 13760                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
 13761  09CA  120E               	bcf	14,4	;volatile
 13762                           
 13763                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
 13764  09CB  130E               	bcf	14,6	;volatile
 13765  09CC                     l4238:	
 13766                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
 13767                           
 13768  09CC  003D               	movlb	29	; select bank29
 13769  09CD  1D90               	btfss	16,3	;volatile
 13770  09CE  29DC               	goto	l4240
 13771                           
 13772                           ;usb_device.c: 511: {
 13773                           ;usb_device.c: 512: (UIR &= 0xF7);
 13774  09CF  30F7               	movlw	247
 13775  09D0  0020               	movlb	0	; select bank0
 13776  09D1  00DE               	movwf	??_USBDeviceInit
 13777  09D2  085E               	movf	??_USBDeviceInit,w
 13778  09D3  003D               	movlb	29	; select bank29
 13779  09D4  0590               	andwf	16,f	;volatile
 13780                           
 13781                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
 13782  09D5  0021               	movlb	1	; select bank1
 13783  09D6  01EA               	clrf	(_inPipes^(0+128)+2)
 13784                           
 13785                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
 13786  09D7  0023               	movlb	3	; select bank3
 13787  09D8  01C9               	clrf	(_outPipes^(0+384)+2)
 13788                           
 13789                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
 13790  09D9  01CA               	clrf	(_outPipes^(0+384)+3)
 13791  09DA  01CB               	clrf	((_outPipes+1)^(0+384)+3)
 13792  09DB  29CC               	goto	l4238
 13793  09DC                     l4240:	
 13794                           
 13795                           ;usb_device.c: 517: }
 13796                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
 13797  09DC  3001               	movlw	1
 13798  09DD  0020               	movlb	0	; select bank0
 13799  09DE  00DE               	movwf	??_USBDeviceInit
 13800  09DF  085E               	movf	??_USBDeviceInit,w
 13801  09E0  0022               	movlb	2	; select bank2
 13802  09E1  00E9               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 13803                           
 13804                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
 13805  09E2  3001               	movlw	1
 13806  09E3  0020               	movlb	0	; select bank0
 13807  09E4  00DE               	movwf	??_USBDeviceInit
 13808  09E5  085E               	movf	??_USBDeviceInit,w
 13809  09E6  0022               	movlb	2	; select bank2
 13810  09E7  00EA               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 13811                           
 13812                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
 13813  09E8  01E5               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 13814                           
 13815                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
 13816  09E9  01E6               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 13817                           
 13818                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
 13819  09EA  01E4               	clrf	_USBBusIsSuspended^(0+256)
 13820                           
 13821                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(1+1u); i++)
 13822  09EB  0021               	movlb	1	; select bank1
 13823  09EC  01A3               	clrf	USBDeviceInit@i^(0+128)
 13824  09ED  3002               	movlw	2
 13825  09EE  0223               	subwf	USBDeviceInit@i^(0+128),w
 13826  09EF  1803               	btfsc	3,0
 13827  09F0  2A12               	goto	l4258
 13828  09F1                     l4252:	
 13829                           
 13830                           ;usb_device.c: 531: {
 13831                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
 13832  09F1  0823               	movf	USBDeviceInit@i^(0+128),w
 13833  09F2  3EE2               	addlw	_pBDTEntryIn& (0+255)
 13834  09F3  0086               	movwf	6
 13835  09F4  0187               	clrf	7
 13836  09F5  0181               	clrf	1
 13837                           
 13838                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
 13839  09F6  0823               	movf	USBDeviceInit@i^(0+128),w
 13840  09F7  3E5B               	addlw	_pBDTEntryOut& (0+255)
 13841  09F8  0086               	movwf	6
 13842  09F9  3001               	movlw	1	; select bank2/3
 13843  09FA  0087               	movwf	7
 13844  09FB  0181               	clrf	1
 13845                           
 13846                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
 13847  09FC  0823               	movf	USBDeviceInit@i^(0+128),w
 13848  09FD  3ED1               	addlw	_ep_data_in& (0+255)
 13849  09FE  0086               	movwf	6
 13850  09FF  3001               	movlw	1	; select bank3/4
 13851  0A00  0087               	movwf	7
 13852  0A01  0181               	clrf	1
 13853                           
 13854                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
 13855  0A02  0823               	movf	USBDeviceInit@i^(0+128),w
 13856  0A03  3ED3               	addlw	_ep_data_out& (0+255)
 13857  0A04  0086               	movwf	6
 13858  0A05  3001               	movlw	1	; select bank3/4
 13859  0A06  0087               	movwf	7
 13860  0A07  0181               	clrf	1
 13861  0A08  3001               	movlw	1
 13862  0A09  0020               	movlb	0	; select bank0
 13863  0A0A  00DE               	movwf	??_USBDeviceInit
 13864  0A0B  085E               	movf	??_USBDeviceInit,w
 13865  0A0C  0021               	movlb	1	; select bank1
 13866  0A0D  07A3               	addwf	USBDeviceInit@i^(0+128),f
 13867  0A0E  3002               	movlw	2
 13868  0A0F  0223               	subwf	USBDeviceInit@i^(0+128),w
 13869  0A10  1C03               	skipc
 13870  0A11  29F1               	goto	l4252
 13871  0A12                     l4258:	
 13872                           
 13873                           ;usb_device.c: 536: }
 13874                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13875  0A12  3028               	movlw	40
 13876  0A13  0020               	movlb	0	; select bank0
 13877  0A14  00DE               	movwf	??_USBDeviceInit
 13878  0A15  085E               	movf	??_USBDeviceInit,w
 13879  0A16  0021               	movlb	1	; select bank1
 13880  0A17  00E2               	movwf	_pBDTEntryIn^(0+128)
 13881                           
 13882                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
 13883  0A18  3016               	movlw	22
 13884  0A19  003D               	movlb	29	; select bank29
 13885  0A1A  0098               	movwf	24	;volatile
 13886                           
 13887                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 13888  0A1B  3040               	movlw	64
 13889  0A1C  0020               	movlb	0	; select bank0
 13890  0A1D  00DE               	movwf	??_USBDeviceInit
 13891  0A1E  3000               	movlw	0
 13892  0A1F  00DF               	movwf	??_USBDeviceInit+1
 13893  0A20  085E               	movf	??_USBDeviceInit,w
 13894  0A21  00A2               	movwf	34	;volatile
 13895  0A22  085F               	movf	??_USBDeviceInit+1,w
 13896  0A23  00A3               	movwf	35	;volatile
 13897                           
 13898                           ;usb_device.c: 544: BDT[0].CNT = 8;
 13899  0A24  3008               	movlw	8
 13900  0A25  00A1               	movwf	33	;volatile
 13901                           
 13902                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
 13903  0A26  3084               	movlw	132
 13904  0A27  00DE               	movwf	??_USBDeviceInit
 13905  0A28  085E               	movf	??_USBDeviceInit,w
 13906  0A29  00A0               	movwf	32	;volatile
 13907                           
 13908                           ;usb_device.c: 548: USBActiveConfiguration = 0;
 13909  0A2A  0021               	movlb	1	; select bank1
 13910  0A2B  01ED               	clrf	_USBActiveConfiguration^(0+128)
 13911                           
 13912                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
 13913  0A2C  01E5               	clrf	_USBDeviceState^(0+128)
 13914  0A2D  0008               	return
 13915  0A2E                     __end_of_USBDeviceInit:	
 13916                           
 13917                           	psect	intentry
 13918  0004                     __pintentry:	
 13919 ;; *************** function _ISRCode *****************
 13920 ;; Defined at:
 13921 ;;		line 70 in file "main.c"
 13922 ;; Parameters:    Size  Location     Type
 13923 ;;		None
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;		None
 13926 ;; Return value:  Size  Location     Type
 13927 ;;		None               void
 13928 ;; Registers used:
 13929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13930 ;; Tracked objects:
 13931 ;;		On entry : 0/0
 13932 ;;		On exit  : 0/0
 13933 ;;		Unchanged: 0/0
 13934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;Total ram usage:        1 bytes
 13940 ;; Hardware stack levels used:    1
 13941 ;; Hardware stack levels required when called:    3
 13942 ;; This function calls:
 13943 ;;		_ResultRx
 13944 ;; This function is called by:
 13945 ;;		Interrupt level 1
 13946 ;; This function uses a non-reentrant model
 13947 ;;
 13948                           
 13949  0004                     _ISRCode:	
 13950                           
 13951                           ;incstack = 0
 13952                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 13953  0004  3180               	pagesel	$
 13954  0005  0020               	movlb	0	; select bank0
 13955  0006  087F               	movf	127,w
 13956  0007  00DD               	movwf	??_ISRCode
 13957                           
 13958                           ;main.c: 72: if(IOCBF)
 13959  0008  0027               	movlb	7	; select bank7
 13960  0009  0816               	movf	22,w	;volatile
 13961  000A  1903               	btfsc	3,2
 13962  000B  280E               	goto	i1l855
 13963                           
 13964                           ;main.c: 73: ResultRx();
 13965  000C  318A  22E0         	fcall	_ResultRx
 13966  000E                     i1l855:	
 13967  000E  0020               	movlb	0	; select bank0
 13968  000F  085D               	movf	??_ISRCode,w
 13969  0010  00FF               	movwf	127
 13970  0011  0009               	retfie
 13971  0012                     __end_of_ISRCode:	
 13972                           
 13973                           	psect	text62
 13974  0AE0                     __ptext62:	
 13975 ;; *************** function _ResultRx *****************
 13976 ;; Defined at:
 13977 ;;		line 192 in file "klondike.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;		None
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;		None
 13982 ;; Return value:  Size  Location     Type
 13983 ;;		None               void
 13984 ;; Registers used:
 13985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;Total ram usage:        7 bytes
 13996 ;; Hardware stack levels used:    1
 13997 ;; Hardware stack levels required when called:    2
 13998 ;; This function calls:
 13999 ;;		i1_SendCmdReply
 14000 ;;		i1___bmul
 14001 ;; This function is called by:
 14002 ;;		_ISRCode
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           
 14007                           ;psect for function _ResultRx
 14008  0AE0                     _ResultRx:	
 14009                           
 14010                           ;klondike.c: 193: TimeOut = 0;
 14011                           
 14012                           ;incstack = 0
 14013                           ; Regs used in _ResultRx: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14014  0AE0  0023               	movlb	3	; select bank3
 14015  0AE1  01D7               	clrf	_TimeOut^(0+384)
 14016                           
 14017                           ;klondike.c: 194: ResultPos++;
 14018  0AE2  3001               	movlw	1
 14019  0AE3  0020               	movlb	0	; select bank0
 14020  0AE4  00D8               	movwf	??_ResultRx
 14021  0AE5  0858               	movf	??_ResultRx,w
 14022  0AE6  07E5               	addwf	_ResultPos,f
 14023                           
 14024                           ;klondike.c: 196: if(ResultPos == 2)
 14025  0AE7  0865               	movf	_ResultPos,w
 14026  0AE8  3A02               	xorlw	2
 14027  0AE9  1903               	btfsc	3,2
 14028                           
 14029                           ;klondike.c: 197: ResultPos = 0;
 14030  0AEA  01E5               	clrf	_ResultPos
 14031  0AEB                     i1l6154:	
 14032                           ;klondike.c: 199: while(ResultQC < 4) {
 14033                           
 14034  0AEB  3004               	movlw	4
 14035  0AEC  0022               	movlb	2	; select bank2
 14036  0AED  0263               	subwf	_ResultQC^(0+256),w
 14037  0AEE  1803               	btfsc	3,0
 14038  0AEF  2B35               	goto	i1l6156
 14039                           
 14040                           ;klondike.c: 200: if(RCIF) {
 14041  0AF0  0020               	movlb	0	; select bank0
 14042  0AF1  1E91               	btfss	17,5	;volatile
 14043  0AF2  2B17               	goto	i1l6146
 14044                           
 14045                           ;klondike.c: 201: ResultQue[ResultPos][2+ResultQC++] = RCREG;
 14046  0AF3  0023               	movlb	3	; select bank3
 14047  0AF4  0819               	movf	25,w	;volatile
 14048  0AF5  0020               	movlb	0	; select bank0
 14049  0AF6  00D8               	movwf	??_ResultRx
 14050  0AF7  3002               	movlw	2
 14051  0AF8  0022               	movlb	2	; select bank2
 14052  0AF9  0763               	addwf	_ResultQC^(0+256),w
 14053  0AFA  0020               	movlb	0	; select bank0
 14054  0AFB  00D9               	movwf	??_ResultRx+1
 14055  0AFC  30D9               	movlw	_ResultQue& (0+255)
 14056  0AFD  0759               	addwf	??_ResultRx+1,w
 14057  0AFE  00DA               	movwf	??_ResultRx+2
 14058  0AFF  3006               	movlw	6
 14059  0B00  00DB               	movwf	??_ResultRx+3
 14060  0B01  085B               	movf	??_ResultRx+3,w
 14061  0B02  00F0               	movwf	?i1___bmul
 14062  0B03  0865               	movf	_ResultPos,w
 14063  0B04  319B  2300  318A   	fcall	i1___bmul
 14064  0B07  0020               	movlb	0	; select bank0
 14065  0B08  075A               	addwf	??_ResultRx+2,w
 14066  0B09  00DC               	movwf	??_ResultRx+4
 14067  0B0A  085C               	movf	??_ResultRx+4,w
 14068  0B0B  0086               	movwf	6
 14069  0B0C  3001               	movlw	1	; select bank3/4
 14070  0B0D  0087               	movwf	7
 14071  0B0E  0858               	movf	??_ResultRx,w
 14072  0B0F  0081               	movwf	1
 14073  0B10  3001               	movlw	1
 14074  0B11  00D8               	movwf	??_ResultRx
 14075  0B12  0858               	movf	??_ResultRx,w
 14076  0B13  0022               	movlb	2	; select bank2
 14077  0B14  07E3               	addwf	_ResultQC^(0+256),f
 14078                           
 14079                           ;klondike.c: 202: TimeOut = 0;
 14080  0B15  0023               	movlb	3	; select bank3
 14081  0B16  01D7               	clrf	_TimeOut^(0+384)
 14082  0B17                     i1l6146:	
 14083                           
 14084                           ;klondike.c: 203: }
 14085                           ;klondike.c: 204: if(TimeOut++ > 32) {
 14086  0B17  3001               	movlw	1
 14087  0B18  0020               	movlb	0	; select bank0
 14088  0B19  00D8               	movwf	??_ResultRx
 14089  0B1A  0858               	movf	??_ResultRx,w
 14090  0B1B  0023               	movlb	3	; select bank3
 14091  0B1C  07D7               	addwf	_TimeOut^(0+384),f
 14092  0B1D  3022               	movlw	34
 14093  0B1E  0257               	subwf	_TimeOut^(0+384),w
 14094  0B1F  1C03               	skipc
 14095  0B20  2B28               	goto	i1l744
 14096                           
 14097                           ;klondike.c: 205: Status.Noise++;
 14098  0B21  3001               	movlw	1
 14099  0B22  0020               	movlb	0	; select bank0
 14100  0B23  00D8               	movwf	??_ResultRx
 14101  0B24  0858               	movf	??_ResultRx,w
 14102  0B25  0023               	movlb	3	; select bank3
 14103  0B26  07B8               	addwf	(_Status^(0+384)+12),f	;volatile
 14104                           
 14105                           ;klondike.c: 206: goto outrx;
 14106  0B27  2B8B               	goto	i1l6166
 14107  0B28                     i1l744:	
 14108                           
 14109                           ;klondike.c: 207: }
 14110                           ;klondike.c: 208: if(RCSTAbits.OERR) {
 14111  0B28  1C9D               	btfss	29,1	;volatile
 14112  0B29  2AEB               	goto	i1l6154
 14113                           
 14114                           ;klondike.c: 209: if(Status.State == 'W') {
 14115  0B2A  082C               	movf	_Status^(0+384),w	;volatile
 14116  0B2B  3A57               	xorlw	87
 14117  0B2C  1D03               	skipz
 14118  0B2D  2B8B               	goto	i1l6166
 14119                           
 14120                           ;klondike.c: 210: Status.ErrorCount++;
 14121  0B2E  3001               	movlw	1
 14122  0B2F  0020               	movlb	0	; select bank0
 14123  0B30  00D8               	movwf	??_ResultRx
 14124  0B31  0858               	movf	??_ResultRx,w
 14125  0B32  0023               	movlb	3	; select bank3
 14126  0B33  07B3               	addwf	(_Status^(0+384)+7),f	;volatile
 14127                           
 14128                           ;klondike.c: 211: }
 14129                           ;klondike.c: 212: goto outrx;
 14130  0B34  2B8B               	goto	i1l6166
 14131  0B35                     i1l6156:	
 14132                           
 14133                           ;klondike.c: 213: }
 14134                           ;klondike.c: 214: }
 14135                           ;klondike.c: 216: if(Status.State == 'W') {
 14136  0B35  0023               	movlb	3	; select bank3
 14137  0B36  082C               	movf	_Status^(0+384),w	;volatile
 14138  0B37  3A57               	xorlw	87
 14139  0B38  1D03               	skipz
 14140  0B39  2B8B               	goto	i1l6166
 14141                           
 14142                           ;klondike.c: 217: ResultQue[ResultPos][0] = '=';
 14143  0B3A  303D               	movlw	61
 14144  0B3B  0020               	movlb	0	; select bank0
 14145  0B3C  00D8               	movwf	??_ResultRx
 14146  0B3D  3006               	movlw	6
 14147  0B3E  00D9               	movwf	??_ResultRx+1
 14148  0B3F  0859               	movf	??_ResultRx+1,w
 14149  0B40  00F0               	movwf	?i1___bmul
 14150  0B41  0865               	movf	_ResultPos,w
 14151  0B42  319B  2300  318A   	fcall	i1___bmul
 14152  0B45  3ED9               	addlw	_ResultQue& (0+255)
 14153  0B46  0086               	movwf	6
 14154  0B47  3001               	movlw	1	; select bank3/4
 14155  0B48  0087               	movwf	7
 14156  0B49  0020               	movlb	0	; select bank0
 14157  0B4A  0858               	movf	??_ResultRx,w
 14158  0B4B  0081               	movwf	1
 14159                           
 14160                           ;klondike.c: 218: ResultQue[ResultPos][1] = Status.WorkID;
 14161  0B4C  0023               	movlb	3	; select bank3
 14162  0B4D  0830               	movf	(_Status^(0+384)+4),w	;volatile
 14163  0B4E  0020               	movlb	0	; select bank0
 14164  0B4F  00D8               	movwf	??_ResultRx
 14165  0B50  3006               	movlw	6
 14166  0B51  00D9               	movwf	??_ResultRx+1
 14167  0B52  0859               	movf	??_ResultRx+1,w
 14168  0B53  00F0               	movwf	?i1___bmul
 14169  0B54  0865               	movf	_ResultPos,w
 14170  0B55  319B  2300  318A   	fcall	i1___bmul
 14171  0B58  0020               	movlb	0	; select bank0
 14172  0B59  00DA               	movwf	??_ResultRx+2
 14173  0B5A  0A5A               	incf	??_ResultRx+2,w
 14174  0B5B  3ED9               	addlw	_ResultQue& (0+255)
 14175  0B5C  0086               	movwf	6
 14176  0B5D  3001               	movlw	1	; select bank3/4
 14177  0B5E  0087               	movwf	7
 14178  0B5F  0858               	movf	??_ResultRx,w
 14179  0B60  0081               	movwf	1
 14180                           
 14181                           ;klondike.c: 219: SendCmdReply(&ResultQue[ResultPos], &ResultQue[ResultPos]+1, sizeof(Re
      +                          sultQue[ResultPos])-1);
 14182  0B61  3006               	movlw	6
 14183  0B62  00D8               	movwf	??_ResultRx
 14184  0B63  0858               	movf	??_ResultRx,w
 14185  0B64  00F0               	movwf	?i1___bmul
 14186  0B65  0865               	movf	_ResultPos,w
 14187  0B66  319B  2300  318A   	fcall	i1___bmul
 14188  0B69  3ED9               	addlw	_ResultQue& (0+255)
 14189  0B6A  0020               	movlb	0	; select bank0
 14190  0B6B  00D9               	movwf	??_ResultRx+1
 14191  0B6C  0859               	movf	??_ResultRx+1,w
 14192  0B6D  00FC               	movwf	_ResultRx$3165
 14193                           
 14194                           ;klondike.c: 219: SendCmdReply(&ResultQue[ResultPos], &ResultQue[ResultPos]+1, sizeof(Re
      +                          sultQue[ResultPos])-1);
 14195  0B6E  3006               	movlw	6
 14196  0B6F  00D8               	movwf	??_ResultRx
 14197  0B70  0858               	movf	??_ResultRx,w
 14198  0B71  00F0               	movwf	?i1___bmul
 14199  0B72  0865               	movf	_ResultPos,w
 14200  0B73  319B  2300  318A   	fcall	i1___bmul
 14201  0B76  0020               	movlb	0	; select bank0
 14202  0B77  00D9               	movwf	??_ResultRx+1
 14203  0B78  0A59               	incf	??_ResultRx+1,w
 14204  0B79  3ED9               	addlw	_ResultQue& (0+255)
 14205  0B7A  00DA               	movwf	??_ResultRx+2
 14206  0B7B  085A               	movf	??_ResultRx+2,w
 14207  0B7C  00FD               	movwf	_ResultRx$3166
 14208                           
 14209                           ;klondike.c: 219: SendCmdReply(&ResultQue[ResultPos], &ResultQue[ResultPos]+1, sizeof(Re
      +                          sultQue[ResultPos])-1);
 14210  0B7D  087C               	movf	_ResultRx$3165,w
 14211  0B7E  00F6               	movwf	?i1_SendCmdReply
 14212  0B7F  3001               	movlw	1
 14213  0B80  00F7               	movwf	?i1_SendCmdReply+1
 14214  0B81  087D               	movf	_ResultRx$3166,w
 14215  0B82  00F8               	movwf	?i1_SendCmdReply+2
 14216  0B83  3001               	movlw	1
 14217  0B84  00F9               	movwf	?i1_SendCmdReply+3
 14218  0B85  3005               	movlw	5
 14219  0B86  00D8               	movwf	??_ResultRx
 14220  0B87  0858               	movf	??_ResultRx,w
 14221  0B88  00FA               	movwf	?i1_SendCmdReply+4
 14222  0B89  3196  2641         	fcall	i1_SendCmdReply
 14223  0B8B                     i1l6166:	
 14224                           ;klondike.c: 220: }
 14225                           ;klondike.c: 222: outrx:
 14226                           
 14227                           
 14228                           ;klondike.c: 223: { RCSTAbits.SPEN = 0; RCSTAbits.SPEN = 1; };
 14229  0B8B  0023               	movlb	3	; select bank3
 14230  0B8C  139D               	bcf	29,7	;volatile
 14231  0B8D  179D               	bsf	29,7	;volatile
 14232                           
 14233                           ;klondike.c: 224: ResultQC = 0;
 14234  0B8E  0022               	movlb	2	; select bank2
 14235  0B8F  01E3               	clrf	_ResultQC^(0+256)
 14236                           
 14237                           ;klondike.c: 225: IOCBF = 0;
 14238  0B90  0027               	movlb	7	; select bank7
 14239  0B91  0196               	clrf	22	;volatile
 14240  0B92  0008               	return
 14241  0B93                     __end_of_ResultRx:	
 14242                           
 14243                           	psect	text63
 14244  1641                     __ptext63:	
 14245 ;; *************** function i1_SendCmdReply *****************
 14246 ;; Defined at:
 14247 ;;		line 208 in file "main.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;  SendCmdReply    2    6[COMMON] PTR unsigned char 
 14250 ;;		 -> ResultQue(12), OUTPacket(64), 
 14251 ;;  SendCmdReply    2    8[COMMON] PTR unsigned char 
 14252 ;;		 -> ResultQue(12), Cfg(6), ID(12), Status(13), 
 14253 ;;  SendCmdReply    1   10[COMMON] unsigned char 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  SendCmdReply    1   11[COMMON] unsigned char 
 14256 ;; Return value:  Size  Location     Type
 14257 ;;		None               void
 14258 ;; Registers used:
 14259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14265 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14267 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;Total ram usage:       14 bytes
 14270 ;; Hardware stack levels used:    1
 14271 ;; Hardware stack levels required when called:    1
 14272 ;; This function calls:
 14273 ;;		i1___wmul
 14274 ;;		i1___bmul
 14275 ;; This function is called by:
 14276 ;;		_ResultRx
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           
 14281                           ;psect for function i1_SendCmdReply
 14282  1641                     i1_SendCmdReply:	
 14283                           
 14284                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
 14285                           
 14286                           ;incstack = 0
 14287                           ; Regs used in i1_SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14288  1641  087A               	movf	i1SendCmdReply@count,w
 14289  1642  0020               	movlb	0	; select bank0
 14290  1643  00D0               	movwf	??i1_SendCmdReply
 14291  1644  01D1               	clrf	??i1_SendCmdReply+1
 14292  1645  0021               	movlb	1	; select bank1
 14293  1646  086F               	movf	_WQI^(0+128),w
 14294  1647  0020               	movlb	0	; select bank0
 14295  1648  00D2               	movwf	??i1_SendCmdReply+2
 14296  1649  01D3               	clrf	??i1_SendCmdReply+3
 14297  164A  0852               	movf	??i1_SendCmdReply+2,w
 14298  164B  00F0               	movwf	?i1___wmul
 14299  164C  0853               	movf	??i1_SendCmdReply+3,w
 14300  164D  00F1               	movwf	?i1___wmul+1
 14301  164E  300F               	movlw	15
 14302  164F  00F2               	movwf	?i1___wmul+2
 14303  1650  3000               	movlw	0
 14304  1651  00F3               	movwf	?i1___wmul+3
 14305  1652  319B  23F2  3196   	fcall	i1___wmul
 14306  1655  0020               	movlb	0	; select bank0
 14307  1656  0850               	movf	??i1_SendCmdReply,w
 14308  1657  0770               	addwf	?i1___wmul,w
 14309  1658  00D4               	movwf	??i1_SendCmdReply+4
 14310  1659  0851               	movf	??i1_SendCmdReply+1,w
 14311  165A  3D71               	addwfc	?i1___wmul+1,w
 14312  165B  00D5               	movwf	??i1_SendCmdReply+5
 14313  165C  0854               	movf	??i1_SendCmdReply+4,w
 14314  165D  3E02               	addlw	2
 14315  165E  00D6               	movwf	??i1_SendCmdReply+6
 14316  165F  3000               	movlw	0
 14317  1660  3D55               	addwfc	??i1_SendCmdReply+5,w
 14318  1661  00D7               	movwf	??i1_SendCmdReply+7
 14319  1662  0857               	movf	??i1_SendCmdReply+7,w
 14320  1663  3A80               	xorlw	128
 14321  1664  00FF               	movwf	127
 14322  1665  3080               	movlw	128
 14323  1666  027F               	subwf	127,w
 14324  1667  1D03               	skipz
 14325  1668  2E6B               	goto	u661_25
 14326  1669  3040               	movlw	64
 14327  166A  0256               	subwf	??i1_SendCmdReply+6,w
 14328  166B                     u661_25:	
 14329  166B  1803               	skipnc
 14330  166C  0008               	return
 14331                           
 14332                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
 14333  166D  0876               	movf	i1SendCmdReply@cmd,w
 14334  166E  0086               	movwf	6
 14335  166F  0877               	movf	i1SendCmdReply@cmd+1,w
 14336  1670  0087               	movwf	7
 14337  1671  0801               	movf	1,w
 14338  1672  0020               	movlb	0	; select bank0
 14339  1673  00D0               	movwf	??i1_SendCmdReply
 14340  1674  300F               	movlw	15
 14341  1675  00D1               	movwf	??i1_SendCmdReply+1
 14342  1676  0851               	movf	??i1_SendCmdReply+1,w
 14343  1677  00F0               	movwf	?i1___bmul
 14344  1678  0021               	movlb	1	; select bank1
 14345  1679  086F               	movf	_WQI^(0+128),w
 14346  167A  319B  2300  3196   	fcall	i1___bmul
 14347  167D  3E20               	addlw	32
 14348  167E  0086               	movwf	6
 14349  167F  3002               	movlw	2	; select bank4/5
 14350  1680  0087               	movwf	7
 14351  1681  0020               	movlb	0	; select bank0
 14352  1682  0850               	movf	??i1_SendCmdReply,w
 14353  1683  0081               	movwf	1
 14354                           
 14355                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
 14356  1684  0021               	movlb	1	; select bank1
 14357  1685  0864               	movf	_SlaveAddress^(0+128),w
 14358  1686  0020               	movlb	0	; select bank0
 14359  1687  00D0               	movwf	??i1_SendCmdReply
 14360  1688  300F               	movlw	15
 14361  1689  00D1               	movwf	??i1_SendCmdReply+1
 14362  168A  0851               	movf	??i1_SendCmdReply+1,w
 14363  168B  00F0               	movwf	?i1___bmul
 14364  168C  0021               	movlb	1	; select bank1
 14365  168D  086F               	movf	_WQI^(0+128),w
 14366  168E  319B  2300  3196   	fcall	i1___bmul
 14367  1691  0020               	movlb	0	; select bank0
 14368  1692  00D2               	movwf	??i1_SendCmdReply+2
 14369  1693  0A52               	incf	??i1_SendCmdReply+2,w
 14370  1694  3E20               	addlw	32
 14371  1695  0086               	movwf	6
 14372  1696  3002               	movlw	2	; select bank4/5
 14373  1697  0087               	movwf	7
 14374  1698  0850               	movf	??i1_SendCmdReply,w
 14375  1699  0081               	movwf	1
 14376                           
 14377                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
 14378  169A  01FB               	clrf	i1SendCmdReply@n
 14379  169B                     i1l6128:	
 14380  169B  087A               	movf	i1SendCmdReply@count,w
 14381  169C  027B               	subwf	i1SendCmdReply@n,w
 14382  169D  1803               	btfsc	3,0
 14383  169E  2ECB               	goto	i1l6130
 14384                           
 14385                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
 14386  169F  0879               	movf	i1SendCmdReply@data+1,w
 14387  16A0  00D1               	movwf	??i1_SendCmdReply+1
 14388  16A1  0878               	movf	i1SendCmdReply@data,w
 14389  16A2  00D0               	movwf	??i1_SendCmdReply
 14390  16A3  087B               	movf	i1SendCmdReply@n,w
 14391  16A4  0750               	addwf	??i1_SendCmdReply,w
 14392  16A5  0084               	movwf	4
 14393  16A6  0851               	movf	??i1_SendCmdReply+1,w
 14394  16A7  1803               	skipnc
 14395  16A8  0A51               	incf	??i1_SendCmdReply+1,w
 14396  16A9  0085               	movwf	5
 14397  16AA  0800               	movf	0,w	;code access
 14398  16AB  00D2               	movwf	??i1_SendCmdReply+2
 14399  16AC  0021               	movlb	1	; select bank1
 14400  16AD  086F               	movf	_WQI^(0+128),w
 14401  16AE  0020               	movlb	0	; select bank0
 14402  16AF  00D3               	movwf	??i1_SendCmdReply+3
 14403  16B0  01D4               	clrf	??i1_SendCmdReply+4
 14404  16B1  0853               	movf	??i1_SendCmdReply+3,w
 14405  16B2  00F0               	movwf	?i1___wmul
 14406  16B3  0854               	movf	??i1_SendCmdReply+4,w
 14407  16B4  00F1               	movwf	?i1___wmul+1
 14408  16B5  300F               	movlw	15
 14409  16B6  00F2               	movwf	?i1___wmul+2
 14410  16B7  3000               	movlw	0
 14411  16B8  00F3               	movwf	?i1___wmul+3
 14412  16B9  319B  23F2  3196   	fcall	i1___wmul
 14413  16BC  0870               	movf	?i1___wmul,w
 14414  16BD  077B               	addwf	i1SendCmdReply@n,w
 14415  16BE  3E02               	addlw	2
 14416  16BF  3E20               	addlw	32
 14417  16C0  0086               	movwf	6
 14418  16C1  3002               	movlw	2	; select bank4/5
 14419  16C2  0087               	movwf	7
 14420  16C3  0020               	movlb	0	; select bank0
 14421  16C4  0852               	movf	??i1_SendCmdReply+2,w
 14422  16C5  0081               	movwf	1
 14423  16C6  3001               	movlw	1
 14424  16C7  00D0               	movwf	??i1_SendCmdReply
 14425  16C8  0850               	movf	??i1_SendCmdReply,w
 14426  16C9  07FB               	addwf	i1SendCmdReply@n,f
 14427  16CA  2E9B               	goto	i1l6128
 14428  16CB                     i1l6130:	
 14429                           
 14430                           ;main.c: 214: WQI = (WQI+1) & 3;
 14431  16CB  0021               	movlb	1	; select bank1
 14432  16CC  0A6F               	incf	_WQI^(0+128),w
 14433  16CD  3903               	andlw	3
 14434  16CE  0020               	movlb	0	; select bank0
 14435  16CF  00D0               	movwf	??i1_SendCmdReply
 14436  16D0  0850               	movf	??i1_SendCmdReply,w
 14437  16D1  0021               	movlb	1	; select bank1
 14438  16D2  00EF               	movwf	_WQI^(0+128)
 14439  16D3  0008               	return
 14440  16D4                     __end_ofi1_SendCmdReply:	
 14441                           
 14442                           	psect	text64
 14443  1B00                     __ptext64:	
 14444 ;; *************** function i1___bmul *****************
 14445 ;; Defined at:
 14446 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
 14447 ;; Parameters:    Size  Location     Type
 14448 ;;  __bmul          1    wreg     unsigned char 
 14449 ;;  __bmul          1    0[COMMON] unsigned char 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;  __bmul          1    2[COMMON] unsigned char 
 14452 ;;  __bmul          1    3[COMMON] unsigned char 
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      unsigned char 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2, status,0
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14462 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;Total ram usage:        4 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; This function calls:
 14469 ;;		Nothing
 14470 ;; This function is called by:
 14471 ;;		_ResultRx
 14472 ;;		i1_SendCmdReply
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476                           
 14477                           ;psect for function i1___bmul
 14478  1B00                     i1___bmul:	
 14479                           
 14480                           ;incstack = 0
 14481                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 14482                           ;i1___bmul@multiplier stored from wreg
 14483  1B00  00F2               	movwf	i1___bmul@multiplier
 14484  1B01  01F3               	clrf	i1___bmul@product
 14485  1B02                     i1l6104:	
 14486  1B02  1C72               	btfss	i1___bmul@multiplier,0
 14487  1B03  2B08               	goto	i1l6108
 14488  1B04  0870               	movf	i1___bmul@multiplicand,w
 14489  1B05  00F1               	movwf	??i1___bmul
 14490  1B06  0871               	movf	??i1___bmul,w
 14491  1B07  07F3               	addwf	i1___bmul@product,f
 14492  1B08                     i1l6108:	
 14493  1B08  1003               	clrc
 14494  1B09  0DF0               	rlf	i1___bmul@multiplicand,f
 14495  1B0A  1003               	clrc
 14496  1B0B  0CF2               	rrf	i1___bmul@multiplier,f
 14497  1B0C  08F2               	movf	i1___bmul@multiplier,f
 14498  1B0D  1D03               	skipz
 14499  1B0E  2B02               	goto	i1l6104
 14500  1B0F  0873               	movf	i1___bmul@product,w
 14501  1B10  0008               	return
 14502  1B11                     __end_ofi1___bmul:	
 14503                           
 14504                           	psect	text65
 14505  1BF2                     __ptext65:	
 14506 ;; *************** function i1___wmul *****************
 14507 ;; Defined at:
 14508 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;  __wmul          2    0[COMMON] unsigned int 
 14511 ;;  __wmul          2    2[COMMON] unsigned int 
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;  __wmul          2    4[COMMON] unsigned int 
 14514 ;; Return value:  Size  Location     Type
 14515 ;;                  2    0[COMMON] unsigned int 
 14516 ;; Registers used:
 14517 ;;		wreg, status,2, status,0
 14518 ;; Tracked objects:
 14519 ;;		On entry : 0/0
 14520 ;;		On exit  : 0/0
 14521 ;;		Unchanged: 0/0
 14522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14527 ;;Total ram usage:        6 bytes
 14528 ;; Hardware stack levels used:    1
 14529 ;; This function calls:
 14530 ;;		Nothing
 14531 ;; This function is called by:
 14532 ;;		i1_SendCmdReply
 14533 ;; This function uses a non-reentrant model
 14534 ;;
 14535                           
 14536                           
 14537                           ;psect for function i1___wmul
 14538  1BF2                     i1___wmul:	
 14539                           
 14540                           ;incstack = 0
 14541                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 14542  1BF2  01F4               	clrf	i1___wmul@product
 14543  1BF3  01F5               	clrf	i1___wmul@product+1
 14544  1BF4                     i1l6092:	
 14545  1BF4  1C70               	btfss	i1___wmul@multiplier,0
 14546  1BF5  2BFA               	goto	i1l1298
 14547  1BF6  0872               	movf	i1___wmul@multiplicand,w
 14548  1BF7  07F4               	addwf	i1___wmul@product,f
 14549  1BF8  0873               	movf	i1___wmul@multiplicand+1,w
 14550  1BF9  3DF5               	addwfc	i1___wmul@product+1,f
 14551  1BFA                     i1l1298:	
 14552  1BFA  3001               	movlw	1
 14553  1BFB                     u656_25:	
 14554  1BFB  35F2               	lslf	i1___wmul@multiplicand,f
 14555  1BFC  0DF3               	rlf	i1___wmul@multiplicand+1,f
 14556  1BFD  0B89               	decfsz	9,f
 14557  1BFE  2BFB               	goto	u656_25
 14558  1BFF  3001               	movlw	1
 14559  1C00                     u657_25:	
 14560  1C00  36F1               	lsrf	i1___wmul@multiplier+1,f
 14561  1C01  0CF0               	rrf	i1___wmul@multiplier,f
 14562  1C02  0B89               	decfsz	9,f
 14563  1C03  2C00               	goto	u657_25
 14564  1C04  0871               	movf	i1___wmul@multiplier+1,w
 14565  1C05  0470               	iorwf	i1___wmul@multiplier,w
 14566  1C06  1D03               	skipz
 14567  1C07  2BF4               	goto	i1l6092
 14568  1C08  0875               	movf	i1___wmul@product+1,w
 14569  1C09  01F1               	clrf	?i1___wmul+1
 14570  1C0A  07F1               	addwf	?i1___wmul+1,f
 14571  1C0B  0874               	movf	i1___wmul@product,w
 14572  1C0C  01F0               	clrf	?i1___wmul
 14573  1C0D  07F0               	addwf	?i1___wmul,f
 14574  1C0E  0008               	return
 14575  1C0F                     __end_ofi1___wmul:	
 14576  007E                     btemp	set	126	;btemp
 14577  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    174
    Data        72
    BSS         153
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     18      31
    BANK1            80     66      80
    BANK2            80     57      80
    BANK3            80      0      74
    BANK4            16      0      16
    BANK5            16      0       0
    BANK6            80      0      56
    BANK7            80      0      32
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           28      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    ResultRx$3166	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$3165	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$3121	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$3120	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$2877	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$2876	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ?___ftpack	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___awmod	int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_rotate	unsigned long  size(1) Largest target is 0

    ?_memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), BDT(BANK0[32]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    SendCmdReply@data	PTR unsigned char  size(2) Largest target is 13
		 -> ResultQue(BANK3[12]), Cfg(BANK3[6]), ID(CODE[12]), Status(BANK3[13]), 

    SendCmdReply@cmd	PTR unsigned char  size(2) Largest target is 64
		 -> ResultQue(BANK3[12]), OUTPacket(BANK5[64]), 

    USBGenericInHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBGenericOutHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    ProcessCmd@cmd	PTR unsigned char  size(1) Largest target is 64
		 -> OUTPacket(BANK5[64]), 

    I2CInBuf	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    AsicPreCalc@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    SendAsicData@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 32
		 -> configDescriptor1(CODE[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> INPacket(BANK4[64]), OUTPacket(BANK5[64]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    S118$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply
    i1_SendCmdReply->i1___wmul

Critical Paths under _main in BANK0

    _ProcessIO->___bmul
    _ProcessCmd->___lwdiv
    _ProcessCmd->___wmul
    _SendCmdReply->___bmul
    _SendCmdReply->___wmul
    _AsicPushWork->___wmul
    _AsicPreCalc->___wmul
    _SendAsicData->___wmul
    _DetectAsics->___awdiv
    _WorkTick->___awmod
    _UpdateFanLevel->___awtoft
    ___fttol->___awtoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _USBCtrlEPService->_USBCtrlTrfInHandler
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBStdSetCfgHandler->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCBInitEP->_USBEnableEndpoint
    _USBTransferOnePacket->___bmul
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _ISRCode in BANK0

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply

Critical Paths under _main in BANK1

    _main->_WorkTick
    _ProcessIO->_ProcessCmd
    _ProcessCmd->_AsicPushWork
    _SendCmdReply->___wmul
    _AsicPushWork->_AsicPreCalc
    _AsicPreCalc->_rotate
    _SendAsicData->___wmul
    _UserInit->_DetectAsics
    _DetectAsics->___awdiv
    _WorkTick->_UpdateFanLevel
    _UpdateFanLevel->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___awtoft
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCBInitEP
    _USBCBInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    _AsicPushWork->_AsicPreCalc

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15957
                     _USBDeviceTasks
                       _AsicPushWork
                           _WorkTick
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            8     8      0    3304
                                             37 BANK1      8     8      0
               _USBTransferOnePacket
                         _ProcessCmd
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _ProcessCmd                                           7     7      0    2854
                                             30 BANK1      7     7      0
                       _AsicPushWork
                       _SendCmdReply
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     162
                                             14 BANK0      4     0      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (3) _SendCmdReply                                        14     9      5     340
                                              2 BANK1     14     9      5
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1      92
                                             14 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _AsicPushWork                                         5     5      0    1972
                                             25 BANK1      5     5      0
                       _SendAsicData
                        _AsicPreCalc
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4      92
                                             14 BANK0      4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AsicPreCalc                                         69    67      2    1836
                                             13 BANK1     12    10      2
                                              0 BANK2     57    57      0
                             _rotate
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _rotate                                              13     8      5      88
                                              0 BANK1     13     8      5
 ---------------------------------------------------------------------------------
 (4) _SendAsicData                                         6     4      2      44
                                              2 BANK1      6     4      2
                             _Send32
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Send32                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0     663
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0     391
                        _DetectAsics
                            _InitFAN
                     _InitTempSensor
                       _InitWorkTick
                       _InitResultRx
 ---------------------------------------------------------------------------------
 (3) _InitResultRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitWorkTick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTempSensor                                       1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitFAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DetectAsics                                         10    10      0     391
                                              5 BANK1     10    10      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     300
                                             14 BANK0      4     0      4
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _WorkTick                                             3     3      0    3685
                                             63 BANK1      3     3      0
                     _UpdateFanLevel
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     433
                                             14 BANK0      4     0      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _UpdateFanLevel                                       7     7      0    3252
                                             56 BANK1      7     7      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     371
                                             42 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      65
                                             26 BANK1      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6     800
                                             10 BANK1     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    1537
                                             29 BANK1     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3     445
                                             17 BANK0      1     1      0
                                              5 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5     312
                                             14 BANK0      3     3      0
                                              0 BANK1      5     0      5
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    6333
                                             29 BANK1      3     3      0
                      _USBDeviceInit
                 _USBWakeFromSuspend
                         _USBSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    3888
                                             25 BANK1      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                             17 BANK0      1     1      0
                                              0 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              2 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                             16 BANK0      2     2      0
                                              0 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    3591
                                             24 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    2790
                                             23 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1070
                                             17 BANK1      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0     965
                                             17 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4      96
                                             14 BANK0      4     0      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              2 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              0 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0      92
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0     709
                                             17 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0     709
                                             17 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5     709
                                             12 BANK1      5     0      5
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
                  _USBCBErrorHandler
                 _USBCBCheckOtherReq
              _USBCBStdSetDscHandler
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          3     3      0     687
                                              9 BANK1      3     3      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     4      3     310
                                              0 BANK1      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     377
                                             17 BANK0      1     0      1
                                              4 BANK1      5     5      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     222
                                             14 BANK0      3     2      1
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
              _USBCheckVendorRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckVendorRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     272
                                             14 BANK0      2     2      0
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISRCode                                             1     1      0    1273
                                             13 BANK0      1     1      0
                           _ResultRx
 ---------------------------------------------------------------------------------
 (11) _ResultRx                                            7     7      0    1273
                                             12 COMMON     2     2      0
                                              8 BANK0      5     5      0
                     i1_SendCmdReply
                           i1___bmul
 ---------------------------------------------------------------------------------
 (12) i1_SendCmdReply                                     14     9      5    1027
                                              6 COMMON     6     1      5
                                              0 BANK0      8     8      0
                           i1___wmul
                           i1___bmul
 ---------------------------------------------------------------------------------
 (12) i1___bmul                                            4     3      1     212
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     300
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceTasks
     _USBDeviceInit
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
       _USBCBErrorHandler
       _USBCBCheckOtherReq
         _USBCheckVendorRequest
       _USBCBStdSetDscHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
           ___bmul (ARG)
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
           _USBCBErrorHandler
           _USBCBCheckOtherReq
             _USBCheckVendorRequest
           _USBCBStdSetDscHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
               ___bmul (ARG)
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
             _USBCBErrorHandler
             _USBCBCheckOtherReq
               _USBCheckVendorRequest
             _USBCBStdSetDscHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
                 ___bmul (ARG)
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _AsicPushWork
     _SendAsicData
       _Send32
       ___wmul (ARG)
     _AsicPreCalc
       _rotate
       ___wmul (ARG)
     ___wmul
   _WorkTick
     _UpdateFanLevel
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
     ___awmod
   _InitializeSystem
     _USBDeviceInit
     _UserInit
       _DetectAsics
         ___awdiv
       _InitFAN
       _InitTempSensor
       _InitWorkTick
       _InitResultRx
   _ProcessIO
     _USBTransferOnePacket
       ___bmul (ARG)
     _ProcessCmd
       _AsicPushWork
         _SendAsicData
           _Send32
           ___wmul (ARG)
         _AsicPreCalc
           _rotate
           ___wmul (ARG)
         ___wmul
       _SendCmdReply
         ___bmul
         ___wmul
       ___lwdiv
       ___wmul
     ___bmul

 _ISRCode (ROOT)
   _ResultRx
     i1_SendCmdReply
       i1___wmul
       i1___bmul
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0      11       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     12      1F       5       96.9%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     42      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     39      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4A      11       92.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0      10      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      38      17       70.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      20      19       40.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              1C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     190      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Oct 25 16:47:55 2013

                              _USB_SD_Ptr 0801                                         pc 0002  
                          ___bmul@product 0060                               _SSPSTATbits 0214  
                                      _ID 089F                    ?_USBCheckVendorRequest 0070  
                            ___awdiv@sign 00A2                             _USBDeviceInit 097E  
                     ___wmul@multiplicand 0060                          i1___wmul@product 0074  
                            ___ftadd@exp1 00C9                              ___ftadd@exp2 00C8  
                     __end_of_AsicPreCalc 04E1                                       LATC 010E  
                              _BankRanges 03A0      USER_USB_CALLBACK_EVENT_HANDLER@event 00AC  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00AE                              ___ftadd@sign 00C7  
                     __end_of_DetectAsics 0CFF                                       l140 0D0C  
                                     l142 0D10                                       l128 09C7  
                                     l208 156D                                       l330 1FFF  
                                     l146 0D36                                       l315 10B2  
                                     l155 0D97                                       l332 1FAF  
                                     l156 0DED                                       l341 1FD8  
             __end_of_USBStdGetDscHandler 13A2                                       l318 10EB  
                                     l271 1EAE                                       l353 0F49  
                                     l274 1EED                                       l354 0F4A  
                                     l275 1EBA                                       l276 1EBD  
                                     l366 0FBC                                       l358 0F7D  
                                     l703 0566                                       l704 0578  
                                     l705 0583                                       l754 0770  
                                     _BDT 0020                                       l697 064E  
                                     l858 1B78                                       l939 1D85  
                                     _GIE 005F                                       _PR2 001B  
                                     _UIE 0E92                                       _UIR 0E90  
                                     _Cfg 01C1                                       _WQI 00EF  
                                     _WQX 006D                                       _buf 0260  
                              _USBSuspend 1BA4                                       _ptr 006A  
                            ___awmod@sign 00A2                      USBStdSetCfgHandler@i 00B5  
                    USBStdSetCfgHandler@p 00B2                                       wreg 0009  
                          _USBDeviceTasks 0CFF                            _USBDeviceState 00E5  
                  ??_USBCBWakeFromSuspend 005E                                      S6638 1800  
                   ??_USBCtrlTrfRxService 0060                  USBEnableEndpoint@options 0061  
                                    INDF1 0001                              __CFG_LVP$OFF 0000  
                                    FSR1H 0007                                      FSR1L 0006  
                                    l1115 0E8F                                      l1092 11AD  
                                    l1086 1196                                      l4210 099F  
                                    l4202 098D                                      l1298 1CA5  
                                    l5020 0FE2                USBConfigureEndpoint@handle 0060  
                                    l5022 0FEA                                      l5006 0FAB  
                                    l4240 09DC                                      l5016 0FC3  
                                    l5008 0FB0                                      l4304 0D30  
                                    l4218 09AC                                      l4410 1D4B  
                                    l4330 0D63                                      l4252 09F1  
                                    l4420 1D5A                                      l4412 1D4E  
                                    l4500 07DE                                      l4340 0D75  
                                    l4324 0D52                                      l4316 0D46  
                                    l4238 09CC                                      l4414 1D51  
                                    l4416 1D54                                      l4408 1D48  
                                    l4424 1D5D                                      l4504 07ED  
                                    l4336 0D6F                                      l4258 0A12  
                                    l4514 1CF1                                      l4418 1D57  
                                    l4506 07F0                                      l4354 0D8F  
                                    l4346 0D7C                                      l5090 0063  
                                    l5402 0541                                      l4532 1E44  
                                    l4604 15CC                                      l4700 0A63  
                                    l4380 0DD1                                      l4364 0D9D  
                                    l4284 0D13                                      l6300 0753  
                                    l5084 0028                                      l4518 1CFA  
                                    l4550 1E73                                      l4542 1E65  
                                    l4446 11F2                                      l4710 0AB6  
                                    l4702 0A81                                      l4382 0DE1  
                                    l4374 0DB8                                      l5510 0CAC  
                                    l6070 1DF8                                      l6062 1DD4  
                                    l4560 1E9E                                      l4472 1C68  
                                    l4608 15D4                                      l4800 138F  
                                    l4296 0D23                                      l5512 0CF7  
                                    l6080 1C9B                                      l6064 1DE3  
                                    l5432 0618                                      l5424 05E6  
                                    l5440 0635                                      l4474 1C6A  
                                    l4618 15FD                                      l4626 161A  
                                    l4730 13AC                                      l4802 1392  
                                    l6330 117B                                      l6074 1E03  
                                    l5426 05F7                                      l5418 05A3  
                                    l6314 1B80                                      l4628 161F  
                                    l4636 163C                                      l4660 1579  
                                    l4652 1544                                      l4716 0AD8  
                                    l4708 0AAD                                      l6340 11A3  
                                    l6332 1180                                      l6324 1168  
                                    l6412 0E1F                                      l6500 0C03  
                                    l5700 12F7                                      l4590 1F8F  
                                    l4806 1395                                      l4494 07B9  
                                    l6430 0E48                                      l6270 1059  
                                    l5470 17FA                                      l5702 12FA  
                                    l6318 1B88                                      l4648 1540  
                                    l4904 10F4                                      l6328 116F  
                                    l6440 0E6A                                      l6408 0E18  
                                    l6512 0C1F                                      l6272 105F  
                                    l5800 1141                                      l5376 04E4  
                                    l4586 1F7A                                      l4770 140F  
                                    l4754 13E5                                      l4738 13BC  
                                    l4818 1EC9                                      l4930 1FCC  
                                    l4914 1FB6                                      l4690 0A49  
                                    l4906 10F5                                      l6338 119B  
                                    l6450 0E8B                                      l6442 0E6E  
                                    l6418 0E2E                                      l6370 1F18  
                                    l6362 1F11                                      l4668 1583  
                                    l4780 08B7                                      l4748 13D1  
                                    l4828 1EE1                                      l4940 1FE7  
                                    l4916 1FB9                                      l6436 0E5B  
                                    l6508 0C17                                      l6372 1F27  
                                    l6380 1F3E                                      l5804 114C  
                                    l5468 17C8                                      l5396 052F  
                                    l5388 0528                                      l4926 1FC6  
                                    l4918 1FBC                                      l6454 0EA1  
                                    l6438 0E65                                      l6358 1F09  
                                    l5398 0540                                      l6640 1D66  
                                    l4960 0EFB                                      l4928 1FC9  
                                    l4944 1FF4                                      l4872 1031  
                                    l6448 0E81                                      l6536 14BE  
                                    l6296 073A                                      l6384 1F48  
                                    l6376 1F34                                      l5808 1155  
                                    l6642 1D80                                      l4794 136D  
                                    l4786 132E                                      l4962 0EFD  
                                    l4866 1009                                      l6458 0EB3  
                                    l6570 1523                                      l6562 1509  
                                    l6554 14EE                                      l4788 1338  
                                    l4884 10AD                                      l6396 1C7E  
                                    l6468 0ECE                                      l6484 0BC0  
                                    l6564 1512                                      l6556 14FC  
                                    l4894 10D5                                      l6478 0BAA  
                                    l6566 1515                                      l5782 1112  
                                    l5694 12DF                                      l5686 12C1  
                                    l4984 0F58                                      l4976 0F2B  
                                    l6496 0BFB                                      l5792 111D  
                                    l5776 1105                                      l5864 1B14  
                                    l5688 12C4                                      l4994 0F76  
                                    l4898 10E2                                      l5794 112C  
                                    l4996 0F86                                      l5868 1B1A  
                                    _LATC 010E                                      u4055 1F84  
                                    u5200 0517                                      u4305 08C2  
                                    u3435 09B0                                      u5230 0556  
                                    u5305 059B                                      u4195 0A41  
                                    u5315 05AD                                      u5405 0CCC  
                                    u5415 0CE1                                      u5335 1798  
                                    u3905 1E22                                      u3825 0796  
                                    u4705 0049                                      u3915 1E2A  
                                    u4660 1D23                                      _RCIF 008D  
                                    u7125 0E49                                      u4805 0192  
                                    u4670 1D34                                      u7215 0E82  
                                    u4815 01E2                                      u4735 006D  
                                    u5295 0594                                      u4680 001E  
                                    u4665 1D1E                                      u4905 038E  
                                    u4825 0246                                      u4745 0085  
                                    u7155 0E5C                                      u7315 0C04  
                                    u5395 0CB7                                      u4675 1D30  
                                    u4915 03B9                                      u4835 025E  
                                    u4755 00AF                                      u7325 0C0A  
                                    u7405 14C5                                      u4925 03EF  
                                    u4845 0276                                      u4765 00E4  
                                    u6525 1CA7                                      u3895 1E1A  
                                    u5815 112E                                      u4935 0407  
                                    u4855 028E                                      u4775 0118  
                                    u6535 1CAC                                      u6455 1DD9  
                   ??_USBCtrlTrfTxService 005E                                      u7185 0E6F  
                                    u5825 1139                                      u4945 0466  
                                    u4865 02A7                                      u4785 014C  
                                    u7355 0C20                                      u7435 14EF  
                                    u5835 1143                                      u4955 0481  
                                    u4875 02D5                                      u4795 0164  
                                    u6475 1DE5                                      u7365 0C26  
                                    u7285 0BCC                                      u6725 1052  
                                    u4965 0499                                      u4885 0325  
                                    u6485 1DF0                                      u7295 0BDC  
                                    u4975 04B1                                      u4895 0376  
                                    u6495 1DFA                                      _UCFG 0E91  
                                    u7465 150A                                      u4985 04C9  
                                    u6915 11B5                                      u5795 1122  
                                    _UEP0 0E98                                      u6845 1176  
                                    u6765 0719                                      _UEP1 0E99  
                                    u6775 0730                                      u6865 1191  
                                    u6785 074F                                      u6795 0768  
                                    _UEIE 0E97                                      u6885 119E  
                                    u6965 1F1D                                      u6985 1F2E  
                                    u6995 1F35                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                         __end_of_ISRCode 0012                                      _Step 0159  
  USBStdFeatureReqHandler@current_ep_data 00B5                                      _pDst 016E  
                                    _main 1B75                              ___ftpack@arg 00A0  
                            ___ftpack@exp 00A3                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                    __end_of_AsicPushWork 14A5                                      start 0012  
                           __CFG_IESO$OFF 0000                        _USBCBCheckOtherReq 07FB  
              __end_of_USBCheckStdRequest 2000                    ??_USBCtrlTrfOutHandler 00A2  
                       ___bmul@multiplier 0061                              ___ftmul@cntr 00B8  
                            ___ftmul@sign 00B9                 ??_USBStdFeatureReqHandler 00B1  
                         __end_of_InitFAN 1BF2                  ??_USBStdGetStatusHandler 005E  
                            ___fttol@exp1 00D7                              ___fttol@lval 00D3  
                          ?_USBDeviceInit 0070                             ?_InitResultRx 0070  
                     ?_USBCBCheckOtherReq 0070                           i1SendCmdReply@n 007B  
                                   ?_main 0070                           __end_of___awdiv 115F  
                         __end_of___ftadd 0EE6                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 1F50         __size_of_USBCtrlEPServiceComplete 0088  
                         __end_of___ftneg 1AE8                           __end_of___ftmul 0C47  
                         ___awdiv@divisor 005E                    __end_of_USBDeviceTasks 0DF0  
                         __end_of___fttol 152C                 ?_USBCtrlEPServiceComplete 0070  
                                   _IOCBF 0396                           __end_of___lwdiv 1E0E  
                                   i1l744 0B28                                     i1l855 000E  
                                   _UADDR 0E96                           ___awdiv@counter 00A1  
                                   _RCREG 0199                             ?_InitWorkTick 0070  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _USTAT 0E8F        __size_of_USBCtrlEPAllowStatusStage 006E  
                           __CFG_PWRTE$ON 0000                                     _Error 01E5  
                          __CFG_FCMEN$OFF 0000           __end_of_USBCtrlEPAllowDataStage 1FA7  
                                   _sd000 08AB                                     _sd001 0805  
                                   _sd002 0839                             ___awtoft@sign 0061  
                           ___ftpack@sign 00A4                      ??_USBCBCheckOtherReq 005E  
                        __end_ofi1___bmul 1B11                          __end_ofi1___wmul 1C0F  
                        ??i1_SendCmdReply 0050                                     status 0003  
                     i1___wmul@multiplier 0070                                     wtemp0 007E  
            __size_of_USBStdSetCfgHandler 0081                            __CFG_MCLRE$OFF 0000  
                         __initialization 1238                               _AsicPreCalc 0014  
                            __end_of_main 1B8C                               _DetectAsics 0C47  
                          ??_InitResultRx 005E                 __size_of_USBCtrlEPService 0074  
                                  ??_main 0062                             ___fttol@sign1 00D2  
                          ??_InitWorkTick 005E                 __size_of_InitializeSystem 0019  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                        __end_of_ResultRx 0B93                                 ??_ISRCode 005D  
                          _InitTempSensor 1B5E                          __end_of_UserInit 1B49  
                                  _I2CCmd 0062                                    _ACTCON 039B  
                                  _ADRESH 009C                          ___awdiv@dividend 0060  
                        __end_of___awtoft 1C98                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 11CA                          __end_of_WorkTick 1092  
                                  _IOCAF3 1C9B                                    _T1GSPM 00CC  
                                  i1l1298 1BFA                                    i1l6104 1B02  
                                  i1l6130 16CB                                    i1l6108 1B08  
                                  i1l6128 169B                                    i1l6146 0B17  
                                  i1l6154 0AEB                                    i1l6092 1BF4  
                                  i1l6156 0B35                                    i1l6166 0B8B  
                                  _OSCCON 0099                                    u661_25 166B  
                                  u656_25 1BFB                                    u657_25 1C00  
                                  _TMR1GE 00CF                                    _TMR0IF 005A  
                                  _TMR0CS 04AD                                    _TMR1IE 0488  
                                  _TMR1IF 0088                                    _PWM1OE 309E  
                                  _TMR2IF 0089                                    _TMR1ON 00C0  
                                  _TMR2ON 00E2                                    _SSP1EN 10AD  
                                  _SSP1IF 008B                                    _SSPADD 0212  
                                  _SSPBUF 0211                                 ??_InitFAN 005E  
                              _TempTarget 01E8                                    _Send32 08D2  
                       _shortPacketStatus 006B                             ?_SendCmdReply 00A2  
                         USBDeviceTasks@i 00BF                             ?_SendAsicData 00A2  
             USBStdFeatureReqHandler@pUEP 00B3                  USBTransferOnePacket@data 00A1  
              USBCtrlTrfInHandler@lastDTS 0061                                    _Status 01AC  
                         ??_USBDeviceInit 005E                                    ___bmul 1B11  
                                  ___wmul 1C98                                 ??___awdiv 00A0  
                               ??___ftadd 00C3                                 ??___awmod 00A0  
                               ??___ftneg 0062                                 ??___ftmul 00B0  
                               ??___fttol 00CE                              ?_USBCBInitEP 0070  
                               ??___lwdiv 00A0                         _USBEnableEndpoint 1CE6  
         __size_of_USBStdGetStatusHandler 0053                                    _memset 08B1  
                        ___awdiv@quotient 00A3                           ___awmod@divisor 005E  
                              _ProcessCmd 04E1                           ___awmod@counter 00A1  
                      ?_USBEnableEndpoint 0061                                    _rotate 1D10  
                   _USBCBStdSetDscHandler 07FF                     ___ftmul@f3_as_product 00B5  
           __size_of_USBTransferOnePacket 004E                        __size_of_ProcessIO 007C  
                  __end_of_InitTempSensor 1B75                       ??_USBEnableEndpoint 00A4  
                             _CtrlTrfData 0048                     __size_of_AsicPushWork 0082  
                    _controlTransferState 0067                   __end_of__initialization 12A4  
                              ___ftadd@f1 00BD                                ___ftadd@f2 00C0  
                __size_of_USBStallHandler 0025                            ??_SendCmdReply 00A7  
                              ___ftneg@f1 00BA                                ___awtoft@c 00A5  
                     ___bmul@multiplicand 005E                            ??_SendAsicData 00A4  
                     __size_of_USBSuspend 0019                                ___ftmul@f1 00AA  
                              ___ftmul@f2 00AD                   ??_USBCheckVendorRequest 005E  
                              ___fttol@f1 00CA                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 1D10                             __end_of_sd000 08AF  
                           __end_of_sd001 0839                             __end_of_sd002 086D  
                            __pidataBANK0 07FE                              __pidataBANK3 1CBF  
                            __pidataBANK7 1C2C                         _USBCB_SOF_Handler 08B0  
        __size_of_USBCtrlEPAllowDataStage 0057             __size_of_USBConfigureEndpoint 004D  
             __end_of_USBCtrlTrfInHandler 10F8                        ?_USBCB_SOF_Handler 0070  
                              __end_of_ID 08AB                                 ?i1___bmul 0070  
                               ?i1___wmul 0070                            _OPTION_REGbits 0095  
                            _AsicPushWork 1423                           ?_InitTempSensor 0070  
                     i1SendCmdReply@count 007A                       ??_USBCB_SOF_Handler 005E  
                ??_USBCtrlTrfSetupHandler 00B8                          i1___bmul@product 0073  
                  _USBStdGetStatusHandler 1EA9                      __end_of_InitResultRx 1B36  
                              __pbssBANK0 0062                                __pbssBANK1 00E2  
                              __pbssBANK2 0159                                __pbssBANK3 01C7  
                              __pbssBANK4 0260                                __pbssBANK6 0320  
                       i1SendCmdReply@cmd 0076                      __end_of_InitWorkTick 1B5E  
             __size_of_USBWakeFromSuspend 0018                               _pBDTEntryIn 00E2  
                       __end_of_ProcessIO 1323          __end_of_USBCtrlEPServiceComplete 15B4  
                                 ?_Send32 0070                 __end_of_USBCB_SOF_Handler 08B1  
                              __pmaintext 1B75                      USBCtrlTrfRxService@i 00A0  
                               ?_ResultRx 0070                                   ?___bmul 005E  
                                 ?___wmul 005E                                __pintentry 0004  
                               ?_UserInit 0070                                   _I2CAddr 0160  
                                 ?_memset 005E                    ?_USBCBStdSetDscHandler 0070  
                              _device_dsc 088D                                 ?___awtoft 00A5  
                               ?___ftpack 00A0                          _USBCtrlEPService 0787  
                               ?_WorkTick 0070                               ?_ProcessCmd 0070  
                              ??i1___bmul 0071                                _ep_data_in 01D1  
                                 ?_rotate 00A0                                ??i1___wmul 0074  
                        _InitializeSystem 1BBD                               _NonceRanges 0320  
             __end_of_USBCtrlTrfRxService 0AE0                        _USBCheckStdRequest 1FA7  
                       _configDescriptor1 086D               __end_of_USBCtrlTrfTxService 1641  
                     _USBStdSetCfgHandler 13A2                                   _ISRCode 0004  
                                 _PWM1DCH 0612                                   _PWM1DCL 0611  
                                 _OSCTUNE 0098                                   _PWM1CON 0613  
                                 _TMR1GIE 048F                                   _TMR1GIF 008F  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92             __size_of_USBCBWakeFromSuspend 0001  
                              __stringtab 0800                                   _UIRbits 0E90  
                                 _InitFAN 1BD6                      ?_USBStdSetCfgHandler 0070  
                         __size_of_Send32 00AC                                   _TimeOut 01D7  
                              ??_ResultRx 0058                __size_of_USBEnableEndpoint 002A  
                            ?_AsicPreCalc 00AD                              ?_DetectAsics 0070  
                    ??_USBCheckStdRequest 00B7                           __size_of___bmul 0012  
           __size_of_USBCtrlTrfOutHandler 0033                                   ___awdiv 10F8  
                                 ___ftadd 0DF0                                   ___awmod 1EFC  
                                 ___ftneg 1ADF                          ??_USBDeviceTasks 00BD  
                         __size_of___wmul 0027                                   _WorkNow 00E6  
                                 ___ftmul 0B93                                   _WorkQue 233C  
                                 ___fttol 14A5                                   ___lwdiv 1DC9  
                       ??_USBStallHandler 005E                                ??_UserInit 0062  
                              ??___awtoft 00A8                                ??___ftpack 005E  
                         __size_of_memset 0021                                ??_WorkTick 00DF  
               __end_of_configDescriptor1 088D                      __size_of_USBCBInitEP 001D  
                                 __ptext1 12A7                                   __ptext2 04E1  
                                 __ptext3 1DC9                                   __ptext4 1769  
                                 __ptext5 1B11                                   __ptext6 1423  
                                 __ptext7 1C98                                   __ptext8 0014  
                                 __ptext9 1D10                                   _inPipes 00E8  
                 __size_of_UpdateFanLevel 0136                          _DetectAsics$2875 00AC  
             _USBDeferOUTDataStagePackets 0166                           __size_of_rotate 0037  
                               _T1CONbits 0018                              ??_USBSuspend 00B1  
                               _T2CONbits 001C                         _USBCBErrorHandler 0002  
                        ___awmod@dividend 0060                      __end_of_SendCmdReply 1800  
                     i1___bmul@multiplier 0072                                 _IOCBPbits 0394  
                    __end_of_SendAsicData 1769                        ?_USBCBErrorHandler 0070  
                           ?_USBCBSuspend 0070                        __end_of_USB_CD_Ptr 0805  
         __size_of_USBCtrlTrfSetupHandler 0043                                   clrloop0 1AF5  
                    end_of_initialization 12A4                            _ProcessIO$2412 00CB  
                          _ProcessIO$2378 00C9               __size_of_USBCBCheckOtherReq 0003  
                      __end_of_USB_SD_Ptr 0804                       _pBDTEntryEP0OutNext 0069  
                                 init_ram 1AE8                       ??_USBCBErrorHandler 005E  
                                 memset@c 005E                                   memset@n 0060  
                                 memset@p 00A2                                   initloop 1AE9  
                     __size_of_ProcessCmd 0170                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 00B1                          SendCmdReply@data 00A4  
              __size_of_USBCB_SOF_Handler 0001                        __end_of_USBSuspend 1BBD  
                 _USBCtrlEPAllowDataStage 1F50                                 _RCSTAbits 019D  
                                 rotate@x 00A0                                   rotate@y 00A4  
                         AsicPreCalc@work 00AD                  _USBCtrlEPServiceComplete 152C  
                   i1___wmul@multiplicand 0072                _USBStatusStageEnabledFlag1 0169  
              _USBStatusStageEnabledFlag2 016A                        USBEnableEndpoint@p 00A6  
               __end_of_USBCBErrorHandler 0003                          __CFG_FOSC$INTOSC 0000  
                   __size_of_InitResultRx 0013                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                          ??_USBCBSuspend 005E                        _BothEP0OutUOWNsSet 015F  
               USBStdSetCfgHandler@i_1089 00B4                                 _OUTPacket 02A0  
               USBConfigureEndpoint@EPNum 005F                ?_USBCtrlEPAllowStatusStage 0070  
                   __size_of_InitWorkTick 0015       USER_USB_CALLBACK_EVENT_HANDLER@size 00AF  
                               _USTATcopy 00EE              __end_of_USBTransferOnePacket 1EA9  
                               _TXSTAbits 019E                             _PrecalcHashes 0340  
                             ___ftmul@exp 00B4                        USBDeviceInit@i_718 00A2  
                          __end_of_Send32 097E                    _USBCtrlTrfSetupHandler 1D86  
          __size_of_USBCheckVendorRequest 0001             __end_of_USBCheckVendorRequest 0004  
                 __size_ofi1_SendCmdReply 0093                            __end_of___bmul 1B23  
                   __end_of_USBDeviceInit 0A2E                              _InitResultRx 1B23  
                          __end_of___wmul 1CBF                          ??_InitTempSensor 005E  
                             _BAUDCONbits 019F                            __end_of_memset 08D2  
                       _USBBusIsSuspended 0164                            __end_of_rotate 1D47  
                            _InitWorkTick 1B49                         __size_ofi1___bmul 0011  
                               _LastError 01CF                       start_initialization 1238  
                       __size_ofi1___wmul 001D                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 00A1              __end_of_USBConfigureEndpoint 1E5B  
         __end_of_USBStdFeatureReqHandler 1000         __end_of_USBCtrlEPAllowStatusStage 1238  
                __end_of_USBCtrlEPService 07FB                          SendAsicData@work 00A2  
                __end_of_InitializeSystem 1BD6                 ??_USBCtrlEPAllowDataStage 00A0  
                          USBDeviceInit@i 00A3                                  ??_Send32 005E  
                          USBDeviceInit@p 00A0                    _pBDTEntryEP0OutCurrent 00E7  
                 USBTransferOnePacket@dir 00A0                   USBTransferOnePacket@len 00A2  
                 ??_USBCBStdSetDscHandler 005E                                  ??___bmul 005F  
                               _ResultPos 0065                                 _ResultQue 01D9  
                                ??___wmul 0062                       _USBStdGetDscHandler 1323  
                               _ProcessIO 12A7                               __pdataBANK0 006E  
                             __pdataBANK3 01A0                               __pdataBANK7 03A0  
                       __size_of_ResultRx 00B3                      __size_of_AsicPreCalc 04CD  
                                ??_memset 00A0                      __size_of_DetectAsics 00B8  
                            ??_ProcessCmd 00BE                     __size_of_SendCmdReply 0097  
                          _UpdateFanLevel 0651                                  ??_rotate 00A5  
              __size_of_USBCBErrorHandler 0001                     __size_of_SendAsicData 0095  
                       __size_of_UserInit 0013                    _USBActiveConfiguration 00ED  
          __end_of_USBStdGetStatusHandler 1EFC                         __size_of___awtoft 0027  
                       __size_of___ftpack 006B                               __pbssBIGRAM 233C  
                       __size_of_WorkTick 005E                             __pcstackBANK0 0050  
                           __pcstackBANK1 00A0                             __pcstackBANK2 0120  
            __size_of_USBCtrlTrfInHandler 0066                                  ?_ISRCode 0070  
                    ?_USBStdGetDscHandler 0070                        i1SendCmdReply@data 0078  
                           _ResultRx$3165 007C                             _ResultRx$3166 007D  
              __end_of_USBWakeFromSuspend 1BA4                           _USBStallHandler 1C4C  
                            _pBDTEntryOut 015B                                  ?_InitFAN 0070  
                            _send32_count 016F                                 __pnvBANK3 01E7  
                      __end_of_ProcessCmd 0651                          ___lwdiv@dividend 0060  
                            _SendCmdReply 1769                              _SendAsicData 16D4  
                    __end_of_USBCBSuspend 1001              __end_of_USBCBWakeFromSuspend 08B0  
                                ?___awdiv 005E                                  ?___ftadd 00BD  
                                ?___awmod 005E                                  ?___ftneg 00BA  
                              ?_ProcessIO 0070                                  ?___ftmul 00AA  
                                ?___fttol 00CA                                  ?___lwdiv 005E  
                  __end_of_UpdateFanLevel 0787                              AsicPreCalc@K 0120  
                            AsicPreCalc@m 012C                              AsicPreCalc@n 0158  
                            AsicPreCalc@x 0154                              AsicPreCalc@y 0150  
                            AsicPreCalc@z 014C                                 __pstrings 0800  
              USBCBSendResume@delay_count 01CD                                 __pswtext1 1800  
                    _USBTransferOnePacket 1E5B                                  _I2CInBuf 0161  
                            DetectAsics@x 00AE                                  _I2CCount 0063  
                                _I2CState 0064                                 _last_bit0 016C  
                               _last_bit1 016D              __end_of_USBCtrlTrfOutHandler 1034  
                   ??_USBStdGetDscHandler 005E                               _ep_data_out 01D3  
                        ___lwdiv@quotient 00A1              __size_of_USBCtrlTrfRxService 00B2  
           USBConfigureEndpoint@direction 005E              __size_of_USBCtrlTrfTxService 008D  
                          ___wmul@product 00A0                                  _LATAbits 010C  
                                _LATCbits 010E                ??_USBCtrlEPServiceComplete 00A2  
                               clear_ram0 1AF4                                  _PIE2bits 0092  
                   i1___bmul@multiplicand 0070                           SendCmdReply@cmd 00A2  
                                _PIR2bits 0012                                  _INPacket 0220  
               USBCtrlEPService@setup_cnt 00BC                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 0165                            i1_SendCmdReply 1641  
                           ??_USBCBInitEP 00A9               __size_of_USBCheckStdRequest 0059  
                                _UCONbits 0E8E                           ?_UpdateFanLevel 0070  
                     _UpdateFanLevel$2878 00DC                      _USBConfigureEndpoint 1E0E  
                           ProcessCmd@cmd 00C4          __size_of_USBStdFeatureReqHandler 011A  
                                i1___bmul 1B00                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                       ___wmul@multiplier 005E                     ?_USBTransferOnePacket 00A0  
                                i1___wmul 1BF2                                  _BankSize 01E9  
                                _FanLevel 01E7                              _RemoteWakeup 0162  
                                _ClockCfg 01B9                __end_of_USBCBCheckOtherReq 07FE  
                                _HashTime 006E                   __end_of_USBStallHandler 1C71  
                        __size_of_ISRCode 000E               ??_USBCtrlEPAllowStatusStage 005E  
             __end_of_USBStdSetCfgHandler 1423                                  _LastTemp 01D5  
                            _SlaveAddress 00E4                        __end_of_device_dsc 089F  
                 ?_USBCtrlTrfSetupHandler 0070                          __size_of_InitFAN 001C  
                 USBStdGetStatusHandler@p 005F                    __end_ofi1_SendCmdReply 16D4  
                  USBTransferOnePacket@ep 00A5                                  _ResultQC 0163  
                                _ResultRx 0AE0                                  _SetupPkt 0040  
                                _SlowTick 01D6                               ??_ProcessIO 00C5  
                   ?_USBConfigureEndpoint 005E                                  _UserInit 1B36  
                        __size_of___awdiv 0067                          __size_of___ftadd 00F6  
                        __size_of___awmod 0054                          __size_of___ftneg 0009  
                        __size_of___ftmul 00B4                          __size_of___fttol 0087  
                        __size_of___lwdiv 0045                                  ___awtoft 1C71  
                                ___ftpack 115F                                  _WorkTick 1034  
                      __end_of__stringtab 0801                                _ANSELBbits 018D  
                     __end_of_USBCBInitEP 1C2C                             ?_AsicPushWork 0070  
                             _send32_data 015D                   __size_of_USBDeviceTasks 00F1  
                         ___lwdiv@divisor 005E                           ___lwdiv@counter 00A3  
                                __ptext10 16D4                                  __ptext11 08D2  
                                __ptext20 1034                                  __ptext12 1BBD  
                                __ptext21 1EFC                                  __ptext13 1B36  
                              _T1GCONbits 0019                                  __ptext30 0787  
                                __ptext22 0651                                  __ptext14 1B23  
                                __ptext31 1092                                  __ptext23 14A5  
                                __ptext15 1B49                                  __ptext40 08B1  
                                __ptext32 1001                                  __ptext24 1ADF  
                                __ptext16 1B5E                                  __ptext41 152C  
                                __ptext33 0A2E                                  __ptext25 0B93  
                                __ptext17 1BD6                                  __ptext50 1E5B  
                                __ptext42 1F50                                  __ptext34 1D86  
                                __ptext26 0DF0                                  __ptext18 0C47  
                                __ptext51 1CE6                                  __ptext43 15B4  
                                __ptext35 1FA7                                  __ptext27 1C71  
                                __ptext19 10F8                                  __ptext60 097E  
                                __ptext52 1E0E                                  __ptext44 11CA  
                                __ptext36 0EE6                                  __ptext28 115F  
                                __ptext53 07FF                                  __ptext45 1C4C  
                                __ptext37 1EA9                                  __ptext29 0CFF  
                                __ptext62 0AE0                                  __ptext54 07FB  
                                __ptext46 1BA4                                  __ptext38 1323  
                                __ptext63 1641                                  __ptext55 0003  
                                __ptext47 1B8C                                  __ptext39 13A2  
                                __ptext64 1B00                                  __ptext56 0002  
                                __ptext48 1D47                                  __ptext65 1BF2  
                                __ptext57 08B0                                  __ptext49 1C0F  
                                __ptext58 08AF                                  __ptext59 1000  
                    _USBCBWakeFromSuspend 08AF            __end_of_USBCtrlTrfSetupHandler 1DC9  
                           __size_of_main 0017                         ?_USBCtrlEPService 0070  
                   __size_of_USBCBSuspend 0001                         ?_InitializeSystem 0070  
                      ??_USBCtrlEPService 00B9                       _USBGenericOutHandle 0168  
                     _USBCtrlTrfInHandler 1092                           ?i1_SendCmdReply 0076  
                      ??_InitializeSystem 0062                                  _outPipes 01C7  
                    _USBCtrlTrfOutHandler 1001                 _USBCtrlEPAllowStatusStage 11CA  
          __size_of_USBCBStdSetDscHandler 0001             __end_of_USBCBStdSetDscHandler 0800  
                  ??_USBTransferOnePacket 00A3                     _USBCheckVendorRequest 0003  
                          ??_AsicPushWork 00B9                 _USBDeferStatusStagePacket 0066  
                              _INTCONbits 000B                        _USBGenericInHandle 0167  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 0060  
                                memset@p1 00A1                              _USBCBSuspend 1000  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 00B6  
                   ?_USBCBWakeFromSuspend 0070                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00B0   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1D86  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F         ??_USER_USB_CALLBACK_EVENT_HANDLER 0062  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 00AC           _USER_USB_CALLBACK_EVENT_HANDLER 1D47  
                        AsicPreCalc@F3347 01A0                                  next_word 08D7  
                       SendCmdReply@count 00A6                             SendCmdReply@n 00AF  
                           ??_AsicPreCalc 00AF                              _VerySlowTick 01D8  
                         _ProcessCmd$2060 00C2                             ??_DetectAsics 00A5  
                  ??_USBConfigureEndpoint 00A0                     ?_USBCtrlTrfOutHandler 0070  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 0A2E  
                             _USBCBInitEP 1C0F                        _USBWakeFromSuspend 1B8C  
                 _USBStdFeatureReqHandler 0EE6                       _USBCtrlTrfTxService 15B4  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 00A0  
                   _USBAlternateInterface 006C                               _SSPCON1bits 0215  
                             _SSPCON2bits 0216                       USBEnableEndpoint@ep 00A8  
                             _SSPCON3bits 0217                           _endpoint_number 0068  
                 __size_of_InitTempSensor 0017                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
            _USBStatusStageTimeoutCounter 016B                      ??_USBWakeFromSuspend 00B1  
              USBTransferOnePacket@handle 00A6                          ??_UpdateFanLevel 00D8  
                              _USB_CD_Ptr 0804  
