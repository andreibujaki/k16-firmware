

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Oct 25 03:43:52 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK7,global,class=CODE,delta=2
     8                           	psect	strings,global,class=STRING,delta=2
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	swtext1,local,class=CONST,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	text51,local,class=CODE,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,merge=1,delta=2
    84                           	psect	text56,local,class=CODE,merge=1,delta=2
    85                           	psect	text57,local,class=CODE,merge=1,delta=2
    86                           	psect	text58,local,class=CODE,merge=1,delta=2
    87                           	psect	text59,local,class=CODE,merge=1,delta=2
    88                           	psect	text60,local,class=CODE,merge=1,delta=2
    89                           	psect	text61,local,class=CODE,merge=1,delta=2
    90                           	psect	intentry,global,class=CODE,delta=2
    91                           	psect	text63,local,class=CODE,merge=1,delta=2
    92                           	psect	text64,local,class=CODE,merge=1,delta=2
    93                           	psect	text65,local,class=CODE,merge=1,delta=2
    94                           	psect	text66,local,class=CODE,merge=1,delta=2
    95                           	dabs	1,0x620,48
    96                           	dabs	1,0x5A0,80
    97                           	dabs	1,0x53C,52
    98                           	dabs	1,0x20,32,_BDT
    99                           	dabs	1,0x48,8,_CtrlTrfData
   100                           	dabs	1,0x40,8,_SetupPkt
   101                           	dabs	1,0x220,64,_INPacket
   102                           	dabs	1,0x2A0,64,_OUTPacket
   103                           	dabs	1,0x233C,0,_WorkQue
   104                           	dabs	1,0x7E,2
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  0111                     	;# 
   152  0112                     	;# 
   153  0113                     	;# 
   154  0114                     	;# 
   155  0115                     	;# 
   156  0116                     	;# 
   157  0117                     	;# 
   158  0118                     	;# 
   159  0119                     	;# 
   160  011D                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  0191                     	;# 
   165  0191                     	;# 
   166  0192                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  0211                     	;# 
   182  0211                     	;# 
   183  0212                     	;# 
   184  0212                     	;# 
   185  0213                     	;# 
   186  0213                     	;# 
   187  0214                     	;# 
   188  0214                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  039A                     	;# 
   203  039B                     	;# 
   204  0611                     	;# 
   205  0612                     	;# 
   206  0613                     	;# 
   207  0613                     	;# 
   208  0614                     	;# 
   209  0615                     	;# 
   210  0616                     	;# 
   211  0616                     	;# 
   212  0691                     	;# 
   213  0692                     	;# 
   214  0693                     	;# 
   215  0694                     	;# 
   216  0695                     	;# 
   217  0E8E                     	;# 
   218  0E8F                     	;# 
   219  0E90                     	;# 
   220  0E91                     	;# 
   221  0E92                     	;# 
   222  0E93                     	;# 
   223  0E94                     	;# 
   224  0E94                     	;# 
   225  0E95                     	;# 
   226  0E96                     	;# 
   227  0E97                     	;# 
   228  0E98                     	;# 
   229  0E99                     	;# 
   230  0E9A                     	;# 
   231  0E9B                     	;# 
   232  0E9C                     	;# 
   233  0E9D                     	;# 
   234  0E9E                     	;# 
   235  0E9F                     	;# 
   236  0FE4                     	;# 
   237  0FE5                     	;# 
   238  0FE6                     	;# 
   239  0FE7                     	;# 
   240  0FE8                     	;# 
   241  0FE9                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  018E                     	;# 
   306  0191                     	;# 
   307  0191                     	;# 
   308  0192                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019C                     	;# 
   318  019D                     	;# 
   319  019E                     	;# 
   320  019F                     	;# 
   321  020C                     	;# 
   322  020D                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  0393                     	;# 
   341  0394                     	;# 
   342  0395                     	;# 
   343  0396                     	;# 
   344  039A                     	;# 
   345  039B                     	;# 
   346  0611                     	;# 
   347  0612                     	;# 
   348  0613                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0615                     	;# 
   352  0616                     	;# 
   353  0616                     	;# 
   354  0691                     	;# 
   355  0692                     	;# 
   356  0693                     	;# 
   357  0694                     	;# 
   358  0695                     	;# 
   359  0E8E                     	;# 
   360  0E8F                     	;# 
   361  0E90                     	;# 
   362  0E91                     	;# 
   363  0E92                     	;# 
   364  0E93                     	;# 
   365  0E94                     	;# 
   366  0E94                     	;# 
   367  0E95                     	;# 
   368  0E96                     	;# 
   369  0E97                     	;# 
   370  0E98                     	;# 
   371  0E99                     	;# 
   372  0E9A                     	;# 
   373  0E9B                     	;# 
   374  0E9C                     	;# 
   375  0E9D                     	;# 
   376  0E9E                     	;# 
   377  0E9F                     	;# 
   378  0FE4                     	;# 
   379  0FE5                     	;# 
   380  0FE6                     	;# 
   381  0FE7                     	;# 
   382  0FE8                     	;# 
   383  0FE9                     	;# 
   384  0FEA                     	;# 
   385  0FEB                     	;# 
   386  0FED                     	;# 
   387  0FEE                     	;# 
   388  0FEF                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  0111                     	;# 
   436  0112                     	;# 
   437  0113                     	;# 
   438  0114                     	;# 
   439  0115                     	;# 
   440  0116                     	;# 
   441  0117                     	;# 
   442  0118                     	;# 
   443  0119                     	;# 
   444  011D                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  018E                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0194                     	;# 
   454  0195                     	;# 
   455  0196                     	;# 
   456  0199                     	;# 
   457  019A                     	;# 
   458  019B                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019E                     	;# 
   462  019F                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  0211                     	;# 
   466  0211                     	;# 
   467  0212                     	;# 
   468  0212                     	;# 
   469  0213                     	;# 
   470  0213                     	;# 
   471  0214                     	;# 
   472  0214                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0216                     	;# 
   478  0217                     	;# 
   479  0217                     	;# 
   480  0391                     	;# 
   481  0392                     	;# 
   482  0393                     	;# 
   483  0394                     	;# 
   484  0395                     	;# 
   485  0396                     	;# 
   486  039A                     	;# 
   487  039B                     	;# 
   488  0611                     	;# 
   489  0612                     	;# 
   490  0613                     	;# 
   491  0613                     	;# 
   492  0614                     	;# 
   493  0615                     	;# 
   494  0616                     	;# 
   495  0616                     	;# 
   496  0691                     	;# 
   497  0692                     	;# 
   498  0693                     	;# 
   499  0694                     	;# 
   500  0695                     	;# 
   501  0E8E                     	;# 
   502  0E8F                     	;# 
   503  0E90                     	;# 
   504  0E91                     	;# 
   505  0E92                     	;# 
   506  0E93                     	;# 
   507  0E94                     	;# 
   508  0E94                     	;# 
   509  0E95                     	;# 
   510  0E96                     	;# 
   511  0E97                     	;# 
   512  0E98                     	;# 
   513  0E99                     	;# 
   514  0E9A                     	;# 
   515  0E9B                     	;# 
   516  0E9C                     	;# 
   517  0E9D                     	;# 
   518  0E9E                     	;# 
   519  0E9F                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  000D                     	;# 
   545  000E                     	;# 
   546  0011                     	;# 
   547  0012                     	;# 
   548  0015                     	;# 
   549  0016                     	;# 
   550  0016                     	;# 
   551  0017                     	;# 
   552  0018                     	;# 
   553  0019                     	;# 
   554  001A                     	;# 
   555  001B                     	;# 
   556  001C                     	;# 
   557  008C                     	;# 
   558  008D                     	;# 
   559  008E                     	;# 
   560  0091                     	;# 
   561  0092                     	;# 
   562  0095                     	;# 
   563  0096                     	;# 
   564  0097                     	;# 
   565  0098                     	;# 
   566  0099                     	;# 
   567  009A                     	;# 
   568  009B                     	;# 
   569  009B                     	;# 
   570  009C                     	;# 
   571  009D                     	;# 
   572  009E                     	;# 
   573  009F                     	;# 
   574  010C                     	;# 
   575  010D                     	;# 
   576  010E                     	;# 
   577  0111                     	;# 
   578  0112                     	;# 
   579  0113                     	;# 
   580  0114                     	;# 
   581  0115                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  0118                     	;# 
   585  0119                     	;# 
   586  011D                     	;# 
   587  018C                     	;# 
   588  018D                     	;# 
   589  018E                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  019A                     	;# 
   600  019B                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019E                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  0211                     	;# 
   608  0211                     	;# 
   609  0212                     	;# 
   610  0212                     	;# 
   611  0213                     	;# 
   612  0213                     	;# 
   613  0214                     	;# 
   614  0214                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0216                     	;# 
   619  0216                     	;# 
   620  0217                     	;# 
   621  0217                     	;# 
   622  0391                     	;# 
   623  0392                     	;# 
   624  0393                     	;# 
   625  0394                     	;# 
   626  0395                     	;# 
   627  0396                     	;# 
   628  039A                     	;# 
   629  039B                     	;# 
   630  0611                     	;# 
   631  0612                     	;# 
   632  0613                     	;# 
   633  0613                     	;# 
   634  0614                     	;# 
   635  0615                     	;# 
   636  0616                     	;# 
   637  0616                     	;# 
   638  0691                     	;# 
   639  0692                     	;# 
   640  0693                     	;# 
   641  0694                     	;# 
   642  0695                     	;# 
   643  0E8E                     	;# 
   644  0E8F                     	;# 
   645  0E90                     	;# 
   646  0E91                     	;# 
   647  0E92                     	;# 
   648  0E93                     	;# 
   649  0E94                     	;# 
   650  0E94                     	;# 
   651  0E95                     	;# 
   652  0E96                     	;# 
   653  0E97                     	;# 
   654  0E98                     	;# 
   655  0E99                     	;# 
   656  0E9A                     	;# 
   657  0E9B                     	;# 
   658  0E9C                     	;# 
   659  0E9D                     	;# 
   660  0E9E                     	;# 
   661  0E9F                     	;# 
   662  0FE4                     	;# 
   663  0FE5                     	;# 
   664  0FE6                     	;# 
   665  0FE7                     	;# 
   666  0FE8                     	;# 
   667  0FE9                     	;# 
   668  0FEA                     	;# 
   669  0FEB                     	;# 
   670  0FED                     	;# 
   671  0FEE                     	;# 
   672  0FEF                     	;# 
   673  0000                     	;# 
   674  0001                     	;# 
   675  0002                     	;# 
   676  0003                     	;# 
   677  0004                     	;# 
   678  0005                     	;# 
   679  0006                     	;# 
   680  0007                     	;# 
   681  0008                     	;# 
   682  0009                     	;# 
   683  000A                     	;# 
   684  000B                     	;# 
   685  000C                     	;# 
   686  000D                     	;# 
   687  000E                     	;# 
   688  0011                     	;# 
   689  0012                     	;# 
   690  0015                     	;# 
   691  0016                     	;# 
   692  0016                     	;# 
   693  0017                     	;# 
   694  0018                     	;# 
   695  0019                     	;# 
   696  001A                     	;# 
   697  001B                     	;# 
   698  001C                     	;# 
   699  008C                     	;# 
   700  008D                     	;# 
   701  008E                     	;# 
   702  0091                     	;# 
   703  0092                     	;# 
   704  0095                     	;# 
   705  0096                     	;# 
   706  0097                     	;# 
   707  0098                     	;# 
   708  0099                     	;# 
   709  009A                     	;# 
   710  009B                     	;# 
   711  009B                     	;# 
   712  009C                     	;# 
   713  009D                     	;# 
   714  009E                     	;# 
   715  009F                     	;# 
   716  010C                     	;# 
   717  010D                     	;# 
   718  010E                     	;# 
   719  0111                     	;# 
   720  0112                     	;# 
   721  0113                     	;# 
   722  0114                     	;# 
   723  0115                     	;# 
   724  0116                     	;# 
   725  0117                     	;# 
   726  0118                     	;# 
   727  0119                     	;# 
   728  011D                     	;# 
   729  018C                     	;# 
   730  018D                     	;# 
   731  018E                     	;# 
   732  0191                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  0193                     	;# 
   736  0193                     	;# 
   737  0194                     	;# 
   738  0195                     	;# 
   739  0196                     	;# 
   740  0199                     	;# 
   741  019A                     	;# 
   742  019B                     	;# 
   743  019C                     	;# 
   744  019D                     	;# 
   745  019E                     	;# 
   746  019F                     	;# 
   747  020C                     	;# 
   748  020D                     	;# 
   749  0211                     	;# 
   750  0211                     	;# 
   751  0212                     	;# 
   752  0212                     	;# 
   753  0213                     	;# 
   754  0213                     	;# 
   755  0214                     	;# 
   756  0214                     	;# 
   757  0215                     	;# 
   758  0215                     	;# 
   759  0215                     	;# 
   760  0216                     	;# 
   761  0216                     	;# 
   762  0217                     	;# 
   763  0217                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  0393                     	;# 
   767  0394                     	;# 
   768  0395                     	;# 
   769  0396                     	;# 
   770  039A                     	;# 
   771  039B                     	;# 
   772  0611                     	;# 
   773  0612                     	;# 
   774  0613                     	;# 
   775  0613                     	;# 
   776  0614                     	;# 
   777  0615                     	;# 
   778  0616                     	;# 
   779  0616                     	;# 
   780  0691                     	;# 
   781  0692                     	;# 
   782  0693                     	;# 
   783  0694                     	;# 
   784  0695                     	;# 
   785  0E8E                     	;# 
   786  0E8F                     	;# 
   787  0E90                     	;# 
   788  0E91                     	;# 
   789  0E92                     	;# 
   790  0E93                     	;# 
   791  0E94                     	;# 
   792  0E94                     	;# 
   793  0E95                     	;# 
   794  0E96                     	;# 
   795  0E97                     	;# 
   796  0E98                     	;# 
   797  0E99                     	;# 
   798  0E9A                     	;# 
   799  0E9B                     	;# 
   800  0E9C                     	;# 
   801  0E9D                     	;# 
   802  0E9E                     	;# 
   803  0E9F                     	;# 
   804  0FE4                     	;# 
   805  0FE5                     	;# 
   806  0FE6                     	;# 
   807  0FE7                     	;# 
   808  0FE8                     	;# 
   809  0FE9                     	;# 
   810  0FEA                     	;# 
   811  0FEB                     	;# 
   812  0FED                     	;# 
   813  0FEE                     	;# 
   814  0FEF                     	;# 
   815  0000                     	;# 
   816  0001                     	;# 
   817  0002                     	;# 
   818  0003                     	;# 
   819  0004                     	;# 
   820  0005                     	;# 
   821  0006                     	;# 
   822  0007                     	;# 
   823  0008                     	;# 
   824  0009                     	;# 
   825  000A                     	;# 
   826  000B                     	;# 
   827  000C                     	;# 
   828  000D                     	;# 
   829  000E                     	;# 
   830  0011                     	;# 
   831  0012                     	;# 
   832  0015                     	;# 
   833  0016                     	;# 
   834  0016                     	;# 
   835  0017                     	;# 
   836  0018                     	;# 
   837  0019                     	;# 
   838  001A                     	;# 
   839  001B                     	;# 
   840  001C                     	;# 
   841  008C                     	;# 
   842  008D                     	;# 
   843  008E                     	;# 
   844  0091                     	;# 
   845  0092                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  0111                     	;# 
   862  0112                     	;# 
   863  0113                     	;# 
   864  0114                     	;# 
   865  0115                     	;# 
   866  0116                     	;# 
   867  0117                     	;# 
   868  0118                     	;# 
   869  0119                     	;# 
   870  011D                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  0191                     	;# 
   875  0191                     	;# 
   876  0192                     	;# 
   877  0193                     	;# 
   878  0193                     	;# 
   879  0194                     	;# 
   880  0195                     	;# 
   881  0196                     	;# 
   882  0199                     	;# 
   883  019A                     	;# 
   884  019B                     	;# 
   885  019C                     	;# 
   886  019D                     	;# 
   887  019E                     	;# 
   888  019F                     	;# 
   889  020C                     	;# 
   890  020D                     	;# 
   891  0211                     	;# 
   892  0211                     	;# 
   893  0212                     	;# 
   894  0212                     	;# 
   895  0213                     	;# 
   896  0213                     	;# 
   897  0214                     	;# 
   898  0214                     	;# 
   899  0215                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0216                     	;# 
   903  0216                     	;# 
   904  0217                     	;# 
   905  0217                     	;# 
   906  0391                     	;# 
   907  0392                     	;# 
   908  0393                     	;# 
   909  0394                     	;# 
   910  0395                     	;# 
   911  0396                     	;# 
   912  039A                     	;# 
   913  039B                     	;# 
   914  0611                     	;# 
   915  0612                     	;# 
   916  0613                     	;# 
   917  0613                     	;# 
   918  0614                     	;# 
   919  0615                     	;# 
   920  0616                     	;# 
   921  0616                     	;# 
   922  0691                     	;# 
   923  0692                     	;# 
   924  0693                     	;# 
   925  0694                     	;# 
   926  0695                     	;# 
   927  0E8E                     	;# 
   928  0E8F                     	;# 
   929  0E90                     	;# 
   930  0E91                     	;# 
   931  0E92                     	;# 
   932  0E93                     	;# 
   933  0E94                     	;# 
   934  0E94                     	;# 
   935  0E95                     	;# 
   936  0E96                     	;# 
   937  0E97                     	;# 
   938  0E98                     	;# 
   939  0E99                     	;# 
   940  0E9A                     	;# 
   941  0E9B                     	;# 
   942  0E9C                     	;# 
   943  0E9D                     	;# 
   944  0E9E                     	;# 
   945  0E9F                     	;# 
   946  0FE4                     	;# 
   947  0FE5                     	;# 
   948  0FE6                     	;# 
   949  0FE7                     	;# 
   950  0FE8                     	;# 
   951  0FE9                     	;# 
   952  0FEA                     	;# 
   953  0FEB                     	;# 
   954  0FED                     	;# 
   955  0FEE                     	;# 
   956  0FEF                     	;# 
   957  0000                     	;# 
   958  0001                     	;# 
   959  0002                     	;# 
   960  0003                     	;# 
   961  0004                     	;# 
   962  0005                     	;# 
   963  0006                     	;# 
   964  0007                     	;# 
   965  0008                     	;# 
   966  0009                     	;# 
   967  000A                     	;# 
   968  000B                     	;# 
   969  000C                     	;# 
   970  000D                     	;# 
   971  000E                     	;# 
   972  0011                     	;# 
   973  0012                     	;# 
   974  0015                     	;# 
   975  0016                     	;# 
   976  0016                     	;# 
   977  0017                     	;# 
   978  0018                     	;# 
   979  0019                     	;# 
   980  001A                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0095                     	;# 
   989  0096                     	;# 
   990  0097                     	;# 
   991  0098                     	;# 
   992  0099                     	;# 
   993  009A                     	;# 
   994  009B                     	;# 
   995  009B                     	;# 
   996  009C                     	;# 
   997  009D                     	;# 
   998  009E                     	;# 
   999  009F                     	;# 
  1000  010C                     	;# 
  1001  010D                     	;# 
  1002  010E                     	;# 
  1003  0111                     	;# 
  1004  0112                     	;# 
  1005  0113                     	;# 
  1006  0114                     	;# 
  1007  0115                     	;# 
  1008  0116                     	;# 
  1009  0117                     	;# 
  1010  0118                     	;# 
  1011  0119                     	;# 
  1012  011D                     	;# 
  1013  018C                     	;# 
  1014  018D                     	;# 
  1015  018E                     	;# 
  1016  0191                     	;# 
  1017  0191                     	;# 
  1018  0192                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0194                     	;# 
  1022  0195                     	;# 
  1023  0196                     	;# 
  1024  0199                     	;# 
  1025  019A                     	;# 
  1026  019B                     	;# 
  1027  019C                     	;# 
  1028  019D                     	;# 
  1029  019E                     	;# 
  1030  019F                     	;# 
  1031  020C                     	;# 
  1032  020D                     	;# 
  1033  0211                     	;# 
  1034  0211                     	;# 
  1035  0212                     	;# 
  1036  0212                     	;# 
  1037  0213                     	;# 
  1038  0213                     	;# 
  1039  0214                     	;# 
  1040  0214                     	;# 
  1041  0215                     	;# 
  1042  0215                     	;# 
  1043  0215                     	;# 
  1044  0216                     	;# 
  1045  0216                     	;# 
  1046  0217                     	;# 
  1047  0217                     	;# 
  1048  0391                     	;# 
  1049  0392                     	;# 
  1050  0393                     	;# 
  1051  0394                     	;# 
  1052  0395                     	;# 
  1053  0396                     	;# 
  1054  039A                     	;# 
  1055  039B                     	;# 
  1056  0611                     	;# 
  1057  0612                     	;# 
  1058  0613                     	;# 
  1059  0613                     	;# 
  1060  0614                     	;# 
  1061  0615                     	;# 
  1062  0616                     	;# 
  1063  0616                     	;# 
  1064  0691                     	;# 
  1065  0692                     	;# 
  1066  0693                     	;# 
  1067  0694                     	;# 
  1068  0695                     	;# 
  1069  0E8E                     	;# 
  1070  0E8F                     	;# 
  1071  0E90                     	;# 
  1072  0E91                     	;# 
  1073  0E92                     	;# 
  1074  0E93                     	;# 
  1075  0E94                     	;# 
  1076  0E94                     	;# 
  1077  0E95                     	;# 
  1078  0E96                     	;# 
  1079  0E97                     	;# 
  1080  0E98                     	;# 
  1081  0E99                     	;# 
  1082  0E9A                     	;# 
  1083  0E9B                     	;# 
  1084  0E9C                     	;# 
  1085  0E9D                     	;# 
  1086  0E9E                     	;# 
  1087  0E9F                     	;# 
  1088  0FE4                     	;# 
  1089  0FE5                     	;# 
  1090  0FE6                     	;# 
  1091  0FE7                     	;# 
  1092  0FE8                     	;# 
  1093  0FE9                     	;# 
  1094  0FEA                     	;# 
  1095  0FEB                     	;# 
  1096  0FED                     	;# 
  1097  0FEE                     	;# 
  1098  0FEF                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0008                     	;# 
  1108  0009                     	;# 
  1109  000A                     	;# 
  1110  000B                     	;# 
  1111  000C                     	;# 
  1112  000D                     	;# 
  1113  000E                     	;# 
  1114  0011                     	;# 
  1115  0012                     	;# 
  1116  0015                     	;# 
  1117  0016                     	;# 
  1118  0016                     	;# 
  1119  0017                     	;# 
  1120  0018                     	;# 
  1121  0019                     	;# 
  1122  001A                     	;# 
  1123  001B                     	;# 
  1124  001C                     	;# 
  1125  008C                     	;# 
  1126  008D                     	;# 
  1127  008E                     	;# 
  1128  0091                     	;# 
  1129  0092                     	;# 
  1130  0095                     	;# 
  1131  0096                     	;# 
  1132  0097                     	;# 
  1133  0098                     	;# 
  1134  0099                     	;# 
  1135  009A                     	;# 
  1136  009B                     	;# 
  1137  009B                     	;# 
  1138  009C                     	;# 
  1139  009D                     	;# 
  1140  009E                     	;# 
  1141  009F                     	;# 
  1142  010C                     	;# 
  1143  010D                     	;# 
  1144  010E                     	;# 
  1145  0111                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0115                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0118                     	;# 
  1153  0119                     	;# 
  1154  011D                     	;# 
  1155  018C                     	;# 
  1156  018D                     	;# 
  1157  018E                     	;# 
  1158  0191                     	;# 
  1159  0191                     	;# 
  1160  0192                     	;# 
  1161  0193                     	;# 
  1162  0193                     	;# 
  1163  0194                     	;# 
  1164  0195                     	;# 
  1165  0196                     	;# 
  1166  0199                     	;# 
  1167  019A                     	;# 
  1168  019B                     	;# 
  1169  019C                     	;# 
  1170  019D                     	;# 
  1171  019E                     	;# 
  1172  019F                     	;# 
  1173  020C                     	;# 
  1174  020D                     	;# 
  1175  0211                     	;# 
  1176  0211                     	;# 
  1177  0212                     	;# 
  1178  0212                     	;# 
  1179  0213                     	;# 
  1180  0213                     	;# 
  1181  0214                     	;# 
  1182  0214                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0216                     	;# 
  1187  0216                     	;# 
  1188  0217                     	;# 
  1189  0217                     	;# 
  1190  0391                     	;# 
  1191  0392                     	;# 
  1192  0393                     	;# 
  1193  0394                     	;# 
  1194  0395                     	;# 
  1195  0396                     	;# 
  1196  039A                     	;# 
  1197  039B                     	;# 
  1198  0611                     	;# 
  1199  0612                     	;# 
  1200  0613                     	;# 
  1201  0613                     	;# 
  1202  0614                     	;# 
  1203  0615                     	;# 
  1204  0616                     	;# 
  1205  0616                     	;# 
  1206  0691                     	;# 
  1207  0692                     	;# 
  1208  0693                     	;# 
  1209  0694                     	;# 
  1210  0695                     	;# 
  1211  0E8E                     	;# 
  1212  0E8F                     	;# 
  1213  0E90                     	;# 
  1214  0E91                     	;# 
  1215  0E92                     	;# 
  1216  0E93                     	;# 
  1217  0E94                     	;# 
  1218  0E94                     	;# 
  1219  0E95                     	;# 
  1220  0E96                     	;# 
  1221  0E97                     	;# 
  1222  0E98                     	;# 
  1223  0E99                     	;# 
  1224  0E9A                     	;# 
  1225  0E9B                     	;# 
  1226  0E9C                     	;# 
  1227  0E9D                     	;# 
  1228  0E9E                     	;# 
  1229  0E9F                     	;# 
  1230  0FE4                     	;# 
  1231  0FE5                     	;# 
  1232  0FE6                     	;# 
  1233  0FE7                     	;# 
  1234  0FE8                     	;# 
  1235  0FE9                     	;# 
  1236  0FEA                     	;# 
  1237  0FEB                     	;# 
  1238  0FED                     	;# 
  1239  0FEE                     	;# 
  1240  0FEF                     	;_WorkQue
  1241                           
  1242                           	psect	idataBANK0
  1243  0003                     __pidataBANK0:	
  1244                           
  1245                           ;initializer for _HashTime
  1246  0003  34DD               	retlw	221
  1247                           
  1248                           	psect	idataBANK2
  1249  19DB                     __pidataBANK2:	
  1250                           
  1251                           ;initializer for _Status
  1252  19DB  3449               	retlw	73
  1253  19DC  3400               	retlw	0
  1254  19DD  3400               	retlw	0
  1255  19DE  3400               	retlw	0
  1256  19DF  3400               	retlw	0
  1257  19E0  3400               	retlw	0
  1258  19E1  3400               	retlw	0
  1259  19E2  3400               	retlw	0
  1260  19E3  3400               	retlw	0
  1261  19E4  3400               	retlw	0
  1262  19E5  3400               	retlw	0
  1263  19E6  3440               	retlw	64
  1264  19E7  3400               	retlw	0
  1265                           
  1266                           	psect	idataBANK3
  1267  1AA5                     __pidataBANK3:	
  1268                           
  1269                           ;initializer for AsicPreCalc@F3347
  1270  1AA5  3498               	retlw	152
  1271  1AA6  342F               	retlw	47
  1272  1AA7  348A               	retlw	138
  1273  1AA8  3442               	retlw	66
  1274  1AA9  3491               	retlw	145
  1275  1AAA  3444               	retlw	68
  1276  1AAB  3437               	retlw	55
  1277  1AAC  3471               	retlw	113
  1278  1AAD  34CF               	retlw	207
  1279  1AAE  34FB               	retlw	251
  1280  1AAF  34C0               	retlw	192
  1281  1AB0  34B5               	retlw	181
  1282                           
  1283                           ;initializer for _ClockCfg
  1284  1AB1  3407               	retlw	7
  1285  1AB2  3400               	retlw	0
  1286  1AB3  347B               	retlw	123
  1287  1AB4  3405               	retlw	5
  1288  1AB5  3472               	retlw	114
  1289  1AB6  3401               	retlw	1
  1290  1AB7  3400               	retlw	0
  1291  1AB8  3400               	retlw	0
  1292                           
  1293                           ;initializer for _Cfg
  1294  1AB9  345E               	retlw	94
  1295  1ABA  3401               	retlw	1
  1296  1ABB  348F               	retlw	143
  1297  1ABC  3400               	retlw	0
  1298  1ABD  3400               	retlw	0
  1299  1ABE  3400               	retlw	0
  1300                           
  1301                           	psect	idataBANK7
  1302  1B31                     __pidataBANK7:	
  1303                           
  1304                           ;initializer for _BankRanges
  1305  1B31  3400               	retlw	0
  1306  1B32  3400               	retlw	0
  1307  1B33  3400               	retlw	0
  1308  1B34  3400               	retlw	0
  1309  1B35  3400               	retlw	0
  1310  1B36  3400               	retlw	0
  1311  1B37  3400               	retlw	0
  1312  1B38  3440               	retlw	64
  1313  1B39  34AA               	retlw	170
  1314  1B3A  34AA               	retlw	170
  1315  1B3B  34AA               	retlw	170
  1316  1B3C  342A               	retlw	42
  1317  1B3D  3400               	retlw	0
  1318  1B3E  3400               	retlw	0
  1319  1B3F  3400               	retlw	0
  1320  1B40  3420               	retlw	32
  1321  1B41  3499               	retlw	153
  1322  1B42  3499               	retlw	153
  1323  1B43  3499               	retlw	153
  1324  1B44  3419               	retlw	25
  1325  1B45  3455               	retlw	85
  1326  1B46  3455               	retlw	85
  1327  1B47  3455               	retlw	85
  1328  1B48  3415               	retlw	21
  1329  1B49  3492               	retlw	146
  1330  1B4A  3424               	retlw	36
  1331  1B4B  3449               	retlw	73
  1332  1B4C  3412               	retlw	18
  1333  1B4D  3400               	retlw	0
  1334  1B4E  3400               	retlw	0
  1335  1B4F  3400               	retlw	0
  1336  1B50  3410               	retlw	16
  1337                           
  1338                           	psect	strings
  1339  0800                     __pstrings:	
  1340  0800                     __stringtab:	
  1341  0800  3400               	retlw	0
  1342  0801                     __end_of__stringtab:	
  1343  0801                     _USB_SD_Ptr:	
  1344  0801  34AB               	retlw	(_sd000| (0+32768))& (0+255)
  1345  0802  3405               	retlw	(_sd001| (0+32768))& (0+255)
  1346  0803  3439               	retlw	(_sd002| (0+32768))& (0+255)
  1347  0804                     __end_of_USB_SD_Ptr:	
  1348  0804                     _USB_CD_Ptr:	
  1349  0804  346D               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1350  0805                     __end_of_USB_CD_Ptr:	
  1351  0805                     _sd001:	
  1352  0805  3434               	retlw	52
  1353  0806  3403               	retlw	3
  1354  0807  344B               	retlw	75
  1355  0808  3400               	retlw	0
  1356  0809  346C               	retlw	108
  1357  080A  3400               	retlw	0
  1358  080B  346F               	retlw	111
  1359  080C  3400               	retlw	0
  1360  080D  346E               	retlw	110
  1361  080E  3400               	retlw	0
  1362  080F  3464               	retlw	100
  1363  0810  3400               	retlw	0
  1364  0811  3469               	retlw	105
  1365  0812  3400               	retlw	0
  1366  0813  346B               	retlw	107
  1367  0814  3400               	retlw	0
  1368  0815  3465               	retlw	101
  1369  0816  3400               	retlw	0
  1370  0817  3420               	retlw	32
  1371  0818  3400               	retlw	0
  1372  0819  3450               	retlw	80
  1373  081A  3400               	retlw	0
  1374  081B  3472               	retlw	114
  1375  081C  3400               	retlw	0
  1376  081D  346F               	retlw	111
  1377  081E  3400               	retlw	0
  1378  081F  346A               	retlw	106
  1379  0820  3400               	retlw	0
  1380  0821  3465               	retlw	101
  1381  0822  3400               	retlw	0
  1382  0823  3463               	retlw	99
  1383  0824  3400               	retlw	0
  1384  0825  3474               	retlw	116
  1385  0826  3400               	retlw	0
  1386  0827  3400               	retlw	0
  1387  0828  3400               	retlw	0
  1388  0829  3400               	retlw	0
  1389  082A  3400               	retlw	0
  1390  082B  3400               	retlw	0
  1391  082C  3400               	retlw	0
  1392  082D  3400               	retlw	0
  1393  082E  3400               	retlw	0
  1394  082F  3400               	retlw	0
  1395  0830  3400               	retlw	0
  1396  0831  3400               	retlw	0
  1397  0832  3400               	retlw	0
  1398  0833  3400               	retlw	0
  1399  0834  3400               	retlw	0
  1400  0835  3400               	retlw	0
  1401  0836  3400               	retlw	0
  1402  0837  3400               	retlw	0
  1403  0838  3400               	retlw	0
  1404  0839                     __end_of_sd001:	
  1405  0839                     _sd002:	
  1406  0839  3434               	retlw	52
  1407  083A  3403               	retlw	3
  1408  083B  344B               	retlw	75
  1409  083C  3400               	retlw	0
  1410  083D  3431               	retlw	49
  1411  083E  3400               	retlw	0
  1412  083F  3436               	retlw	54
  1413  0840  3400               	retlw	0
  1414  0841  3400               	retlw	0
  1415  0842  3400               	retlw	0
  1416  0843  3400               	retlw	0
  1417  0844  3400               	retlw	0
  1418  0845  3400               	retlw	0
  1419  0846  3400               	retlw	0
  1420  0847  3400               	retlw	0
  1421  0848  3400               	retlw	0
  1422  0849  3400               	retlw	0
  1423  084A  3400               	retlw	0
  1424  084B  3400               	retlw	0
  1425  084C  3400               	retlw	0
  1426  084D  3400               	retlw	0
  1427  084E  3400               	retlw	0
  1428  084F  3400               	retlw	0
  1429  0850  3400               	retlw	0
  1430  0851  3400               	retlw	0
  1431  0852  3400               	retlw	0
  1432  0853  3400               	retlw	0
  1433  0854  3400               	retlw	0
  1434  0855  3400               	retlw	0
  1435  0856  3400               	retlw	0
  1436  0857  3400               	retlw	0
  1437  0858  3400               	retlw	0
  1438  0859  3400               	retlw	0
  1439  085A  3400               	retlw	0
  1440  085B  3400               	retlw	0
  1441  085C  3400               	retlw	0
  1442  085D  3400               	retlw	0
  1443  085E  3400               	retlw	0
  1444  085F  3400               	retlw	0
  1445  0860  3400               	retlw	0
  1446  0861  3400               	retlw	0
  1447  0862  3400               	retlw	0
  1448  0863  3400               	retlw	0
  1449  0864  3400               	retlw	0
  1450  0865  3400               	retlw	0
  1451  0866  3400               	retlw	0
  1452  0867  3400               	retlw	0
  1453  0868  3400               	retlw	0
  1454  0869  3400               	retlw	0
  1455  086A  3400               	retlw	0
  1456  086B  3400               	retlw	0
  1457  086C  3400               	retlw	0
  1458  086D                     __end_of_sd002:	
  1459  086D                     _configDescriptor1:	
  1460  086D  3409               	retlw	9
  1461  086E  3402               	retlw	2
  1462  086F  3420               	retlw	32
  1463  0870  3400               	retlw	0
  1464  0871  3401               	retlw	1
  1465  0872  3401               	retlw	1
  1466  0873  3400               	retlw	0
  1467  0874  34C0               	retlw	192
  1468  0875  3432               	retlw	50
  1469  0876  3409               	retlw	9
  1470  0877  3404               	retlw	4
  1471  0878  3400               	retlw	0
  1472  0879  3400               	retlw	0
  1473  087A  3402               	retlw	2
  1474  087B  34FF               	retlw	255
  1475  087C  34FF               	retlw	255
  1476  087D  34FF               	retlw	255
  1477  087E  3400               	retlw	0
  1478  087F  3407               	retlw	7
  1479  0880  3405               	retlw	5
  1480  0881  3401               	retlw	1
  1481  0882  3402               	retlw	2
  1482  0883  3440               	retlw	64
  1483  0884  3400               	retlw	0
  1484  0885  3401               	retlw	1
  1485  0886  3407               	retlw	7
  1486  0887  3405               	retlw	5
  1487  0888  3481               	retlw	129
  1488  0889  3402               	retlw	2
  1489  088A  3440               	retlw	64
  1490  088B  3400               	retlw	0
  1491  088C  3401               	retlw	1
  1492  088D                     __end_of_configDescriptor1:	
  1493  088D                     _device_dsc:	
  1494  088D  3412               	retlw	18
  1495  088E  3401               	retlw	1
  1496  088F  3400               	retlw	0
  1497  0890  3402               	retlw	2
  1498  0891  3400               	retlw	0
  1499  0892  3400               	retlw	0
  1500  0893  3400               	retlw	0
  1501  0894  3408               	retlw	8
  1502  0895  34D8               	retlw	216
  1503  0896  3404               	retlw	4
  1504  0897  340A               	retlw	10
  1505  0898  34F6               	retlw	246
  1506  0899  3400               	retlw	0
  1507  089A  3400               	retlw	0
  1508  089B  3401               	retlw	1
  1509  089C  3402               	retlw	2
  1510  089D  3400               	retlw	0
  1511  089E  3401               	retlw	1
  1512  089F                     __end_of_device_dsc:	
  1513  089F                     _ID:	
  1514  089F  3410               	retlw	16
  1515  08A0  344B               	retlw	75
  1516  08A1  3431               	retlw	49
  1517  08A2  3436               	retlw	54
  1518  08A3  3400               	retlw	0
  1519  08A4  3400               	retlw	0
  1520  08A5  3400               	retlw	0
  1521  08A6  3400               	retlw	0
  1522  08A7  34EF               	retlw	239
  1523  08A8  34BE               	retlw	190
  1524  08A9  34AD               	retlw	173
  1525  08AA  34DE               	retlw	222
  1526  08AB                     __end_of_ID:	
  1527  08AB                     _sd000:	
  1528  08AB  3404               	retlw	4
  1529  08AC  3403               	retlw	3
  1530  08AD  3409               	retlw	9
  1531  08AE  3404               	retlw	4
  1532  08AF                     __end_of_sd000:	
  1533                           
  1534                           	psect	nvBANK3
  1535  01E6                     __pnvBANK3:	
  1536  01E6                     _FanLevel:	
  1537  01E6                     	ds	1
  1538  01E7                     _TempTarget:	
  1539  01E7                     	ds	1
  1540  01E8                     _BankSize:	
  1541  01E8                     	ds	1
  1542  000B                     _INTCONbits	set	11
  1543  0012                     _PIR2bits	set	18
  1544  001B                     _PR2	set	27
  1545  0018                     _T1CONbits	set	24
  1546  0019                     _T1GCONbits	set	25
  1547  001C                     _T2CONbits	set	28
  1548  0015                     _TMR0	set	21
  1549  0017                     _TMR1H	set	23
  1550  0016                     _TMR1L	set	22
  1551  005F                     _GIE	set	95
  1552  008D                     _RCIF	set	141
  1553  008B                     _SSP1IF	set	139
  1554  00CC                     _T1GSPM	set	204
  1555  005A                     _TMR0IF	set	90
  1556  00CF                     _TMR1GE	set	207
  1557  008F                     _TMR1GIF	set	143
  1558  0088                     _TMR1IF	set	136
  1559  00C0                     _TMR1ON	set	192
  1560  0089                     _TMR2IF	set	137
  1561  00E2                     _TMR2ON	set	226
  1562  009D                     _ADCON0bits	set	157
  1563  009E                     _ADCON1bits	set	158
  1564  009F                     _ADCON2bits	set	159
  1565  009C                     _ADRESH	set	156
  1566  0095                     _OPTION_REGbits	set	149
  1567  0099                     _OSCCON	set	153
  1568  0098                     _OSCTUNE	set	152
  1569  0092                     _PIE2bits	set	146
  1570  008C                     _TRISAbits	set	140
  1571  008D                     _TRISBbits	set	141
  1572  008E                     _TRISCbits	set	142
  1573  04AD                     _TMR0CS	set	1197
  1574  048F                     _TMR1GIE	set	1167
  1575  0488                     _TMR1IE	set	1160
  1576  010C                     _LATAbits	set	268
  1577  010E                     _LATC	set	270
  1578  010E                     _LATCbits	set	270
  1579  018C                     _ANSELA	set	396
  1580  018D                     _ANSELB	set	397
  1581  018D                     _ANSELBbits	set	397
  1582  018E                     _ANSELC	set	398
  1583  019F                     _BAUDCONbits	set	415
  1584  0199                     _RCREG	set	409
  1585  019D                     _RCSTAbits	set	413
  1586  019E                     _TXSTAbits	set	414
  1587  0212                     _SSPADD	set	530
  1588  0211                     _SSPBUF	set	529
  1589  0215                     _SSPCON1bits	set	533
  1590  0216                     _SSPCON2bits	set	534
  1591  0217                     _SSPCON3bits	set	535
  1592  0214                     _SSPSTATbits	set	532
  1593  10AD                     _SSP1EN	set	4269
  1594  039B                     _ACTCON	set	923
  1595  0396                     _IOCBF	set	918
  1596  0394                     _IOCBPbits	set	916
  1597  1C9B                     _IOCAF3	set	7323
  1598  0613                     _PWM1CON	set	1555
  1599  0612                     _PWM1DCH	set	1554
  1600  0611                     _PWM1DCL	set	1553
  1601  309E                     _PWM1OE	set	12446
  1602  0E96                     _UADDR	set	3734
  1603  0E91                     _UCFG	set	3729
  1604  0E8E                     _UCON	set	3726
  1605  0E8E                     _UCONbits	set	3726
  1606  0E97                     _UEIE	set	3735
  1607  0E93                     _UEIR	set	3731
  1608  0E98                     _UEP0bits	set	3736
  1609  0E92                     _UIE	set	3730
  1610  0E92                     _UIEbits	set	3730
  1611  0E90                     _UIR	set	3728
  1612  0E90                     _UIRbits	set	3728
  1613  0E8F                     _USTAT	set	3727
  1614  0E98                     _UEP0	set	3736
  1615  0E99                     _UEP1	set	3737
  1616                           
  1617                           ; #config settings
  1618  0000                     
  1619                           	psect	cinit
  1620  11F4                     start_initialization:	
  1621  11F4                     __initialization:		;BIGRAM
  1622                           
  1623                           ; Clear objects allocated to BIGRAM
  1624  11F4  303C               	movlw	low (0+9020)
  1625  11F5  0084               	movwf	4
  1626  11F6  3023               	movlw	high (0+9020)
  1627  11F7  0085               	movwf	5
  1628  11F8  30B4               	movlw	180
  1629  11F9  00FE               	movwf	btemp
  1630  11FA  3000               	movlw	0
  1631  11FB  00FF               	movwf	btemp+1
  1632  11FC  3199  21CF  3191   	fcall	clear_ram0
  1633                           
  1634                           ; Clear objects allocated to BANK0
  1635  11FF  3062               	movlw	low __pbssBANK0
  1636  1200  0084               	movwf	4
  1637  1201  3000               	movlw	high __pbssBANK0
  1638  1202  0085               	movwf	5
  1639  1203  300D               	movlw	13
  1640  1204  00FE               	movwf	btemp
  1641  1205  3000               	movlw	0
  1642  1206  00FF               	movwf	btemp+1
  1643  1207  3199  21CF  3191   	fcall	clear_ram0
  1644                           
  1645                           ; Clear objects allocated to BANK1
  1646  120A  30E3               	movlw	low __pbssBANK1
  1647  120B  0084               	movwf	4
  1648  120C  3000               	movlw	high __pbssBANK1
  1649  120D  0085               	movwf	5
  1650  120E  300D               	movlw	13
  1651  120F  00FE               	movwf	btemp
  1652  1210  3000               	movlw	0
  1653  1211  00FF               	movwf	btemp+1
  1654  1212  3199  21CF  3191   	fcall	clear_ram0
  1655                           
  1656                           ; Clear objects allocated to BANK2
  1657  1215  3066               	movlw	low __pbssBANK2
  1658  1216  0084               	movwf	4
  1659  1217  3001               	movlw	high __pbssBANK2
  1660  1218  0085               	movwf	5
  1661  1219  300A               	movlw	10
  1662  121A  00FE               	movwf	btemp
  1663  121B  3000               	movlw	0
  1664  121C  00FF               	movwf	btemp+1
  1665  121D  3199  21CF  3191   	fcall	clear_ram0
  1666                           
  1667                           ; Clear objects allocated to BANK3
  1668  1220  30A0               	movlw	low __pbssBANK3
  1669  1221  0084               	movwf	4
  1670  1222  3001               	movlw	high __pbssBANK3
  1671  1223  0085               	movwf	5
  1672  1224  302C               	movlw	44
  1673  1225  00FE               	movwf	btemp
  1674  1226  3000               	movlw	0
  1675  1227  00FF               	movwf	btemp+1
  1676  1228  3199  21CF  3191   	fcall	clear_ram0
  1677                           
  1678                           ; Clear objects allocated to BANK4
  1679  122B  3060               	movlw	low __pbssBANK4
  1680  122C  0084               	movwf	4
  1681  122D  3002               	movlw	high __pbssBANK4
  1682  122E  0085               	movwf	5
  1683  122F  3010               	movlw	16
  1684  1230  00FE               	movwf	btemp
  1685  1231  3000               	movlw	0
  1686  1232  00FF               	movwf	btemp+1
  1687  1233  3199  21CF  3191   	fcall	clear_ram0
  1688                           
  1689                           ; Clear objects allocated to BANK6
  1690  1236  3020               	movlw	low __pbssBANK6
  1691  1237  0084               	movwf	4
  1692  1238  3003               	movlw	high __pbssBANK6
  1693  1239  0085               	movwf	5
  1694  123A  3038               	movlw	56
  1695  123B  00FE               	movwf	btemp
  1696  123C  3000               	movlw	0
  1697  123D  00FF               	movwf	btemp+1
  1698  123E  3199  21CF  3191   	fcall	clear_ram0
  1699                           
  1700                           ; Initialize objects allocated to BANK0
  1701  1241  3180  2003  3191   	fcall	__pidataBANK0	;fetch initializer
  1702  1244  00EF               	movwf	__pdataBANK0& (0+127)
  1703                           
  1704                           ; Initialize objects allocated to BANK2
  1705  1245  30DB               	movlw	low __pidataBANK2
  1706  1246  0084               	movwf	4
  1707  1247  3099               	movlw	(high __pidataBANK2)| (0+128)
  1708  1248  0085               	movwf	5
  1709  1249  3059               	movlw	low __pdataBANK2
  1710  124A  0086               	movwf	6
  1711  124B  3001               	movlw	high __pdataBANK2
  1712  124C  0087               	movwf	7
  1713  124D  3000               	movlw	0
  1714  124E  00FF               	movwf	btemp+1
  1715  124F  300D               	movlw	13
  1716  1250  3199  21C3  3191   	fcall	init_ram
  1717                           
  1718                           ; Initialize objects allocated to BANK3
  1719  1253  30A5               	movlw	low __pidataBANK3
  1720  1254  0084               	movwf	4
  1721  1255  309A               	movlw	(high __pidataBANK3)| (0+128)
  1722  1256  0085               	movwf	5
  1723  1257  30CC               	movlw	low __pdataBANK3
  1724  1258  0086               	movwf	6
  1725  1259  3001               	movlw	high __pdataBANK3
  1726  125A  0087               	movwf	7
  1727  125B  3000               	movlw	0
  1728  125C  00FF               	movwf	btemp+1
  1729  125D  301A               	movlw	26
  1730  125E  3199  21C3  3191   	fcall	init_ram
  1731                           
  1732                           ; Initialize objects allocated to BANK7
  1733  1261  3031               	movlw	low __pidataBANK7
  1734  1262  0084               	movwf	4
  1735  1263  309B               	movlw	(high __pidataBANK7)| (0+128)
  1736  1264  0085               	movwf	5
  1737  1265  30A0               	movlw	low __pdataBANK7
  1738  1266  0086               	movwf	6
  1739  1267  3003               	movlw	high __pdataBANK7
  1740  1268  0087               	movwf	7
  1741  1269  3000               	movlw	0
  1742  126A  00FF               	movwf	btemp+1
  1743  126B  3020               	movlw	32
  1744  126C  3199  21C3         	fcall	init_ram
  1745  126E                     end_of_initialization:	
  1746                           ;End of C runtime variable initialization code
  1747                           
  1748  126E                     __end_of__initialization:	
  1749  126E  0020               	movlb	0
  1750  126F  319A  2A5C         	ljmp	_main	;jump to C main() function
  1751                           
  1752                           	psect	bssBANK0
  1753  0062                     __pbssBANK0:	
  1754  0062                     _I2CCmd:	
  1755  0062                     	ds	1
  1756  0063                     _I2CCount:	
  1757  0063                     	ds	1
  1758  0064                     _I2CState:	
  1759  0064                     	ds	1
  1760  0065                     _LastTemp:	
  1761  0065                     	ds	1
  1762  0066                     _ResultPos:	
  1763  0066                     	ds	1
  1764  0067                     _USBDeferStatusStagePacket:	
  1765  0067                     	ds	1
  1766  0068                     _controlTransferState:	
  1767  0068                     	ds	1
  1768  0069                     _endpoint_number:	
  1769  0069                     	ds	1
  1770  006A                     _pBDTEntryEP0OutNext:	
  1771  006A                     	ds	1
  1772  006B                     _ptr:	
  1773  006B                     	ds	1
  1774  006C                     _shortPacketStatus:	
  1775  006C                     	ds	1
  1776  006D                     _USBActiveConfiguration:	
  1777  006D                     	ds	1
  1778  006E                     _USBAlternateInterface:	
  1779  006E                     	ds	1
  1780                           
  1781                           	psect	dataBANK0
  1782  006F                     __pdataBANK0:	
  1783  006F                     _HashTime:	
  1784  006F                     	ds	1
  1785                           
  1786                           	psect	bssBANK1
  1787  00E3                     __pbssBANK1:	
  1788  00E3                     _pBDTEntryIn:	
  1789  00E3                     	ds	2
  1790  00E5                     _SlaveAddress:	
  1791  00E5                     	ds	1
  1792  00E6                     _USBDeviceState:	
  1793  00E6                     	ds	1
  1794  00E7                     _WorkNow:	
  1795  00E7                     	ds	1
  1796  00E8                     _pBDTEntryEP0OutCurrent:	
  1797  00E8                     	ds	1
  1798  00E9                     _inPipes:	
  1799  00E9                     	ds	5
  1800  00EE                     _USTATcopy:	
  1801  00EE                     	ds	1
  1802  00EF                     _WQI:	
  1803  00EF                     	ds	1
  1804                           
  1805                           	psect	bssBANK2
  1806  0166                     __pbssBANK2:	
  1807  0166                     _send32_data:	
  1808  0166                     	ds	2
  1809  0168                     _RemoteWakeup:	
  1810  0168                     	ds	1
  1811  0169                     _USBStatusStageEnabledFlag1:	
  1812  0169                     	ds	1
  1813  016A                     _USBStatusStageTimeoutCounter:	
  1814  016A                     	ds	1
  1815  016B                     _last_bit0:	
  1816  016B                     	ds	1
  1817  016C                     _last_bit1:	
  1818  016C                     	ds	1
  1819  016D                     _pDst:	
  1820  016D                     	ds	1
  1821  016E                     _send32_count:	
  1822  016E                     	ds	1
  1823  016F                     _WQX:	
  1824  016F                     	ds	1
  1825                           
  1826                           	psect	dataBANK2
  1827  0159                     __pdataBANK2:	
  1828  0159                     _Status:	
  1829  0159                     	ds	13
  1830                           
  1831                           	psect	bssBANK3
  1832  01A0                     __pbssBANK3:	
  1833  01A0                     _outPipes:	
  1834  01A0                     	ds	6
  1835  01A6                     USBCBSendResume@delay_count:	
  1836  01A6                     	ds	2
  1837  01A8                     _Error:	
  1838  01A8                     	ds	2
  1839  01AA                     _LastError:	
  1840  01AA                     	ds	2
  1841  01AC                     _Step:	
  1842  01AC                     	ds	2
  1843  01AE                     _ep_data_in:	
  1844  01AE                     	ds	2
  1845  01B0                     _ep_data_out:	
  1846  01B0                     	ds	2
  1847  01B2                     _pBDTEntryOut:	
  1848  01B2                     	ds	2
  1849  01B4                     _BothEP0OutUOWNsSet:	
  1850  01B4                     	ds	1
  1851  01B5                     _I2CAddr:	
  1852  01B5                     	ds	1
  1853  01B6                     _I2CInBuf:	
  1854  01B6                     	ds	1
  1855  01B7                     _ResultQC:	
  1856  01B7                     	ds	1
  1857  01B8                     _SlowTick:	
  1858  01B8                     	ds	1
  1859  01B9                     _TimeOut:	
  1860  01B9                     	ds	1
  1861  01BA                     _USBBusIsSuspended:	
  1862  01BA                     	ds	1
  1863  01BB                     _USBDeferINDataStagePackets:	
  1864  01BB                     	ds	1
  1865  01BC                     _USBDeferOUTDataStagePackets:	
  1866  01BC                     	ds	1
  1867  01BD                     _USBGenericInHandle:	
  1868  01BD                     	ds	1
  1869  01BE                     _USBGenericOutHandle:	
  1870  01BE                     	ds	1
  1871  01BF                     _USBStatusStageEnabledFlag2:	
  1872  01BF                     	ds	1
  1873  01C0                     _ResultQue:	
  1874  01C0                     	ds	12
  1875                           
  1876                           	psect	dataBANK3
  1877  01CC                     __pdataBANK3:	
  1878  01CC                     AsicPreCalc@F3347:	
  1879  01CC                     	ds	12
  1880  01D8                     _ClockCfg:	
  1881  01D8                     	ds	8
  1882  01E0                     _Cfg:	
  1883  01E0                     	ds	6
  1884                           
  1885                           	psect	bssBANK4
  1886  0260                     __pbssBANK4:	
  1887  0260                     _buf:	
  1888  0260                     	ds	16
  1889                           
  1890                           	psect	bssBANK6
  1891  0320                     __pbssBANK6:	
  1892  0320                     _NonceRanges:	
  1893  0320                     	ds	32
  1894  0340                     _PrecalcHashes:	
  1895  0340                     	ds	24
  1896                           
  1897                           	psect	dataBANK7
  1898  03A0                     __pdataBANK7:	
  1899  03A0                     _BankRanges:	
  1900  03A0                     	ds	32
  1901                           
  1902                           	psect	clrtext
  1903  19CF                     clear_ram0:	
  1904                           ;	Called with FSR0 containing the base address, and
  1905                           ;	btemp/btemp+1 has the size to clear
  1906                           
  1907  19CF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1908  19D0                     clrloop0:	
  1909  19D0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1910  19D1  3101               	addfsr 0,1
  1911  19D2  3001               	movlw	1
  1912  19D3  02FE               	subwf	126,f
  1913  19D4  3000               	movlw	0
  1914  19D5  3BFF               	subwfb	127,f
  1915  19D6  087F               	movf	127,w
  1916  19D7  047E               	iorwf	126,w
  1917  19D8  1903               	btfsc	3,2
  1918  19D9  3400               	retlw	0	;all done for this memory range, return
  1919  19DA  29D0               	goto	clrloop0	;have we reached the end yet?
  1920                           
  1921                           	psect	inittext
  1922  19C3                     init_ram:	
  1923  19C3  00FE               	movwf	126
  1924  19C4                     initloop:	
  1925  19C4  0012               	moviw fsr0++
  1926  19C5  001E               	movwi fsr1++
  1927  19C6  3001               	movlw	1
  1928  19C7  02FE               	subwf	126,f
  1929  19C8  3000               	movlw	0
  1930  19C9  3BFF               	subwfb	127,f
  1931  19CA  087F               	movf	127,w
  1932  19CB  047E               	iorwf	126,w
  1933  19CC  1903               	btfsc	3,2
  1934  19CD  3400               	retlw	0
  1935  19CE  29C4               	goto	initloop
  1936                           
  1937                           	psect	cstackBANK2
  1938  0120                     __pcstackBANK2:	
  1939  0120                     AsicPreCalc@K:	
  1940                           
  1941                           ; 12 bytes @ 0x0
  1942  0120                     	ds	12
  1943  012C                     AsicPreCalc@m:	
  1944                           
  1945                           ; 32 bytes @ 0xC
  1946  012C                     	ds	32
  1947  014C                     AsicPreCalc@z:	
  1948                           
  1949                           ; 4 bytes @ 0x2C
  1950  014C                     	ds	4
  1951  0150                     AsicPreCalc@y:	
  1952                           
  1953                           ; 4 bytes @ 0x30
  1954  0150                     	ds	4
  1955  0154                     AsicPreCalc@x:	
  1956                           
  1957                           ; 4 bytes @ 0x34
  1958  0154                     	ds	4
  1959  0158                     AsicPreCalc@n:	
  1960                           
  1961                           ; 1 bytes @ 0x38
  1962  0158                     	ds	1
  1963                           
  1964                           	psect	cstackBANK1
  1965  00A0                     __pcstackBANK1:	
  1966  00A0                     ??_USBConfigureEndpoint:	
  1967  00A0                     ??_memset:	
  1968                           ; 0 bytes @ 0x0
  1969                           
  1970  00A0                     ??_USBCtrlTrfInHandler:	
  1971                           ; 0 bytes @ 0x0
  1972                           
  1973  00A0                     ??_USBCtrlEPAllowDataStage:	
  1974                           ; 0 bytes @ 0x0
  1975                           
  1976  00A0                     ??___awdiv:	
  1977                           ; 0 bytes @ 0x0
  1978                           
  1979  00A0                     ??___lwdiv:	
  1980                           ; 0 bytes @ 0x0
  1981                           
  1982  00A0                     ?_USBTransferOnePacket:	
  1983                           ; 0 bytes @ 0x0
  1984                           
  1985  00A0                     ?___ftpack:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988  00A0                     ?_rotate:	
  1989                           ; 3 bytes @ 0x0
  1990                           
  1991  00A0                     USBTransferOnePacket@dir:	
  1992                           ; 4 bytes @ 0x0
  1993                           
  1994  00A0                     USBCtrlTrfRxService@i:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  00A0                     USBDeviceInit@p:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  00A0                     ___wmul@product:	
  2001                           ; 2 bytes @ 0x0
  2002                           
  2003  00A0                     ___ftpack@arg:	
  2004                           ; 2 bytes @ 0x0
  2005                           
  2006  00A0                     rotate@x:	
  2007                           ; 3 bytes @ 0x0
  2008                           
  2009                           
  2010                           ; 4 bytes @ 0x0
  2011  00A0                     	ds	1
  2012  00A1                     USBTransferOnePacket@data:	
  2013  00A1                     USBCtrlTrfRxService@byteToRead:	
  2014                           ; 1 bytes @ 0x1
  2015                           
  2016  00A1                     ___awdiv@counter:	
  2017                           ; 1 bytes @ 0x1
  2018                           
  2019  00A1                     ___lwdiv@counter:	
  2020                           ; 1 bytes @ 0x1
  2021                           
  2022  00A1                     memset@p1:	
  2023                           ; 1 bytes @ 0x1
  2024                           
  2025                           
  2026                           ; 1 bytes @ 0x1
  2027  00A1                     	ds	1
  2028  00A2                     ??_USBCtrlTrfOutHandler:	
  2029  00A2                     ?_SendCmdReply:	
  2030                           ; 0 bytes @ 0x2
  2031                           
  2032  00A2                     ??_USBCtrlEPServiceComplete:	
  2033                           ; 0 bytes @ 0x2
  2034                           
  2035  00A2                     ?_SendAsicData:	
  2036                           ; 0 bytes @ 0x2
  2037                           
  2038  00A2                     USBDeviceInit@i_718:	
  2039                           ; 0 bytes @ 0x2
  2040                           
  2041  00A2                     USBTransferOnePacket@len:	
  2042                           ; 1 bytes @ 0x2
  2043                           
  2044  00A2                     ___awdiv@sign:	
  2045                           ; 1 bytes @ 0x2
  2046                           
  2047  00A2                     memset@p:	
  2048                           ; 1 bytes @ 0x2
  2049                           
  2050  00A2                     SendAsicData@work:	
  2051                           ; 1 bytes @ 0x2
  2052                           
  2053  00A2                     SendCmdReply@cmd:	
  2054                           ; 2 bytes @ 0x2
  2055                           
  2056  00A2                     ___lwdiv@quotient:	
  2057                           ; 2 bytes @ 0x2
  2058                           
  2059                           
  2060                           ; 2 bytes @ 0x2
  2061  00A2                     	ds	1
  2062  00A3                     ??_USBTransferOnePacket:	
  2063  00A3                     USBDeviceInit@i:	
  2064                           ; 0 bytes @ 0x3
  2065                           
  2066  00A3                     ___ftpack@exp:	
  2067                           ; 1 bytes @ 0x3
  2068                           
  2069  00A3                     ___awdiv@quotient:	
  2070                           ; 1 bytes @ 0x3
  2071                           
  2072                           
  2073                           ; 2 bytes @ 0x3
  2074  00A3                     	ds	1
  2075  00A4                     ??_USBEnableEndpoint:	
  2076  00A4                     ??_SendAsicData:	
  2077                           ; 0 bytes @ 0x4
  2078                           
  2079  00A4                     rotate@y:	
  2080                           ; 0 bytes @ 0x4
  2081                           
  2082  00A4                     ___ftpack@sign:	
  2083                           ; 1 bytes @ 0x4
  2084                           
  2085  00A4                     SendCmdReply@data:	
  2086                           ; 1 bytes @ 0x4
  2087                           
  2088                           
  2089                           ; 2 bytes @ 0x4
  2090  00A4                     	ds	1
  2091  00A5                     ??_rotate:	
  2092  00A5                     ??_DetectAsics:	
  2093                           ; 0 bytes @ 0x5
  2094                           
  2095  00A5                     ?___awtoft:	
  2096                           ; 0 bytes @ 0x5
  2097                           
  2098  00A5                     ?___lbtoft:	
  2099                           ; 3 bytes @ 0x5
  2100                           
  2101  00A5                     USBTransferOnePacket@ep:	
  2102                           ; 3 bytes @ 0x5
  2103                           
  2104  00A5                     ___awtoft@c:	
  2105                           ; 1 bytes @ 0x5
  2106                           
  2107                           
  2108                           ; 2 bytes @ 0x5
  2109  00A5                     	ds	1
  2110  00A6                     USBTransferOnePacket@handle:	
  2111  00A6                     SendCmdReply@count:	
  2112                           ; 1 bytes @ 0x6
  2113                           
  2114  00A6                     USBEnableEndpoint@p:	
  2115                           ; 1 bytes @ 0x6
  2116                           
  2117                           
  2118                           ; 2 bytes @ 0x6
  2119  00A6                     	ds	1
  2120  00A7                     ??_SendCmdReply:	
  2121                           
  2122                           ; 0 bytes @ 0x7
  2123  00A7                     	ds	1
  2124  00A8                     ??___awtoft:	
  2125  00A8                     ??___lbtoft:	
  2126                           ; 0 bytes @ 0x8
  2127                           
  2128  00A8                     USBEnableEndpoint@ep:	
  2129                           ; 0 bytes @ 0x8
  2130                           
  2131                           
  2132                           ; 1 bytes @ 0x8
  2133  00A8                     	ds	1
  2134  00A9                     ??_USBCBInitEP:	
  2135                           
  2136                           ; 0 bytes @ 0x9
  2137  00A9                     	ds	1
  2138  00AA                     ?___ftmul:	
  2139  00AA                     ___ftmul@f1:	
  2140                           ; 3 bytes @ 0xA
  2141                           
  2142                           
  2143                           ; 3 bytes @ 0xA
  2144  00AA                     	ds	2
  2145  00AC                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2146  00AC                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2147                           ; 1 bytes @ 0xC
  2148                           
  2149  00AC                     _DetectAsics$2895:	
  2150                           ; 2 bytes @ 0xC
  2151                           
  2152                           
  2153                           ; 2 bytes @ 0xC
  2154  00AC                     	ds	1
  2155  00AD                     ?_AsicPreCalc:	
  2156  00AD                     AsicPreCalc@work:	
  2157                           ; 0 bytes @ 0xD
  2158                           
  2159  00AD                     ___ftmul@f2:	
  2160                           ; 2 bytes @ 0xD
  2161                           
  2162                           
  2163                           ; 3 bytes @ 0xD
  2164  00AD                     	ds	1
  2165  00AE                     DetectAsics@x:	
  2166  00AE                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2167                           ; 1 bytes @ 0xE
  2168                           
  2169                           
  2170                           ; 1 bytes @ 0xE
  2171  00AE                     	ds	1
  2172  00AF                     ??_AsicPreCalc:	
  2173  00AF                     SendCmdReply@n:	
  2174                           ; 0 bytes @ 0xF
  2175                           
  2176  00AF                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2177                           ; 1 bytes @ 0xF
  2178                           
  2179                           
  2180                           ; 2 bytes @ 0xF
  2181  00AF                     	ds	1
  2182  00B0                     ??___ftmul:	
  2183                           
  2184                           ; 0 bytes @ 0x10
  2185  00B0                     	ds	1
  2186  00B1                     ??_USBWakeFromSuspend:	
  2187  00B1                     ??_USBSuspend:	
  2188                           ; 0 bytes @ 0x11
  2189                           
  2190  00B1                     ??_USBStdFeatureReqHandler:	
  2191                           ; 0 bytes @ 0x11
  2192                           
  2193  00B1                     ??_USBStdSetCfgHandler:	
  2194                           ; 0 bytes @ 0x11
  2195                           
  2196                           
  2197                           ; 0 bytes @ 0x11
  2198  00B1                     	ds	1
  2199  00B2                     USBStdSetCfgHandler@p:	
  2200                           
  2201                           ; 2 bytes @ 0x12
  2202  00B2                     	ds	1
  2203  00B3                     USBStdFeatureReqHandler@pUEP:	
  2204                           
  2205                           ; 2 bytes @ 0x13
  2206  00B3                     	ds	1
  2207  00B4                     USBStdSetCfgHandler@i_1089:	
  2208  00B4                     ___ftmul@exp:	
  2209                           ; 1 bytes @ 0x14
  2210                           
  2211                           
  2212                           ; 1 bytes @ 0x14
  2213  00B4                     	ds	1
  2214  00B5                     USBStdSetCfgHandler@i:	
  2215  00B5                     USBStdFeatureReqHandler@current_ep_data:	
  2216                           ; 1 bytes @ 0x15
  2217                           
  2218  00B5                     ___ftmul@f3_as_product:	
  2219                           ; 1 bytes @ 0x15
  2220                           
  2221                           
  2222                           ; 3 bytes @ 0x15
  2223  00B5                     	ds	1
  2224  00B6                     USBStdFeatureReqHandler@p:	
  2225                           
  2226                           ; 1 bytes @ 0x16
  2227  00B6                     	ds	1
  2228  00B7                     ??_USBCheckStdRequest:	
  2229                           
  2230                           ; 0 bytes @ 0x17
  2231  00B7                     	ds	1
  2232  00B8                     ??_USBCtrlTrfSetupHandler:	
  2233  00B8                     ___ftmul@cntr:	
  2234                           ; 0 bytes @ 0x18
  2235                           
  2236                           
  2237                           ; 1 bytes @ 0x18
  2238  00B8                     	ds	1
  2239  00B9                     ??_USBCtrlEPService:	
  2240  00B9                     ??_AsicPushWork:	
  2241                           ; 0 bytes @ 0x19
  2242                           
  2243  00B9                     ___ftmul@sign:	
  2244                           ; 0 bytes @ 0x19
  2245                           
  2246                           
  2247                           ; 1 bytes @ 0x19
  2248  00B9                     	ds	1
  2249  00BA                     ?___ftneg:	
  2250  00BA                     ___ftneg@f1:	
  2251                           ; 3 bytes @ 0x1A
  2252                           
  2253                           
  2254                           ; 3 bytes @ 0x1A
  2255  00BA                     	ds	2
  2256  00BC                     USBCtrlEPService@setup_cnt:	
  2257                           
  2258                           ; 1 bytes @ 0x1C
  2259  00BC                     	ds	1
  2260  00BD                     ??_USBDeviceTasks:	
  2261  00BD                     ?___ftadd:	
  2262                           ; 0 bytes @ 0x1D
  2263                           
  2264  00BD                     ___ftadd@f1:	
  2265                           ; 3 bytes @ 0x1D
  2266                           
  2267                           
  2268                           ; 3 bytes @ 0x1D
  2269  00BD                     	ds	1
  2270  00BE                     ??_ProcessCmd:	
  2271                           
  2272                           ; 0 bytes @ 0x1E
  2273  00BE                     	ds	1
  2274  00BF                     USBDeviceTasks@i:	
  2275                           
  2276                           ; 1 bytes @ 0x1F
  2277  00BF                     	ds	1
  2278  00C0                     ___ftadd@f2:	
  2279                           
  2280                           ; 3 bytes @ 0x20
  2281  00C0                     	ds	2
  2282  00C2                     _ProcessCmd$2059:	
  2283                           
  2284                           ; 2 bytes @ 0x22
  2285  00C2                     	ds	1
  2286  00C3                     ??___ftadd:	
  2287                           
  2288                           ; 0 bytes @ 0x23
  2289  00C3                     	ds	1
  2290  00C4                     ProcessCmd@cmd:	
  2291                           
  2292                           ; 1 bytes @ 0x24
  2293  00C4                     	ds	1
  2294  00C5                     ??_ProcessIO:	
  2295                           
  2296                           ; 0 bytes @ 0x25
  2297  00C5                     	ds	2
  2298  00C7                     ___ftadd@sign:	
  2299                           
  2300                           ; 1 bytes @ 0x27
  2301  00C7                     	ds	1
  2302  00C8                     ___ftadd@exp2:	
  2303                           
  2304                           ; 1 bytes @ 0x28
  2305  00C8                     	ds	1
  2306  00C9                     ___ftadd@exp1:	
  2307  00C9                     _ProcessIO$2377:	
  2308                           ; 1 bytes @ 0x29
  2309                           
  2310                           
  2311                           ; 2 bytes @ 0x29
  2312  00C9                     	ds	1
  2313  00CA                     ?___ftge:	
  2314  00CA                     ?___fttol:	
  2315                           ; 1 bit 
  2316                           
  2317  00CA                     ___ftge@ff1:	
  2318                           ; 4 bytes @ 0x2A
  2319                           
  2320  00CA                     ___fttol@f1:	
  2321                           ; 3 bytes @ 0x2A
  2322                           
  2323                           
  2324                           ; 3 bytes @ 0x2A
  2325  00CA                     	ds	1
  2326  00CB                     _ProcessIO$2411:	
  2327                           
  2328                           ; 2 bytes @ 0x2B
  2329  00CB                     	ds	2
  2330  00CD                     ___ftge@ff2:	
  2331                           
  2332                           ; 3 bytes @ 0x2D
  2333  00CD                     	ds	1
  2334  00CE                     ??___fttol:	
  2335                           
  2336                           ; 0 bytes @ 0x2E
  2337  00CE                     	ds	2
  2338  00D0                     ??___ftge:	
  2339                           
  2340                           ; 0 bytes @ 0x30
  2341  00D0                     	ds	2
  2342  00D2                     ___fttol@sign1:	
  2343                           
  2344                           ; 1 bytes @ 0x32
  2345  00D2                     	ds	1
  2346  00D3                     ___fttol@lval:	
  2347                           
  2348                           ; 4 bytes @ 0x33
  2349  00D3                     	ds	4
  2350  00D7                     ___fttol@exp1:	
  2351                           
  2352                           ; 1 bytes @ 0x37
  2353  00D7                     	ds	1
  2354  00D8                     ??_UpdateFanLevel:	
  2355                           
  2356                           ; 0 bytes @ 0x38
  2357  00D8                     	ds	4
  2358  00DC                     _UpdateFanLevel$2899:	
  2359                           
  2360                           ; 3 bytes @ 0x3C
  2361  00DC                     	ds	3
  2362  00DF                     _UpdateFanLevel$2898:	
  2363                           
  2364                           ; 3 bytes @ 0x3F
  2365  00DF                     	ds	3
  2366  00E2                     ??_WorkTick:	
  2367                           
  2368                           ; 0 bytes @ 0x42
  2369  00E2                     	ds	1
  2370                           
  2371                           	psect	cstackCOMMON
  2372  0070                     __pcstackCOMMON:	
  2373  0070                     ?_USBWakeFromSuspend:	
  2374  0070                     ?_USBSuspend:	
  2375                           ; 0 bytes @ 0x0
  2376                           
  2377  0070                     ?_USBCtrlEPAllowStatusStage:	
  2378                           ; 0 bytes @ 0x0
  2379                           
  2380  0070                     ?_USBStallHandler:	
  2381                           ; 0 bytes @ 0x0
  2382                           
  2383  0070                     ?_USBCtrlEPService:	
  2384                           ; 0 bytes @ 0x0
  2385                           
  2386  0070                     ?_USBCtrlTrfTxService:	
  2387                           ; 0 bytes @ 0x0
  2388                           
  2389  0070                     ?_USBCtrlTrfSetupHandler:	
  2390                           ; 0 bytes @ 0x0
  2391                           
  2392  0070                     ?_USBCtrlTrfOutHandler:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ?_USBCtrlTrfInHandler:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_USBCheckStdRequest:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_USBStdFeatureReqHandler:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ?_Send32:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_AsicPushWork:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ?_UpdateFanLevel:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_InitializeSystem:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_ProcessIO:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_UserInit:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_USBDeviceInit:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0070                     ?_USBDeviceTasks:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0070                     ?_USBCtrlEPAllowDataStage:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0070                     ?_USBCtrlEPServiceComplete:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0070                     ?_USBCtrlTrfRxService:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0070                     ?_USBStdSetCfgHandler:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0070                     ?_USBStdGetDscHandler:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0070                     ?_USBStdGetStatusHandler:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0070                     ?_USBCheckVendorRequest:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0070                     ?_ProcessCmd:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0070                     ?_DetectAsics:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0070                     ?_WorkTick:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0070                     ?_ResultRx:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0070                     ?_InitFAN:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ?_InitTempSensor:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0070                     ?_InitWorkTick:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0070                     ?_InitResultRx:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0070                     ?_ISRCode:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0070                     ?_USBCBSuspend:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0070                     ?_USBCBWakeFromSuspend:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0070                     ?_USBCB_SOF_Handler:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0070                     ?_USBCBErrorHandler:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0070                     ?_USBCBCheckOtherReq:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0070                     ?_USBCBStdSetDscHandler:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0070                     ?_USBCBInitEP:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0070                     ?i1___bmul:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0070                     ?_main:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0070                     ?i1___wmul:	
  2504                           ; 2 bytes @ 0x0
  2505                           
  2506  0070                     i1___bmul@multiplicand:	
  2507                           ; 2 bytes @ 0x0
  2508                           
  2509  0070                     i1___wmul@multiplier:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512                           
  2513                           ; 2 bytes @ 0x0
  2514  0070                     	ds	1
  2515  0071                     ??i1___bmul:	
  2516                           
  2517                           ; 0 bytes @ 0x1
  2518  0071                     	ds	1
  2519  0072                     i1___bmul@multiplier:	
  2520  0072                     i1___wmul@multiplicand:	
  2521                           ; 1 bytes @ 0x2
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0x2
  2525  0072                     	ds	1
  2526  0073                     i1___bmul@product:	
  2527                           
  2528                           ; 1 bytes @ 0x3
  2529  0073                     	ds	1
  2530  0074                     ??i1___wmul:	
  2531  0074                     i1___wmul@product:	
  2532                           ; 0 bytes @ 0x4
  2533                           
  2534                           
  2535                           ; 2 bytes @ 0x4
  2536  0074                     	ds	2
  2537  0076                     ?i1_SendCmdReply:	
  2538  0076                     i1SendCmdReply@cmd:	
  2539                           ; 0 bytes @ 0x6
  2540                           
  2541                           
  2542                           ; 2 bytes @ 0x6
  2543  0076                     	ds	2
  2544  0078                     i1SendCmdReply@data:	
  2545                           
  2546                           ; 2 bytes @ 0x8
  2547  0078                     	ds	2
  2548  007A                     i1SendCmdReply@count:	
  2549                           
  2550                           ; 1 bytes @ 0xA
  2551  007A                     	ds	1
  2552  007B                     i1SendCmdReply@n:	
  2553                           
  2554                           ; 1 bytes @ 0xB
  2555  007B                     	ds	1
  2556  007C                     _ResultRx$3333:	
  2557                           
  2558                           ; 1 bytes @ 0xC
  2559  007C                     	ds	1
  2560  007D                     _ResultRx$3334:	
  2561                           
  2562                           ; 1 bytes @ 0xD
  2563  007D                     	ds	1
  2564                           
  2565                           	psect	cstackBANK0
  2566  0050                     __pcstackBANK0:	
  2567  0050                     ??i1_SendCmdReply:	
  2568                           
  2569                           ; 0 bytes @ 0x0
  2570  0050                     	ds	8
  2571  0058                     ??_ResultRx:	
  2572                           
  2573                           ; 0 bytes @ 0x8
  2574  0058                     	ds	5
  2575  005D                     ??_ISRCode:	
  2576                           
  2577                           ; 0 bytes @ 0xD
  2578  005D                     	ds	1
  2579  005E                     ??_USBCtrlEPAllowStatusStage:	
  2580  005E                     ??_USBStallHandler:	
  2581                           ; 0 bytes @ 0xE
  2582                           
  2583  005E                     ?_USBConfigureEndpoint:	
  2584                           ; 0 bytes @ 0xE
  2585                           
  2586  005E                     ??_USBCtrlTrfTxService:	
  2587                           ; 0 bytes @ 0xE
  2588                           
  2589  005E                     ??_Send32:	
  2590                           ; 0 bytes @ 0xE
  2591                           
  2592  005E                     ??___ftpack:	
  2593                           ; 0 bytes @ 0xE
  2594                           
  2595  005E                     ??_USBDeviceInit:	
  2596                           ; 0 bytes @ 0xE
  2597                           
  2598  005E                     ??_USBStdGetDscHandler:	
  2599                           ; 0 bytes @ 0xE
  2600                           
  2601  005E                     ??_USBStdGetStatusHandler:	
  2602                           ; 0 bytes @ 0xE
  2603                           
  2604  005E                     ??_USBCheckVendorRequest:	
  2605                           ; 0 bytes @ 0xE
  2606                           
  2607  005E                     ??_InitFAN:	
  2608                           ; 0 bytes @ 0xE
  2609                           
  2610  005E                     ??_InitTempSensor:	
  2611                           ; 0 bytes @ 0xE
  2612                           
  2613  005E                     ??_InitWorkTick:	
  2614                           ; 0 bytes @ 0xE
  2615                           
  2616  005E                     ??_InitResultRx:	
  2617                           ; 0 bytes @ 0xE
  2618                           
  2619  005E                     ??_USBCBSuspend:	
  2620                           ; 0 bytes @ 0xE
  2621                           
  2622  005E                     ??_USBCBWakeFromSuspend:	
  2623                           ; 0 bytes @ 0xE
  2624                           
  2625  005E                     ??_USBCB_SOF_Handler:	
  2626                           ; 0 bytes @ 0xE
  2627                           
  2628  005E                     ??_USBCBErrorHandler:	
  2629                           ; 0 bytes @ 0xE
  2630                           
  2631  005E                     ??_USBCBCheckOtherReq:	
  2632                           ; 0 bytes @ 0xE
  2633                           
  2634  005E                     ??_USBCBStdSetDscHandler:	
  2635                           ; 0 bytes @ 0xE
  2636                           
  2637  005E                     ?_memset:	
  2638                           ; 0 bytes @ 0xE
  2639                           
  2640  005E                     ?___bmul:	
  2641                           ; 1 bytes @ 0xE
  2642                           
  2643  005E                     ?___awdiv:	
  2644                           ; 1 bytes @ 0xE
  2645                           
  2646  005E                     ?___lwdiv:	
  2647                           ; 2 bytes @ 0xE
  2648                           
  2649  005E                     ?___wmul:	
  2650                           ; 2 bytes @ 0xE
  2651                           
  2652  005E                     USBConfigureEndpoint@direction:	
  2653                           ; 2 bytes @ 0xE
  2654                           
  2655  005E                     ___bmul@multiplicand:	
  2656                           ; 1 bytes @ 0xE
  2657                           
  2658  005E                     ___awdiv@divisor:	
  2659                           ; 1 bytes @ 0xE
  2660                           
  2661  005E                     ___lwdiv@divisor:	
  2662                           ; 2 bytes @ 0xE
  2663                           
  2664  005E                     memset@c:	
  2665                           ; 2 bytes @ 0xE
  2666                           
  2667  005E                     ___wmul@multiplier:	
  2668                           ; 2 bytes @ 0xE
  2669                           
  2670                           
  2671                           ; 2 bytes @ 0xE
  2672  005E                     	ds	1
  2673  005F                     ??___bmul:	
  2674  005F                     USBConfigureEndpoint@EPNum:	
  2675                           ; 0 bytes @ 0xF
  2676                           
  2677  005F                     USBStdGetStatusHandler@p:	
  2678                           ; 1 bytes @ 0xF
  2679                           
  2680                           
  2681                           ; 1 bytes @ 0xF
  2682  005F                     	ds	1
  2683  0060                     ??_USBCtrlTrfRxService:	
  2684  0060                     USBConfigureEndpoint@handle:	
  2685                           ; 0 bytes @ 0x10
  2686                           
  2687  0060                     USBCtrlTrfTxService@byteToSend:	
  2688                           ; 1 bytes @ 0x10
  2689                           
  2690  0060                     ___bmul@product:	
  2691                           ; 1 bytes @ 0x10
  2692                           
  2693  0060                     ___awdiv@dividend:	
  2694                           ; 1 bytes @ 0x10
  2695                           
  2696  0060                     ___lwdiv@dividend:	
  2697                           ; 2 bytes @ 0x10
  2698                           
  2699  0060                     memset@n:	
  2700                           ; 2 bytes @ 0x10
  2701                           
  2702  0060                     ___wmul@multiplicand:	
  2703                           ; 2 bytes @ 0x10
  2704                           
  2705                           
  2706                           ; 2 bytes @ 0x10
  2707  0060                     	ds	1
  2708  0061                     ?_USBEnableEndpoint:	
  2709  0061                     USBEnableEndpoint@options:	
  2710                           ; 0 bytes @ 0x11
  2711                           
  2712  0061                     USBCtrlTrfInHandler@lastDTS:	
  2713                           ; 1 bytes @ 0x11
  2714                           
  2715  0061                     ___awtoft@sign:	
  2716                           ; 1 bytes @ 0x11
  2717                           
  2718  0061                     ___bmul@multiplier:	
  2719                           ; 1 bytes @ 0x11
  2720                           
  2721  0061                     ___lbtoft@c:	
  2722                           ; 1 bytes @ 0x11
  2723                           
  2724                           
  2725                           ; 1 bytes @ 0x11
  2726  0061                     	ds	1
  2727  0062                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2728  0062                     ??_InitializeSystem:	
  2729                           ; 0 bytes @ 0x12
  2730                           
  2731  0062                     ??_UserInit:	
  2732                           ; 0 bytes @ 0x12
  2733                           
  2734  0062                     ??_main:	
  2735                           ; 0 bytes @ 0x12
  2736                           
  2737  0062                     ??___ftneg:	
  2738                           ; 0 bytes @ 0x12
  2739                           
  2740  0062                     ??___wmul:	
  2741                           ; 0 bytes @ 0x12
  2742                           
  2743                           
  2744                           	psect	maintext
  2745  1A5C                     __pmaintext:	
  2746                           ; 0 bytes @ 0x12
  2747 ;;
  2748 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2749 ;;
  2750 ;; *************** function _main *****************
  2751 ;; Defined at:
  2752 ;;		line 98 in file "main.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  2  854[COMMON] int 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 17F/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels required when called:   13
  2772 ;; This function calls:
  2773 ;;		_USBDeviceTasks
  2774 ;;		_AsicPushWork
  2775 ;;		_WorkTick
  2776 ;;		_InitializeSystem
  2777 ;;		_ProcessIO
  2778 ;; This function is called by:
  2779 ;;		Startup code after reset
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _main
  2785  1A5C                     _main:	
  2786                           
  2787                           ;main.c: 99: InitializeSystem();
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _main: [allreg]
  2791  1A5C  319A  228C  319A   	fcall	_InitializeSystem
  2792  1A5F                     l855:	
  2793                           ;main.c: 101: while(1)
  2794                           
  2795                           
  2796                           ;main.c: 102: {
  2797                           ;main.c: 119: USBDeviceTasks();
  2798  1A5F  318B  238F  319A   	fcall	_USBDeviceTasks
  2799                           
  2800                           ;main.c: 133: if(TMR0IF)
  2801  1A62  1D0B               	btfss	11,2	;volatile
  2802  1A63  2A67               	goto	l7795
  2803                           
  2804                           ;main.c: 134: WorkTick();
  2805  1A64  319C  24CD  319A   	fcall	_WorkTick
  2806  1A67                     l7795:	
  2807                           
  2808                           ;main.c: 136: if(Status.State == 'P'){
  2809  1A67  0022               	movlb	2	; select bank2
  2810  1A68  0859               	movf	_Status^(0+256),w	;volatile
  2811  1A69  3A50               	xorlw	80
  2812  1A6A  1D03               	skipz
  2813  1A6B  2A6F               	goto	l7799
  2814                           
  2815                           ;main.c: 137: AsicPushWork();
  2816  1A6C  3192  22F0  319A   	fcall	_AsicPushWork
  2817  1A6F                     l7799:	
  2818                           
  2819                           ;main.c: 138: }
  2820                           ;main.c: 140: ProcessIO();
  2821  1A6F  3191  2177  319A   	fcall	_ProcessIO
  2822  1A72  2A5F               	goto	l855
  2823  1A73                     __end_of_main:	
  2824                           
  2825                           	psect	text1
  2826  1177                     __ptext1:	
  2827 ;; *************** function _ProcessIO *****************
  2828 ;; Defined at:
  2829 ;;		line 182 in file "main.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:        8 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    8
  2850 ;; This function calls:
  2851 ;;		_USBTransferOnePacket
  2852 ;;		_ProcessCmd
  2853 ;;		___bmul
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _ProcessIO
  2861  1177                     _ProcessIO:	
  2862                           
  2863                           ;main.c: 184: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in _ProcessIO: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2867  1177  3020               	movlw	32
  2868  1178  0021               	movlb	1	; select bank1
  2869  1179  0266               	subwf	_USBDeviceState^(0+128),w
  2870  117A  1C03               	skipc
  2871  117B  0008               	return
  2872  117C  003D               	movlb	29	; select bank29
  2873  117D  188E               	btfsc	14,1	;volatile
  2874  117E  0008               	return
  2875                           
  2876                           ;main.c: 193: if(!(USBGenericOutHandle==0?0:((volatile BDT_ENTRY*)USBGenericOutHandle)->
      +                          STAT.UOWN)) {
  2877  117F  0023               	movlb	3	; select bank3
  2878  1180  083E               	movf	_USBGenericOutHandle^(0+384),w
  2879  1181  1903               	btfsc	3,2
  2880  1182  2991               	goto	l7825
  2881  1183  083E               	movf	_USBGenericOutHandle^(0+384),w
  2882  1184  0086               	movwf	6
  2883  1185  0187               	clrf	7
  2884  1186  0D01               	rlf	1,w
  2885  1187  0D01               	rlf	1,w
  2886  1188  3901               	andlw	1
  2887  1189  0021               	movlb	1	; select bank1
  2888  118A  00C5               	movwf	??_ProcessIO^(0+128)
  2889  118B  01C6               	clrf	(??_ProcessIO^(0+128)+1)
  2890  118C  0845               	movf	??_ProcessIO^(0+128),w
  2891  118D  00C9               	movwf	_ProcessIO$2377^(0+128)
  2892  118E  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2893  118F  00CA               	movwf	(_ProcessIO$2377+1)^(0+128)
  2894  1190  2994               	goto	l7827
  2895  1191                     l7825:	
  2896  1191  0021               	movlb	1	; select bank1
  2897  1192  01C9               	clrf	_ProcessIO$2377^(0+128)
  2898  1193  01CA               	clrf	(_ProcessIO$2377+1)^(0+128)
  2899  1194                     l7827:	
  2900  1194  084A               	movf	(_ProcessIO$2377+1)^(0+128),w
  2901  1195  0449               	iorwf	_ProcessIO$2377^(0+128),w
  2902  1196  1D03               	skipz
  2903  1197  29AF               	goto	l7833
  2904                           
  2905                           ;main.c: 197: ProcessCmd(OUTPacket);
  2906  1198  30A0               	movlw	160
  2907  1199  318E  2690  3191   	fcall	_ProcessCmd
  2908                           
  2909                           ;main.c: 198: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
  2910  119C  0021               	movlb	1	; select bank1
  2911  119D  01A0               	clrf	?_USBTransferOnePacket^(0+128)
  2912  119E  30A0               	movlw	160
  2913  119F  00C5               	movwf	??_ProcessIO^(0+128)
  2914  11A0  0845               	movf	??_ProcessIO^(0+128),w
  2915  11A1  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  2916  11A2  3040               	movlw	64
  2917  11A3  00C6               	movwf	(??_ProcessIO+1)^(0+128)
  2918  11A4  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2919  11A5  00A2               	movwf	(?_USBTransferOnePacket^(0+128)+2)
  2920  11A6  3001               	movlw	1
  2921  11A7  319D  25E2  3191   	fcall	_USBTransferOnePacket
  2922  11AA  0021               	movlb	1	; select bank1
  2923  11AB  00C7               	movwf	(??_ProcessIO+2)^(0+128)
  2924  11AC  0847               	movf	(??_ProcessIO+2)^(0+128),w
  2925  11AD  0023               	movlb	3	; select bank3
  2926  11AE  00BE               	movwf	_USBGenericOutHandle^(0+384)
  2927  11AF                     l7833:	
  2928                           
  2929                           ;main.c: 199: }
  2930                           ;main.c: 201: if(WQI != WQX && !(USBGenericInHandle==0?0:((volatile BDT_ENTRY*)USBGeneri
      +                          cInHandle)->STAT.UOWN)) {
  2931  11AF  0021               	movlb	1	; select bank1
  2932  11B0  086F               	movf	_WQI^(0+128),w
  2933  11B1  0022               	movlb	2	; select bank2
  2934  11B2  066F               	xorwf	_WQX^(0+256),w
  2935  11B3  1903               	skipnz
  2936  11B4  0008               	return
  2937  11B5  0023               	movlb	3	; select bank3
  2938  11B6  083D               	movf	_USBGenericInHandle^(0+384),w
  2939  11B7  1903               	btfsc	3,2
  2940  11B8  29C7               	goto	l7839
  2941  11B9  083D               	movf	_USBGenericInHandle^(0+384),w
  2942  11BA  0086               	movwf	6
  2943  11BB  0187               	clrf	7
  2944  11BC  0D01               	rlf	1,w
  2945  11BD  0D01               	rlf	1,w
  2946  11BE  3901               	andlw	1
  2947  11BF  0021               	movlb	1	; select bank1
  2948  11C0  00C5               	movwf	??_ProcessIO^(0+128)
  2949  11C1  01C6               	clrf	(??_ProcessIO^(0+128)+1)
  2950  11C2  0845               	movf	??_ProcessIO^(0+128),w
  2951  11C3  00CB               	movwf	_ProcessIO$2411^(0+128)
  2952  11C4  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2953  11C5  00CC               	movwf	(_ProcessIO$2411+1)^(0+128)
  2954  11C6  29CA               	goto	l7841
  2955  11C7                     l7839:	
  2956  11C7  0021               	movlb	1	; select bank1
  2957  11C8  01CB               	clrf	_ProcessIO$2411^(0+128)
  2958  11C9  01CC               	clrf	(_ProcessIO$2411+1)^(0+128)
  2959  11CA                     l7841:	
  2960  11CA  084C               	movf	(_ProcessIO$2411+1)^(0+128),w
  2961  11CB  044B               	iorwf	_ProcessIO$2411^(0+128),w
  2962  11CC  1D03               	skipz
  2963  11CD  0008               	return
  2964                           
  2965                           ;main.c: 202: USBGenericInHandle = USBTransferOnePacket(1,1,(BYTE*)&INPacket[WQX*15],15);
  2966  11CE  01A0               	clrf	?_USBTransferOnePacket^(0+128)
  2967  11CF  0AA0               	incf	?_USBTransferOnePacket^(0+128),f
  2968  11D0  300F               	movlw	15
  2969  11D1  00C5               	movwf	??_ProcessIO^(0+128)
  2970  11D2  0845               	movf	??_ProcessIO^(0+128),w
  2971  11D3  0020               	movlb	0	; select bank0
  2972  11D4  00DE               	movwf	?___bmul
  2973  11D5  0022               	movlb	2	; select bank2
  2974  11D6  086F               	movf	_WQX^(0+256),w
  2975  11D7  319A  220B  3191   	fcall	___bmul
  2976  11DA  3E20               	addlw	32
  2977  11DB  0021               	movlb	1	; select bank1
  2978  11DC  00C6               	movwf	(??_ProcessIO+1)^(0+128)
  2979  11DD  0846               	movf	(??_ProcessIO+1)^(0+128),w
  2980  11DE  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  2981  11DF  300F               	movlw	15
  2982  11E0  00C7               	movwf	(??_ProcessIO+2)^(0+128)
  2983  11E1  0847               	movf	(??_ProcessIO+2)^(0+128),w
  2984  11E2  00A2               	movwf	(?_USBTransferOnePacket^(0+128)+2)
  2985  11E3  3001               	movlw	1
  2986  11E4  319D  25E2         	fcall	_USBTransferOnePacket
  2987  11E6  0021               	movlb	1	; select bank1
  2988  11E7  00C8               	movwf	(??_ProcessIO+3)^(0+128)
  2989  11E8  0848               	movf	(??_ProcessIO+3)^(0+128),w
  2990  11E9  0023               	movlb	3	; select bank3
  2991  11EA  00BD               	movwf	_USBGenericInHandle^(0+384)
  2992                           
  2993                           ;main.c: 203: WQX = (WQX+1) & 3;
  2994  11EB  0022               	movlb	2	; select bank2
  2995  11EC  0A6F               	incf	_WQX^(0+256),w
  2996  11ED  3903               	andlw	3
  2997  11EE  0021               	movlb	1	; select bank1
  2998  11EF  00C5               	movwf	??_ProcessIO^(0+128)
  2999  11F0  0845               	movf	??_ProcessIO^(0+128),w
  3000  11F1  0022               	movlb	2	; select bank2
  3001  11F2  00EF               	movwf	_WQX^(0+256)
  3002  11F3  0008               	return
  3003  11F4                     __end_of_ProcessIO:	
  3004                           
  3005                           	psect	text2
  3006  0E90                     __ptext2:	
  3007 ;; *************** function _ProcessCmd *****************
  3008 ;; Defined at:
  3009 ;;		line 45 in file "klondike.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  cmd             1    wreg     PTR unsigned char 
  3012 ;;		 -> OUTPacket(64), 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  cmd             1   36[BANK1 ] PTR unsigned char 
  3015 ;;		 -> OUTPacket(64), 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;		None               void
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;Total ram usage:        7 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    7
  3032 ;; This function calls:
  3033 ;;		_AsicPushWork
  3034 ;;		_SendCmdReply
  3035 ;;		___lwdiv
  3036 ;;		___wmul
  3037 ;; This function is called by:
  3038 ;;		_ProcessIO
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _ProcessCmd
  3044  0E90                     _ProcessCmd:	
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _ProcessCmd: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3048                           ;ProcessCmd@cmd stored from wreg
  3049  0E90  0021               	movlb	1	; select bank1
  3050  0E91  00C4               	movwf	ProcessCmd@cmd^(0+128)
  3051                           
  3052                           ;klondike.c: 48: switch(cmd[0]) {
  3053  0E92  2FE4               	goto	l7659
  3054  0E93                     l7595:	
  3055                           ;klondike.c: 49: case 'W':
  3056                           
  3057                           
  3058                           ;klondike.c: 50: if( Status.WorkQC < 4-1 ) {
  3059  0E93  3003               	movlw	3
  3060  0E94  0022               	movlb	2	; select bank2
  3061  0E95  025C               	subwf	(_Status^(0+256)+3),w	;volatile
  3062  0E96  1803               	skipnc
  3063  0E97  2FD0               	goto	L4
  3064                           
  3065                           ;klondike.c: 51: WorkQue[ (WorkNow + Status.WorkQC++) & 4-1 ] = *(WORKTASK *)(cmd+2);
  3066  0E98  0021               	movlb	1	; select bank1
  3067  0E99  0844               	movf	ProcessCmd@cmd^(0+128),w
  3068  0E9A  3E02               	addlw	2
  3069  0E9B  0086               	movwf	6
  3070  0E9C  3002               	movlw	2	; select bank4/5
  3071  0E9D  0087               	movwf	7
  3072  0E9E  0867               	movf	_WorkNow^(0+128),w
  3073  0E9F  0022               	movlb	2	; select bank2
  3074  0EA0  075C               	addwf	(_Status^(0+256)+3),w	;volatile
  3075  0EA1  0021               	movlb	1	; select bank1
  3076  0EA2  00BE               	movwf	??_ProcessCmd^(0+128)
  3077  0EA3  01BF               	clrf	(??_ProcessCmd^(0+128)+1)
  3078  0EA4  0DBF               	rlf	(??_ProcessCmd+1)^(0+128),f
  3079  0EA5  3003               	movlw	3
  3080  0EA6  053E               	andwf	??_ProcessCmd^(0+128),w
  3081  0EA7  0020               	movlb	0	; select bank0
  3082  0EA8  00DE               	movwf	?___wmul
  3083  0EA9  3000               	movlw	0
  3084  0EAA  0021               	movlb	1	; select bank1
  3085  0EAB  053F               	andwf	(??_ProcessCmd+1)^(0+128),w
  3086  0EAC  0020               	movlb	0	; select bank0
  3087  0EAD  00DF               	movwf	?___wmul+1
  3088  0EAE  302D               	movlw	45
  3089  0EAF  00E0               	movwf	?___wmul+2
  3090  0EB0  3000               	movlw	0
  3091  0EB1  00E1               	movwf	?___wmul+3
  3092  0EB2  3190  2002  318E   	fcall	___wmul
  3093  0EB5  303C               	movlw	60
  3094  0EB6  0021               	movlb	1	; select bank1
  3095  0EB7  00C0               	movwf	(??_ProcessCmd+2)^(0+128)
  3096  0EB8  3023               	movlw	35
  3097  0EB9  00C1               	movwf	((??_ProcessCmd+2)^(0+128)+1)
  3098  0EBA  0020               	movlb	0	; select bank0
  3099  0EBB  085E               	movf	?___wmul,w
  3100  0EBC  0021               	movlb	1	; select bank1
  3101  0EBD  0740               	addwf	(??_ProcessCmd+2)^(0+128),w
  3102  0EBE  0084               	movwf	4
  3103  0EBF  0020               	movlb	0	; select bank0
  3104  0EC0  085F               	movf	?___wmul+1,w
  3105  0EC1  0021               	movlb	1	; select bank1
  3106  0EC2  3D41               	addwfc	(??_ProcessCmd+3)^(0+128),w
  3107  0EC3  0085               	movwf	5
  3108  0EC4  302D               	movlw	45
  3109  0EC5  00FF               	movwf	127
  3110  0EC6                     u7930:	
  3111  0EC6  0016               	moviw fsr1++
  3112  0EC7  001A               	movwi fsr0++
  3113  0EC8  0BFF               	decfsz	127,f
  3114  0EC9  2EC6               	goto	u7930
  3115  0ECA  3001               	movlw	1
  3116  0ECB  00BE               	movwf	??_ProcessCmd^(0+128)
  3117  0ECC  083E               	movf	??_ProcessCmd^(0+128),w
  3118  0ECD  0022               	movlb	2	; select bank2
  3119  0ECE  07DC               	addwf	(_Status^(0+256)+3),f	;volatile
  3120                           
  3121                           ;klondike.c: 52: if(Status.State == 'R') {
  3122  0ECF  0859               	movf	_Status^(0+256),w	;volatile
  3123  0ED0  3A52               	xorlw	82
  3124  0ED1  1D03               	skipz
  3125  0ED2  2FD0               	goto	L4
  3126                           
  3127                           ;klondike.c: 53: AsicPushWork();
  3128  0ED3  3192  22F0  318E   	fcall	_AsicPushWork
  3129  0ED6  2FD0               	goto	L4
  3130  0ED7                     l7607:	
  3131                           ;klondike.c: 59: case 'A':
  3132                           
  3133                           ;klondike.c: 58: break;
  3134                           
  3135                           ;klondike.c: 57: Status.Noise = Status.ErrorCount = 0;
  3136                           
  3137                           ;klondike.c: 54: }
  3138                           ;klondike.c: 55: }
  3139                           ;klondike.c: 56: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3140                           
  3141                           
  3142                           ;klondike.c: 60: Status.WorkQC = WorkNow = 0;
  3143  0ED7  0021               	movlb	1	; select bank1
  3144  0ED8  01E7               	clrf	_WorkNow^(0+128)
  3145  0ED9  0022               	movlb	2	; select bank2
  3146  0EDA  01DC               	clrf	(_Status^(0+256)+3)	;volatile
  3147                           
  3148                           ;klondike.c: 61: Status.State = 'R';
  3149  0EDB  3052               	movlw	82
  3150  0EDC  0021               	movlb	1	; select bank1
  3151  0EDD  2FCC               	goto	L3
  3152  0EDE                     l7615:	
  3153                           ;klondike.c: 65: case 'I':
  3154                           
  3155                           ;klondike.c: 64: break;
  3156                           
  3157                           ;klondike.c: 63: Status.Noise = Status.ErrorCount = 0;
  3158                           
  3159                           ;klondike.c: 62: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3160                           
  3161                           
  3162                           ;klondike.c: 66: SendCmdReply(cmd, (char *)&ID, sizeof(ID));
  3163  0EDE  0021               	movlb	1	; select bank1
  3164  0EDF  0844               	movf	ProcessCmd@cmd^(0+128),w
  3165  0EE0  00A2               	movwf	?_SendCmdReply^(0+128)
  3166  0EE1  3002               	movlw	2
  3167  0EE2  00A3               	movwf	(?_SendCmdReply+1)^(0+128)
  3168  0EE3  309F               	movlw	low (_ID| (0+32768))
  3169  0EE4  00A4               	movwf	(?_SendCmdReply+2)^(0+128)
  3170  0EE5  3088               	movlw	high (_ID| (0+32768))
  3171  0EE6  00A5               	movwf	(?_SendCmdReply+3)^(0+128)
  3172  0EE7  300C               	movlw	12
  3173  0EE8  00BE               	movwf	??_ProcessCmd^(0+128)
  3174  0EE9  083E               	movf	??_ProcessCmd^(0+128),w
  3175  0EEA  00A6               	movwf	(?_SendCmdReply^(0+128)+4)
  3176  0EEB  3196  26BD  318E   	fcall	_SendCmdReply
  3177                           
  3178                           ;klondike.c: 67: break;
  3179  0EEE  2FFD               	goto	l695
  3180  0EEF                     l7617:	
  3181                           ;klondike.c: 68: case 'S':
  3182                           
  3183  0EEF  2FD0               	goto	L4
  3184  0EF0                     l7621:	
  3185                           ;klondike.c: 72: case 'C':
  3186                           
  3187                           ;klondike.c: 71: break;
  3188                           
  3189                           ;klondike.c: 70: Status.Noise = Status.ErrorCount = 0;
  3190                           
  3191                           ;klondike.c: 69: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3192                           
  3193                           
  3194                           ;klondike.c: 73: if( *(WORD *)&cmd[2] != 0 ) {
  3195  0EF0  0021               	movlb	1	; select bank1
  3196  0EF1  0844               	movf	ProcessCmd@cmd^(0+128),w
  3197  0EF2  3E02               	addlw	2
  3198  0EF3  0086               	movwf	6
  3199  0EF4  3002               	movlw	2	; select bank4/5
  3200  0EF5  0087               	movwf	7
  3201  0EF6  0016               	moviw fsr1++
  3202  0EF7  0401               	iorwf	1,w
  3203  0EF8  1903               	skipnz
  3204  0EF9  2F95               	goto	l7643
  3205                           
  3206                           ;klondike.c: 74: Cfg = *(WORKCFG *)(cmd+2);
  3207  0EFA  0844               	movf	ProcessCmd@cmd^(0+128),w
  3208  0EFB  3E02               	addlw	2
  3209  0EFC  0086               	movwf	6
  3210  0EFD  3002               	movlw	2	; select bank4/5
  3211  0EFE  0087               	movwf	7
  3212  0EFF  30E0               	movlw	low _Cfg
  3213  0F00  0084               	movwf	4
  3214  0F01  3001               	movlw	high _Cfg
  3215  0F02  0085               	movwf	5
  3216  0F03  3006               	movlw	6
  3217  0F04  00FF               	movwf	127
  3218  0F05                     u7960:	
  3219  0F05  0016               	moviw fsr1++
  3220  0F06  001A               	movwi fsr0++
  3221  0F07  0BFF               	decfsz	127,f
  3222  0F08  2F05               	goto	u7960
  3223                           
  3224                           ;klondike.c: 75: if(Cfg.HashClock < 128)
  3225  0F09  3000               	movlw	0
  3226  0F0A  0023               	movlb	3	; select bank3
  3227  0F0B  0261               	subwf	(_Cfg+1)^(0+384),w
  3228  0F0C  3080               	movlw	128
  3229  0F0D  1903               	skipnz
  3230  0F0E  0260               	subwf	_Cfg^(0+384),w
  3231  0F0F  1803               	skipnc
  3232  0F10  2F15               	goto	l701
  3233                           
  3234                           ;klondike.c: 76: Cfg.HashClock = 128;
  3235  0F11  3080               	movlw	128
  3236  0F12  00E0               	movwf	_Cfg^(0+384)
  3237  0F13  3000               	movlw	0
  3238  0F14  00E1               	movwf	(_Cfg^(0+384)+1)
  3239  0F15                     l701:	
  3240                           
  3241                           ;klondike.c: 77: if(Cfg.HashClock <= 250 && Cfg.HashClock >= 450/2)
  3242  0F15  3000               	movlw	0
  3243  0F16  0261               	subwf	(_Cfg+1)^(0+384),w
  3244  0F17  30FB               	movlw	251
  3245  0F18  1903               	skipnz
  3246  0F19  0260               	subwf	_Cfg^(0+384),w
  3247  0F1A  1803               	skipnc
  3248  0F1B  2F27               	goto	l702
  3249  0F1C  3000               	movlw	0
  3250  0F1D  0261               	subwf	(_Cfg+1)^(0+384),w
  3251  0F1E  30E1               	movlw	225
  3252  0F1F  1903               	skipnz
  3253  0F20  0260               	subwf	_Cfg^(0+384),w
  3254  0F21  1C03               	skipc
  3255  0F22  2F27               	goto	l702
  3256                           
  3257                           ;klondike.c: 78: Cfg.HashClock = 450/2-1;
  3258  0F23  30E0               	movlw	224
  3259  0F24  00E0               	movwf	_Cfg^(0+384)
  3260  0F25  3000               	movlw	0
  3261  0F26  00E1               	movwf	(_Cfg^(0+384)+1)
  3262  0F27                     l702:	
  3263                           
  3264                           ;klondike.c: 79: if(Cfg.HashClock >= 450)
  3265  0F27  3001               	movlw	1
  3266  0F28  0261               	subwf	(_Cfg+1)^(0+384),w
  3267  0F29  30C2               	movlw	194
  3268  0F2A  1903               	skipnz
  3269  0F2B  0260               	subwf	_Cfg^(0+384),w
  3270  0F2C  1C03               	skipc
  3271  0F2D  2F32               	goto	l703
  3272                           
  3273                           ;klondike.c: 80: Cfg.HashClock = 450-1;
  3274  0F2E  30C1               	movlw	193
  3275  0F2F  00E0               	movwf	_Cfg^(0+384)
  3276  0F30  3001               	movlw	1
  3277  0F31  00E1               	movwf	(_Cfg^(0+384)+1)
  3278  0F32                     l703:	
  3279                           
  3280                           ;klondike.c: 81: if(Cfg.HashClock <= 250)
  3281  0F32  3000               	movlw	0
  3282  0F33  0261               	subwf	(_Cfg+1)^(0+384),w
  3283  0F34  30FB               	movlw	251
  3284  0F35  1903               	skipnz
  3285  0F36  0260               	subwf	_Cfg^(0+384),w
  3286  0F37  1803               	skipnc
  3287  0F38  2F52               	goto	l7637
  3288                           
  3289                           ;klondike.c: 82: ClockCfg[0] = (((DWORD)Cfg.HashClock*2) << 18) | 0x00030017;
  3290  0F39  0860               	movf	_Cfg^(0+384),w
  3291  0F3A  0021               	movlb	1	; select bank1
  3292  0F3B  00BE               	movwf	??_ProcessCmd^(0+128)
  3293  0F3C  0023               	movlb	3	; select bank3
  3294  0F3D  0861               	movf	(_Cfg+1)^(0+384),w
  3295  0F3E  0021               	movlb	1	; select bank1
  3296  0F3F  00BF               	movwf	(??_ProcessCmd^(0+128)+1)
  3297  0F40  01C0               	clrf	(??_ProcessCmd^(0+128)+2)
  3298  0F41  01C1               	clrf	(??_ProcessCmd^(0+128)+3)
  3299  0F42  3001               	movlw	1
  3300  0F43                     u8025:	
  3301  0F43  35BE               	lslf	??_ProcessCmd^(0+128),f
  3302  0F44  0DBF               	rlf	(??_ProcessCmd^(0+128)+1),f
  3303  0F45  0DC0               	rlf	(??_ProcessCmd^(0+128)+2),f
  3304  0F46  0DC1               	rlf	(??_ProcessCmd^(0+128)+3),f
  3305  0F47  0B89               	decfsz	9,f
  3306  0F48  2F43               	goto	u8025
  3307  0F49  3012               	movlw	18
  3308  0F4A                     u8035:	
  3309  0F4A  35BE               	lslf	??_ProcessCmd^(0+128),f
  3310  0F4B  0DBF               	rlf	(??_ProcessCmd^(0+128)+1),f
  3311  0F4C  0DC0               	rlf	(??_ProcessCmd^(0+128)+2),f
  3312  0F4D  0DC1               	rlf	(??_ProcessCmd^(0+128)+3),f
  3313  0F4E  0B89               	decfsz	9,f
  3314  0F4F  2F4A               	goto	u8035
  3315  0F50  3017               	movlw	23
  3316  0F51  2F63               	goto	L1
  3317  0F52                     l7637:	
  3318                           
  3319                           ;klondike.c: 83: else
  3320                           ;klondike.c: 84: ClockCfg[0] = ((DWORD)Cfg.HashClock << 18) | 0x00030007;
  3321  0F52  0860               	movf	_Cfg^(0+384),w
  3322  0F53  0021               	movlb	1	; select bank1
  3323  0F54  00BE               	movwf	??_ProcessCmd^(0+128)
  3324  0F55  0023               	movlb	3	; select bank3
  3325  0F56  0861               	movf	(_Cfg+1)^(0+384),w
  3326  0F57  0021               	movlb	1	; select bank1
  3327  0F58  00BF               	movwf	(??_ProcessCmd^(0+128)+1)
  3328  0F59  01C0               	clrf	(??_ProcessCmd^(0+128)+2)
  3329  0F5A  01C1               	clrf	(??_ProcessCmd^(0+128)+3)
  3330  0F5B  3012               	movlw	18
  3331  0F5C                     u8045:	
  3332  0F5C  35BE               	lslf	??_ProcessCmd^(0+128),f
  3333  0F5D  0DBF               	rlf	(??_ProcessCmd^(0+128)+1),f
  3334  0F5E  0DC0               	rlf	(??_ProcessCmd^(0+128)+2),f
  3335  0F5F  0DC1               	rlf	(??_ProcessCmd^(0+128)+3),f
  3336  0F60  0B89               	decfsz	9,f
  3337  0F61  2F5C               	goto	u8045
  3338  0F62  3007               	movlw	7
  3339  0F63                     L1:	
  3340  0F63  043E               	iorwf	??_ProcessCmd^(0+128),w
  3341  0F64  0023               	movlb	3	; select bank3
  3342  0F65  00D8               	movwf	_ClockCfg^(0+384)
  3343  0F66  3000               	movlw	0
  3344  0F67  0021               	movlb	1	; select bank1
  3345  0F68  043F               	iorwf	(??_ProcessCmd+1)^(0+128),w
  3346  0F69  0023               	movlb	3	; select bank3
  3347  0F6A  00D9               	movwf	(_ClockCfg+1)^(0+384)
  3348  0F6B  3003               	movlw	3
  3349  0F6C  0021               	movlb	1	; select bank1
  3350  0F6D  0440               	iorwf	(??_ProcessCmd+2)^(0+128),w
  3351  0F6E  0023               	movlb	3	; select bank3
  3352  0F6F  00DA               	movwf	(_ClockCfg+2)^(0+384)
  3353  0F70  3000               	movlw	0
  3354  0F71  0021               	movlb	1	; select bank1
  3355  0F72  0441               	iorwf	(??_ProcessCmd+3)^(0+128),w
  3356  0F73  0023               	movlb	3	; select bank3
  3357  0F74  00DB               	movwf	(_ClockCfg+3)^(0+384)
  3358                           
  3359                           ;klondike.c: 85: HashTime = 256 - ((WORD)12285/Cfg.HashClock);
  3360  0F75  0861               	movf	(_Cfg+1)^(0+384),w
  3361  0F76  0020               	movlb	0	; select bank0
  3362  0F77  01DF               	clrf	?___lwdiv+1
  3363  0F78  07DF               	addwf	?___lwdiv+1,f
  3364  0F79  0023               	movlb	3	; select bank3
  3365  0F7A  0860               	movf	_Cfg^(0+384),w
  3366  0F7B  0020               	movlb	0	; select bank0
  3367  0F7C  01DE               	clrf	?___lwdiv
  3368  0F7D  07DE               	addwf	?___lwdiv,f
  3369  0F7E  30FD               	movlw	253
  3370  0F7F  00E0               	movwf	?___lwdiv+2
  3371  0F80  302F               	movlw	47
  3372  0F81  00E1               	movwf	?___lwdiv+3
  3373  0F82  319D  2550  318E   	fcall	___lwdiv
  3374  0F85  0020               	movlb	0	; select bank0
  3375  0F86  085E               	movf	?___lwdiv,w
  3376  0F87  3AFF               	xorlw	255
  3377  0F88  3E01               	addlw	1
  3378  0F89  0021               	movlb	1	; select bank1
  3379  0F8A  00BE               	movwf	??_ProcessCmd^(0+128)
  3380  0F8B  083E               	movf	??_ProcessCmd^(0+128),w
  3381  0F8C  0020               	movlb	0	; select bank0
  3382  0F8D  00EF               	movwf	_HashTime
  3383                           
  3384                           ;klondike.c: 87: TempTarget = Cfg.TempTarget;
  3385  0F8E  0023               	movlb	3	; select bank3
  3386  0F8F  0862               	movf	(_Cfg^(0+384)+2),w
  3387  0F90  0021               	movlb	1	; select bank1
  3388  0F91  00BE               	movwf	??_ProcessCmd^(0+128)
  3389  0F92  083E               	movf	??_ProcessCmd^(0+128),w
  3390  0F93  0023               	movlb	3	; select bank3
  3391  0F94  00E7               	movwf	_TempTarget^(0+384)
  3392  0F95                     l7643:	
  3393                           
  3394                           ;klondike.c: 88: }
  3395                           ;klondike.c: 89: SendCmdReply(cmd, (char *)&Cfg, sizeof(Cfg));
  3396  0F95  0021               	movlb	1	; select bank1
  3397  0F96  0844               	movf	ProcessCmd@cmd^(0+128),w
  3398  0F97  00A2               	movwf	?_SendCmdReply^(0+128)
  3399  0F98  3002               	movlw	2
  3400  0F99  00A3               	movwf	(?_SendCmdReply+1)^(0+128)
  3401  0F9A  30E0               	movlw	low _Cfg
  3402  0F9B  00A4               	movwf	(?_SendCmdReply+2)^(0+128)
  3403  0F9C  3001               	movlw	high _Cfg
  3404  0F9D  00A5               	movwf	(?_SendCmdReply+3)^(0+128)
  3405  0F9E  3006               	movlw	6
  3406  0F9F  00BE               	movwf	??_ProcessCmd^(0+128)
  3407  0FA0  083E               	movf	??_ProcessCmd^(0+128),w
  3408  0FA1  00A6               	movwf	(?_SendCmdReply^(0+128)+4)
  3409  0FA2  3196  26BD  318E   	fcall	_SendCmdReply
  3410                           
  3411                           ;klondike.c: 90: break;
  3412  0FA5  2FFD               	goto	l695
  3413  0FA6                     l7645:	
  3414                           ;klondike.c: 91: case 'E':
  3415                           
  3416                           
  3417                           ;klondike.c: 92: LATAbits.LATA4 = (cmd[2] == '1');
  3418  0FA6  0021               	movlb	1	; select bank1
  3419  0FA7  0844               	movf	ProcessCmd@cmd^(0+128),w
  3420  0FA8  3E02               	addlw	2
  3421  0FA9  0086               	movwf	6
  3422  0FAA  3002               	movlw	2	; select bank4/5
  3423  0FAB  0087               	movwf	7
  3424  0FAC  0801               	movf	1,w
  3425  0FAD  3A31               	xorlw	49
  3426  0FAE  3000               	movlw	0
  3427  0FAF  1903               	skipnz
  3428  0FB0  3001               	movlw	1
  3429  0FB1  00BE               	movwf	??_ProcessCmd^(0+128)
  3430  0FB2  0EBE               	swapf	??_ProcessCmd^(0+128),f
  3431  0FB3  0022               	movlb	2	; select bank2
  3432  0FB4  080C               	movf	12,w	;volatile
  3433  0FB5  0021               	movlb	1	; select bank1
  3434  0FB6  063E               	xorwf	??_ProcessCmd^(0+128),w
  3435  0FB7  39EF               	andlw	-17
  3436  0FB8  063E               	xorwf	??_ProcessCmd^(0+128),w
  3437  0FB9  0022               	movlb	2	; select bank2
  3438  0FBA  008C               	movwf	12	;volatile
  3439                           
  3440                           ;klondike.c: 93: Status.State = (cmd[2] == '1') ? 'R' : 'D';
  3441  0FBB  0021               	movlb	1	; select bank1
  3442  0FBC  0844               	movf	ProcessCmd@cmd^(0+128),w
  3443  0FBD  3E02               	addlw	2
  3444  0FBE  0086               	movwf	6
  3445  0FBF  3002               	movlw	2	; select bank4/5
  3446  0FC0  0087               	movwf	7
  3447  0FC1  0801               	movf	1,w
  3448  0FC2  3A31               	xorlw	49
  3449  0FC3  1903               	skipnz
  3450  0FC4  2FC7               	goto	l7651
  3451  0FC5  3044               	movlw	68
  3452  0FC6  2FC8               	goto	L2
  3453  0FC7                     l7651:	
  3454  0FC7  3052               	movlw	82
  3455  0FC8                     L2:	
  3456  0FC8  00C2               	movwf	_ProcessCmd$2059^(0+128)
  3457  0FC9  3000               	movlw	0
  3458  0FCA  00C3               	movwf	(_ProcessCmd$2059^(0+128)+1)
  3459  0FCB  0842               	movf	_ProcessCmd$2059^(0+128),w
  3460  0FCC                     L3:	
  3461  0FCC  00BE               	movwf	??_ProcessCmd^(0+128)
  3462  0FCD  083E               	movf	??_ProcessCmd^(0+128),w
  3463  0FCE  0022               	movlb	2	; select bank2
  3464  0FCF  00D9               	movwf	_Status^(0+256)	;volatile
  3465  0FD0                     L4:	
  3466                           
  3467                           ;klondike.c: 94: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3468  0FD0  0021               	movlb	1	; select bank1
  3469  0FD1  0844               	movf	ProcessCmd@cmd^(0+128),w
  3470  0FD2  00A2               	movwf	?_SendCmdReply^(0+128)
  3471  0FD3  3002               	movlw	2
  3472  0FD4  00A3               	movwf	(?_SendCmdReply+1)^(0+128)
  3473  0FD5  3059               	movlw	low _Status
  3474  0FD6  00A4               	movwf	(?_SendCmdReply+2)^(0+128)
  3475  0FD7  3001               	movlw	high _Status
  3476  0FD8  00A5               	movwf	(?_SendCmdReply+3)^(0+128)
  3477  0FD9  300D               	movlw	13
  3478  0FDA  00BE               	movwf	??_ProcessCmd^(0+128)
  3479  0FDB  083E               	movf	??_ProcessCmd^(0+128),w
  3480  0FDC  00A6               	movwf	(?_SendCmdReply^(0+128)+4)
  3481  0FDD  3196  26BD  318E   	fcall	_SendCmdReply
  3482                           
  3483                           ;klondike.c: 95: Status.Noise = Status.ErrorCount = 0;
  3484  0FE0  0022               	movlb	2	; select bank2
  3485  0FE1  01E0               	clrf	(_Status^(0+256)+7)	;volatile
  3486  0FE2  01E5               	clrf	(_Status^(0+256)+12)	;volatile
  3487                           
  3488                           ;klondike.c: 105: }
  3489                           
  3490                           ;klondike.c: 104: break;
  3491                           
  3492                           ;klondike.c: 103: default:
  3493                           
  3494                           ;klondike.c: 96: break;
  3495  0FE3  2FFD               	goto	l695
  3496  0FE4                     l7659:	
  3497  0FE4  0021               	movlb	1	; select bank1
  3498  0FE5  0844               	movf	ProcessCmd@cmd^(0+128),w
  3499  0FE6  0086               	movwf	6
  3500  0FE7  3002               	movlw	2	; select bank4/5
  3501  0FE8  0087               	movwf	7
  3502  0FE9  0801               	movf	1,w
  3503                           
  3504                           ; Switch size 1, requested type "space"
  3505                           ; Number of cases is 6, Range of values is 65 to 87
  3506                           ; switch strategies available:
  3507                           ; Name         Instructions Cycles
  3508                           ; simple_byte           19    10 (average)
  3509                           ; direct_byte           55     9 (fixed)
  3510                           ; jumptable            263     9 (fixed)
  3511                           ;	Chosen strategy is simple_byte
  3512  0FEA  3A41               	xorlw	65	; case 65
  3513  0FEB  1903               	skipnz
  3514  0FEC  2ED7               	goto	l7607
  3515  0FED  3A02               	xorlw	2	; case 67
  3516  0FEE  1903               	skipnz
  3517  0FEF  2EF0               	goto	l7621
  3518  0FF0  3A06               	xorlw	6	; case 69
  3519  0FF1  1903               	skipnz
  3520  0FF2  2FA6               	goto	l7645
  3521  0FF3  3A0C               	xorlw	12	; case 73
  3522  0FF4  1903               	skipnz
  3523  0FF5  2EDE               	goto	l7615
  3524  0FF6  3A1A               	xorlw	26	; case 83
  3525  0FF7  1903               	skipnz
  3526  0FF8  2EEF               	goto	l7617
  3527  0FF9  3A04               	xorlw	4	; case 87
  3528  0FFA  1903               	skipnz
  3529  0FFB  2E93               	goto	l7595
  3530  0FFC  2FFD               	goto	l695
  3531  0FFD                     l695:	
  3532                           
  3533                           ;klondike.c: 106: LATAbits.LATA5 = 1;;
  3534  0FFD  0022               	movlb	2	; select bank2
  3535  0FFE  168C               	bsf	12,5	;volatile
  3536  0FFF  0008               	return
  3537  1000                     __end_of_ProcessCmd:	
  3538                           
  3539                           	psect	text3
  3540  1D50                     __ptext3:	
  3541 ;; *************** function ___lwdiv *****************
  3542 ;; Defined at:
  3543 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwdiv.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  divisor         2   14[BANK0 ] unsigned int 
  3546 ;;  dividend        2   16[BANK0 ] unsigned int 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  quotient        2    2[BANK1 ] unsigned int 
  3549 ;;  counter         1    1[BANK1 ] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  2   14[BANK0 ] unsigned int 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3559 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3560 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;Total ram usage:        8 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    4
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_ProcessCmd
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           
  3574                           ;psect for function ___lwdiv
  3575  1D50                     ___lwdiv:	
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3579  1D50  0021               	movlb	1	; select bank1
  3580  1D51  01A2               	clrf	___lwdiv@quotient^(0+128)
  3581  1D52  01A3               	clrf	(___lwdiv@quotient+1)^(0+128)
  3582  1D53  0020               	movlb	0	; select bank0
  3583  1D54  085F               	movf	___lwdiv@divisor+1,w
  3584  1D55  045E               	iorwf	___lwdiv@divisor,w
  3585  1D56  1903               	skipnz
  3586  1D57  2D8A               	goto	l7937
  3587  1D58  0021               	movlb	1	; select bank1
  3588  1D59  01A1               	clrf	___lwdiv@counter^(0+128)
  3589  1D5A  0AA1               	incf	___lwdiv@counter^(0+128),f
  3590  1D5B                     l7925:	
  3591  1D5B  0020               	movlb	0	; select bank0
  3592  1D5C  1BDF               	btfsc	___lwdiv@divisor+1,7
  3593  1D5D  2D6A               	goto	l7927
  3594  1D5E  3001               	movlw	1
  3595  1D5F  0020               	movlb	0	; select bank0
  3596  1D60                     u8345:	
  3597  1D60  35DE               	lslf	___lwdiv@divisor,f
  3598  1D61  0DDF               	rlf	___lwdiv@divisor+1,f
  3599  1D62  0B89               	decfsz	9,f
  3600  1D63  2D60               	goto	u8345
  3601  1D64  3001               	movlw	1
  3602  1D65  0021               	movlb	1	; select bank1
  3603  1D66  00A0               	movwf	??___lwdiv^(0+128)
  3604  1D67  0820               	movf	??___lwdiv^(0+128),w
  3605  1D68  07A1               	addwf	___lwdiv@counter^(0+128),f
  3606  1D69  2D5B               	goto	l7925
  3607  1D6A                     l7927:	
  3608  1D6A  3001               	movlw	1
  3609  1D6B  0021               	movlb	1	; select bank1
  3610  1D6C                     u8365:	
  3611  1D6C  35A2               	lslf	___lwdiv@quotient^(0+128),f
  3612  1D6D  0DA3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3613  1D6E  0B89               	decfsz	9,f
  3614  1D6F  2D6C               	goto	u8365
  3615  1D70  0020               	movlb	0	; select bank0
  3616  1D71  085F               	movf	___lwdiv@divisor+1,w
  3617  1D72  0261               	subwf	___lwdiv@dividend+1,w
  3618  1D73  1D03               	skipz
  3619  1D74  2D77               	goto	u8375
  3620  1D75  085E               	movf	___lwdiv@divisor,w
  3621  1D76  0260               	subwf	___lwdiv@dividend,w
  3622  1D77                     u8375:	
  3623  1D77  1C03               	skipc
  3624  1D78  2D7F               	goto	l7933
  3625  1D79  085E               	movf	___lwdiv@divisor,w
  3626  1D7A  02E0               	subwf	___lwdiv@dividend,f
  3627  1D7B  085F               	movf	___lwdiv@divisor+1,w
  3628  1D7C  3BE1               	subwfb	___lwdiv@dividend+1,f
  3629  1D7D  0021               	movlb	1	; select bank1
  3630  1D7E  1422               	bsf	___lwdiv@quotient^(0+128),0
  3631  1D7F                     l7933:	
  3632  1D7F  3001               	movlw	1
  3633  1D80  0020               	movlb	0	; select bank0
  3634  1D81                     u8385:	
  3635  1D81  36DF               	lsrf	___lwdiv@divisor+1,f
  3636  1D82  0CDE               	rrf	___lwdiv@divisor,f
  3637  1D83  0B89               	decfsz	9,f
  3638  1D84  2D81               	goto	u8385
  3639  1D85  3001               	movlw	1
  3640  1D86  0021               	movlb	1	; select bank1
  3641  1D87  02A1               	subwf	___lwdiv@counter^(0+128),f
  3642  1D88  1D03               	btfss	3,2
  3643  1D89  2D6A               	goto	l7927
  3644  1D8A                     l7937:	
  3645  1D8A  0021               	movlb	1	; select bank1
  3646  1D8B  0823               	movf	(___lwdiv@quotient+1)^(0+128),w
  3647  1D8C  0020               	movlb	0	; select bank0
  3648  1D8D  01DF               	clrf	?___lwdiv+1
  3649  1D8E  07DF               	addwf	?___lwdiv+1,f
  3650  1D8F  0021               	movlb	1	; select bank1
  3651  1D90  0822               	movf	___lwdiv@quotient^(0+128),w
  3652  1D91  0020               	movlb	0	; select bank0
  3653  1D92  01DE               	clrf	?___lwdiv
  3654  1D93  07DE               	addwf	?___lwdiv,f
  3655  1D94  0008               	return
  3656  1D95                     __end_of___lwdiv:	
  3657                           
  3658                           	psect	text4
  3659  16BD                     __ptext4:	
  3660 ;; *************** function _SendCmdReply *****************
  3661 ;; Defined at:
  3662 ;;		line 208 in file "main.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  cmd             2    2[BANK1 ] PTR unsigned char 
  3665 ;;		 -> ResultQue(12), OUTPacket(64), 
  3666 ;;  data            2    4[BANK1 ] PTR unsigned char 
  3667 ;;		 -> ResultQue(12), Cfg(6), ID(12), Status(13), 
  3668 ;;  count           1    6[BANK1 ] unsigned char 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  n               1   15[BANK1 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;		None               void
  3673 ;; Registers used:
  3674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3680 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;Total ram usage:       14 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    5
  3687 ;; This function calls:
  3688 ;;		___bmul
  3689 ;;		___wmul
  3690 ;; This function is called by:
  3691 ;;		_ProcessCmd
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _SendCmdReply
  3697  16BD                     _SendCmdReply:	
  3698                           
  3699                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3703  16BD  0021               	movlb	1	; select bank1
  3704  16BE  0826               	movf	SendCmdReply@count^(0+128),w
  3705  16BF  00A7               	movwf	??_SendCmdReply^(0+128)
  3706  16C0  01A8               	clrf	(??_SendCmdReply^(0+128)+1)
  3707  16C1  086F               	movf	_WQI^(0+128),w
  3708  16C2  00A9               	movwf	(??_SendCmdReply+2)^(0+128)
  3709  16C3  01AA               	clrf	((??_SendCmdReply+2)^(0+128)+1)
  3710  16C4  0829               	movf	(??_SendCmdReply+2)^(0+128),w
  3711  16C5  0020               	movlb	0	; select bank0
  3712  16C6  00DE               	movwf	?___wmul
  3713  16C7  0021               	movlb	1	; select bank1
  3714  16C8  082A               	movf	(??_SendCmdReply+3)^(0+128),w
  3715  16C9  0020               	movlb	0	; select bank0
  3716  16CA  00DF               	movwf	?___wmul+1
  3717  16CB  300F               	movlw	15
  3718  16CC  00E0               	movwf	?___wmul+2
  3719  16CD  3000               	movlw	0
  3720  16CE  00E1               	movwf	?___wmul+3
  3721  16CF  3190  2002  3196   	fcall	___wmul
  3722  16D2  0021               	movlb	1	; select bank1
  3723  16D3  0827               	movf	??_SendCmdReply^(0+128),w
  3724  16D4  0020               	movlb	0	; select bank0
  3725  16D5  075E               	addwf	?___wmul,w
  3726  16D6  0021               	movlb	1	; select bank1
  3727  16D7  00AB               	movwf	(??_SendCmdReply+4)^(0+128)
  3728  16D8  0828               	movf	(??_SendCmdReply+1)^(0+128),w
  3729  16D9  0020               	movlb	0	; select bank0
  3730  16DA  3D5F               	addwfc	?___wmul+1,w
  3731  16DB  0021               	movlb	1	; select bank1
  3732  16DC  00AC               	movwf	(??_SendCmdReply+5)^(0+128)
  3733  16DD  082B               	movf	(??_SendCmdReply+4)^(0+128),w
  3734  16DE  3E02               	addlw	2
  3735  16DF  00AD               	movwf	(??_SendCmdReply+6)^(0+128)
  3736  16E0  3000               	movlw	0
  3737  16E1  3D2C               	addwfc	(??_SendCmdReply+5)^(0+128),w
  3738  16E2  00AE               	movwf	(??_SendCmdReply+7)^(0+128)
  3739  16E3  082E               	movf	(??_SendCmdReply+7)^(0+128),w
  3740  16E4  3A80               	xorlw	128
  3741  16E5  00FF               	movwf	127
  3742  16E6  3080               	movlw	128
  3743  16E7  027F               	subwf	127,w
  3744  16E8  1D03               	skipz
  3745  16E9  2EEC               	goto	u8065
  3746  16EA  3040               	movlw	64
  3747  16EB  022D               	subwf	(??_SendCmdReply+6)^(0+128),w
  3748  16EC                     u8065:	
  3749  16EC  1803               	skipnc
  3750  16ED  0008               	return
  3751                           
  3752                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
  3753  16EE  0021               	movlb	1	; select bank1
  3754  16EF  0822               	movf	SendCmdReply@cmd^(0+128),w
  3755  16F0  0086               	movwf	6
  3756  16F1  0823               	movf	(SendCmdReply@cmd+1)^(0+128),w
  3757  16F2  0087               	movwf	7
  3758  16F3  0801               	movf	1,w
  3759  16F4  00A7               	movwf	??_SendCmdReply^(0+128)
  3760  16F5  300F               	movlw	15
  3761  16F6  00A8               	movwf	(??_SendCmdReply+1)^(0+128)
  3762  16F7  0828               	movf	(??_SendCmdReply+1)^(0+128),w
  3763  16F8  0020               	movlb	0	; select bank0
  3764  16F9  00DE               	movwf	?___bmul
  3765  16FA  0021               	movlb	1	; select bank1
  3766  16FB  086F               	movf	_WQI^(0+128),w
  3767  16FC  319A  220B  3196   	fcall	___bmul
  3768  16FF  3E20               	addlw	32
  3769  1700  0086               	movwf	6
  3770  1701  3002               	movlw	2	; select bank4/5
  3771  1702  0087               	movwf	7
  3772  1703  0021               	movlb	1	; select bank1
  3773  1704  0827               	movf	??_SendCmdReply^(0+128),w
  3774  1705  0081               	movwf	1
  3775                           
  3776                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
  3777  1706  0865               	movf	_SlaveAddress^(0+128),w
  3778  1707  00A7               	movwf	??_SendCmdReply^(0+128)
  3779  1708  300F               	movlw	15
  3780  1709  00A8               	movwf	(??_SendCmdReply+1)^(0+128)
  3781  170A  0828               	movf	(??_SendCmdReply+1)^(0+128),w
  3782  170B  0020               	movlb	0	; select bank0
  3783  170C  00DE               	movwf	?___bmul
  3784  170D  0021               	movlb	1	; select bank1
  3785  170E  086F               	movf	_WQI^(0+128),w
  3786  170F  319A  220B  3196   	fcall	___bmul
  3787  1712  0021               	movlb	1	; select bank1
  3788  1713  00A9               	movwf	(??_SendCmdReply+2)^(0+128)
  3789  1714  0A29               	incf	(??_SendCmdReply+2)^(0+128),w
  3790  1715  3E20               	addlw	32
  3791  1716  0086               	movwf	6
  3792  1717  3002               	movlw	2	; select bank4/5
  3793  1718  0087               	movwf	7
  3794  1719  0827               	movf	??_SendCmdReply^(0+128),w
  3795  171A  0081               	movwf	1
  3796                           
  3797                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
  3798  171B  01AF               	clrf	SendCmdReply@n^(0+128)
  3799  171C                     l7687:	
  3800  171C  0826               	movf	SendCmdReply@count^(0+128),w
  3801  171D  022F               	subwf	SendCmdReply@n^(0+128),w
  3802  171E  1803               	btfsc	3,0
  3803  171F  2F4E               	goto	l7689
  3804                           
  3805                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
  3806  1720  0825               	movf	(SendCmdReply@data+1)^(0+128),w
  3807  1721  00A8               	movwf	(??_SendCmdReply^(0+128)+1)
  3808  1722  0824               	movf	SendCmdReply@data^(0+128),w
  3809  1723  00A7               	movwf	??_SendCmdReply^(0+128)
  3810  1724  082F               	movf	SendCmdReply@n^(0+128),w
  3811  1725  0727               	addwf	??_SendCmdReply^(0+128),w
  3812  1726  0084               	movwf	4
  3813  1727  0828               	movf	(??_SendCmdReply^(0+128)+1),w
  3814  1728  1803               	skipnc
  3815  1729  0A28               	incf	(??_SendCmdReply^(0+128)+1),w
  3816  172A  0085               	movwf	5
  3817  172B  0800               	movf	0,w	;code access
  3818  172C  00A9               	movwf	(??_SendCmdReply+2)^(0+128)
  3819  172D  086F               	movf	_WQI^(0+128),w
  3820  172E  00AA               	movwf	(??_SendCmdReply+3)^(0+128)
  3821  172F  01AB               	clrf	((??_SendCmdReply+3)^(0+128)+1)
  3822  1730  082A               	movf	(??_SendCmdReply+3)^(0+128),w
  3823  1731  0020               	movlb	0	; select bank0
  3824  1732  00DE               	movwf	?___wmul
  3825  1733  0021               	movlb	1	; select bank1
  3826  1734  082B               	movf	(??_SendCmdReply+4)^(0+128),w
  3827  1735  0020               	movlb	0	; select bank0
  3828  1736  00DF               	movwf	?___wmul+1
  3829  1737  300F               	movlw	15
  3830  1738  00E0               	movwf	?___wmul+2
  3831  1739  3000               	movlw	0
  3832  173A  00E1               	movwf	?___wmul+3
  3833  173B  3190  2002  3196   	fcall	___wmul
  3834  173E  0020               	movlb	0	; select bank0
  3835  173F  085E               	movf	?___wmul,w
  3836  1740  0021               	movlb	1	; select bank1
  3837  1741  072F               	addwf	SendCmdReply@n^(0+128),w
  3838  1742  3E02               	addlw	2
  3839  1743  3E20               	addlw	32
  3840  1744  0086               	movwf	6
  3841  1745  3002               	movlw	2	; select bank4/5
  3842  1746  0087               	movwf	7
  3843  1747  0829               	movf	(??_SendCmdReply+2)^(0+128),w
  3844  1748  0081               	movwf	1
  3845  1749  3001               	movlw	1
  3846  174A  00A7               	movwf	??_SendCmdReply^(0+128)
  3847  174B  0827               	movf	??_SendCmdReply^(0+128),w
  3848  174C  07AF               	addwf	SendCmdReply@n^(0+128),f
  3849  174D  2F1C               	goto	l7687
  3850  174E                     l7689:	
  3851                           
  3852                           ;main.c: 214: WQI = (WQI+1) & 3;
  3853  174E  0A6F               	incf	_WQI^(0+128),w
  3854  174F  3903               	andlw	3
  3855  1750  00A7               	movwf	??_SendCmdReply^(0+128)
  3856  1751  0827               	movf	??_SendCmdReply^(0+128),w
  3857  1752  00EF               	movwf	_WQI^(0+128)
  3858  1753  0008               	return
  3859  1754                     __end_of_SendCmdReply:	
  3860                           
  3861                           	psect	text5
  3862  1A0B                     __ptext5:	
  3863 ;; *************** function ___bmul *****************
  3864 ;; Defined at:
  3865 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  multiplier      1    wreg     unsigned char 
  3868 ;;  multiplicand    1   14[BANK0 ] unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  multiplier      1   17[BANK0 ] unsigned char 
  3871 ;;  product         1   16[BANK0 ] unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      unsigned char 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3881 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;Total ram usage:        4 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    4
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_ResultRx
  3892 ;;		_ProcessIO
  3893 ;;		_SendCmdReply
  3894 ;;		i1_SendCmdReply
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function ___bmul
  3900  1A0B                     ___bmul:	
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3904                           ;___bmul@multiplier stored from wreg
  3905  1A0B  0020               	movlb	0	; select bank0
  3906  1A0C  00E1               	movwf	___bmul@multiplier
  3907  1A0D  01E0               	clrf	___bmul@product
  3908  1A0E                     l7901:	
  3909  1A0E  1C61               	btfss	___bmul@multiplier,0
  3910  1A0F  2A14               	goto	l7905
  3911  1A10  085E               	movf	___bmul@multiplicand,w
  3912  1A11  00DF               	movwf	??___bmul
  3913  1A12  085F               	movf	??___bmul,w
  3914  1A13  07E0               	addwf	___bmul@product,f
  3915  1A14                     l7905:	
  3916  1A14  1003               	clrc
  3917  1A15  0DDE               	rlf	___bmul@multiplicand,f
  3918  1A16  1003               	clrc
  3919  1A17  0CE1               	rrf	___bmul@multiplier,f
  3920  1A18  08E1               	movf	___bmul@multiplier,f
  3921  1A19  1D03               	skipz
  3922  1A1A  2A0E               	goto	l7901
  3923  1A1B  0860               	movf	___bmul@product,w
  3924  1A1C  0008               	return
  3925  1A1D                     __end_of___bmul:	
  3926                           
  3927                           	psect	text6
  3928  12F0                     __ptext6:	
  3929 ;; *************** function _AsicPushWork *****************
  3930 ;; Defined at:
  3931 ;;		line 110 in file "klondike.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;		None               void
  3938 ;; Registers used:
  3939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;Total ram usage:        5 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    6
  3952 ;; This function calls:
  3953 ;;		_SendAsicData
  3954 ;;		_AsicPreCalc
  3955 ;;		___wmul
  3956 ;; This function is called by:
  3957 ;;		_ProcessCmd
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _AsicPushWork
  3964  12F0                     _AsicPushWork:	
  3965                           
  3966                           ;klondike.c: 111: AsicPreCalc(&WorkQue[WorkNow]);
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _AsicPushWork: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3970  12F0  0021               	movlb	1	; select bank1
  3971  12F1  0867               	movf	_WorkNow^(0+128),w
  3972  12F2  00B9               	movwf	??_AsicPushWork^(0+128)
  3973  12F3  01BA               	clrf	(??_AsicPushWork^(0+128)+1)
  3974  12F4  0839               	movf	??_AsicPushWork^(0+128),w
  3975  12F5  0020               	movlb	0	; select bank0
  3976  12F6  00DE               	movwf	?___wmul
  3977  12F7  0021               	movlb	1	; select bank1
  3978  12F8  083A               	movf	(??_AsicPushWork+1)^(0+128),w
  3979  12F9  0020               	movlb	0	; select bank0
  3980  12FA  00DF               	movwf	?___wmul+1
  3981  12FB  302D               	movlw	45
  3982  12FC  00E0               	movwf	?___wmul+2
  3983  12FD  3000               	movlw	0
  3984  12FE  00E1               	movwf	?___wmul+3
  3985  12FF  3190  2002  3192   	fcall	___wmul
  3986  1302  303C               	movlw	60
  3987  1303  0021               	movlb	1	; select bank1
  3988  1304  00BB               	movwf	(??_AsicPushWork+2)^(0+128)
  3989  1305  3023               	movlw	35
  3990  1306  00BC               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3991  1307  0020               	movlb	0	; select bank0
  3992  1308  085E               	movf	?___wmul,w
  3993  1309  0021               	movlb	1	; select bank1
  3994  130A  073B               	addwf	(??_AsicPushWork+2)^(0+128),w
  3995  130B  00AD               	movwf	?_AsicPreCalc^(0+128)
  3996  130C  0020               	movlb	0	; select bank0
  3997  130D  085F               	movf	?___wmul+1,w
  3998  130E  0021               	movlb	1	; select bank1
  3999  130F  3D3C               	addwfc	(??_AsicPushWork+3)^(0+128),w
  4000  1310  00AE               	movwf	(?_AsicPreCalc+1)^(0+128)
  4001  1311  3180  2014  3192   	fcall	_AsicPreCalc
  4002                           
  4003                           ;klondike.c: 112: Status.WorkID = WorkQue[WorkNow].WorkID;
  4004  1314  0021               	movlb	1	; select bank1
  4005  1315  0867               	movf	_WorkNow^(0+128),w
  4006  1316  00B9               	movwf	??_AsicPushWork^(0+128)
  4007  1317  01BA               	clrf	(??_AsicPushWork^(0+128)+1)
  4008  1318  0839               	movf	??_AsicPushWork^(0+128),w
  4009  1319  0020               	movlb	0	; select bank0
  4010  131A  00DE               	movwf	?___wmul
  4011  131B  0021               	movlb	1	; select bank1
  4012  131C  083A               	movf	(??_AsicPushWork+1)^(0+128),w
  4013  131D  0020               	movlb	0	; select bank0
  4014  131E  00DF               	movwf	?___wmul+1
  4015  131F  302D               	movlw	45
  4016  1320  00E0               	movwf	?___wmul+2
  4017  1321  3000               	movlw	0
  4018  1322  00E1               	movwf	?___wmul+3
  4019  1323  3190  2002  3192   	fcall	___wmul
  4020  1326  303C               	movlw	60
  4021  1327  0021               	movlb	1	; select bank1
  4022  1328  00BB               	movwf	(??_AsicPushWork+2)^(0+128)
  4023  1329  3023               	movlw	35
  4024  132A  00BC               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  4025  132B  0020               	movlb	0	; select bank0
  4026  132C  085E               	movf	?___wmul,w
  4027  132D  0021               	movlb	1	; select bank1
  4028  132E  073B               	addwf	(??_AsicPushWork+2)^(0+128),w
  4029  132F  0086               	movwf	6
  4030  1330  0020               	movlb	0	; select bank0
  4031  1331  085F               	movf	?___wmul+1,w
  4032  1332  0021               	movlb	1	; select bank1
  4033  1333  3D3C               	addwfc	(??_AsicPushWork+3)^(0+128),w
  4034  1334  0087               	movwf	7
  4035  1335  0801               	movf	1,w
  4036  1336  00BD               	movwf	(??_AsicPushWork+4)^(0+128)
  4037  1337  083D               	movf	(??_AsicPushWork+4)^(0+128),w
  4038  1338  0022               	movlb	2	; select bank2
  4039  1339  00DD               	movwf	(_Status^(0+256)+4)	;volatile
  4040                           
  4041                           ;klondike.c: 113: SendAsicData(&WorkQue[WorkNow]);
  4042  133A  0021               	movlb	1	; select bank1
  4043  133B  0867               	movf	_WorkNow^(0+128),w
  4044  133C  00B9               	movwf	??_AsicPushWork^(0+128)
  4045  133D  01BA               	clrf	(??_AsicPushWork^(0+128)+1)
  4046  133E  0839               	movf	??_AsicPushWork^(0+128),w
  4047  133F  0020               	movlb	0	; select bank0
  4048  1340  00DE               	movwf	?___wmul
  4049  1341  0021               	movlb	1	; select bank1
  4050  1342  083A               	movf	(??_AsicPushWork+1)^(0+128),w
  4051  1343  0020               	movlb	0	; select bank0
  4052  1344  00DF               	movwf	?___wmul+1
  4053  1345  302D               	movlw	45
  4054  1346  00E0               	movwf	?___wmul+2
  4055  1347  3000               	movlw	0
  4056  1348  00E1               	movwf	?___wmul+3
  4057  1349  3190  2002  3192   	fcall	___wmul
  4058  134C  303C               	movlw	60
  4059  134D  0021               	movlb	1	; select bank1
  4060  134E  00BB               	movwf	(??_AsicPushWork+2)^(0+128)
  4061  134F  3023               	movlw	35
  4062  1350  00BC               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  4063  1351  0020               	movlb	0	; select bank0
  4064  1352  085E               	movf	?___wmul,w
  4065  1353  0021               	movlb	1	; select bank1
  4066  1354  073B               	addwf	(??_AsicPushWork+2)^(0+128),w
  4067  1355  00A2               	movwf	?_SendAsicData^(0+128)
  4068  1356  0020               	movlb	0	; select bank0
  4069  1357  085F               	movf	?___wmul+1,w
  4070  1358  0021               	movlb	1	; select bank1
  4071  1359  3D3C               	addwfc	(??_AsicPushWork+3)^(0+128),w
  4072  135A  00A3               	movwf	(?_SendAsicData+1)^(0+128)
  4073  135B  3196  2628         	fcall	_SendAsicData
  4074                           
  4075                           ;klondike.c: 114: WorkNow = (WorkNow+1) & 4-1;
  4076  135D  0021               	movlb	1	; select bank1
  4077  135E  0A67               	incf	_WorkNow^(0+128),w
  4078  135F  3903               	andlw	3
  4079  1360  00B9               	movwf	??_AsicPushWork^(0+128)
  4080  1361  0839               	movf	??_AsicPushWork^(0+128),w
  4081  1362  00E7               	movwf	_WorkNow^(0+128)
  4082                           
  4083                           ;klondike.c: 115: Status.HashCount = 0;
  4084  1363  0022               	movlb	2	; select bank2
  4085  1364  01E1               	clrf	(_Status^(0+256)+8)	;volatile
  4086  1365  01E2               	clrf	((_Status+1)^(0+256)+8)	;volatile
  4087                           
  4088                           ;klondike.c: 116: TMR0 = HashTime;
  4089  1366  0020               	movlb	0	; select bank0
  4090  1367  086F               	movf	_HashTime,w
  4091  1368  0095               	movwf	21	;volatile
  4092                           
  4093                           ;klondike.c: 117: Status.State = 'W';
  4094  1369  3057               	movlw	87
  4095  136A  0021               	movlb	1	; select bank1
  4096  136B  00B9               	movwf	??_AsicPushWork^(0+128)
  4097  136C  0839               	movf	??_AsicPushWork^(0+128),w
  4098  136D  0022               	movlb	2	; select bank2
  4099  136E  00D9               	movwf	_Status^(0+256)	;volatile
  4100                           
  4101                           ;klondike.c: 118: Status.WorkQC--;
  4102  136F  3001               	movlw	1
  4103  1370  02DC               	subwf	(_Status^(0+256)+3),f	;volatile
  4104  1371  0008               	return
  4105  1372                     __end_of_AsicPushWork:	
  4106                           
  4107                           	psect	text7
  4108  1002                     __ptext7:	
  4109 ;; *************** function ___wmul *****************
  4110 ;; Defined at:
  4111 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  multiplier      2   14[BANK0 ] unsigned int 
  4114 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  product         2    0[BANK1 ] unsigned int 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  2   14[BANK0 ] unsigned int 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;Total ram usage:        6 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    4
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_ProcessCmd
  4137 ;;		_AsicPushWork
  4138 ;;		_SendCmdReply
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function ___wmul
  4144  1002                     ___wmul:	
  4145                           
  4146                           ;incstack = 0
  4147                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4148  1002  0021               	movlb	1	; select bank1
  4149  1003  01A0               	clrf	___wmul@product^(0+128)
  4150  1004  01A1               	clrf	(___wmul@product+1)^(0+128)
  4151  1005                     l7943:	
  4152  1005  0020               	movlb	0	; select bank0
  4153  1006  1C5E               	btfss	___wmul@multiplier,0
  4154  1007  280F               	goto	l1295
  4155  1008  0860               	movf	___wmul@multiplicand,w
  4156  1009  0021               	movlb	1	; select bank1
  4157  100A  07A0               	addwf	___wmul@product^(0+128),f
  4158  100B  0020               	movlb	0	; select bank0
  4159  100C  0861               	movf	___wmul@multiplicand+1,w
  4160  100D  0021               	movlb	1	; select bank1
  4161  100E  3DA1               	addwfc	(___wmul@product+1)^(0+128),f
  4162  100F                     l1295:	
  4163  100F  3001               	movlw	1
  4164  1010  0020               	movlb	0	; select bank0
  4165  1011                     u8415:	
  4166  1011  35E0               	lslf	___wmul@multiplicand,f
  4167  1012  0DE1               	rlf	___wmul@multiplicand+1,f
  4168  1013  0B89               	decfsz	9,f
  4169  1014  2811               	goto	u8415
  4170  1015  3001               	movlw	1
  4171  1016                     u8425:	
  4172  1016  36DF               	lsrf	___wmul@multiplier+1,f
  4173  1017  0CDE               	rrf	___wmul@multiplier,f
  4174  1018  0B89               	decfsz	9,f
  4175  1019  2816               	goto	u8425
  4176  101A  085F               	movf	___wmul@multiplier+1,w
  4177  101B  045E               	iorwf	___wmul@multiplier,w
  4178  101C  1D03               	skipz
  4179  101D  2805               	goto	l7943
  4180  101E  0021               	movlb	1	; select bank1
  4181  101F  0821               	movf	(___wmul@product+1)^(0+128),w
  4182  1020  0020               	movlb	0	; select bank0
  4183  1021  01DF               	clrf	?___wmul+1
  4184  1022  07DF               	addwf	?___wmul+1,f
  4185  1023  0021               	movlb	1	; select bank1
  4186  1024  0820               	movf	___wmul@product^(0+128),w
  4187  1025  0020               	movlb	0	; select bank0
  4188  1026  01DE               	clrf	?___wmul
  4189  1027  07DE               	addwf	?___wmul,f
  4190  1028  0008               	return
  4191  1029                     __end_of___wmul:	
  4192                           
  4193                           	psect	text8
  4194  0014                     __ptext8:	
  4195 ;; *************** function _AsicPreCalc *****************
  4196 ;; Defined at:
  4197 ;;		line 318 in file "asic.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  work            2   13[BANK1 ] PTR struct _worktask
  4200 ;;		 -> WorkQue(180), 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  m              32   12[BANK2 ] unsigned long [8]
  4203 ;;  K              12    0[BANK2 ] unsigned long [3]
  4204 ;;  x               4   52[BANK2 ] unsigned long 
  4205 ;;  y               4   48[BANK2 ] unsigned long 
  4206 ;;  z               4   44[BANK2 ] unsigned long 
  4207 ;;  n               1   56[BANK2 ] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;		None               void
  4210 ;; Registers used:
  4211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4217 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Locals:         0       0       0      57       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4220 ;;      Totals:         0       0      12      57       0       0       0       0       0       0       0       0       
      +0       0
  4221 ;;Total ram usage:       69 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    5
  4224 ;; This function calls:
  4225 ;;		_rotate
  4226 ;; This function is called by:
  4227 ;;		_AsicPushWork
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           
  4232                           ;psect for function _AsicPreCalc
  4233  0014                     _AsicPreCalc:	
  4234                           
  4235                           ;asic.c: 319: DWORD K[3] = { 0x428a2f98, 0x71374491, 0xb5c0fbcf };
  4236                           
  4237                           ;incstack = 0
  4238                           ; Regs used in _AsicPreCalc: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  4239  0014  30CC               	movlw	low AsicPreCalc@F3347
  4240  0015  0086               	movwf	6
  4241  0016  3001               	movlw	high AsicPreCalc@F3347
  4242  0017  0087               	movwf	7
  4243  0018  3020               	movlw	low AsicPreCalc@K
  4244  0019  0084               	movwf	4
  4245  001A  3001               	movlw	high AsicPreCalc@K
  4246  001B  0085               	movwf	5
  4247  001C  300C               	movlw	12
  4248  001D  00FF               	movwf	127
  4249  001E                     u7600:	
  4250  001E  0016               	moviw fsr1++
  4251  001F  001A               	movwi fsr0++
  4252  0020  0BFF               	decfsz	127,f
  4253  0021  281E               	goto	u7600
  4254                           
  4255                           ;asic.c: 320: DWORD x, y, z;
  4256                           ;asic.c: 321: DWORD m[8];
  4257                           ;asic.c: 322: BYTE n;
  4258                           ;asic.c: 324: for(n = 0; n < 8; n++)
  4259  0022  0022               	movlb	2	; select bank2
  4260  0023  01D8               	clrf	AsicPreCalc@n^(0+256)
  4261  0024  3008               	movlw	8
  4262  0025  0258               	subwf	AsicPreCalc@n^(0+256),w
  4263  0026  1803               	btfsc	3,0
  4264  0027  2863               	goto	l7549
  4265  0028                     l7543:	
  4266                           
  4267                           ;asic.c: 325: m[n] = work->MidState[n];
  4268  0028  0858               	movf	AsicPreCalc@n^(0+256),w
  4269  0029  0021               	movlb	1	; select bank1
  4270  002A  00AF               	movwf	??_AsicPreCalc^(0+128)
  4271  002B  01B0               	clrf	(??_AsicPreCalc^(0+128)+1)
  4272  002C  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4273  002D  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4274  002E  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4275  002F  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4276  0030  082F               	movf	??_AsicPreCalc^(0+128),w
  4277  0031  3E01               	addlw	1
  4278  0032  00B1               	movwf	(??_AsicPreCalc+2)^(0+128)
  4279  0033  3000               	movlw	0
  4280  0034  3D30               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4281  0035  00B2               	movwf	(??_AsicPreCalc+3)^(0+128)
  4282  0036  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4283  0037  072D               	addwf	AsicPreCalc@work^(0+128),w
  4284  0038  0086               	movwf	6
  4285  0039  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4286  003A  3D2E               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4287  003B  0087               	movwf	7
  4288  003C  3F40               	moviw [0]fsr1
  4289  003D  00B3               	movwf	(??_AsicPreCalc+4)^(0+128)
  4290  003E  3F41               	moviw [1]fsr1
  4291  003F  00B4               	movwf	((??_AsicPreCalc+4)^(0+128)+1)
  4292  0040  3F42               	moviw [2]fsr1
  4293  0041  00B5               	movwf	((??_AsicPreCalc+4)^(0+128)+2)
  4294  0042  3F43               	moviw [3]fsr1
  4295  0043  00B6               	movwf	((??_AsicPreCalc+4)^(0+128)+3)
  4296  0044  0022               	movlb	2	; select bank2
  4297  0045  0858               	movf	AsicPreCalc@n^(0+256),w
  4298  0046  0021               	movlb	1	; select bank1
  4299  0047  00B7               	movwf	(??_AsicPreCalc+8)^(0+128)
  4300  0048  3001               	movlw	1
  4301  0049                     u7625:	
  4302  0049  35B7               	lslf	(??_AsicPreCalc+8)^(0+128),f
  4303  004A  3EFF               	addlw	-1
  4304  004B  1D03               	skipz
  4305  004C  2849               	goto	u7625
  4306  004D  3537               	lslf	(??_AsicPreCalc+8)^(0+128),w
  4307  004E  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4308  004F  0086               	movwf	6
  4309  0050  3001               	movlw	1	; select bank2/3
  4310  0051  0087               	movwf	7
  4311  0052  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4312  0053  3FC0               	movwi [0]fsr1
  4313  0054  0834               	movf	(??_AsicPreCalc+5)^(0+128),w
  4314  0055  3FC1               	movwi [1]fsr1
  4315  0056  0835               	movf	(??_AsicPreCalc+6)^(0+128),w
  4316  0057  3FC2               	movwi [2]fsr1
  4317  0058  0836               	movf	(??_AsicPreCalc+7)^(0+128),w
  4318  0059  3FC3               	movwi [3]fsr1
  4319  005A  3001               	movlw	1
  4320  005B  00AF               	movwf	??_AsicPreCalc^(0+128)
  4321  005C  082F               	movf	??_AsicPreCalc^(0+128),w
  4322  005D  0022               	movlb	2	; select bank2
  4323  005E  07D8               	addwf	AsicPreCalc@n^(0+256),f
  4324  005F  3008               	movlw	8
  4325  0060  0258               	subwf	AsicPreCalc@n^(0+256),w
  4326  0061  1C03               	skipc
  4327  0062  2828               	goto	l7543
  4328  0063                     l7549:	
  4329                           
  4330                           ;asic.c: 327: for(n = 0; n < 3; n++) {
  4331  0063  01D8               	clrf	AsicPreCalc@n^(0+256)
  4332  0064                     L5:	
  4333  0064  3003               	movlw	3
  4334  0065  0258               	subwf	AsicPreCalc@n^(0+256),w
  4335  0066  1803               	btfsc	3,0
  4336  0067  0008               	return
  4337                           
  4338                           ;asic.c: 329: x = m[5-n] ^ m[6-n];
  4339  0068  0358               	decf	AsicPreCalc@n^(0+256),w
  4340  0069  3AFF               	xorlw	255
  4341  006A  0021               	movlb	1	; select bank1
  4342  006B  00AF               	movwf	??_AsicPreCalc^(0+128)
  4343  006C  3001               	movlw	1
  4344  006D                     u7655:	
  4345  006D  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4346  006E  3EFF               	addlw	-1
  4347  006F  1D03               	skipz
  4348  0070  286D               	goto	u7655
  4349  0071  352F               	lslf	??_AsicPreCalc^(0+128),w
  4350  0072  3E18               	addlw	24
  4351  0073  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4352  0074  0086               	movwf	6
  4353  0075  3001               	movlw	1	; select bank2/3
  4354  0076  0087               	movwf	7
  4355  0077  3F40               	moviw [0]fsr1
  4356  0078  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4357  0079  3F41               	moviw [1]fsr1
  4358  007A  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4359  007B  3F42               	moviw [2]fsr1
  4360  007C  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4361  007D  3F43               	moviw [3]fsr1
  4362  007E  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4363  007F  0022               	movlb	2	; select bank2
  4364  0080  0358               	decf	AsicPreCalc@n^(0+256),w
  4365  0081  3AFF               	xorlw	255
  4366  0082  0021               	movlb	1	; select bank1
  4367  0083  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  4368  0084  3001               	movlw	1
  4369  0085                     u7665:	
  4370  0085  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4371  0086  3EFF               	addlw	-1
  4372  0087  1D03               	skipz
  4373  0088  2885               	goto	u7665
  4374  0089  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4375  008A  3E14               	addlw	20
  4376  008B  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4377  008C  0086               	movwf	6
  4378  008D  3001               	movlw	1	; select bank2/3
  4379  008E  0087               	movwf	7
  4380  008F  3F40               	moviw [0]fsr1
  4381  0090  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  4382  0091  3F41               	moviw [1]fsr1
  4383  0092  00B6               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4384  0093  3F42               	moviw [2]fsr1
  4385  0094  00B7               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4386  0095  3F43               	moviw [3]fsr1
  4387  0096  00B8               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4388  0097  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4389  0098  0635               	xorwf	(??_AsicPreCalc+6)^(0+128),w
  4390  0099  0022               	movlb	2	; select bank2
  4391  009A  00D4               	movwf	AsicPreCalc@x^(0+256)
  4392  009B  0021               	movlb	1	; select bank1
  4393  009C  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4394  009D  0636               	xorwf	(??_AsicPreCalc+7)^(0+128),w
  4395  009E  0022               	movlb	2	; select bank2
  4396  009F  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4397  00A0  0021               	movlb	1	; select bank1
  4398  00A1  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4399  00A2  0637               	xorwf	(??_AsicPreCalc+8)^(0+128),w
  4400  00A3  0022               	movlb	2	; select bank2
  4401  00A4  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4402  00A5  0021               	movlb	1	; select bank1
  4403  00A6  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4404  00A7  0638               	xorwf	(??_AsicPreCalc+9)^(0+128),w
  4405  00A8  0022               	movlb	2	; select bank2
  4406  00A9  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4407                           
  4408                           ;asic.c: 330: x = x & m[4-n];
  4409  00AA  0358               	decf	AsicPreCalc@n^(0+256),w
  4410  00AB  3AFF               	xorlw	255
  4411  00AC  0021               	movlb	1	; select bank1
  4412  00AD  00AF               	movwf	??_AsicPreCalc^(0+128)
  4413  00AE  3001               	movlw	1
  4414  00AF                     u7675:	
  4415  00AF  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4416  00B0  3EFF               	addlw	-1
  4417  00B1  1D03               	skipz
  4418  00B2  28AF               	goto	u7675
  4419  00B3  352F               	lslf	??_AsicPreCalc^(0+128),w
  4420  00B4  3E10               	addlw	16
  4421  00B5  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4422  00B6  0086               	movwf	6
  4423  00B7  3001               	movlw	1	; select bank2/3
  4424  00B8  0087               	movwf	7
  4425  00B9  0022               	movlb	2	; select bank2
  4426  00BA  0854               	movf	AsicPreCalc@x^(0+256),w
  4427  00BB  0501               	andwf	1,w
  4428  00BC  0021               	movlb	1	; select bank1
  4429  00BD  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4430  00BE  3141               	addfsr 1,1
  4431  00BF  0022               	movlb	2	; select bank2
  4432  00C0  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  4433  00C1  0501               	andwf	1,w
  4434  00C2  0021               	movlb	1	; select bank1
  4435  00C3  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4436  00C4  3141               	addfsr 1,1
  4437  00C5  0022               	movlb	2	; select bank2
  4438  00C6  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  4439  00C7  0501               	andwf	1,w
  4440  00C8  0021               	movlb	1	; select bank1
  4441  00C9  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4442  00CA  3141               	addfsr 1,1
  4443  00CB  0022               	movlb	2	; select bank2
  4444  00CC  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  4445  00CD  0501               	andwf	1,w
  4446  00CE  0021               	movlb	1	; select bank1
  4447  00CF  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4448  00D0  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4449  00D1  0022               	movlb	2	; select bank2
  4450  00D2  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4451  00D3  0021               	movlb	1	; select bank1
  4452  00D4  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4453  00D5  0022               	movlb	2	; select bank2
  4454  00D6  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4455  00D7  0021               	movlb	1	; select bank1
  4456  00D8  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4457  00D9  0022               	movlb	2	; select bank2
  4458  00DA  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4459  00DB  0021               	movlb	1	; select bank1
  4460  00DC  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4461  00DD  0022               	movlb	2	; select bank2
  4462  00DE  00D4               	movwf	AsicPreCalc@x^(0+256)
  4463                           
  4464                           ;asic.c: 331: x = m[6-n] ^ x;
  4465  00DF  0358               	decf	AsicPreCalc@n^(0+256),w
  4466  00E0  3AFF               	xorlw	255
  4467  00E1  0021               	movlb	1	; select bank1
  4468  00E2  00AF               	movwf	??_AsicPreCalc^(0+128)
  4469  00E3  3001               	movlw	1
  4470  00E4                     u7685:	
  4471  00E4  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4472  00E5  3EFF               	addlw	-1
  4473  00E6  1D03               	skipz
  4474  00E7  28E4               	goto	u7685
  4475  00E8  352F               	lslf	??_AsicPreCalc^(0+128),w
  4476  00E9  3E18               	addlw	24
  4477  00EA  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4478  00EB  0086               	movwf	6
  4479  00EC  3001               	movlw	1	; select bank2/3
  4480  00ED  0087               	movwf	7
  4481  00EE  0022               	movlb	2	; select bank2
  4482  00EF  0854               	movf	AsicPreCalc@x^(0+256),w
  4483  00F0  0601               	xorwf	1,w
  4484  00F1  0021               	movlb	1	; select bank1
  4485  00F2  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4486  00F3  3141               	addfsr 1,1
  4487  00F4  0022               	movlb	2	; select bank2
  4488  00F5  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  4489  00F6  0601               	xorwf	1,w
  4490  00F7  0021               	movlb	1	; select bank1
  4491  00F8  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4492  00F9  3141               	addfsr 1,1
  4493  00FA  0022               	movlb	2	; select bank2
  4494  00FB  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  4495  00FC  0601               	xorwf	1,w
  4496  00FD  0021               	movlb	1	; select bank1
  4497  00FE  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4498  00FF  3141               	addfsr 1,1
  4499  0100  0022               	movlb	2	; select bank2
  4500  0101  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  4501  0102  0601               	xorwf	1,w
  4502  0103  0021               	movlb	1	; select bank1
  4503  0104  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4504  0105  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4505  0106  0022               	movlb	2	; select bank2
  4506  0107  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4507  0108  0021               	movlb	1	; select bank1
  4508  0109  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4509  010A  0022               	movlb	2	; select bank2
  4510  010B  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4511  010C  0021               	movlb	1	; select bank1
  4512  010D  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4513  010E  0022               	movlb	2	; select bank2
  4514  010F  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4515  0110  0021               	movlb	1	; select bank1
  4516  0111  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4517  0112  0022               	movlb	2	; select bank2
  4518  0113  00D4               	movwf	AsicPreCalc@x^(0+256)
  4519                           
  4520                           ;asic.c: 332: x += K[n];
  4521  0114  0858               	movf	AsicPreCalc@n^(0+256),w
  4522  0115  0021               	movlb	1	; select bank1
  4523  0116  00AF               	movwf	??_AsicPreCalc^(0+128)
  4524  0117  3001               	movlw	1
  4525  0118                     u7695:	
  4526  0118  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4527  0119  3EFF               	addlw	-1
  4528  011A  1D03               	skipz
  4529  011B  2918               	goto	u7695
  4530  011C  352F               	lslf	??_AsicPreCalc^(0+128),w
  4531  011D  3E20               	addlw	AsicPreCalc@K& (0+255)
  4532  011E  0086               	movwf	6
  4533  011F  3001               	movlw	1	; select bank2/3
  4534  0120  0087               	movwf	7
  4535  0121  3F40               	moviw [0]fsr1
  4536  0122  0022               	movlb	2	; select bank2
  4537  0123  07D4               	addwf	AsicPreCalc@x^(0+256),f
  4538  0124  3F41               	moviw [1]fsr1
  4539  0125  3DD5               	addwfc	(AsicPreCalc@x+1)^(0+256),f
  4540  0126  3F42               	moviw [2]fsr1
  4541  0127  3DD6               	addwfc	(AsicPreCalc@x+2)^(0+256),f
  4542  0128  3F43               	moviw [3]fsr1
  4543  0129  3DD7               	addwfc	(AsicPreCalc@x+3)^(0+256),f
  4544                           
  4545                           ;asic.c: 333: x += work->Merkle[n];
  4546  012A  0858               	movf	AsicPreCalc@n^(0+256),w
  4547  012B  0021               	movlb	1	; select bank1
  4548  012C  00AF               	movwf	??_AsicPreCalc^(0+128)
  4549  012D  01B0               	clrf	(??_AsicPreCalc^(0+128)+1)
  4550  012E  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4551  012F  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4552  0130  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4553  0131  0DB0               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4554  0132  082F               	movf	??_AsicPreCalc^(0+128),w
  4555  0133  3E21               	addlw	33
  4556  0134  00B1               	movwf	(??_AsicPreCalc+2)^(0+128)
  4557  0135  3000               	movlw	0
  4558  0136  3D30               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4559  0137  00B2               	movwf	(??_AsicPreCalc+3)^(0+128)
  4560  0138  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4561  0139  072D               	addwf	AsicPreCalc@work^(0+128),w
  4562  013A  0086               	movwf	6
  4563  013B  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4564  013C  3D2E               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4565  013D  0087               	movwf	7
  4566  013E  3F40               	moviw [0]fsr1
  4567  013F  0022               	movlb	2	; select bank2
  4568  0140  07D4               	addwf	AsicPreCalc@x^(0+256),f
  4569  0141  3F41               	moviw [1]fsr1
  4570  0142  3DD5               	addwfc	(AsicPreCalc@x+1)^(0+256),f
  4571  0143  3F42               	moviw [2]fsr1
  4572  0144  3DD6               	addwfc	(AsicPreCalc@x+2)^(0+256),f
  4573  0145  3F43               	moviw [3]fsr1
  4574  0146  3DD7               	addwfc	(AsicPreCalc@x+3)^(0+256),f
  4575                           
  4576                           ;asic.c: 334: x += m[7-n];
  4577  0147  0358               	decf	AsicPreCalc@n^(0+256),w
  4578  0148  3AFF               	xorlw	255
  4579  0149  0021               	movlb	1	; select bank1
  4580  014A  00AF               	movwf	??_AsicPreCalc^(0+128)
  4581  014B  3001               	movlw	1
  4582  014C                     u7705:	
  4583  014C  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4584  014D  3EFF               	addlw	-1
  4585  014E  1D03               	skipz
  4586  014F  294C               	goto	u7705
  4587  0150  352F               	lslf	??_AsicPreCalc^(0+128),w
  4588  0151  3E1C               	addlw	28
  4589  0152  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4590  0153  0086               	movwf	6
  4591  0154  3001               	movlw	1	; select bank2/3
  4592  0155  0087               	movwf	7
  4593  0156  3F40               	moviw [0]fsr1
  4594  0157  0022               	movlb	2	; select bank2
  4595  0158  07D4               	addwf	AsicPreCalc@x^(0+256),f
  4596  0159  3F41               	moviw [1]fsr1
  4597  015A  3DD5               	addwfc	(AsicPreCalc@x+1)^(0+256),f
  4598  015B  3F42               	moviw [2]fsr1
  4599  015C  3DD6               	addwfc	(AsicPreCalc@x+2)^(0+256),f
  4600  015D  3F43               	moviw [3]fsr1
  4601  015E  3DD7               	addwfc	(AsicPreCalc@x+3)^(0+256),f
  4602                           
  4603                           ;asic.c: 335: y = rotate(m[4-n], 26);
  4604  015F  0358               	decf	AsicPreCalc@n^(0+256),w
  4605  0160  3AFF               	xorlw	255
  4606  0161  0021               	movlb	1	; select bank1
  4607  0162  00AF               	movwf	??_AsicPreCalc^(0+128)
  4608  0163  3001               	movlw	1
  4609  0164                     u7715:	
  4610  0164  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4611  0165  3EFF               	addlw	-1
  4612  0166  1D03               	skipz
  4613  0167  2964               	goto	u7715
  4614  0168  352F               	lslf	??_AsicPreCalc^(0+128),w
  4615  0169  3E10               	addlw	16
  4616  016A  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4617  016B  0086               	movwf	6
  4618  016C  3001               	movlw	1	; select bank2/3
  4619  016D  0087               	movwf	7
  4620  016E  3F40               	moviw [0]fsr1
  4621  016F  00A0               	movwf	?_rotate^(0+128)
  4622  0170  3F41               	moviw [1]fsr1
  4623  0171  00A1               	movwf	(?_rotate+1)^(0+128)
  4624  0172  3F42               	moviw [2]fsr1
  4625  0173  00A2               	movwf	(?_rotate+2)^(0+128)
  4626  0174  3F43               	moviw [3]fsr1
  4627  0175  00A3               	movwf	(?_rotate+3)^(0+128)
  4628  0176  301A               	movlw	26
  4629  0177  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4630  0178  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4631  0179  00A4               	movwf	(?_rotate^(0+128)+4)
  4632  017A  319C  241B  3180   	fcall	_rotate
  4633  017D  0021               	movlb	1	; select bank1
  4634  017E  0823               	movf	(?_rotate+3)^(0+128),w
  4635  017F  0022               	movlb	2	; select bank2
  4636  0180  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  4637  0181  0021               	movlb	1	; select bank1
  4638  0182  0822               	movf	(?_rotate+2)^(0+128),w
  4639  0183  0022               	movlb	2	; select bank2
  4640  0184  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  4641  0185  0021               	movlb	1	; select bank1
  4642  0186  0821               	movf	(?_rotate+1)^(0+128),w
  4643  0187  0022               	movlb	2	; select bank2
  4644  0188  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  4645  0189  0021               	movlb	1	; select bank1
  4646  018A  0820               	movf	?_rotate^(0+128),w
  4647  018B  0022               	movlb	2	; select bank2
  4648  018C  00D0               	movwf	AsicPreCalc@y^(0+256)
  4649                           
  4650                           ;asic.c: 336: z = rotate(m[4-n], 21);
  4651  018D  0358               	decf	AsicPreCalc@n^(0+256),w
  4652  018E  3AFF               	xorlw	255
  4653  018F  0021               	movlb	1	; select bank1
  4654  0190  00AF               	movwf	??_AsicPreCalc^(0+128)
  4655  0191  3001               	movlw	1
  4656  0192                     u7725:	
  4657  0192  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4658  0193  3EFF               	addlw	-1
  4659  0194  1D03               	skipz
  4660  0195  2992               	goto	u7725
  4661  0196  352F               	lslf	??_AsicPreCalc^(0+128),w
  4662  0197  3E10               	addlw	16
  4663  0198  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4664  0199  0086               	movwf	6
  4665  019A  3001               	movlw	1	; select bank2/3
  4666  019B  0087               	movwf	7
  4667  019C  3F40               	moviw [0]fsr1
  4668  019D  00A0               	movwf	?_rotate^(0+128)
  4669  019E  3F41               	moviw [1]fsr1
  4670  019F  00A1               	movwf	(?_rotate+1)^(0+128)
  4671  01A0  3F42               	moviw [2]fsr1
  4672  01A1  00A2               	movwf	(?_rotate+2)^(0+128)
  4673  01A2  3F43               	moviw [3]fsr1
  4674  01A3  00A3               	movwf	(?_rotate+3)^(0+128)
  4675  01A4  3015               	movlw	21
  4676  01A5  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4677  01A6  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4678  01A7  00A4               	movwf	(?_rotate^(0+128)+4)
  4679  01A8  319C  241B  3180   	fcall	_rotate
  4680  01AB  0021               	movlb	1	; select bank1
  4681  01AC  0823               	movf	(?_rotate+3)^(0+128),w
  4682  01AD  0022               	movlb	2	; select bank2
  4683  01AE  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  4684  01AF  0021               	movlb	1	; select bank1
  4685  01B0  0822               	movf	(?_rotate+2)^(0+128),w
  4686  01B1  0022               	movlb	2	; select bank2
  4687  01B2  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  4688  01B3  0021               	movlb	1	; select bank1
  4689  01B4  0821               	movf	(?_rotate+1)^(0+128),w
  4690  01B5  0022               	movlb	2	; select bank2
  4691  01B6  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  4692  01B7  0021               	movlb	1	; select bank1
  4693  01B8  0820               	movf	?_rotate^(0+128),w
  4694  01B9  0022               	movlb	2	; select bank2
  4695  01BA  00CC               	movwf	AsicPreCalc@z^(0+256)
  4696                           
  4697                           ;asic.c: 337: z = y^z;
  4698  01BB  0850               	movf	AsicPreCalc@y^(0+256),w
  4699  01BC  064C               	xorwf	AsicPreCalc@z^(0+256),w
  4700  01BD  0021               	movlb	1	; select bank1
  4701  01BE  00AF               	movwf	??_AsicPreCalc^(0+128)
  4702  01BF  0022               	movlb	2	; select bank2
  4703  01C0  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  4704  01C1  064D               	xorwf	(AsicPreCalc@z+1)^(0+256),w
  4705  01C2  0021               	movlb	1	; select bank1
  4706  01C3  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  4707  01C4  0022               	movlb	2	; select bank2
  4708  01C5  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  4709  01C6  064E               	xorwf	(AsicPreCalc@z+2)^(0+256),w
  4710  01C7  0021               	movlb	1	; select bank1
  4711  01C8  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  4712  01C9  0022               	movlb	2	; select bank2
  4713  01CA  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  4714  01CB  064F               	xorwf	(AsicPreCalc@z+3)^(0+256),w
  4715  01CC  0021               	movlb	1	; select bank1
  4716  01CD  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  4717  01CE  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4718  01CF  0022               	movlb	2	; select bank2
  4719  01D0  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  4720  01D1  0021               	movlb	1	; select bank1
  4721  01D2  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4722  01D3  0022               	movlb	2	; select bank2
  4723  01D4  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  4724  01D5  0021               	movlb	1	; select bank1
  4725  01D6  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4726  01D7  0022               	movlb	2	; select bank2
  4727  01D8  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  4728  01D9  0021               	movlb	1	; select bank1
  4729  01DA  082F               	movf	??_AsicPreCalc^(0+128),w
  4730  01DB  0022               	movlb	2	; select bank2
  4731  01DC  00CC               	movwf	AsicPreCalc@z^(0+256)
  4732                           
  4733                           ;asic.c: 338: y = rotate(m[4-n], 7);
  4734  01DD  0358               	decf	AsicPreCalc@n^(0+256),w
  4735  01DE  3AFF               	xorlw	255
  4736  01DF  0021               	movlb	1	; select bank1
  4737  01E0  00AF               	movwf	??_AsicPreCalc^(0+128)
  4738  01E1  3001               	movlw	1
  4739  01E2                     u7735:	
  4740  01E2  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4741  01E3  3EFF               	addlw	-1
  4742  01E4  1D03               	skipz
  4743  01E5  29E2               	goto	u7735
  4744  01E6  352F               	lslf	??_AsicPreCalc^(0+128),w
  4745  01E7  3E10               	addlw	16
  4746  01E8  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4747  01E9  0086               	movwf	6
  4748  01EA  3001               	movlw	1	; select bank2/3
  4749  01EB  0087               	movwf	7
  4750  01EC  3F40               	moviw [0]fsr1
  4751  01ED  00A0               	movwf	?_rotate^(0+128)
  4752  01EE  3F41               	moviw [1]fsr1
  4753  01EF  00A1               	movwf	(?_rotate+1)^(0+128)
  4754  01F0  3F42               	moviw [2]fsr1
  4755  01F1  00A2               	movwf	(?_rotate+2)^(0+128)
  4756  01F2  3F43               	moviw [3]fsr1
  4757  01F3  00A3               	movwf	(?_rotate+3)^(0+128)
  4758  01F4  3007               	movlw	7
  4759  01F5  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4760  01F6  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4761  01F7  00A4               	movwf	(?_rotate^(0+128)+4)
  4762  01F8  319C  241B  3180   	fcall	_rotate
  4763  01FB  0021               	movlb	1	; select bank1
  4764  01FC  0823               	movf	(?_rotate+3)^(0+128),w
  4765  01FD  0022               	movlb	2	; select bank2
  4766  01FE  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  4767  01FF  0021               	movlb	1	; select bank1
  4768  0200  0822               	movf	(?_rotate+2)^(0+128),w
  4769  0201  0022               	movlb	2	; select bank2
  4770  0202  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  4771  0203  0021               	movlb	1	; select bank1
  4772  0204  0821               	movf	(?_rotate+1)^(0+128),w
  4773  0205  0022               	movlb	2	; select bank2
  4774  0206  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  4775  0207  0021               	movlb	1	; select bank1
  4776  0208  0820               	movf	?_rotate^(0+128),w
  4777  0209  0022               	movlb	2	; select bank2
  4778  020A  00D0               	movwf	AsicPreCalc@y^(0+256)
  4779                           
  4780                           ;asic.c: 339: z = y^z;
  4781  020B  0850               	movf	AsicPreCalc@y^(0+256),w
  4782  020C  064C               	xorwf	AsicPreCalc@z^(0+256),w
  4783  020D  0021               	movlb	1	; select bank1
  4784  020E  00AF               	movwf	??_AsicPreCalc^(0+128)
  4785  020F  0022               	movlb	2	; select bank2
  4786  0210  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  4787  0211  064D               	xorwf	(AsicPreCalc@z+1)^(0+256),w
  4788  0212  0021               	movlb	1	; select bank1
  4789  0213  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  4790  0214  0022               	movlb	2	; select bank2
  4791  0215  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  4792  0216  064E               	xorwf	(AsicPreCalc@z+2)^(0+256),w
  4793  0217  0021               	movlb	1	; select bank1
  4794  0218  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  4795  0219  0022               	movlb	2	; select bank2
  4796  021A  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  4797  021B  064F               	xorwf	(AsicPreCalc@z+3)^(0+256),w
  4798  021C  0021               	movlb	1	; select bank1
  4799  021D  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  4800  021E  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4801  021F  0022               	movlb	2	; select bank2
  4802  0220  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  4803  0221  0021               	movlb	1	; select bank1
  4804  0222  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4805  0223  0022               	movlb	2	; select bank2
  4806  0224  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  4807  0225  0021               	movlb	1	; select bank1
  4808  0226  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4809  0227  0022               	movlb	2	; select bank2
  4810  0228  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  4811  0229  0021               	movlb	1	; select bank1
  4812  022A  082F               	movf	??_AsicPreCalc^(0+128),w
  4813  022B  0022               	movlb	2	; select bank2
  4814  022C  00CC               	movwf	AsicPreCalc@z^(0+256)
  4815                           
  4816                           ;asic.c: 340: m[7-n] = z+x;
  4817  022D  084C               	movf	AsicPreCalc@z^(0+256),w
  4818  022E  0754               	addwf	AsicPreCalc@x^(0+256),w
  4819  022F  0021               	movlb	1	; select bank1
  4820  0230  00AF               	movwf	??_AsicPreCalc^(0+128)
  4821  0231  0022               	movlb	2	; select bank2
  4822  0232  084D               	movf	(AsicPreCalc@z+1)^(0+256),w
  4823  0233  3D55               	addwfc	(AsicPreCalc@x+1)^(0+256),w
  4824  0234  0021               	movlb	1	; select bank1
  4825  0235  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  4826  0236  0022               	movlb	2	; select bank2
  4827  0237  084E               	movf	(AsicPreCalc@z+2)^(0+256),w
  4828  0238  3D56               	addwfc	(AsicPreCalc@x+2)^(0+256),w
  4829  0239  0021               	movlb	1	; select bank1
  4830  023A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  4831  023B  0022               	movlb	2	; select bank2
  4832  023C  084F               	movf	(AsicPreCalc@z+3)^(0+256),w
  4833  023D  3D57               	addwfc	(AsicPreCalc@x+3)^(0+256),w
  4834  023E  0021               	movlb	1	; select bank1
  4835  023F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  4836  0240  0022               	movlb	2	; select bank2
  4837  0241  0358               	decf	AsicPreCalc@n^(0+256),w
  4838  0242  3AFF               	xorlw	255
  4839  0243  0021               	movlb	1	; select bank1
  4840  0244  00B3               	movwf	(??_AsicPreCalc+4)^(0+128)
  4841  0245  3001               	movlw	1
  4842  0246                     u7745:	
  4843  0246  35B3               	lslf	(??_AsicPreCalc+4)^(0+128),f
  4844  0247  3EFF               	addlw	-1
  4845  0248  1D03               	skipz
  4846  0249  2A46               	goto	u7745
  4847  024A  3533               	lslf	(??_AsicPreCalc+4)^(0+128),w
  4848  024B  3E1C               	addlw	28
  4849  024C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4850  024D  0086               	movwf	6
  4851  024E  3001               	movlw	1	; select bank2/3
  4852  024F  0087               	movwf	7
  4853  0250  082F               	movf	??_AsicPreCalc^(0+128),w
  4854  0251  3FC0               	movwi [0]fsr1
  4855  0252  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4856  0253  3FC1               	movwi [1]fsr1
  4857  0254  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4858  0255  3FC2               	movwi [2]fsr1
  4859  0256  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4860  0257  3FC3               	movwi [3]fsr1
  4861                           
  4862                           ;asic.c: 341: m[3-n] = m[3-n] + m[7-n];
  4863  0258  0022               	movlb	2	; select bank2
  4864  0259  0358               	decf	AsicPreCalc@n^(0+256),w
  4865  025A  3AFF               	xorlw	255
  4866  025B  0021               	movlb	1	; select bank1
  4867  025C  00AF               	movwf	??_AsicPreCalc^(0+128)
  4868  025D  3001               	movlw	1
  4869  025E                     u7755:	
  4870  025E  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4871  025F  3EFF               	addlw	-1
  4872  0260  1D03               	skipz
  4873  0261  2A5E               	goto	u7755
  4874  0262  352F               	lslf	??_AsicPreCalc^(0+128),w
  4875  0263  3E1C               	addlw	28
  4876  0264  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4877  0265  0086               	movwf	6
  4878  0266  3001               	movlw	1	; select bank2/3
  4879  0267  0087               	movwf	7
  4880  0268  3F40               	moviw [0]fsr1
  4881  0269  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4882  026A  3F41               	moviw [1]fsr1
  4883  026B  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4884  026C  3F42               	moviw [2]fsr1
  4885  026D  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4886  026E  3F43               	moviw [3]fsr1
  4887  026F  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4888  0270  0022               	movlb	2	; select bank2
  4889  0271  0358               	decf	AsicPreCalc@n^(0+256),w
  4890  0272  3AFF               	xorlw	255
  4891  0273  0021               	movlb	1	; select bank1
  4892  0274  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  4893  0275  3001               	movlw	1
  4894  0276                     u7765:	
  4895  0276  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4896  0277  3EFF               	addlw	-1
  4897  0278  1D03               	skipz
  4898  0279  2A76               	goto	u7765
  4899  027A  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4900  027B  3E0C               	addlw	12
  4901  027C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4902  027D  0086               	movwf	6
  4903  027E  3001               	movlw	1	; select bank2/3
  4904  027F  0087               	movwf	7
  4905  0280  3F40               	moviw [0]fsr1
  4906  0281  07B0               	addwf	(??_AsicPreCalc+1)^(0+128),f
  4907  0282  3F41               	moviw [1]fsr1
  4908  0283  3DB1               	addwfc	((??_AsicPreCalc+1)^(0+128)+1),f
  4909  0284  3F42               	moviw [2]fsr1
  4910  0285  3DB2               	addwfc	((??_AsicPreCalc+1)^(0+128)+2),f
  4911  0286  3F43               	moviw [3]fsr1
  4912  0287  3DB3               	addwfc	((??_AsicPreCalc+1)^(0+128)+3),f
  4913  0288  0022               	movlb	2	; select bank2
  4914  0289  0358               	decf	AsicPreCalc@n^(0+256),w
  4915  028A  3AFF               	xorlw	255
  4916  028B  0021               	movlb	1	; select bank1
  4917  028C  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  4918  028D  3001               	movlw	1
  4919  028E                     u7775:	
  4920  028E  35B5               	lslf	(??_AsicPreCalc+6)^(0+128),f
  4921  028F  3EFF               	addlw	-1
  4922  0290  1D03               	skipz
  4923  0291  2A8E               	goto	u7775
  4924  0292  3535               	lslf	(??_AsicPreCalc+6)^(0+128),w
  4925  0293  3E0C               	addlw	12
  4926  0294  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4927  0295  0086               	movwf	6
  4928  0296  3001               	movlw	1	; select bank2/3
  4929  0297  0087               	movwf	7
  4930  0298  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4931  0299  3FC0               	movwi [0]fsr1
  4932  029A  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  4933  029B  3FC1               	movwi [1]fsr1
  4934  029C  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  4935  029D  3FC2               	movwi [2]fsr1
  4936  029E  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  4937  029F  3FC3               	movwi [3]fsr1
  4938                           
  4939                           ;asic.c: 342: x = rotate(m[((0-n)&7)], 30);
  4940  02A0  0022               	movlb	2	; select bank2
  4941  02A1  0358               	decf	AsicPreCalc@n^(0+256),w
  4942  02A2  3AFF               	xorlw	255
  4943  02A3  3907               	andlw	7
  4944  02A4  0021               	movlb	1	; select bank1
  4945  02A5  00AF               	movwf	??_AsicPreCalc^(0+128)
  4946  02A6  3001               	movlw	1
  4947  02A7                     u7785:	
  4948  02A7  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4949  02A8  3EFF               	addlw	-1
  4950  02A9  1D03               	skipz
  4951  02AA  2AA7               	goto	u7785
  4952  02AB  352F               	lslf	??_AsicPreCalc^(0+128),w
  4953  02AC  3E2C               	addlw	AsicPreCalc@m& (0+255)
  4954  02AD  0086               	movwf	6
  4955  02AE  3001               	movlw	1	; select bank2/3
  4956  02AF  0087               	movwf	7
  4957  02B0  3F40               	moviw [0]fsr1
  4958  02B1  00A0               	movwf	?_rotate^(0+128)
  4959  02B2  3F41               	moviw [1]fsr1
  4960  02B3  00A1               	movwf	(?_rotate+1)^(0+128)
  4961  02B4  3F42               	moviw [2]fsr1
  4962  02B5  00A2               	movwf	(?_rotate+2)^(0+128)
  4963  02B6  3F43               	moviw [3]fsr1
  4964  02B7  00A3               	movwf	(?_rotate+3)^(0+128)
  4965  02B8  301E               	movlw	30
  4966  02B9  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  4967  02BA  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  4968  02BB  00A4               	movwf	(?_rotate^(0+128)+4)
  4969  02BC  319C  241B  3180   	fcall	_rotate
  4970  02BF  0021               	movlb	1	; select bank1
  4971  02C0  0823               	movf	(?_rotate+3)^(0+128),w
  4972  02C1  0022               	movlb	2	; select bank2
  4973  02C2  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  4974  02C3  0021               	movlb	1	; select bank1
  4975  02C4  0822               	movf	(?_rotate+2)^(0+128),w
  4976  02C5  0022               	movlb	2	; select bank2
  4977  02C6  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  4978  02C7  0021               	movlb	1	; select bank1
  4979  02C8  0821               	movf	(?_rotate+1)^(0+128),w
  4980  02C9  0022               	movlb	2	; select bank2
  4981  02CA  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  4982  02CB  0021               	movlb	1	; select bank1
  4983  02CC  0820               	movf	?_rotate^(0+128),w
  4984  02CD  0022               	movlb	2	; select bank2
  4985  02CE  00D4               	movwf	AsicPreCalc@x^(0+256)
  4986                           
  4987                           ;asic.c: 343: y = rotate(m[((0-n)&7)], 19);
  4988  02CF  0358               	decf	AsicPreCalc@n^(0+256),w
  4989  02D0  3AFF               	xorlw	255
  4990  02D1  3907               	andlw	7
  4991  02D2  0021               	movlb	1	; select bank1
  4992  02D3  00AF               	movwf	??_AsicPreCalc^(0+128)
  4993  02D4  3001               	movlw	1
  4994  02D5                     u7795:	
  4995  02D5  35AF               	lslf	??_AsicPreCalc^(0+128),f
  4996  02D6  3EFF               	addlw	-1
  4997  02D7  1D03               	skipz
  4998  02D8  2AD5               	goto	u7795
  4999  02D9  352F               	lslf	??_AsicPreCalc^(0+128),w
  5000  02DA  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5001  02DB  0086               	movwf	6
  5002  02DC  3001               	movlw	1	; select bank2/3
  5003  02DD  0087               	movwf	7
  5004  02DE  3F40               	moviw [0]fsr1
  5005  02DF  00A0               	movwf	?_rotate^(0+128)
  5006  02E0  3F41               	moviw [1]fsr1
  5007  02E1  00A1               	movwf	(?_rotate+1)^(0+128)
  5008  02E2  3F42               	moviw [2]fsr1
  5009  02E3  00A2               	movwf	(?_rotate+2)^(0+128)
  5010  02E4  3F43               	moviw [3]fsr1
  5011  02E5  00A3               	movwf	(?_rotate+3)^(0+128)
  5012  02E6  3013               	movlw	19
  5013  02E7  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5014  02E8  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5015  02E9  00A4               	movwf	(?_rotate^(0+128)+4)
  5016  02EA  319C  241B  3180   	fcall	_rotate
  5017  02ED  0021               	movlb	1	; select bank1
  5018  02EE  0823               	movf	(?_rotate+3)^(0+128),w
  5019  02EF  0022               	movlb	2	; select bank2
  5020  02F0  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  5021  02F1  0021               	movlb	1	; select bank1
  5022  02F2  0822               	movf	(?_rotate+2)^(0+128),w
  5023  02F3  0022               	movlb	2	; select bank2
  5024  02F4  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  5025  02F5  0021               	movlb	1	; select bank1
  5026  02F6  0821               	movf	(?_rotate+1)^(0+128),w
  5027  02F7  0022               	movlb	2	; select bank2
  5028  02F8  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  5029  02F9  0021               	movlb	1	; select bank1
  5030  02FA  0820               	movf	?_rotate^(0+128),w
  5031  02FB  0022               	movlb	2	; select bank2
  5032  02FC  00D0               	movwf	AsicPreCalc@y^(0+256)
  5033                           
  5034                           ;asic.c: 344: y = y^x;
  5035  02FD  0850               	movf	AsicPreCalc@y^(0+256),w
  5036  02FE  0654               	xorwf	AsicPreCalc@x^(0+256),w
  5037  02FF  0021               	movlb	1	; select bank1
  5038  0300  00AF               	movwf	??_AsicPreCalc^(0+128)
  5039  0301  0022               	movlb	2	; select bank2
  5040  0302  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  5041  0303  0655               	xorwf	(AsicPreCalc@x+1)^(0+256),w
  5042  0304  0021               	movlb	1	; select bank1
  5043  0305  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5044  0306  0022               	movlb	2	; select bank2
  5045  0307  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  5046  0308  0656               	xorwf	(AsicPreCalc@x+2)^(0+256),w
  5047  0309  0021               	movlb	1	; select bank1
  5048  030A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5049  030B  0022               	movlb	2	; select bank2
  5050  030C  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  5051  030D  0657               	xorwf	(AsicPreCalc@x+3)^(0+256),w
  5052  030E  0021               	movlb	1	; select bank1
  5053  030F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5054  0310  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5055  0311  0022               	movlb	2	; select bank2
  5056  0312  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  5057  0313  0021               	movlb	1	; select bank1
  5058  0314  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5059  0315  0022               	movlb	2	; select bank2
  5060  0316  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  5061  0317  0021               	movlb	1	; select bank1
  5062  0318  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5063  0319  0022               	movlb	2	; select bank2
  5064  031A  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  5065  031B  0021               	movlb	1	; select bank1
  5066  031C  082F               	movf	??_AsicPreCalc^(0+128),w
  5067  031D  0022               	movlb	2	; select bank2
  5068  031E  00D0               	movwf	AsicPreCalc@y^(0+256)
  5069                           
  5070                           ;asic.c: 345: x = rotate(m[((0-n)&7)], 10);
  5071  031F  0358               	decf	AsicPreCalc@n^(0+256),w
  5072  0320  3AFF               	xorlw	255
  5073  0321  3907               	andlw	7
  5074  0322  0021               	movlb	1	; select bank1
  5075  0323  00AF               	movwf	??_AsicPreCalc^(0+128)
  5076  0324  3001               	movlw	1
  5077  0325                     u7805:	
  5078  0325  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5079  0326  3EFF               	addlw	-1
  5080  0327  1D03               	skipz
  5081  0328  2B25               	goto	u7805
  5082  0329  352F               	lslf	??_AsicPreCalc^(0+128),w
  5083  032A  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5084  032B  0086               	movwf	6
  5085  032C  3001               	movlw	1	; select bank2/3
  5086  032D  0087               	movwf	7
  5087  032E  3F40               	moviw [0]fsr1
  5088  032F  00A0               	movwf	?_rotate^(0+128)
  5089  0330  3F41               	moviw [1]fsr1
  5090  0331  00A1               	movwf	(?_rotate+1)^(0+128)
  5091  0332  3F42               	moviw [2]fsr1
  5092  0333  00A2               	movwf	(?_rotate+2)^(0+128)
  5093  0334  3F43               	moviw [3]fsr1
  5094  0335  00A3               	movwf	(?_rotate+3)^(0+128)
  5095  0336  300A               	movlw	10
  5096  0337  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5097  0338  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5098  0339  00A4               	movwf	(?_rotate^(0+128)+4)
  5099  033A  319C  241B  3180   	fcall	_rotate
  5100  033D  0021               	movlb	1	; select bank1
  5101  033E  0823               	movf	(?_rotate+3)^(0+128),w
  5102  033F  0022               	movlb	2	; select bank2
  5103  0340  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5104  0341  0021               	movlb	1	; select bank1
  5105  0342  0822               	movf	(?_rotate+2)^(0+128),w
  5106  0343  0022               	movlb	2	; select bank2
  5107  0344  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5108  0345  0021               	movlb	1	; select bank1
  5109  0346  0821               	movf	(?_rotate+1)^(0+128),w
  5110  0347  0022               	movlb	2	; select bank2
  5111  0348  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5112  0349  0021               	movlb	1	; select bank1
  5113  034A  0820               	movf	?_rotate^(0+128),w
  5114  034B  0022               	movlb	2	; select bank2
  5115  034C  00D4               	movwf	AsicPreCalc@x^(0+256)
  5116                           
  5117                           ;asic.c: 346: y = x^y;
  5118  034D  0854               	movf	AsicPreCalc@x^(0+256),w
  5119  034E  0650               	xorwf	AsicPreCalc@y^(0+256),w
  5120  034F  0021               	movlb	1	; select bank1
  5121  0350  00AF               	movwf	??_AsicPreCalc^(0+128)
  5122  0351  0022               	movlb	2	; select bank2
  5123  0352  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  5124  0353  0651               	xorwf	(AsicPreCalc@y+1)^(0+256),w
  5125  0354  0021               	movlb	1	; select bank1
  5126  0355  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5127  0356  0022               	movlb	2	; select bank2
  5128  0357  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  5129  0358  0652               	xorwf	(AsicPreCalc@y+2)^(0+256),w
  5130  0359  0021               	movlb	1	; select bank1
  5131  035A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5132  035B  0022               	movlb	2	; select bank2
  5133  035C  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  5134  035D  0653               	xorwf	(AsicPreCalc@y+3)^(0+256),w
  5135  035E  0021               	movlb	1	; select bank1
  5136  035F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5137  0360  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5138  0361  0022               	movlb	2	; select bank2
  5139  0362  00D3               	movwf	(AsicPreCalc@y+3)^(0+256)
  5140  0363  0021               	movlb	1	; select bank1
  5141  0364  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5142  0365  0022               	movlb	2	; select bank2
  5143  0366  00D2               	movwf	(AsicPreCalc@y+2)^(0+256)
  5144  0367  0021               	movlb	1	; select bank1
  5145  0368  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5146  0369  0022               	movlb	2	; select bank2
  5147  036A  00D1               	movwf	(AsicPreCalc@y+1)^(0+256)
  5148  036B  0021               	movlb	1	; select bank1
  5149  036C  082F               	movf	??_AsicPreCalc^(0+128),w
  5150  036D  0022               	movlb	2	; select bank2
  5151  036E  00D0               	movwf	AsicPreCalc@y^(0+256)
  5152                           
  5153                           ;asic.c: 347: x = m[((0-n)&7)] | m[((1-n)&7)];
  5154  036F  0358               	decf	AsicPreCalc@n^(0+256),w
  5155  0370  3AFF               	xorlw	255
  5156  0371  3E01               	addlw	1
  5157  0372  3907               	andlw	7
  5158  0373  0021               	movlb	1	; select bank1
  5159  0374  00AF               	movwf	??_AsicPreCalc^(0+128)
  5160  0375  3001               	movlw	1
  5161  0376                     u7815:	
  5162  0376  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5163  0377  3EFF               	addlw	-1
  5164  0378  1D03               	skipz
  5165  0379  2B76               	goto	u7815
  5166  037A  352F               	lslf	??_AsicPreCalc^(0+128),w
  5167  037B  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5168  037C  0086               	movwf	6
  5169  037D  3001               	movlw	1	; select bank2/3
  5170  037E  0087               	movwf	7
  5171  037F  3F40               	moviw [0]fsr1
  5172  0380  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5173  0381  3F41               	moviw [1]fsr1
  5174  0382  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5175  0383  3F42               	moviw [2]fsr1
  5176  0384  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5177  0385  3F43               	moviw [3]fsr1
  5178  0386  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5179  0387  0022               	movlb	2	; select bank2
  5180  0388  0358               	decf	AsicPreCalc@n^(0+256),w
  5181  0389  3AFF               	xorlw	255
  5182  038A  3907               	andlw	7
  5183  038B  0021               	movlb	1	; select bank1
  5184  038C  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5185  038D  3001               	movlw	1
  5186  038E                     u7825:	
  5187  038E  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5188  038F  3EFF               	addlw	-1
  5189  0390  1D03               	skipz
  5190  0391  2B8E               	goto	u7825
  5191  0392  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5192  0393  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5193  0394  0086               	movwf	6
  5194  0395  3001               	movlw	1	; select bank2/3
  5195  0396  0087               	movwf	7
  5196  0397  3F40               	moviw [0]fsr1
  5197  0398  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  5198  0399  3F41               	moviw [1]fsr1
  5199  039A  00B6               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5200  039B  3F42               	moviw [2]fsr1
  5201  039C  00B7               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5202  039D  3F43               	moviw [3]fsr1
  5203  039E  00B8               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5204  039F  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5205  03A0  0435               	iorwf	(??_AsicPreCalc+6)^(0+128),w
  5206  03A1  0022               	movlb	2	; select bank2
  5207  03A2  00D4               	movwf	AsicPreCalc@x^(0+256)
  5208  03A3  0021               	movlb	1	; select bank1
  5209  03A4  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5210  03A5  0436               	iorwf	(??_AsicPreCalc+7)^(0+128),w
  5211  03A6  0022               	movlb	2	; select bank2
  5212  03A7  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5213  03A8  0021               	movlb	1	; select bank1
  5214  03A9  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5215  03AA  0437               	iorwf	(??_AsicPreCalc+8)^(0+128),w
  5216  03AB  0022               	movlb	2	; select bank2
  5217  03AC  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5218  03AD  0021               	movlb	1	; select bank1
  5219  03AE  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5220  03AF  0438               	iorwf	(??_AsicPreCalc+9)^(0+128),w
  5221  03B0  0022               	movlb	2	; select bank2
  5222  03B1  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5223                           
  5224                           ;asic.c: 348: x = m[((2-n)&7)] & x;
  5225  03B2  0358               	decf	AsicPreCalc@n^(0+256),w
  5226  03B3  3AFF               	xorlw	255
  5227  03B4  3E02               	addlw	2
  5228  03B5  3907               	andlw	7
  5229  03B6  0021               	movlb	1	; select bank1
  5230  03B7  00AF               	movwf	??_AsicPreCalc^(0+128)
  5231  03B8  3001               	movlw	1
  5232  03B9                     u7835:	
  5233  03B9  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5234  03BA  3EFF               	addlw	-1
  5235  03BB  1D03               	skipz
  5236  03BC  2BB9               	goto	u7835
  5237  03BD  352F               	lslf	??_AsicPreCalc^(0+128),w
  5238  03BE  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5239  03BF  0086               	movwf	6
  5240  03C0  3001               	movlw	1	; select bank2/3
  5241  03C1  0087               	movwf	7
  5242  03C2  0022               	movlb	2	; select bank2
  5243  03C3  0854               	movf	AsicPreCalc@x^(0+256),w
  5244  03C4  0501               	andwf	1,w
  5245  03C5  0021               	movlb	1	; select bank1
  5246  03C6  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5247  03C7  3141               	addfsr 1,1
  5248  03C8  0022               	movlb	2	; select bank2
  5249  03C9  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  5250  03CA  0501               	andwf	1,w
  5251  03CB  0021               	movlb	1	; select bank1
  5252  03CC  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5253  03CD  3141               	addfsr 1,1
  5254  03CE  0022               	movlb	2	; select bank2
  5255  03CF  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  5256  03D0  0501               	andwf	1,w
  5257  03D1  0021               	movlb	1	; select bank1
  5258  03D2  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5259  03D3  3141               	addfsr 1,1
  5260  03D4  0022               	movlb	2	; select bank2
  5261  03D5  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  5262  03D6  0501               	andwf	1,w
  5263  03D7  0021               	movlb	1	; select bank1
  5264  03D8  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5265  03D9  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5266  03DA  0022               	movlb	2	; select bank2
  5267  03DB  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5268  03DC  0021               	movlb	1	; select bank1
  5269  03DD  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5270  03DE  0022               	movlb	2	; select bank2
  5271  03DF  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5272  03E0  0021               	movlb	1	; select bank1
  5273  03E1  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5274  03E2  0022               	movlb	2	; select bank2
  5275  03E3  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5276  03E4  0021               	movlb	1	; select bank1
  5277  03E5  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5278  03E6  0022               	movlb	2	; select bank2
  5279  03E7  00D4               	movwf	AsicPreCalc@x^(0+256)
  5280                           
  5281                           ;asic.c: 349: z = m[((0-n)&7)] & m[((1-n)&7)];
  5282  03E8  0358               	decf	AsicPreCalc@n^(0+256),w
  5283  03E9  3AFF               	xorlw	255
  5284  03EA  3E01               	addlw	1
  5285  03EB  3907               	andlw	7
  5286  03EC  0021               	movlb	1	; select bank1
  5287  03ED  00AF               	movwf	??_AsicPreCalc^(0+128)
  5288  03EE  3001               	movlw	1
  5289  03EF                     u7845:	
  5290  03EF  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5291  03F0  3EFF               	addlw	-1
  5292  03F1  1D03               	skipz
  5293  03F2  2BEF               	goto	u7845
  5294  03F3  352F               	lslf	??_AsicPreCalc^(0+128),w
  5295  03F4  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5296  03F5  0086               	movwf	6
  5297  03F6  3001               	movlw	1	; select bank2/3
  5298  03F7  0087               	movwf	7
  5299  03F8  3F40               	moviw [0]fsr1
  5300  03F9  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5301  03FA  3F41               	moviw [1]fsr1
  5302  03FB  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5303  03FC  3F42               	moviw [2]fsr1
  5304  03FD  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5305  03FE  3F43               	moviw [3]fsr1
  5306  03FF  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5307  0400  0022               	movlb	2	; select bank2
  5308  0401  0358               	decf	AsicPreCalc@n^(0+256),w
  5309  0402  3AFF               	xorlw	255
  5310  0403  3907               	andlw	7
  5311  0404  0021               	movlb	1	; select bank1
  5312  0405  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5313  0406  3001               	movlw	1
  5314  0407                     u7855:	
  5315  0407  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5316  0408  3EFF               	addlw	-1
  5317  0409  1D03               	skipz
  5318  040A  2C07               	goto	u7855
  5319  040B  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5320  040C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5321  040D  0086               	movwf	6
  5322  040E  3001               	movlw	1	; select bank2/3
  5323  040F  0087               	movwf	7
  5324  0410  3F40               	moviw [0]fsr1
  5325  0411  00B5               	movwf	(??_AsicPreCalc+6)^(0+128)
  5326  0412  3F41               	moviw [1]fsr1
  5327  0413  00B6               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5328  0414  3F42               	moviw [2]fsr1
  5329  0415  00B7               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5330  0416  3F43               	moviw [3]fsr1
  5331  0417  00B8               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5332  0418  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5333  0419  0535               	andwf	(??_AsicPreCalc+6)^(0+128),w
  5334  041A  0022               	movlb	2	; select bank2
  5335  041B  00CC               	movwf	AsicPreCalc@z^(0+256)
  5336  041C  0021               	movlb	1	; select bank1
  5337  041D  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5338  041E  0536               	andwf	(??_AsicPreCalc+7)^(0+128),w
  5339  041F  0022               	movlb	2	; select bank2
  5340  0420  00CD               	movwf	(AsicPreCalc@z+1)^(0+256)
  5341  0421  0021               	movlb	1	; select bank1
  5342  0422  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5343  0423  0537               	andwf	(??_AsicPreCalc+8)^(0+128),w
  5344  0424  0022               	movlb	2	; select bank2
  5345  0425  00CE               	movwf	(AsicPreCalc@z+2)^(0+256)
  5346  0426  0021               	movlb	1	; select bank1
  5347  0427  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5348  0428  0538               	andwf	(??_AsicPreCalc+9)^(0+128),w
  5349  0429  0022               	movlb	2	; select bank2
  5350  042A  00CF               	movwf	(AsicPreCalc@z+3)^(0+256)
  5351                           
  5352                           ;asic.c: 350: x = x | z;
  5353  042B  0854               	movf	AsicPreCalc@x^(0+256),w
  5354  042C  044C               	iorwf	AsicPreCalc@z^(0+256),w
  5355  042D  0021               	movlb	1	; select bank1
  5356  042E  00AF               	movwf	??_AsicPreCalc^(0+128)
  5357  042F  0022               	movlb	2	; select bank2
  5358  0430  0855               	movf	(AsicPreCalc@x+1)^(0+256),w
  5359  0431  044D               	iorwf	(AsicPreCalc@z+1)^(0+256),w
  5360  0432  0021               	movlb	1	; select bank1
  5361  0433  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5362  0434  0022               	movlb	2	; select bank2
  5363  0435  0856               	movf	(AsicPreCalc@x+2)^(0+256),w
  5364  0436  044E               	iorwf	(AsicPreCalc@z+2)^(0+256),w
  5365  0437  0021               	movlb	1	; select bank1
  5366  0438  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5367  0439  0022               	movlb	2	; select bank2
  5368  043A  0857               	movf	(AsicPreCalc@x+3)^(0+256),w
  5369  043B  044F               	iorwf	(AsicPreCalc@z+3)^(0+256),w
  5370  043C  0021               	movlb	1	; select bank1
  5371  043D  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5372  043E  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5373  043F  0022               	movlb	2	; select bank2
  5374  0440  00D7               	movwf	(AsicPreCalc@x+3)^(0+256)
  5375  0441  0021               	movlb	1	; select bank1
  5376  0442  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5377  0443  0022               	movlb	2	; select bank2
  5378  0444  00D6               	movwf	(AsicPreCalc@x+2)^(0+256)
  5379  0445  0021               	movlb	1	; select bank1
  5380  0446  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5381  0447  0022               	movlb	2	; select bank2
  5382  0448  00D5               	movwf	(AsicPreCalc@x+1)^(0+256)
  5383  0449  0021               	movlb	1	; select bank1
  5384  044A  082F               	movf	??_AsicPreCalc^(0+128),w
  5385  044B  0022               	movlb	2	; select bank2
  5386  044C  00D4               	movwf	AsicPreCalc@x^(0+256)
  5387                           
  5388                           ;asic.c: 351: m[7-n] += y + x;
  5389  044D  0850               	movf	AsicPreCalc@y^(0+256),w
  5390  044E  0754               	addwf	AsicPreCalc@x^(0+256),w
  5391  044F  0021               	movlb	1	; select bank1
  5392  0450  00AF               	movwf	??_AsicPreCalc^(0+128)
  5393  0451  0022               	movlb	2	; select bank2
  5394  0452  0851               	movf	(AsicPreCalc@y+1)^(0+256),w
  5395  0453  3D55               	addwfc	(AsicPreCalc@x+1)^(0+256),w
  5396  0454  0021               	movlb	1	; select bank1
  5397  0455  00B0               	movwf	(??_AsicPreCalc^(0+128)+1)
  5398  0456  0022               	movlb	2	; select bank2
  5399  0457  0852               	movf	(AsicPreCalc@y+2)^(0+256),w
  5400  0458  3D56               	addwfc	(AsicPreCalc@x+2)^(0+256),w
  5401  0459  0021               	movlb	1	; select bank1
  5402  045A  00B1               	movwf	(??_AsicPreCalc^(0+128)+2)
  5403  045B  0022               	movlb	2	; select bank2
  5404  045C  0853               	movf	(AsicPreCalc@y+3)^(0+256),w
  5405  045D  3D57               	addwfc	(AsicPreCalc@x+3)^(0+256),w
  5406  045E  0021               	movlb	1	; select bank1
  5407  045F  00B2               	movwf	(??_AsicPreCalc^(0+128)+3)
  5408  0460  0022               	movlb	2	; select bank2
  5409  0461  0358               	decf	AsicPreCalc@n^(0+256),w
  5410  0462  3AFF               	xorlw	255
  5411  0463  0021               	movlb	1	; select bank1
  5412  0464  00B3               	movwf	(??_AsicPreCalc+4)^(0+128)
  5413  0465  3001               	movlw	1
  5414  0466                     u7865:	
  5415  0466  35B3               	lslf	(??_AsicPreCalc+4)^(0+128),f
  5416  0467  3EFF               	addlw	-1
  5417  0468  1D03               	skipz
  5418  0469  2C66               	goto	u7865
  5419  046A  3533               	lslf	(??_AsicPreCalc+4)^(0+128),w
  5420  046B  3E1C               	addlw	28
  5421  046C  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5422  046D  0086               	movwf	6
  5423  046E  3001               	movlw	1	; select bank2/3
  5424  046F  0087               	movwf	7
  5425  0470  082F               	movf	??_AsicPreCalc^(0+128),w
  5426  0471  0781               	addwf	1,f
  5427  0472  3141               	addfsr 1,1
  5428  0473  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5429  0474  3D81               	addwfc	1,f
  5430  0475  3141               	addfsr 1,1
  5431  0476  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5432  0477  3D81               	addwfc	1,f
  5433  0478  3141               	addfsr 1,1
  5434  0479  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5435  047A  3D81               	addwfc	1,f
  5436                           
  5437                           ;asic.c: 353: PrecalcHashes[2-n] = m[7-n];
  5438  047B  0022               	movlb	2	; select bank2
  5439  047C  0358               	decf	AsicPreCalc@n^(0+256),w
  5440  047D  3AFF               	xorlw	255
  5441  047E  0021               	movlb	1	; select bank1
  5442  047F  00AF               	movwf	??_AsicPreCalc^(0+128)
  5443  0480  3001               	movlw	1
  5444  0481                     u7875:	
  5445  0481  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5446  0482  3EFF               	addlw	-1
  5447  0483  1D03               	skipz
  5448  0484  2C81               	goto	u7875
  5449  0485  352F               	lslf	??_AsicPreCalc^(0+128),w
  5450  0486  3E1C               	addlw	28
  5451  0487  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5452  0488  0086               	movwf	6
  5453  0489  3001               	movlw	1	; select bank2/3
  5454  048A  0087               	movwf	7
  5455  048B  3F40               	moviw [0]fsr1
  5456  048C  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5457  048D  3F41               	moviw [1]fsr1
  5458  048E  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5459  048F  3F42               	moviw [2]fsr1
  5460  0490  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5461  0491  3F43               	moviw [3]fsr1
  5462  0492  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5463  0493  0022               	movlb	2	; select bank2
  5464  0494  0358               	decf	AsicPreCalc@n^(0+256),w
  5465  0495  3AFF               	xorlw	255
  5466  0496  0021               	movlb	1	; select bank1
  5467  0497  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5468  0498  3001               	movlw	1
  5469  0499                     u7885:	
  5470  0499  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5471  049A  3EFF               	addlw	-1
  5472  049B  1D03               	skipz
  5473  049C  2C99               	goto	u7885
  5474  049D  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5475  049E  3E08               	addlw	8
  5476  049F  3E40               	addlw	_PrecalcHashes& (0+255)
  5477  04A0  0086               	movwf	6
  5478  04A1  3003               	movlw	3	; select bank6/7
  5479  04A2  0087               	movwf	7
  5480  04A3  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5481  04A4  3FC0               	movwi [0]fsr1
  5482  04A5  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5483  04A6  3FC1               	movwi [1]fsr1
  5484  04A7  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5485  04A8  3FC2               	movwi [2]fsr1
  5486  04A9  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5487  04AA  3FC3               	movwi [3]fsr1
  5488                           
  5489                           ;asic.c: 354: PrecalcHashes[5-n] = m[3-n];
  5490  04AB  0022               	movlb	2	; select bank2
  5491  04AC  0358               	decf	AsicPreCalc@n^(0+256),w
  5492  04AD  3AFF               	xorlw	255
  5493  04AE  0021               	movlb	1	; select bank1
  5494  04AF  00AF               	movwf	??_AsicPreCalc^(0+128)
  5495  04B0  3001               	movlw	1
  5496  04B1                     u7895:	
  5497  04B1  35AF               	lslf	??_AsicPreCalc^(0+128),f
  5498  04B2  3EFF               	addlw	-1
  5499  04B3  1D03               	skipz
  5500  04B4  2CB1               	goto	u7895
  5501  04B5  352F               	lslf	??_AsicPreCalc^(0+128),w
  5502  04B6  3E0C               	addlw	12
  5503  04B7  3E2C               	addlw	AsicPreCalc@m& (0+255)
  5504  04B8  0086               	movwf	6
  5505  04B9  3001               	movlw	1	; select bank2/3
  5506  04BA  0087               	movwf	7
  5507  04BB  3F40               	moviw [0]fsr1
  5508  04BC  00B0               	movwf	(??_AsicPreCalc+1)^(0+128)
  5509  04BD  3F41               	moviw [1]fsr1
  5510  04BE  00B1               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5511  04BF  3F42               	moviw [2]fsr1
  5512  04C0  00B2               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5513  04C1  3F43               	moviw [3]fsr1
  5514  04C2  00B3               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5515  04C3  0022               	movlb	2	; select bank2
  5516  04C4  0358               	decf	AsicPreCalc@n^(0+256),w
  5517  04C5  3AFF               	xorlw	255
  5518  04C6  0021               	movlb	1	; select bank1
  5519  04C7  00B4               	movwf	(??_AsicPreCalc+5)^(0+128)
  5520  04C8  3001               	movlw	1
  5521  04C9                     u7905:	
  5522  04C9  35B4               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5523  04CA  3EFF               	addlw	-1
  5524  04CB  1D03               	skipz
  5525  04CC  2CC9               	goto	u7905
  5526  04CD  3534               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5527  04CE  3E14               	addlw	20
  5528  04CF  3E40               	addlw	_PrecalcHashes& (0+255)
  5529  04D0  0086               	movwf	6
  5530  04D1  3003               	movlw	3	; select bank6/7
  5531  04D2  0087               	movwf	7
  5532  04D3  0830               	movf	(??_AsicPreCalc+1)^(0+128),w
  5533  04D4  3FC0               	movwi [0]fsr1
  5534  04D5  0831               	movf	(??_AsicPreCalc+2)^(0+128),w
  5535  04D6  3FC1               	movwi [1]fsr1
  5536  04D7  0832               	movf	(??_AsicPreCalc+3)^(0+128),w
  5537  04D8  3FC2               	movwi [2]fsr1
  5538  04D9  0833               	movf	(??_AsicPreCalc+4)^(0+128),w
  5539  04DA  3FC3               	movwi [3]fsr1
  5540  04DB  3001               	movlw	1
  5541  04DC  00AF               	movwf	??_AsicPreCalc^(0+128)
  5542  04DD  082F               	movf	??_AsicPreCalc^(0+128),w
  5543  04DE  0022               	movlb	2	; select bank2
  5544  04DF  07D8               	addwf	AsicPreCalc@n^(0+256),f
  5545  04E0  2864               	goto	L5
  5546  04E1                     __end_of_AsicPreCalc:	
  5547                           
  5548                           	psect	text9
  5549  1C1B                     __ptext9:	
  5550 ;; *************** function _rotate *****************
  5551 ;; Defined at:
  5552 ;;		line 313 in file "asic.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  x               4    0[BANK1 ] unsigned long 
  5555 ;;  y               1    4[BANK1 ] unsigned char 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  4    0[BANK1 ] unsigned long 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5567 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;Total ram usage:       13 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    4
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_AsicPreCalc
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _rotate
  5583  1C1B                     _rotate:	
  5584                           
  5585                           ;asic.c: 314: return ((x<<y) | (x>>(32-y)));
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in _rotate: [wreg+status,2+status,0]
  5589  1C1B  0021               	movlb	1	; select bank1
  5590  1C1C  0820               	movf	rotate@x^(0+128),w
  5591  1C1D  00A5               	movwf	??_rotate^(0+128)
  5592  1C1E  0821               	movf	(rotate@x+1)^(0+128),w
  5593  1C1F  00A6               	movwf	(??_rotate^(0+128)+1)
  5594  1C20  0822               	movf	(rotate@x+2)^(0+128),w
  5595  1C21  00A7               	movwf	(??_rotate^(0+128)+2)
  5596  1C22  0823               	movf	(rotate@x+3)^(0+128),w
  5597  1C23  00A8               	movwf	(??_rotate^(0+128)+3)
  5598  1C24  0324               	decf	rotate@y^(0+128),w
  5599  1C25  3AFF               	xorlw	255
  5600  1C26  3E20               	addlw	32
  5601  1C27  0A89               	incf	9,f
  5602  1C28  2C2E               	goto	u7580
  5603  1C29                     u7585:	
  5604  1C29  1003               	clrc
  5605  1C2A  0CA8               	rrf	(??_rotate^(0+128)+3),f
  5606  1C2B  0CA7               	rrf	(??_rotate^(0+128)+2),f
  5607  1C2C  0CA6               	rrf	(??_rotate^(0+128)+1),f
  5608  1C2D  0CA5               	rrf	??_rotate^(0+128),f
  5609  1C2E                     u7580:	
  5610  1C2E  3EFF               	addlw	-1
  5611  1C2F  1D03               	skipz
  5612  1C30  2C29               	goto	u7585
  5613  1C31  0820               	movf	rotate@x^(0+128),w
  5614  1C32  00A9               	movwf	(??_rotate+4)^(0+128)
  5615  1C33  0821               	movf	(rotate@x+1)^(0+128),w
  5616  1C34  00AA               	movwf	((??_rotate+4)^(0+128)+1)
  5617  1C35  0822               	movf	(rotate@x+2)^(0+128),w
  5618  1C36  00AB               	movwf	((??_rotate+4)^(0+128)+2)
  5619  1C37  0823               	movf	(rotate@x+3)^(0+128),w
  5620  1C38  00AC               	movwf	((??_rotate+4)^(0+128)+3)
  5621  1C39  0A24               	incf	rotate@y^(0+128),w
  5622  1C3A  2C3F               	goto	u7590
  5623  1C3B                     u7595:	
  5624  1C3B  35A9               	lslf	(??_rotate+4)^(0+128),f
  5625  1C3C  0DAA               	rlf	((??_rotate+4)^(0+128)+1),f
  5626  1C3D  0DAB               	rlf	((??_rotate+4)^(0+128)+2),f
  5627  1C3E  0DAC               	rlf	((??_rotate+4)^(0+128)+3),f
  5628  1C3F                     u7590:	
  5629  1C3F  0B89               	decfsz	9,f
  5630  1C40  2C3B               	goto	u7595
  5631  1C41  0829               	movf	(??_rotate+4)^(0+128),w
  5632  1C42  04A5               	iorwf	??_rotate^(0+128),f
  5633  1C43  082A               	movf	(??_rotate+5)^(0+128),w
  5634  1C44  04A6               	iorwf	(??_rotate^(0+128)+1),f
  5635  1C45  082B               	movf	(??_rotate+6)^(0+128),w
  5636  1C46  04A7               	iorwf	(??_rotate^(0+128)+2),f
  5637  1C47  082C               	movf	(??_rotate+7)^(0+128),w
  5638  1C48  04A8               	iorwf	(??_rotate^(0+128)+3),f
  5639  1C49  0828               	movf	(??_rotate+3)^(0+128),w
  5640  1C4A  00A3               	movwf	(?_rotate+3)^(0+128)
  5641  1C4B  0827               	movf	(??_rotate+2)^(0+128),w
  5642  1C4C  00A2               	movwf	(?_rotate+2)^(0+128)
  5643  1C4D  0826               	movf	(??_rotate+1)^(0+128),w
  5644  1C4E  00A1               	movwf	(?_rotate+1)^(0+128)
  5645  1C4F  0825               	movf	??_rotate^(0+128),w
  5646  1C50  00A0               	movwf	?_rotate^(0+128)
  5647  1C51  0008               	return
  5648  1C52                     __end_of_rotate:	
  5649                           
  5650                           	psect	text10
  5651  1628                     __ptext10:	
  5652 ;; *************** function _SendAsicData *****************
  5653 ;; Defined at:
  5654 ;;		line 36 in file "asic.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  work            2    2[BANK1 ] PTR struct _worktask
  5657 ;;		 -> WorkQue(180), 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;		None               void
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0, pclath, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5669 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;Total ram usage:        6 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    5
  5676 ;; This function calls:
  5677 ;;		_Send32
  5678 ;; This function is called by:
  5679 ;;		_AsicPushWork
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           
  5684                           ;psect for function _SendAsicData
  5685  1628                     _SendAsicData:	
  5686                           
  5687                           ;asic.c: 37: GIE = 0;
  5688                           
  5689                           ;incstack = 0
  5690                           ; Regs used in _SendAsicData: [wreg+status,2+status,0+pclath+cstack]
  5691  1628  138B               	bcf	11,7	;volatile
  5692                           
  5693                           ;asic.c: 38: last_bit0 = 0x48; last_bit1 = 0x90;
  5694  1629  3048               	movlw	72
  5695  162A  0021               	movlb	1	; select bank1
  5696  162B  00A4               	movwf	??_SendAsicData^(0+128)
  5697  162C  0824               	movf	??_SendAsicData^(0+128),w
  5698  162D  0022               	movlb	2	; select bank2
  5699  162E  00EB               	movwf	_last_bit0^(0+256)
  5700  162F  3090               	movlw	144
  5701  1630  0021               	movlb	1	; select bank1
  5702  1631  00A4               	movwf	??_SendAsicData^(0+128)
  5703  1632  0824               	movf	??_SendAsicData^(0+128),w
  5704  1633  0022               	movlb	2	; select bank2
  5705  1634  00EC               	movwf	_last_bit1^(0+256)
  5706                           
  5707                           ;asic.c: 39: send32_data = (WORD)&ClockCfg; send32_count = 2;
  5708  1635  30D8               	movlw	low _ClockCfg
  5709  1636  00E6               	movwf	_send32_data^(0+256)
  5710  1637  3001               	movlw	high _ClockCfg
  5711  1638  00E7               	movwf	(_send32_data+1)^(0+256)
  5712  1639  3002               	movlw	2
  5713  163A  0021               	movlb	1	; select bank1
  5714  163B  00A4               	movwf	??_SendAsicData^(0+128)
  5715  163C  0824               	movf	??_SendAsicData^(0+128),w
  5716  163D  0022               	movlb	2	; select bank2
  5717  163E  00EE               	movwf	_send32_count^(0+256)
  5718                           
  5719                           ;asic.c: 40: Send32();
  5720  163F  3197  2754  3196   	fcall	_Send32
  5721                           
  5722                           ;asic.c: 41: send32_data = (WORD)&work->Merkle; send32_count = 3;
  5723  1642  0021               	movlb	1	; select bank1
  5724  1643  0822               	movf	SendAsicData@work^(0+128),w
  5725  1644  3E21               	addlw	33
  5726  1645  0022               	movlb	2	; select bank2
  5727  1646  00E6               	movwf	_send32_data^(0+256)
  5728  1647  3000               	movlw	0
  5729  1648  0021               	movlb	1	; select bank1
  5730  1649  3D23               	addwfc	(SendAsicData@work+1)^(0+128),w
  5731  164A  0022               	movlb	2	; select bank2
  5732  164B  00E7               	movwf	(_send32_data+1)^(0+256)
  5733  164C  3003               	movlw	3
  5734  164D  0021               	movlb	1	; select bank1
  5735  164E  00A4               	movwf	??_SendAsicData^(0+128)
  5736  164F  0824               	movf	??_SendAsicData^(0+128),w
  5737  1650  0022               	movlb	2	; select bank2
  5738  1651  00EE               	movwf	_send32_count^(0+256)
  5739                           
  5740                           ;asic.c: 42: Send32();
  5741  1652  3197  2754  3196   	fcall	_Send32
  5742                           
  5743                           ;asic.c: 43: send32_data = (WORD)&PrecalcHashes[1]; send32_count = 5;
  5744  1655  3044               	movlw	low (_PrecalcHashes+4)
  5745  1656  0022               	movlb	2	; select bank2
  5746  1657  00E6               	movwf	_send32_data^(0+256)
  5747  1658  3003               	movlw	high (_PrecalcHashes+4)
  5748  1659  00E7               	movwf	(_send32_data+1)^(0+256)
  5749  165A  3005               	movlw	5
  5750  165B  0021               	movlb	1	; select bank1
  5751  165C  00A4               	movwf	??_SendAsicData^(0+128)
  5752  165D  0824               	movf	??_SendAsicData^(0+128),w
  5753  165E  0022               	movlb	2	; select bank2
  5754  165F  00EE               	movwf	_send32_count^(0+256)
  5755                           
  5756                           ;asic.c: 44: Send32();
  5757  1660  3197  2754  3196   	fcall	_Send32
  5758                           
  5759                           ;asic.c: 45: send32_data = (WORD)&work->MidState; send32_count = 8;
  5760  1663  0021               	movlb	1	; select bank1
  5761  1664  0822               	movf	SendAsicData@work^(0+128),w
  5762  1665  3E01               	addlw	1
  5763  1666  0022               	movlb	2	; select bank2
  5764  1667  00E6               	movwf	_send32_data^(0+256)
  5765  1668  3000               	movlw	0
  5766  1669  0021               	movlb	1	; select bank1
  5767  166A  3D23               	addwfc	(SendAsicData@work+1)^(0+128),w
  5768  166B  0022               	movlb	2	; select bank2
  5769  166C  00E7               	movwf	(_send32_data+1)^(0+256)
  5770  166D  3008               	movlw	8
  5771  166E  0021               	movlb	1	; select bank1
  5772  166F  00A4               	movwf	??_SendAsicData^(0+128)
  5773  1670  0824               	movf	??_SendAsicData^(0+128),w
  5774  1671  0022               	movlb	2	; select bank2
  5775  1672  00EE               	movwf	_send32_count^(0+256)
  5776                           
  5777                           ;asic.c: 46: Send32();
  5778  1673  3197  2754  3196   	fcall	_Send32
  5779                           
  5780                           ;asic.c: 47: send32_data = (WORD)&PrecalcHashes; send32_count = 1;
  5781  1676  3040               	movlw	low _PrecalcHashes
  5782  1677  0022               	movlb	2	; select bank2
  5783  1678  00E6               	movwf	_send32_data^(0+256)
  5784  1679  3003               	movlw	high _PrecalcHashes
  5785  167A  00E7               	movwf	(_send32_data+1)^(0+256)
  5786  167B  01EE               	clrf	_send32_count^(0+256)
  5787  167C  0AEE               	incf	_send32_count^(0+256),f
  5788                           
  5789                           ;asic.c: 48: Send32();
  5790  167D  3197  2754  3196   	fcall	_Send32
  5791                           
  5792                           ;asic.c: 49: last_bit0 = last_bit1 = 0x50;
  5793  1680  3050               	movlw	80
  5794  1681  0022               	movlb	2	; select bank2
  5795  1682  00EC               	movwf	_last_bit1^(0+256)
  5796  1683  0021               	movlb	1	; select bank1
  5797  1684  00A4               	movwf	??_SendAsicData^(0+128)
  5798  1685  0824               	movf	??_SendAsicData^(0+128),w
  5799  1686  0022               	movlb	2	; select bank2
  5800  1687  00EB               	movwf	_last_bit0^(0+256)
  5801                           
  5802                           ;asic.c: 50: send32_data = (WORD)&NonceRanges; send32_count = BankSize;
  5803  1688  3020               	movlw	low _NonceRanges
  5804  1689  00E6               	movwf	_send32_data^(0+256)
  5805  168A  3003               	movlw	high _NonceRanges
  5806  168B  00E7               	movwf	(_send32_data+1)^(0+256)
  5807  168C  0023               	movlb	3	; select bank3
  5808  168D  0868               	movf	_BankSize^(0+384),w
  5809  168E  0021               	movlb	1	; select bank1
  5810  168F  00A4               	movwf	??_SendAsicData^(0+128)
  5811  1690  0824               	movf	??_SendAsicData^(0+128),w
  5812  1691  0022               	movlb	2	; select bank2
  5813  1692  00EE               	movwf	_send32_count^(0+256)
  5814                           
  5815                           ;asic.c: 51: Send32();
  5816  1693  3197  2754         	fcall	_Send32
  5817                           
  5818                           ;asic.c: 52: LATC = 0xD8;;
  5819  1695  30D8               	movlw	216
  5820  1696  0022               	movlb	2	; select bank2
  5821  1697  008E               	movwf	14	;volatile
  5822                           
  5823                           ;asic.c: 53: GIE = 1;
  5824  1698  178B               	bsf	11,7	;volatile
  5825                           
  5826                           ;asic.c: 54: ClockCfg[0] = ClockCfg[0] & ~0x00000002;
  5827  1699  30FD               	movlw	253
  5828  169A  0023               	movlb	3	; select bank3
  5829  169B  0558               	andwf	_ClockCfg^(0+384),w
  5830  169C  0021               	movlb	1	; select bank1
  5831  169D  00A4               	movwf	??_SendAsicData^(0+128)
  5832  169E  30FF               	movlw	255
  5833  169F  0023               	movlb	3	; select bank3
  5834  16A0  0559               	andwf	(_ClockCfg+1)^(0+384),w
  5835  16A1  0021               	movlb	1	; select bank1
  5836  16A2  00A5               	movwf	(??_SendAsicData^(0+128)+1)
  5837  16A3  30FF               	movlw	255
  5838  16A4  0023               	movlb	3	; select bank3
  5839  16A5  055A               	andwf	(_ClockCfg+2)^(0+384),w
  5840  16A6  0021               	movlb	1	; select bank1
  5841  16A7  00A6               	movwf	(??_SendAsicData^(0+128)+2)
  5842  16A8  30FF               	movlw	255
  5843  16A9  0023               	movlb	3	; select bank3
  5844  16AA  055B               	andwf	(_ClockCfg+3)^(0+384),w
  5845  16AB  0021               	movlb	1	; select bank1
  5846  16AC  00A7               	movwf	(??_SendAsicData^(0+128)+3)
  5847  16AD  0827               	movf	(??_SendAsicData+3)^(0+128),w
  5848  16AE  0023               	movlb	3	; select bank3
  5849  16AF  00DB               	movwf	(_ClockCfg+3)^(0+384)
  5850  16B0  0021               	movlb	1	; select bank1
  5851  16B1  0826               	movf	(??_SendAsicData+2)^(0+128),w
  5852  16B2  0023               	movlb	3	; select bank3
  5853  16B3  00DA               	movwf	(_ClockCfg+2)^(0+384)
  5854  16B4  0021               	movlb	1	; select bank1
  5855  16B5  0825               	movf	(??_SendAsicData+1)^(0+128),w
  5856  16B6  0023               	movlb	3	; select bank3
  5857  16B7  00D9               	movwf	(_ClockCfg+1)^(0+384)
  5858  16B8  0021               	movlb	1	; select bank1
  5859  16B9  0824               	movf	??_SendAsicData^(0+128),w
  5860  16BA  0023               	movlb	3	; select bank3
  5861  16BB  00D8               	movwf	_ClockCfg^(0+384)
  5862  16BC  0008               	return
  5863  16BD                     __end_of_SendAsicData:	
  5864                           
  5865                           	psect	text11
  5866  1754                     __ptext11:	
  5867 ;; *************** function _Send32 *****************
  5868 ;; Defined at:
  5869 ;;		line 58 in file "asic.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		None
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;Total ram usage:        0 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    4
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_SendAsicData
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _Send32
  5899  1754                     _Send32:	
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _Send32: []
  5903  1754  0022               	banksel	270	;# 
  5904  1755  0866               	movf	_send32_data& (0+127),w	;# 
  5905  1756  0086               	movwf	6	;# 
  5906  1757  0867               	movf	(_send32_data+1)& (0+127),w	;# 
  5907  1758  0087               	movwf	7	;# 
  5908  1759                     next_word:	
  5909                           
  5910                           ;# 
  5911  1759  3048               	movlw	72	;# 
  5912  175A  018E               	clrf	14	;# 
  5913  175B  1801               	btfsc	1,0	;# 
  5914  175C  3090               	movlw	144	;# 
  5915  175D  008E               	movwf	14	;# 
  5916  175E  3048               	movlw	72	;# 
  5917  175F  018E               	clrf	14	;# 
  5918  1760  1881               	btfsc	1,1	;# 
  5919  1761  3090               	movlw	144	;# 
  5920  1762  008E               	movwf	14	;# 
  5921  1763  3048               	movlw	72	;# 
  5922  1764  018E               	clrf	14	;# 
  5923  1765  1901               	btfsc	1,2	;# 
  5924  1766  3090               	movlw	144	;# 
  5925  1767  008E               	movwf	14	;# 
  5926  1768  3048               	movlw	72	;# 
  5927  1769  018E               	clrf	14	;# 
  5928  176A  1981               	btfsc	1,3	;# 
  5929  176B  3090               	movlw	144	;# 
  5930  176C  008E               	movwf	14	;# 
  5931  176D  3048               	movlw	72	;# 
  5932  176E  018E               	clrf	14	;# 
  5933  176F  1A01               	btfsc	1,4	;# 
  5934  1770  3090               	movlw	144	;# 
  5935  1771  008E               	movwf	14	;# 
  5936  1772  3048               	movlw	72	;# 
  5937  1773  018E               	clrf	14	;# 
  5938  1774  1A81               	btfsc	1,5	;# 
  5939  1775  3090               	movlw	144	;# 
  5940  1776  008E               	movwf	14	;# 
  5941  1777  3048               	movlw	72	;# 
  5942  1778  018E               	clrf	14	;# 
  5943  1779  1B01               	btfsc	1,6	;# 
  5944  177A  3090               	movlw	144	;# 
  5945  177B  008E               	movwf	14	;# 
  5946  177C  3048               	movlw	72	;# 
  5947  177D  018E               	clrf	14	;# 
  5948  177E  1B81               	btfsc	1,7	;# 
  5949  177F  3090               	movlw	144	;# 
  5950  1780  008E               	movwf	14	;# 
  5951  1781  3141               	addfsr 1,1	;# 
  5952  1782  3048               	movlw	72	;# 
  5953  1783  018E               	clrf	14	;# 
  5954  1784  1801               	btfsc	1,0	;# 
  5955  1785  3090               	movlw	144	;# 
  5956  1786  008E               	movwf	14	;# 
  5957  1787  3048               	movlw	72	;# 
  5958  1788  018E               	clrf	14	;# 
  5959  1789  1881               	btfsc	1,1	;# 
  5960  178A  3090               	movlw	144	;# 
  5961  178B  008E               	movwf	14	;# 
  5962  178C  3048               	movlw	72	;# 
  5963  178D  018E               	clrf	14	;# 
  5964  178E  1901               	btfsc	1,2	;# 
  5965  178F  3090               	movlw	144	;# 
  5966  1790  008E               	movwf	14	;# 
  5967  1791  3048               	movlw	72	;# 
  5968  1792  018E               	clrf	14	;# 
  5969  1793  1981               	btfsc	1,3	;# 
  5970  1794  3090               	movlw	144	;# 
  5971  1795  008E               	movwf	14	;# 
  5972  1796  3048               	movlw	72	;# 
  5973  1797  018E               	clrf	14	;# 
  5974  1798  1A01               	btfsc	1,4	;# 
  5975  1799  3090               	movlw	144	;# 
  5976  179A  008E               	movwf	14	;# 
  5977  179B  3048               	movlw	72	;# 
  5978  179C  018E               	clrf	14	;# 
  5979  179D  1A81               	btfsc	1,5	;# 
  5980  179E  3090               	movlw	144	;# 
  5981  179F  008E               	movwf	14	;# 
  5982  17A0  3048               	movlw	72	;# 
  5983  17A1  018E               	clrf	14	;# 
  5984  17A2  1B01               	btfsc	1,6	;# 
  5985  17A3  3090               	movlw	144	;# 
  5986  17A4  008E               	movwf	14	;# 
  5987  17A5  3048               	movlw	72	;# 
  5988  17A6  018E               	clrf	14	;# 
  5989  17A7  1B81               	btfsc	1,7	;# 
  5990  17A8  3090               	movlw	144	;# 
  5991  17A9  008E               	movwf	14	;# 
  5992  17AA  3141               	addfsr 1,1	;# 
  5993  17AB  3048               	movlw	72	;# 
  5994  17AC  018E               	clrf	14	;# 
  5995  17AD  1801               	btfsc	1,0	;# 
  5996  17AE  3090               	movlw	144	;# 
  5997  17AF  008E               	movwf	14	;# 
  5998  17B0  3048               	movlw	72	;# 
  5999  17B1  018E               	clrf	14	;# 
  6000  17B2  1881               	btfsc	1,1	;# 
  6001  17B3  3090               	movlw	144	;# 
  6002  17B4  008E               	movwf	14	;# 
  6003  17B5  3048               	movlw	72	;# 
  6004  17B6  018E               	clrf	14	;# 
  6005  17B7  1901               	btfsc	1,2	;# 
  6006  17B8  3090               	movlw	144	;# 
  6007  17B9  008E               	movwf	14	;# 
  6008  17BA  3048               	movlw	72	;# 
  6009  17BB  018E               	clrf	14	;# 
  6010  17BC  1981               	btfsc	1,3	;# 
  6011  17BD  3090               	movlw	144	;# 
  6012  17BE  008E               	movwf	14	;# 
  6013  17BF  3048               	movlw	72	;# 
  6014  17C0  018E               	clrf	14	;# 
  6015  17C1  1A01               	btfsc	1,4	;# 
  6016  17C2  3090               	movlw	144	;# 
  6017  17C3  008E               	movwf	14	;# 
  6018  17C4  3048               	movlw	72	;# 
  6019  17C5  018E               	clrf	14	;# 
  6020  17C6  1A81               	btfsc	1,5	;# 
  6021  17C7  3090               	movlw	144	;# 
  6022  17C8  008E               	movwf	14	;# 
  6023  17C9  3048               	movlw	72	;# 
  6024  17CA  018E               	clrf	14	;# 
  6025  17CB  1B01               	btfsc	1,6	;# 
  6026  17CC  3090               	movlw	144	;# 
  6027  17CD  008E               	movwf	14	;# 
  6028  17CE  3048               	movlw	72	;# 
  6029  17CF  018E               	clrf	14	;# 
  6030  17D0  1B81               	btfsc	1,7	;# 
  6031  17D1  3090               	movlw	144	;# 
  6032  17D2  008E               	movwf	14	;# 
  6033  17D3  3141               	addfsr 1,1	;# 
  6034  17D4  3048               	movlw	72	;# 
  6035  17D5  018E               	clrf	14	;# 
  6036  17D6  1801               	btfsc	1,0	;# 
  6037  17D7  3090               	movlw	144	;# 
  6038  17D8  008E               	movwf	14	;# 
  6039  17D9  3048               	movlw	72	;# 
  6040  17DA  018E               	clrf	14	;# 
  6041  17DB  1881               	btfsc	1,1	;# 
  6042  17DC  3090               	movlw	144	;# 
  6043  17DD  008E               	movwf	14	;# 
  6044  17DE  3048               	movlw	72	;# 
  6045  17DF  018E               	clrf	14	;# 
  6046  17E0  1901               	btfsc	1,2	;# 
  6047  17E1  3090               	movlw	144	;# 
  6048  17E2  008E               	movwf	14	;# 
  6049  17E3  3048               	movlw	72	;# 
  6050  17E4  018E               	clrf	14	;# 
  6051  17E5  1981               	btfsc	1,3	;# 
  6052  17E6  3090               	movlw	144	;# 
  6053  17E7  008E               	movwf	14	;# 
  6054  17E8  3048               	movlw	72	;# 
  6055  17E9  018E               	clrf	14	;# 
  6056  17EA  1A01               	btfsc	1,4	;# 
  6057  17EB  3090               	movlw	144	;# 
  6058  17EC  008E               	movwf	14	;# 
  6059  17ED  3048               	movlw	72	;# 
  6060  17EE  018E               	clrf	14	;# 
  6061  17EF  1A81               	btfsc	1,5	;# 
  6062  17F0  3090               	movlw	144	;# 
  6063  17F1  008E               	movwf	14	;# 
  6064  17F2  3048               	movlw	72	;# 
  6065  17F3  018E               	clrf	14	;# 
  6066  17F4  1B01               	btfsc	1,6	;# 
  6067  17F5  3090               	movlw	144	;# 
  6068  17F6  008E               	movwf	14	;# 
  6069  17F7  086B               	movf	_last_bit0& (0+127),w	;# 
  6070  17F8  018E               	clrf	14	;# 
  6071  17F9  1B81               	btfsc	1,7	;# 
  6072  17FA  086C               	movf	_last_bit1& (0+127),w	;# 
  6073  17FB  008E               	movwf	14	;# 
  6074  17FC  3141               	addfsr 1,1	;# 
  6075  17FD  0BEE               	decfsz	_send32_count& (0+127),f	;# 
  6076  17FE  2F59               	goto	next_word	;# 
  6077  17FF  0008               	return
  6078  1800                     __end_of_Send32:	
  6079                           
  6080                           	psect	text12
  6081  1A8C                     __ptext12:	
  6082 ;; *************** function _InitializeSystem *****************
  6083 ;; Defined at:
  6084 ;;		line 146 in file "main.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;		None               void
  6091 ;; Registers used:
  6092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;Total ram usage:        0 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    7
  6105 ;; This function calls:
  6106 ;;		_USBDeviceInit
  6107 ;;		_UserInit
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           
  6114                           ;psect for function _InitializeSystem
  6115  1A8C                     _InitializeSystem:	
  6116                           
  6117                           ;main.c: 148: ANSELA = 0x00;
  6118                           
  6119                           ;incstack = 0
  6120                           ; Regs used in _InitializeSystem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6121  1A8C  0023               	movlb	3	; select bank3
  6122  1A8D  018C               	clrf	12	;volatile
  6123                           
  6124                           ;main.c: 149: ANSELB = 0x00;
  6125  1A8E  018D               	clrf	13	;volatile
  6126                           
  6127                           ;main.c: 150: ANSELC = 0x04;
  6128  1A8F  3004               	movlw	4
  6129  1A90  008E               	movwf	14	;volatile
  6130                           
  6131                           ;main.c: 153: OSCTUNE = 0;
  6132  1A91  0021               	movlb	1	; select bank1
  6133  1A92  0198               	clrf	24	;volatile
  6134                           
  6135                           ;main.c: 154: OSCCON = 0xFC;
  6136  1A93  30FC               	movlw	252
  6137  1A94  0099               	movwf	25	;volatile
  6138                           
  6139                           ;main.c: 155: ACTCON = 0x90;
  6140  1A95  3090               	movlw	144
  6141  1A96  0027               	movlb	7	; select bank7
  6142  1A97  009B               	movwf	27	;volatile
  6143                           
  6144                           ;main.c: 158: USBGenericOutHandle = 0;
  6145  1A98  0023               	movlb	3	; select bank3
  6146  1A99  01BE               	clrf	_USBGenericOutHandle^(0+384)
  6147                           
  6148                           ;main.c: 159: USBGenericInHandle = 0;
  6149  1A9A  01BD               	clrf	_USBGenericInHandle^(0+384)
  6150                           
  6151                           ;main.c: 160: WQI = WQX = 0;
  6152  1A9B  0022               	movlb	2	; select bank2
  6153  1A9C  01EF               	clrf	_WQX^(0+256)
  6154  1A9D  0021               	movlb	1	; select bank1
  6155  1A9E  01EF               	clrf	_WQI^(0+128)
  6156                           
  6157                           ;main.c: 162: UserInit();
  6158  1A9F  319A  221D  319A   	fcall	_UserInit
  6159                           
  6160                           ;main.c: 164: USBDeviceInit();
  6161  1AA2  3188  20C7         	fcall	_USBDeviceInit
  6162  1AA4  0008               	return
  6163  1AA5                     __end_of_InitializeSystem:	
  6164                           
  6165                           	psect	text13
  6166  1A1D                     __ptext13:	
  6167 ;; *************** function _UserInit *****************
  6168 ;; Defined at:
  6169 ;;		line 170 in file "main.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;		None
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;		None               void
  6176 ;; Registers used:
  6177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;Total ram usage:        0 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    6
  6190 ;; This function calls:
  6191 ;;		_DetectAsics
  6192 ;;		_InitFAN
  6193 ;;		_InitTempSensor
  6194 ;;		_InitWorkTick
  6195 ;;		_InitResultRx
  6196 ;; This function is called by:
  6197 ;;		_InitializeSystem
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           
  6202                           ;psect for function _UserInit
  6203  1A1D                     _UserInit:	
  6204                           
  6205                           ;main.c: 171: TRISAbits.TRISA5 = 0; LATAbits.LATA5 = 1;;
  6206                           
  6207                           ;incstack = 0
  6208                           ; Regs used in _UserInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6209  1A1D  0021               	movlb	1	; select bank1
  6210  1A1E  128C               	bcf	12,5	;volatile
  6211  1A1F  0022               	movlb	2	; select bank2
  6212  1A20  168C               	bsf	12,5	;volatile
  6213                           
  6214                           ;main.c: 172: InitTempSensor();
  6215  1A21  319A  2245  319A   	fcall	_InitTempSensor
  6216                           
  6217                           ;main.c: 173: InitFAN();
  6218  1A24  319A  22DB  319A   	fcall	_InitFAN
  6219                           
  6220                           ;main.c: 174: InitWorkTick();
  6221  1A27  319A  2230  319A   	fcall	_InitWorkTick
  6222                           
  6223                           ;main.c: 176: InitResultRx();
  6224  1A2A  3199  21F9  319A   	fcall	_InitResultRx
  6225                           
  6226                           ;main.c: 177: DetectAsics();
  6227  1A2D  3187  2745         	fcall	_DetectAsics
  6228  1A2F  0008               	return
  6229  1A30                     __end_of_UserInit:	
  6230                           
  6231                           	psect	text14
  6232  19F9                     __ptext14:	
  6233 ;; *************** function _InitResultRx *****************
  6234 ;; Defined at:
  6235 ;;		line 312 in file "klondike.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;		None               void
  6242 ;; Registers used:
  6243 ;;		wreg, status,2
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;Total ram usage:        0 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    4
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_UserInit
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           
  6264                           ;psect for function _InitResultRx
  6265  19F9                     _InitResultRx:	
  6266                           
  6267                           ;klondike.c: 313: ResultQC = 0;
  6268                           
  6269                           ;incstack = 0
  6270                           ; Regs used in _InitResultRx: [wreg+status,2]
  6271  19F9  0023               	movlb	3	; select bank3
  6272  19FA  01B7               	clrf	_ResultQC^(0+384)
  6273                           
  6274                           ;klondike.c: 314: TXSTAbits.SYNC = 1;
  6275  19FB  161E               	bsf	30,4	;volatile
  6276                           
  6277                           ;klondike.c: 315: RCSTAbits.SPEN = 1;
  6278  19FC  179D               	bsf	29,7	;volatile
  6279                           
  6280                           ;klondike.c: 316: TXSTAbits.CSRC = 0;
  6281  19FD  139E               	bcf	30,7	;volatile
  6282                           
  6283                           ;klondike.c: 317: BAUDCONbits.SCKP = 0;
  6284  19FE  121F               	bcf	31,4	;volatile
  6285                           
  6286                           ;klondike.c: 318: BAUDCONbits.BRG16 = 1;
  6287  19FF  159F               	bsf	31,3	;volatile
  6288                           
  6289                           ;klondike.c: 319: ANSELBbits.ANSB5 = 0;
  6290  1A00  128D               	bcf	13,5	;volatile
  6291                           
  6292                           ;klondike.c: 321: IOCBPbits.IOCBP7 = 1;
  6293  1A01  0027               	movlb	7	; select bank7
  6294  1A02  1794               	bsf	20,7	;volatile
  6295                           
  6296                           ;klondike.c: 322: INTCONbits.IOCIE = 1;
  6297  1A03  158B               	bsf	11,3	;volatile
  6298                           
  6299                           ;klondike.c: 323: IOCBF = 0;
  6300  1A04  0196               	clrf	22	;volatile
  6301                           
  6302                           ;klondike.c: 325: INTCONbits.GIE = 1;
  6303  1A05  178B               	bsf	11,7	;volatile
  6304                           
  6305                           ;klondike.c: 326: RCSTAbits.CREN = 1;
  6306  1A06  0023               	movlb	3	; select bank3
  6307  1A07  161D               	bsf	29,4	;volatile
  6308                           
  6309                           ;klondike.c: 327: RCREG = 0xFF;
  6310  1A08  30FF               	movlw	255
  6311  1A09  0099               	movwf	25	;volatile
  6312  1A0A  0008               	return
  6313  1A0B                     __end_of_InitResultRx:	
  6314                           
  6315                           	psect	text15
  6316  1A30                     __ptext15:	
  6317 ;; *************** function _InitWorkTick *****************
  6318 ;; Defined at:
  6319 ;;		line 295 in file "klondike.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;		None               void
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    4
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_UserInit
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           
  6348                           ;psect for function _InitWorkTick
  6349  1A30                     _InitWorkTick:	
  6350                           
  6351                           ;klondike.c: 296: TMR0CS = 0;
  6352                           
  6353                           ;incstack = 0
  6354                           ; Regs used in _InitWorkTick: [wreg+status,2+status,0]
  6355  1A30  0021               	movlb	1	; select bank1
  6356  1A31  1295               	bcf	21,5	;volatile
  6357                           
  6358                           ;klondike.c: 297: OPTION_REGbits.PSA = 0;
  6359  1A32  1195               	bcf	21,3	;volatile
  6360                           
  6361                           ;klondike.c: 298: OPTION_REGbits.PS = 7;
  6362  1A33  3007               	movlw	7
  6363  1A34  0495               	iorwf	21,f	;volatile
  6364                           
  6365                           ;klondike.c: 299: TMR0 = HashTime;
  6366  1A35  0020               	movlb	0	; select bank0
  6367  1A36  086F               	movf	_HashTime,w
  6368  1A37  0095               	movwf	21	;volatile
  6369                           
  6370                           ;klondike.c: 302: TRISCbits.TRISC7 = 0;
  6371  1A38  0021               	movlb	1	; select bank1
  6372  1A39  138E               	bcf	14,7	;volatile
  6373                           
  6374                           ;klondike.c: 303: TRISCbits.TRISC6 = 0;
  6375  1A3A  130E               	bcf	14,6	;volatile
  6376                           
  6377                           ;klondike.c: 304: TRISCbits.TRISC4 = 0;
  6378  1A3B  120E               	bcf	14,4	;volatile
  6379                           
  6380                           ;klondike.c: 305: TRISCbits.TRISC3 = 0;
  6381  1A3C  118E               	bcf	14,3	;volatile
  6382                           
  6383                           ;klondike.c: 306: LATC = 0xD8;;
  6384  1A3D  30D8               	movlw	216
  6385  1A3E  0022               	movlb	2	; select bank2
  6386  1A3F  008E               	movwf	14	;volatile
  6387                           
  6388                           ;klondike.c: 307: TRISAbits.TRISA4 = 0;
  6389  1A40  0021               	movlb	1	; select bank1
  6390  1A41  120C               	bcf	12,4	;volatile
  6391                           
  6392                           ;klondike.c: 308: LATAbits.LATA4 = 1;
  6393  1A42  0022               	movlb	2	; select bank2
  6394  1A43  160C               	bsf	12,4	;volatile
  6395  1A44  0008               	return
  6396  1A45                     __end_of_InitWorkTick:	
  6397                           
  6398                           	psect	text16
  6399  1A45                     __ptext16:	
  6400 ;; *************** function _InitTempSensor *****************
  6401 ;; Defined at:
  6402 ;;		line 281 in file "klondike.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;		None               void
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;Total ram usage:        1 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    4
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_UserInit
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           
  6431                           ;psect for function _InitTempSensor
  6432  1A45                     _InitTempSensor:	
  6433                           
  6434                           ;klondike.c: 282: TRISCbits.TRISC2=1;
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in _InitTempSensor: [wreg+status,2+status,0]
  6438  1A45  0021               	movlb	1	; select bank1
  6439  1A46  150E               	bsf	14,2	;volatile
  6440                           
  6441                           ;klondike.c: 285: ADCON0bits.CHS = 6;
  6442  1A47  081D               	movf	29,w	;volatile
  6443  1A48  3983               	andlw	-125
  6444  1A49  3818               	iorlw	24
  6445  1A4A  009D               	movwf	29	;volatile
  6446                           
  6447                           ;klondike.c: 286: ADCON0bits.ADON = 1;
  6448  1A4B  141D               	bsf	29,0	;volatile
  6449                           
  6450                           ;klondike.c: 287: ADCON1bits.ADFM = 0;
  6451  1A4C  139E               	bcf	30,7	;volatile
  6452                           
  6453                           ;klondike.c: 288: ADCON1bits.ADCS = 6;
  6454  1A4D  081E               	movf	30,w	;volatile
  6455  1A4E  398F               	andlw	-113
  6456  1A4F  3860               	iorlw	96
  6457  1A50  009E               	movwf	30	;volatile
  6458                           
  6459                           ;klondike.c: 289: ADCON1bits.ADPREF = 0;
  6460  1A51  30FC               	movlw	-4
  6461  1A52  059E               	andwf	30,f	;volatile
  6462                           
  6463                           ;klondike.c: 290: ADCON2bits.TRIGSEL = 0;
  6464  1A53  308F               	movlw	-113
  6465  1A54  059F               	andwf	31,f	;volatile
  6466                           
  6467                           ;klondike.c: 291: TempTarget = 143;
  6468  1A55  308F               	movlw	143
  6469  1A56  0020               	movlb	0	; select bank0
  6470  1A57  00DE               	movwf	??_InitTempSensor
  6471  1A58  085E               	movf	??_InitTempSensor,w
  6472  1A59  0023               	movlb	3	; select bank3
  6473  1A5A  00E7               	movwf	_TempTarget^(0+384)
  6474  1A5B  0008               	return
  6475  1A5C                     __end_of_InitTempSensor:	
  6476                           
  6477                           	psect	text17
  6478  1ADB                     __ptext17:	
  6479 ;; *************** function _InitFAN *****************
  6480 ;; Defined at:
  6481 ;;		line 261 in file "klondike.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;		None
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;		None
  6486 ;; Return value:  Size  Location     Type
  6487 ;;		None               void
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;Total ram usage:        0 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    4
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_UserInit
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           
  6510                           ;psect for function _InitFAN
  6511  1ADB                     _InitFAN:	
  6512                           
  6513                           ;klondike.c: 262: TRISCbits.TRISC5 = 1;
  6514                           
  6515                           ;incstack = 0
  6516                           ; Regs used in _InitFAN: [wreg+status,2+status,0]
  6517  1ADB  0021               	movlb	1	; select bank1
  6518  1ADC  168E               	bsf	14,5	;volatile
  6519                           
  6520                           ;klondike.c: 263: PWM1CON = 0;
  6521  1ADD  002C               	movlb	12	; select bank12
  6522  1ADE  0193               	clrf	19	;volatile
  6523                           
  6524                           ;klondike.c: 264: PR2 = 0xFF;
  6525  1ADF  30FF               	movlw	255
  6526  1AE0  0020               	movlb	0	; select bank0
  6527  1AE1  009B               	movwf	27	;volatile
  6528                           
  6529                           ;klondike.c: 265: PWM1CON = 0xC0;
  6530  1AE2  30C0               	movlw	192
  6531  1AE3  002C               	movlb	12	; select bank12
  6532  1AE4  0093               	movwf	19	;volatile
  6533                           
  6534                           ;klondike.c: 266: PWM1DCH = FanLevel = 230;
  6535  1AE5  30E6               	movlw	230
  6536  1AE6  0023               	movlb	3	; select bank3
  6537  1AE7  00E6               	movwf	_FanLevel^(0+384)
  6538  1AE8  002C               	movlb	12	; select bank12
  6539  1AE9  0092               	movwf	18	;volatile
  6540                           
  6541                           ;klondike.c: 267: PWM1DCL = 0;
  6542  1AEA  0191               	clrf	17	;volatile
  6543                           
  6544                           ;klondike.c: 268: TMR2IF = 0;
  6545  1AEB  0020               	movlb	0	; select bank0
  6546  1AEC  1091               	bcf	17,1	;volatile
  6547                           
  6548                           ;klondike.c: 269: T2CONbits.T2CKPS = 1;
  6549  1AED  081C               	movf	28,w	;volatile
  6550  1AEE  39FC               	andlw	-4
  6551  1AEF  3801               	iorlw	1
  6552  1AF0  009C               	movwf	28	;volatile
  6553                           
  6554                           ;klondike.c: 270: TMR2ON = 1;
  6555  1AF1  151C               	bsf	28,2	;volatile
  6556                           
  6557                           ;klondike.c: 271: TRISCbits.TRISC5 = 0;
  6558  1AF2  0021               	movlb	1	; select bank1
  6559  1AF3  128E               	bcf	14,5	;volatile
  6560                           
  6561                           ;klondike.c: 272: PWM1OE=1;
  6562  1AF4  002C               	movlb	12	; select bank12
  6563  1AF5  1713               	bsf	19,6	;volatile
  6564  1AF6  0008               	return
  6565  1AF7                     __end_of_InitFAN:	
  6566                           
  6567                           	psect	text18
  6568  0745                     __ptext18:	
  6569 ;; *************** function _DetectAsics *****************
  6570 ;; Defined at:
  6571 ;;		line 148 in file "klondike.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  x               1   14[BANK1 ] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;		None               void
  6578 ;; Registers used:
  6579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;Total ram usage:       10 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    5
  6592 ;; This function calls:
  6593 ;;		___awdiv
  6594 ;; This function is called by:
  6595 ;;		_UserInit
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function _DetectAsics
  6601  0745                     _DetectAsics:	
  6602                           
  6603                           ;klondike.c: 149: Status.ChipCount = 16;
  6604                           
  6605                           ;incstack = 0
  6606                           ; Regs used in _DetectAsics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6607  0745  3010               	movlw	16
  6608  0746  0021               	movlb	1	; select bank1
  6609  0747  00A5               	movwf	??_DetectAsics^(0+128)
  6610  0748  0825               	movf	??_DetectAsics^(0+128),w
  6611  0749  0022               	movlb	2	; select bank2
  6612  074A  00DA               	movwf	(_Status^(0+256)+1)	;volatile
  6613                           
  6614                           ;klondike.c: 152: BankSize = (Status.ChipCount)/2;
  6615  074B  3002               	movlw	2
  6616  074C  0020               	movlb	0	; select bank0
  6617  074D  00DE               	movwf	?___awdiv
  6618  074E  3000               	movlw	0
  6619  074F  00DF               	movwf	?___awdiv+1
  6620  0750  0022               	movlb	2	; select bank2
  6621  0751  085A               	movf	(_Status^(0+256)+1),w	;volatile
  6622  0752  0021               	movlb	1	; select bank1
  6623  0753  00A5               	movwf	??_DetectAsics^(0+128)
  6624  0754  01A6               	clrf	(??_DetectAsics^(0+128)+1)
  6625  0755  0825               	movf	??_DetectAsics^(0+128),w
  6626  0756  0020               	movlb	0	; select bank0
  6627  0757  00E0               	movwf	?___awdiv+2
  6628  0758  0021               	movlb	1	; select bank1
  6629  0759  0826               	movf	(??_DetectAsics+1)^(0+128),w
  6630  075A  0020               	movlb	0	; select bank0
  6631  075B  00E1               	movwf	?___awdiv+3
  6632  075C  319F  2799  3187   	fcall	___awdiv
  6633  075F  0020               	movlb	0	; select bank0
  6634  0760  085E               	movf	?___awdiv,w
  6635  0761  0021               	movlb	1	; select bank1
  6636  0762  00A7               	movwf	(??_DetectAsics+2)^(0+128)
  6637  0763  0827               	movf	(??_DetectAsics+2)^(0+128),w
  6638  0764  0023               	movlb	3	; select bank3
  6639  0765  00E8               	movwf	_BankSize^(0+384)
  6640                           
  6641                           ;klondike.c: 153: Status.MaxCount = 16384 / BankSize / 2;
  6642  0766  0868               	movf	_BankSize^(0+384),w
  6643  0767  0021               	movlb	1	; select bank1
  6644  0768  00A5               	movwf	??_DetectAsics^(0+128)
  6645  0769  01A6               	clrf	(??_DetectAsics^(0+128)+1)
  6646  076A  0825               	movf	??_DetectAsics^(0+128),w
  6647  076B  0020               	movlb	0	; select bank0
  6648  076C  00DE               	movwf	?___awdiv
  6649  076D  0021               	movlb	1	; select bank1
  6650  076E  0826               	movf	(??_DetectAsics+1)^(0+128),w
  6651  076F  0020               	movlb	0	; select bank0
  6652  0770  00DF               	movwf	?___awdiv+1
  6653  0771  3000               	movlw	0
  6654  0772  00E0               	movwf	?___awdiv+2
  6655  0773  3040               	movlw	64
  6656  0774  00E1               	movwf	?___awdiv+3
  6657  0775  319F  2799  3187   	fcall	___awdiv
  6658  0778  0020               	movlb	0	; select bank0
  6659  0779  085F               	movf	?___awdiv+1,w
  6660  077A  0021               	movlb	1	; select bank1
  6661  077B  01AD               	clrf	(_DetectAsics$2895+1)^(0+128)
  6662  077C  07AD               	addwf	(_DetectAsics$2895+1)^(0+128),f
  6663  077D  0020               	movlb	0	; select bank0
  6664  077E  085E               	movf	?___awdiv,w
  6665  077F  0021               	movlb	1	; select bank1
  6666  0780  01AC               	clrf	_DetectAsics$2895^(0+128)
  6667  0781  07AC               	addwf	_DetectAsics$2895^(0+128),f
  6668                           
  6669                           ;klondike.c: 153: Status.MaxCount = 16384 / BankSize / 2;
  6670  0782  3002               	movlw	2
  6671  0783  0020               	movlb	0	; select bank0
  6672  0784  00DE               	movwf	?___awdiv
  6673  0785  3000               	movlw	0
  6674  0786  00DF               	movwf	?___awdiv+1
  6675  0787  0021               	movlb	1	; select bank1
  6676  0788  082D               	movf	(_DetectAsics$2895+1)^(0+128),w
  6677  0789  0020               	movlb	0	; select bank0
  6678  078A  01E1               	clrf	?___awdiv+3
  6679  078B  07E1               	addwf	?___awdiv+3,f
  6680  078C  0021               	movlb	1	; select bank1
  6681  078D  082C               	movf	_DetectAsics$2895^(0+128),w
  6682  078E  0020               	movlb	0	; select bank0
  6683  078F  01E0               	clrf	?___awdiv+2
  6684  0790  07E0               	addwf	?___awdiv+2,f
  6685  0791  319F  2799  3187   	fcall	___awdiv
  6686  0794  0020               	movlb	0	; select bank0
  6687  0795  085F               	movf	?___awdiv+1,w
  6688  0796  0022               	movlb	2	; select bank2
  6689  0797  01E4               	clrf	((_Status+1)^(0+256)+10)	;volatile
  6690  0798  07E4               	addwf	((_Status+1)^(0+256)+10),f	;volatile
  6691  0799  0020               	movlb	0	; select bank0
  6692  079A  085E               	movf	?___awdiv,w
  6693  079B  0022               	movlb	2	; select bank2
  6694  079C  01E3               	clrf	(_Status^(0+256)+10)	;volatile
  6695  079D  07E3               	addwf	(_Status^(0+256)+10),f	;volatile
  6696                           
  6697                           ;klondike.c: 155: NonceRanges[0] = 0;
  6698  079E  3000               	movlw	0
  6699  079F  0026               	movlb	6	; select bank6
  6700  07A0  00A3               	movwf	(_NonceRanges+3)^(0+768)
  6701  07A1  3000               	movlw	0
  6702  07A2  00A2               	movwf	(_NonceRanges+2)^(0+768)
  6703  07A3  3000               	movlw	0
  6704  07A4  00A1               	movwf	(_NonceRanges+1)^(0+768)
  6705  07A5  3000               	movlw	0
  6706  07A6  00A0               	movwf	_NonceRanges^(0+768)
  6707                           
  6708                           ;klondike.c: 156: for(BYTE x = 1; x < BankSize; x++)
  6709  07A7  0021               	movlb	1	; select bank1
  6710  07A8  01AE               	clrf	DetectAsics@x^(0+128)
  6711  07A9  0AAE               	incf	DetectAsics@x^(0+128),f
  6712  07AA                     l7707:	
  6713  07AA  0023               	movlb	3	; select bank3
  6714  07AB  0868               	movf	_BankSize^(0+384),w
  6715  07AC  0021               	movlb	1	; select bank1
  6716  07AD  022E               	subwf	DetectAsics@x^(0+128),w
  6717  07AE  1803               	btfsc	3,0
  6718  07AF  2FF5               	goto	l7709
  6719                           
  6720                           ;klondike.c: 157: NonceRanges[x] = NonceRanges[x-1] + BankRanges[BankSize-1];
  6721  07B0  0023               	movlb	3	; select bank3
  6722  07B1  0868               	movf	_BankSize^(0+384),w
  6723  07B2  0021               	movlb	1	; select bank1
  6724  07B3  00A5               	movwf	??_DetectAsics^(0+128)
  6725  07B4  3001               	movlw	1
  6726  07B5                     u8085:	
  6727  07B5  35A5               	lslf	??_DetectAsics^(0+128),f
  6728  07B6  3EFF               	addlw	-1
  6729  07B7  1D03               	skipz
  6730  07B8  2FB5               	goto	u8085
  6731  07B9  3525               	lslf	??_DetectAsics^(0+128),w
  6732  07BA  3EFC               	addlw	252
  6733  07BB  3EA0               	addlw	_BankRanges& (0+255)
  6734  07BC  0086               	movwf	6
  6735  07BD  3003               	movlw	3	; select bank7/8
  6736  07BE  0087               	movwf	7
  6737  07BF  3F40               	moviw [0]fsr1
  6738  07C0  00A6               	movwf	(??_DetectAsics+1)^(0+128)
  6739  07C1  3F41               	moviw [1]fsr1
  6740  07C2  00A7               	movwf	((??_DetectAsics+1)^(0+128)+1)
  6741  07C3  3F42               	moviw [2]fsr1
  6742  07C4  00A8               	movwf	((??_DetectAsics+1)^(0+128)+2)
  6743  07C5  3F43               	moviw [3]fsr1
  6744  07C6  00A9               	movwf	((??_DetectAsics+1)^(0+128)+3)
  6745  07C7  082E               	movf	DetectAsics@x^(0+128),w
  6746  07C8  00AA               	movwf	(??_DetectAsics+5)^(0+128)
  6747  07C9  3001               	movlw	1
  6748  07CA                     u8095:	
  6749  07CA  35AA               	lslf	(??_DetectAsics+5)^(0+128),f
  6750  07CB  3EFF               	addlw	-1
  6751  07CC  1D03               	skipz
  6752  07CD  2FCA               	goto	u8095
  6753  07CE  352A               	lslf	(??_DetectAsics+5)^(0+128),w
  6754  07CF  3EFC               	addlw	252
  6755  07D0  3E20               	addlw	_NonceRanges& (0+255)
  6756  07D1  0086               	movwf	6
  6757  07D2  3003               	movlw	3	; select bank6/7
  6758  07D3  0087               	movwf	7
  6759  07D4  3F40               	moviw [0]fsr1
  6760  07D5  07A6               	addwf	(??_DetectAsics+1)^(0+128),f
  6761  07D6  3F41               	moviw [1]fsr1
  6762  07D7  3DA7               	addwfc	((??_DetectAsics+1)^(0+128)+1),f
  6763  07D8  3F42               	moviw [2]fsr1
  6764  07D9  3DA8               	addwfc	((??_DetectAsics+1)^(0+128)+2),f
  6765  07DA  3F43               	moviw [3]fsr1
  6766  07DB  3DA9               	addwfc	((??_DetectAsics+1)^(0+128)+3),f
  6767  07DC  082E               	movf	DetectAsics@x^(0+128),w
  6768  07DD  00AB               	movwf	(??_DetectAsics+6)^(0+128)
  6769  07DE  3001               	movlw	1
  6770  07DF                     u8105:	
  6771  07DF  35AB               	lslf	(??_DetectAsics+6)^(0+128),f
  6772  07E0  3EFF               	addlw	-1
  6773  07E1  1D03               	skipz
  6774  07E2  2FDF               	goto	u8105
  6775  07E3  352B               	lslf	(??_DetectAsics+6)^(0+128),w
  6776  07E4  3E20               	addlw	_NonceRanges& (0+255)
  6777  07E5  0086               	movwf	6
  6778  07E6  3003               	movlw	3	; select bank6/7
  6779  07E7  0087               	movwf	7
  6780  07E8  0826               	movf	(??_DetectAsics+1)^(0+128),w
  6781  07E9  3FC0               	movwi [0]fsr1
  6782  07EA  0827               	movf	(??_DetectAsics+2)^(0+128),w
  6783  07EB  3FC1               	movwi [1]fsr1
  6784  07EC  0828               	movf	(??_DetectAsics+3)^(0+128),w
  6785  07ED  3FC2               	movwi [2]fsr1
  6786  07EE  0829               	movf	(??_DetectAsics+4)^(0+128),w
  6787  07EF  3FC3               	movwi [3]fsr1
  6788  07F0  3001               	movlw	1
  6789  07F1  00A5               	movwf	??_DetectAsics^(0+128)
  6790  07F2  0825               	movf	??_DetectAsics^(0+128),w
  6791  07F3  07AE               	addwf	DetectAsics@x^(0+128),f
  6792  07F4  2FAA               	goto	l7707
  6793  07F5                     l7709:	
  6794                           
  6795                           ;klondike.c: 159: Status.State ='R';
  6796  07F5  3052               	movlw	82
  6797  07F6  00A5               	movwf	??_DetectAsics^(0+128)
  6798  07F7  0825               	movf	??_DetectAsics^(0+128),w
  6799  07F8  0022               	movlb	2	; select bank2
  6800  07F9  00D9               	movwf	_Status^(0+256)	;volatile
  6801                           
  6802                           ;klondike.c: 160: Status.HashCount = 0;
  6803  07FA  01E1               	clrf	(_Status^(0+256)+8)	;volatile
  6804  07FB  01E2               	clrf	((_Status+1)^(0+256)+8)	;volatile
  6805  07FC  0008               	return
  6806  07FD                     __end_of_DetectAsics:	
  6807                           
  6808                           	psect	text19
  6809  1F99                     __ptext19:	
  6810 ;; *************** function ___awdiv *****************
  6811 ;; Defined at:
  6812 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  divisor         2   14[BANK0 ] int 
  6815 ;;  dividend        2   16[BANK0 ] int 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  quotient        2    3[BANK1 ] int 
  6818 ;;  sign            1    2[BANK1 ] unsigned char 
  6819 ;;  counter         1    1[BANK1 ] unsigned char 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  2   14[BANK0 ] int 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Totals:         0       4       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;Total ram usage:        9 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    4
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_DetectAsics
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           
  6844                           ;psect for function ___awdiv
  6845  1F99                     ___awdiv:	
  6846                           
  6847                           ;incstack = 0
  6848                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6849  1F99  0021               	movlb	1	; select bank1
  6850  1F9A  01A2               	clrf	___awdiv@sign^(0+128)
  6851  1F9B  0020               	movlb	0	; select bank0
  6852  1F9C  1FDF               	btfss	___awdiv@divisor+1,7
  6853  1F9D  2FA6               	goto	l7863
  6854  1F9E  09DE               	comf	___awdiv@divisor,f
  6855  1F9F  09DF               	comf	___awdiv@divisor+1,f
  6856  1FA0  0ADE               	incf	___awdiv@divisor,f
  6857  1FA1  1903               	skipnz
  6858  1FA2  0ADF               	incf	___awdiv@divisor+1,f
  6859  1FA3  0021               	movlb	1	; select bank1
  6860  1FA4  01A2               	clrf	___awdiv@sign^(0+128)
  6861  1FA5  0AA2               	incf	___awdiv@sign^(0+128),f
  6862  1FA6                     l7863:	
  6863  1FA6  0020               	movlb	0	; select bank0
  6864  1FA7  1FE1               	btfss	___awdiv@dividend+1,7
  6865  1FA8  2FB3               	goto	l7869
  6866  1FA9  09E0               	comf	___awdiv@dividend,f
  6867  1FAA  09E1               	comf	___awdiv@dividend+1,f
  6868  1FAB  0AE0               	incf	___awdiv@dividend,f
  6869  1FAC  1903               	skipnz
  6870  1FAD  0AE1               	incf	___awdiv@dividend+1,f
  6871  1FAE  3001               	movlw	1
  6872  1FAF  0021               	movlb	1	; select bank1
  6873  1FB0  00A0               	movwf	??___awdiv^(0+128)
  6874  1FB1  0820               	movf	??___awdiv^(0+128),w
  6875  1FB2  06A2               	xorwf	___awdiv@sign^(0+128),f
  6876  1FB3                     l7869:	
  6877  1FB3  0021               	movlb	1	; select bank1
  6878  1FB4  01A3               	clrf	___awdiv@quotient^(0+128)
  6879  1FB5  01A4               	clrf	(___awdiv@quotient+1)^(0+128)
  6880  1FB6  0020               	movlb	0	; select bank0
  6881  1FB7  085F               	movf	___awdiv@divisor+1,w
  6882  1FB8  045E               	iorwf	___awdiv@divisor,w
  6883  1FB9  1903               	skipnz
  6884  1FBA  2FED               	goto	l7891
  6885  1FBB  0021               	movlb	1	; select bank1
  6886  1FBC  01A1               	clrf	___awdiv@counter^(0+128)
  6887  1FBD  0AA1               	incf	___awdiv@counter^(0+128),f
  6888  1FBE                     l7879:	
  6889  1FBE  0020               	movlb	0	; select bank0
  6890  1FBF  1BDF               	btfsc	___awdiv@divisor+1,7
  6891  1FC0  2FCD               	goto	l7881
  6892  1FC1  3001               	movlw	1
  6893  1FC2  0020               	movlb	0	; select bank0
  6894  1FC3                     u8245:	
  6895  1FC3  35DE               	lslf	___awdiv@divisor,f
  6896  1FC4  0DDF               	rlf	___awdiv@divisor+1,f
  6897  1FC5  0B89               	decfsz	9,f
  6898  1FC6  2FC3               	goto	u8245
  6899  1FC7  3001               	movlw	1
  6900  1FC8  0021               	movlb	1	; select bank1
  6901  1FC9  00A0               	movwf	??___awdiv^(0+128)
  6902  1FCA  0820               	movf	??___awdiv^(0+128),w
  6903  1FCB  07A1               	addwf	___awdiv@counter^(0+128),f
  6904  1FCC  2FBE               	goto	l7879
  6905  1FCD                     l7881:	
  6906  1FCD  3001               	movlw	1
  6907  1FCE  0021               	movlb	1	; select bank1
  6908  1FCF                     u8265:	
  6909  1FCF  35A3               	lslf	___awdiv@quotient^(0+128),f
  6910  1FD0  0DA4               	rlf	(___awdiv@quotient+1)^(0+128),f
  6911  1FD1  0B89               	decfsz	9,f
  6912  1FD2  2FCF               	goto	u8265
  6913  1FD3  0020               	movlb	0	; select bank0
  6914  1FD4  085F               	movf	___awdiv@divisor+1,w
  6915  1FD5  0261               	subwf	___awdiv@dividend+1,w
  6916  1FD6  1D03               	skipz
  6917  1FD7  2FDA               	goto	u8275
  6918  1FD8  085E               	movf	___awdiv@divisor,w
  6919  1FD9  0260               	subwf	___awdiv@dividend,w
  6920  1FDA                     u8275:	
  6921  1FDA  1C03               	skipc
  6922  1FDB  2FE2               	goto	l7887
  6923  1FDC  085E               	movf	___awdiv@divisor,w
  6924  1FDD  02E0               	subwf	___awdiv@dividend,f
  6925  1FDE  085F               	movf	___awdiv@divisor+1,w
  6926  1FDF  3BE1               	subwfb	___awdiv@dividend+1,f
  6927  1FE0  0021               	movlb	1	; select bank1
  6928  1FE1  1423               	bsf	___awdiv@quotient^(0+128),0
  6929  1FE2                     l7887:	
  6930  1FE2  3001               	movlw	1
  6931  1FE3  0020               	movlb	0	; select bank0
  6932  1FE4                     u8285:	
  6933  1FE4  36DF               	lsrf	___awdiv@divisor+1,f
  6934  1FE5  0CDE               	rrf	___awdiv@divisor,f
  6935  1FE6  0B89               	decfsz	9,f
  6936  1FE7  2FE4               	goto	u8285
  6937  1FE8  3001               	movlw	1
  6938  1FE9  0021               	movlb	1	; select bank1
  6939  1FEA  02A1               	subwf	___awdiv@counter^(0+128),f
  6940  1FEB  1D03               	btfss	3,2
  6941  1FEC  2FCD               	goto	l7881
  6942  1FED                     l7891:	
  6943  1FED  0021               	movlb	1	; select bank1
  6944  1FEE  0822               	movf	___awdiv@sign^(0+128),w
  6945  1FEF  1903               	btfsc	3,2
  6946  1FF0  2FF6               	goto	l7895
  6947  1FF1  09A3               	comf	___awdiv@quotient^(0+128),f
  6948  1FF2  09A4               	comf	(___awdiv@quotient+1)^(0+128),f
  6949  1FF3  0AA3               	incf	___awdiv@quotient^(0+128),f
  6950  1FF4  1903               	skipnz
  6951  1FF5  0AA4               	incf	(___awdiv@quotient+1)^(0+128),f
  6952  1FF6                     l7895:	
  6953  1FF6  0824               	movf	(___awdiv@quotient+1)^(0+128),w
  6954  1FF7  0020               	movlb	0	; select bank0
  6955  1FF8  01DF               	clrf	?___awdiv+1
  6956  1FF9  07DF               	addwf	?___awdiv+1,f
  6957  1FFA  0021               	movlb	1	; select bank1
  6958  1FFB  0823               	movf	___awdiv@quotient^(0+128),w
  6959  1FFC  0020               	movlb	0	; select bank0
  6960  1FFD  01DE               	clrf	?___awdiv
  6961  1FFE  07DE               	addwf	?___awdiv,f
  6962  1FFF  0008               	return
  6963  2000                     __end_of___awdiv:	
  6964                           
  6965                           	psect	text20
  6966  1CCD                     __ptext20:	
  6967 ;; *************** function _WorkTick *****************
  6968 ;; Defined at:
  6969 ;;		line 166 in file "klondike.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;		None               void
  6976 ;; Registers used:
  6977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;Total ram usage:        1 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    7
  6990 ;; This function calls:
  6991 ;;		_UpdateFanLevel
  6992 ;; This function is called by:
  6993 ;;		_main
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function _WorkTick
  6999  1CCD                     _WorkTick:	
  7000                           
  7001                           ;klondike.c: 167: TMR0 += HashTime;
  7002                           
  7003                           ;incstack = 0
  7004                           ; Regs used in _WorkTick: [allreg]
  7005  1CCD  0020               	movlb	0	; select bank0
  7006  1CCE  086F               	movf	_HashTime,w
  7007  1CCF  0021               	movlb	1	; select bank1
  7008  1CD0  00E2               	movwf	??_WorkTick^(0+128)
  7009  1CD1  0862               	movf	??_WorkTick^(0+128),w
  7010  1CD2  0020               	movlb	0	; select bank0
  7011  1CD3  0795               	addwf	21,f	;volatile
  7012                           
  7013                           ;klondike.c: 168: TMR0IF = 0;
  7014  1CD4  110B               	bcf	11,2	;volatile
  7015                           
  7016                           ;klondike.c: 170: if((Status.State == 'W') && (++Status.HashCount == Status.MaxCount)) {
  7017  1CD5  0022               	movlb	2	; select bank2
  7018  1CD6  0859               	movf	_Status^(0+256),w	;volatile
  7019  1CD7  3A57               	xorlw	87
  7020  1CD8  1D03               	skipz
  7021  1CD9  2CF8               	goto	l6031
  7022  1CDA  3008               	movlw	8
  7023  1CDB  3E59               	addlw	_Status& (0+255)
  7024  1CDC  0086               	movwf	6
  7025  1CDD  3001               	movlw	1	; select bank2/3
  7026  1CDE  0087               	movwf	7
  7027  1CDF  3001               	movlw	1
  7028  1CE0  0781               	addwf	1,f
  7029  1CE1  3141               	addfsr 1,1
  7030  1CE2  1803               	skipnc
  7031  1CE3  0A81               	incf	1,f
  7032  1CE4  317F               	addfsr 1,-1
  7033  1CE5  3F40               	moviw [0]fsr1
  7034  1CE6  0663               	xorwf	(_Status^(0+256)+10),w	;volatile
  7035  1CE7  1D03               	skipz
  7036  1CE8  2CEB               	goto	u5375
  7037  1CE9  3F41               	moviw [1]fsr1
  7038  1CEA  0664               	xorwf	((_Status+1)^(0+256)+10),w	;volatile
  7039  1CEB                     u5375:	
  7040  1CEB  1D03               	skipz
  7041  1CEC  2CF8               	goto	l6031
  7042                           
  7043                           ;klondike.c: 171: if(Status.WorkQC > 0) {
  7044  1CED  085C               	movf	(_Status^(0+256)+3),w	;volatile
  7045  1CEE  1903               	btfsc	3,2
  7046  1CEF  2CF2               	goto	l6029
  7047                           
  7048                           ;klondike.c: 172: Status.State = 'P';
  7049  1CF0  3050               	movlw	80
  7050  1CF1  2CF3               	goto	L6
  7051  1CF2                     l6029:	
  7052                           ;klondike.c: 173: }
  7053                           
  7054                           
  7055                           ;klondike.c: 174: else {
  7056                           ;klondike.c: 175: Status.State = 'R';
  7057  1CF2  3052               	movlw	82
  7058  1CF3                     L6:	
  7059  1CF3  0021               	movlb	1	; select bank1
  7060  1CF4  00E2               	movwf	??_WorkTick^(0+128)
  7061  1CF5  0862               	movf	??_WorkTick^(0+128),w
  7062  1CF6  0022               	movlb	2	; select bank2
  7063  1CF7  00D9               	movwf	_Status^(0+256)	;volatile
  7064  1CF8                     l6031:	
  7065                           
  7066                           ;klondike.c: 176: }
  7067                           ;klondike.c: 177: }
  7068                           ;klondike.c: 179: if(++SlowTick == 0) {
  7069  1CF8  3001               	movlw	1
  7070  1CF9  0021               	movlb	1	; select bank1
  7071  1CFA  00E2               	movwf	??_WorkTick^(0+128)
  7072  1CFB  0862               	movf	??_WorkTick^(0+128),w
  7073  1CFC  0023               	movlb	3	; select bank3
  7074  1CFD  07B8               	addwf	_SlowTick^(0+384),f
  7075  1CFE  1D03               	btfss	3,2
  7076  1CFF  0008               	return
  7077                           
  7078                           ;klondike.c: 180: LATAbits.LATA5 = 0;;
  7079  1D00  0022               	movlb	2	; select bank2
  7080  1D01  128C               	bcf	12,5	;volatile
  7081                           
  7082                           ;klondike.c: 181: Status.Temp = ADRESH;
  7083  1D02  0021               	movlb	1	; select bank1
  7084  1D03  081C               	movf	28,w	;volatile
  7085  1D04  00E2               	movwf	??_WorkTick^(0+128)
  7086  1D05  0862               	movf	??_WorkTick^(0+128),w
  7087  1D06  0022               	movlb	2	; select bank2
  7088  1D07  00DE               	movwf	(_Status^(0+256)+5)	;volatile
  7089                           
  7090                           ;klondike.c: 182: ADCON0bits.GO_nDONE = 1;
  7091  1D08  0021               	movlb	1	; select bank1
  7092  1D09  149D               	bsf	29,1	;volatile
  7093                           
  7094                           ;klondike.c: 183: UpdateFanLevel();
  7095  1D0A  3184  24E1         	fcall	_UpdateFanLevel
  7096  1D0C  0008               	return
  7097  1D0D                     __end_of_WorkTick:	
  7098                           
  7099                           	psect	text21
  7100  04E1                     __ptext21:	
  7101 ;; *************** function _UpdateFanLevel *****************
  7102 ;; Defined at:
  7103 ;;		line 229 in file "klondike.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;		None
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;		None
  7108 ;; Return value:  Size  Location     Type
  7109 ;;		None               void
  7110 ;; Registers used:
  7111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;Total ram usage:       10 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; Hardware stack levels required when called:    6
  7124 ;; This function calls:
  7125 ;;		___awtoft
  7126 ;;		___ftadd
  7127 ;;		___ftge
  7128 ;;		___ftmul
  7129 ;;		___ftneg
  7130 ;;		___fttol
  7131 ;;		___lbtoft
  7132 ;; This function is called by:
  7133 ;;		_WorkTick
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           
  7138                           ;psect for function _UpdateFanLevel
  7139  04E1                     _UpdateFanLevel:	
  7140                           
  7141                           ;klondike.c: 230: Error = Status.Temp - TempTarget;
  7142                           
  7143                           ;incstack = 0
  7144                           ; Regs used in _UpdateFanLevel: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  7145  04E1  0023               	movlb	3	; select bank3
  7146  04E2  0867               	movf	_TempTarget^(0+384),w
  7147  04E3  0021               	movlb	1	; select bank1
  7148  04E4  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7149  04E5  01D9               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7150  04E6  09D8               	comf	??_UpdateFanLevel^(0+128),f
  7151  04E7  09D9               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7152  04E8  0AD8               	incf	??_UpdateFanLevel^(0+128),f
  7153  04E9  1903               	skipnz
  7154  04EA  0AD9               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7155  04EB  0022               	movlb	2	; select bank2
  7156  04EC  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7157  04ED  0021               	movlb	1	; select bank1
  7158  04EE  0758               	addwf	??_UpdateFanLevel^(0+128),w
  7159  04EF  00DA               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7160  04F0  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7161  04F1  1803               	skipnc
  7162  04F2  0A59               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7163  04F3  00DB               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7164  04F4  085A               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7165  04F5  0023               	movlb	3	; select bank3
  7166  04F6  00A8               	movwf	_Error^(0+384)
  7167  04F7  0021               	movlb	1	; select bank1
  7168  04F8  085B               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7169  04F9  0023               	movlb	3	; select bank3
  7170  04FA  00A9               	movwf	(_Error+1)^(0+384)
  7171                           
  7172                           ;klondike.c: 232: if(FanLevel + (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp)) >
      +                           75 && FanLevel + (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp)) <= 255) {
  7173  04FB  0866               	movf	_FanLevel^(0+384),w
  7174  04FC  319A  22BF  3184   	fcall	___lbtoft
  7175  04FF  0021               	movlb	1	; select bank1
  7176  0500  0825               	movf	?___lbtoft^(0+128),w
  7177  0501  00BD               	movwf	?___ftadd^(0+128)
  7178  0502  0826               	movf	(?___lbtoft+1)^(0+128),w
  7179  0503  00BE               	movwf	(?___ftadd+1)^(0+128)
  7180  0504  0827               	movf	(?___lbtoft+2)^(0+128),w
  7181  0505  00BF               	movwf	(?___ftadd+2)^(0+128)
  7182  0506  0023               	movlb	3	; select bank3
  7183  0507  0829               	movf	(_Error+1)^(0+384),w
  7184  0508  0021               	movlb	1	; select bank1
  7185  0509  01A6               	clrf	(?___awtoft+1)^(0+128)
  7186  050A  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7187  050B  0023               	movlb	3	; select bank3
  7188  050C  0828               	movf	_Error^(0+384),w
  7189  050D  0021               	movlb	1	; select bank1
  7190  050E  01A5               	clrf	?___awtoft^(0+128)
  7191  050F  07A5               	addwf	?___awtoft^(0+128),f
  7192  0510  319B  2397  3184   	fcall	___awtoft
  7193  0513  0021               	movlb	1	; select bank1
  7194  0514  0825               	movf	?___awtoft^(0+128),w
  7195  0515  00C0               	movwf	(?___ftadd^(0+128)+3)
  7196  0516  0826               	movf	(?___awtoft+1)^(0+128),w
  7197  0517  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7198  0518  0827               	movf	(?___awtoft+2)^(0+128),w
  7199  0519  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7200  051A  318C  2480  3184   	fcall	___ftadd
  7201  051D  0021               	movlb	1	; select bank1
  7202  051E  083D               	movf	?___ftadd^(0+128),w
  7203  051F  00DF               	movwf	_UpdateFanLevel$2898^(0+128)
  7204  0520  083E               	movf	(?___ftadd+1)^(0+128),w
  7205  0521  00E0               	movwf	(_UpdateFanLevel$2898+1)^(0+128)
  7206  0522  083F               	movf	(?___ftadd+2)^(0+128),w
  7207  0523  00E1               	movwf	(_UpdateFanLevel$2898+2)^(0+128)
  7208                           
  7209                           ;klondike.c: 232: if(FanLevel + (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp)) >
      +                           75 && FanLevel + (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp)) <= 255) {
  7210  0524  085F               	movf	_UpdateFanLevel$2898^(0+128),w
  7211  0525  00C0               	movwf	(?___ftadd^(0+128)+3)
  7212  0526  0860               	movf	(_UpdateFanLevel$2898+1)^(0+128),w
  7213  0527  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7214  0528  0861               	movf	(_UpdateFanLevel$2898+2)^(0+128),w
  7215  0529  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7216  052A  0022               	movlb	2	; select bank2
  7217  052B  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7218  052C  0021               	movlb	1	; select bank1
  7219  052D  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7220  052E  01D9               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7221  052F  09D8               	comf	??_UpdateFanLevel^(0+128),f
  7222  0530  09D9               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7223  0531  0AD8               	incf	??_UpdateFanLevel^(0+128),f
  7224  0532  1903               	skipnz
  7225  0533  0AD9               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7226  0534  0020               	movlb	0	; select bank0
  7227  0535  0865               	movf	_LastTemp,w
  7228  0536  0021               	movlb	1	; select bank1
  7229  0537  0758               	addwf	??_UpdateFanLevel^(0+128),w
  7230  0538  00DA               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7231  0539  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7232  053A  1803               	skipnc
  7233  053B  0A59               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7234  053C  00DB               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7235  053D  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7236  053E  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7237  053F  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7238  0540  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7239  0541  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7240  0542  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7241  0543  085A               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7242  0544  00A5               	movwf	?___awtoft^(0+128)
  7243  0545  085B               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7244  0546  00A6               	movwf	(?___awtoft+1)^(0+128)
  7245  0547  319B  2397  3184   	fcall	___awtoft
  7246  054A  0021               	movlb	1	; select bank1
  7247  054B  0825               	movf	?___awtoft^(0+128),w
  7248  054C  00BA               	movwf	?___ftneg^(0+128)
  7249  054D  0826               	movf	(?___awtoft+1)^(0+128),w
  7250  054E  00BB               	movwf	(?___ftneg+1)^(0+128)
  7251  054F  0827               	movf	(?___awtoft+2)^(0+128),w
  7252  0550  00BC               	movwf	(?___ftneg+2)^(0+128)
  7253  0551  3199  21BA  3184   	fcall	___ftneg
  7254  0554  0021               	movlb	1	; select bank1
  7255  0555  083A               	movf	?___ftneg^(0+128),w
  7256  0556  00BD               	movwf	?___ftadd^(0+128)
  7257  0557  083B               	movf	(?___ftneg+1)^(0+128),w
  7258  0558  00BE               	movwf	(?___ftadd+1)^(0+128)
  7259  0559  083C               	movf	(?___ftneg+2)^(0+128),w
  7260  055A  00BF               	movwf	(?___ftadd+2)^(0+128)
  7261  055B  318C  2480  3184   	fcall	___ftadd
  7262  055E  0021               	movlb	1	; select bank1
  7263  055F  083D               	movf	?___ftadd^(0+128),w
  7264  0560  00DC               	movwf	_UpdateFanLevel$2899^(0+128)
  7265  0561  083E               	movf	(?___ftadd+1)^(0+128),w
  7266  0562  00DD               	movwf	(_UpdateFanLevel$2899+1)^(0+128)
  7267  0563  083F               	movf	(?___ftadd+2)^(0+128),w
  7268  0564  00DE               	movwf	(_UpdateFanLevel$2899+2)^(0+128)
  7269                           
  7270                           ;klondike.c: 232: if(FanLevel + (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp)) >
      +                           75 && FanLevel + (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp)) <= 255) {
  7271  0565  3000               	movlw	0
  7272  0566  00CA               	movwf	?___ftge^(0+128)
  7273  0567  3096               	movlw	150
  7274  0568  00CB               	movwf	(?___ftge+1)^(0+128)
  7275  0569  3042               	movlw	66
  7276  056A  00CC               	movwf	(?___ftge+2)^(0+128)
  7277  056B  0023               	movlb	3	; select bank3
  7278  056C  082B               	movf	(_LastError+1)^(0+384),w
  7279  056D  0021               	movlb	1	; select bank1
  7280  056E  01A6               	clrf	(?___awtoft+1)^(0+128)
  7281  056F  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7282  0570  0023               	movlb	3	; select bank3
  7283  0571  082A               	movf	_LastError^(0+384),w
  7284  0572  0021               	movlb	1	; select bank1
  7285  0573  01A5               	clrf	?___awtoft^(0+128)
  7286  0574  07A5               	addwf	?___awtoft^(0+128),f
  7287  0575  319B  2397  3184   	fcall	___awtoft
  7288  0578  0021               	movlb	1	; select bank1
  7289  0579  0825               	movf	?___awtoft^(0+128),w
  7290  057A  00AD               	movwf	(?___ftmul^(0+128)+3)
  7291  057B  0826               	movf	(?___awtoft+1)^(0+128),w
  7292  057C  00AE               	movwf	((?___ftmul+1)^(0+128)+3)
  7293  057D  0827               	movf	(?___awtoft+2)^(0+128),w
  7294  057E  00AF               	movwf	((?___ftmul+2)^(0+128)+3)
  7295  057F  3000               	movlw	0
  7296  0580  00AA               	movwf	?___ftmul^(0+128)
  7297  0581  3000               	movlw	0
  7298  0582  00AB               	movwf	(?___ftmul+1)^(0+128)
  7299  0583  303F               	movlw	63
  7300  0584  00AC               	movwf	(?___ftmul+2)^(0+128)
  7301  0585  318A  22DB  3184   	fcall	___ftmul
  7302  0588  0021               	movlb	1	; select bank1
  7303  0589  082A               	movf	?___ftmul^(0+128),w
  7304  058A  00BA               	movwf	?___ftneg^(0+128)
  7305  058B  082B               	movf	(?___ftmul+1)^(0+128),w
  7306  058C  00BB               	movwf	(?___ftneg+1)^(0+128)
  7307  058D  082C               	movf	(?___ftmul+2)^(0+128),w
  7308  058E  00BC               	movwf	(?___ftneg+2)^(0+128)
  7309  058F  3199  21BA  3184   	fcall	___ftneg
  7310  0592  0021               	movlb	1	; select bank1
  7311  0593  083A               	movf	?___ftneg^(0+128),w
  7312  0594  00BD               	movwf	?___ftadd^(0+128)
  7313  0595  083B               	movf	(?___ftneg+1)^(0+128),w
  7314  0596  00BE               	movwf	(?___ftadd+1)^(0+128)
  7315  0597  083C               	movf	(?___ftneg+2)^(0+128),w
  7316  0598  00BF               	movwf	(?___ftadd+2)^(0+128)
  7317  0599  085C               	movf	_UpdateFanLevel$2899^(0+128),w
  7318  059A  00C0               	movwf	(?___ftadd^(0+128)+3)
  7319  059B  085D               	movf	(_UpdateFanLevel$2899+1)^(0+128),w
  7320  059C  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7321  059D  085E               	movf	(_UpdateFanLevel$2899+2)^(0+128),w
  7322  059E  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7323  059F  318C  2480  3184   	fcall	___ftadd
  7324  05A2  0021               	movlb	1	; select bank1
  7325  05A3  083D               	movf	?___ftadd^(0+128),w
  7326  05A4  00CD               	movwf	(?___ftge^(0+128)+3)
  7327  05A5  083E               	movf	(?___ftadd+1)^(0+128),w
  7328  05A6  00CE               	movwf	((?___ftge+1)^(0+128)+3)
  7329  05A7  083F               	movf	(?___ftadd+2)^(0+128),w
  7330  05A8  00CF               	movwf	((?___ftge+2)^(0+128)+3)
  7331  05A9  319C  2452  3184   	fcall	___ftge
  7332  05AC  1803               	btfsc	3,0
  7333  05AD  2EF9               	goto	l6053
  7334  05AE  0023               	movlb	3	; select bank3
  7335  05AF  0866               	movf	_FanLevel^(0+384),w
  7336  05B0  319A  22BF  3184   	fcall	___lbtoft
  7337  05B3  0021               	movlb	1	; select bank1
  7338  05B4  0825               	movf	?___lbtoft^(0+128),w
  7339  05B5  00BD               	movwf	?___ftadd^(0+128)
  7340  05B6  0826               	movf	(?___lbtoft+1)^(0+128),w
  7341  05B7  00BE               	movwf	(?___ftadd+1)^(0+128)
  7342  05B8  0827               	movf	(?___lbtoft+2)^(0+128),w
  7343  05B9  00BF               	movwf	(?___ftadd+2)^(0+128)
  7344  05BA  0023               	movlb	3	; select bank3
  7345  05BB  0829               	movf	(_Error+1)^(0+384),w
  7346  05BC  0021               	movlb	1	; select bank1
  7347  05BD  01A6               	clrf	(?___awtoft+1)^(0+128)
  7348  05BE  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7349  05BF  0023               	movlb	3	; select bank3
  7350  05C0  0828               	movf	_Error^(0+384),w
  7351  05C1  0021               	movlb	1	; select bank1
  7352  05C2  01A5               	clrf	?___awtoft^(0+128)
  7353  05C3  07A5               	addwf	?___awtoft^(0+128),f
  7354  05C4  319B  2397  3184   	fcall	___awtoft
  7355  05C7  0021               	movlb	1	; select bank1
  7356  05C8  0825               	movf	?___awtoft^(0+128),w
  7357  05C9  00C0               	movwf	(?___ftadd^(0+128)+3)
  7358  05CA  0826               	movf	(?___awtoft+1)^(0+128),w
  7359  05CB  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7360  05CC  0827               	movf	(?___awtoft+2)^(0+128),w
  7361  05CD  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7362  05CE  318C  2480  3184   	fcall	___ftadd
  7363  05D1  0021               	movlb	1	; select bank1
  7364  05D2  083D               	movf	?___ftadd^(0+128),w
  7365  05D3  00DF               	movwf	_UpdateFanLevel$2898^(0+128)
  7366  05D4  083E               	movf	(?___ftadd+1)^(0+128),w
  7367  05D5  00E0               	movwf	(_UpdateFanLevel$2898+1)^(0+128)
  7368  05D6  083F               	movf	(?___ftadd+2)^(0+128),w
  7369  05D7  00E1               	movwf	(_UpdateFanLevel$2898+2)^(0+128)
  7370  05D8  085F               	movf	_UpdateFanLevel$2898^(0+128),w
  7371  05D9  00C0               	movwf	(?___ftadd^(0+128)+3)
  7372  05DA  0860               	movf	(_UpdateFanLevel$2898+1)^(0+128),w
  7373  05DB  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7374  05DC  0861               	movf	(_UpdateFanLevel$2898+2)^(0+128),w
  7375  05DD  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7376  05DE  0022               	movlb	2	; select bank2
  7377  05DF  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7378  05E0  0021               	movlb	1	; select bank1
  7379  05E1  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7380  05E2  01D9               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7381  05E3  09D8               	comf	??_UpdateFanLevel^(0+128),f
  7382  05E4  09D9               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7383  05E5  0AD8               	incf	??_UpdateFanLevel^(0+128),f
  7384  05E6  1903               	skipnz
  7385  05E7  0AD9               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7386  05E8  0020               	movlb	0	; select bank0
  7387  05E9  0865               	movf	_LastTemp,w
  7388  05EA  0021               	movlb	1	; select bank1
  7389  05EB  0758               	addwf	??_UpdateFanLevel^(0+128),w
  7390  05EC  00DA               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7391  05ED  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7392  05EE  1803               	skipnc
  7393  05EF  0A59               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7394  05F0  00DB               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7395  05F1  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7396  05F2  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7397  05F3  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7398  05F4  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7399  05F5  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7400  05F6  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7401  05F7  085A               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7402  05F8  00A5               	movwf	?___awtoft^(0+128)
  7403  05F9  085B               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7404  05FA  00A6               	movwf	(?___awtoft+1)^(0+128)
  7405  05FB  319B  2397  3184   	fcall	___awtoft
  7406  05FE  0021               	movlb	1	; select bank1
  7407  05FF  0825               	movf	?___awtoft^(0+128),w
  7408  0600  00BA               	movwf	?___ftneg^(0+128)
  7409  0601  0826               	movf	(?___awtoft+1)^(0+128),w
  7410  0602  00BB               	movwf	(?___ftneg+1)^(0+128)
  7411  0603  0827               	movf	(?___awtoft+2)^(0+128),w
  7412  0604  00BC               	movwf	(?___ftneg+2)^(0+128)
  7413  0605  3199  21BA  3184   	fcall	___ftneg
  7414  0608  0021               	movlb	1	; select bank1
  7415  0609  083A               	movf	?___ftneg^(0+128),w
  7416  060A  00BD               	movwf	?___ftadd^(0+128)
  7417  060B  083B               	movf	(?___ftneg+1)^(0+128),w
  7418  060C  00BE               	movwf	(?___ftadd+1)^(0+128)
  7419  060D  083C               	movf	(?___ftneg+2)^(0+128),w
  7420  060E  00BF               	movwf	(?___ftadd+2)^(0+128)
  7421  060F  318C  2480  3184   	fcall	___ftadd
  7422  0612  0021               	movlb	1	; select bank1
  7423  0613  083D               	movf	?___ftadd^(0+128),w
  7424  0614  00DC               	movwf	_UpdateFanLevel$2899^(0+128)
  7425  0615  083E               	movf	(?___ftadd+1)^(0+128),w
  7426  0616  00DD               	movwf	(_UpdateFanLevel$2899+1)^(0+128)
  7427  0617  083F               	movf	(?___ftadd+2)^(0+128),w
  7428  0618  00DE               	movwf	(_UpdateFanLevel$2899+2)^(0+128)
  7429  0619  3000               	movlw	0
  7430  061A  00CA               	movwf	?___ftge^(0+128)
  7431  061B  307F               	movlw	127
  7432  061C  00CB               	movwf	(?___ftge+1)^(0+128)
  7433  061D  3043               	movlw	67
  7434  061E  00CC               	movwf	(?___ftge+2)^(0+128)
  7435  061F  0023               	movlb	3	; select bank3
  7436  0620  082B               	movf	(_LastError+1)^(0+384),w
  7437  0621  0021               	movlb	1	; select bank1
  7438  0622  01A6               	clrf	(?___awtoft+1)^(0+128)
  7439  0623  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7440  0624  0023               	movlb	3	; select bank3
  7441  0625  082A               	movf	_LastError^(0+384),w
  7442  0626  0021               	movlb	1	; select bank1
  7443  0627  01A5               	clrf	?___awtoft^(0+128)
  7444  0628  07A5               	addwf	?___awtoft^(0+128),f
  7445  0629  319B  2397  3184   	fcall	___awtoft
  7446  062C  0021               	movlb	1	; select bank1
  7447  062D  0825               	movf	?___awtoft^(0+128),w
  7448  062E  00AD               	movwf	(?___ftmul^(0+128)+3)
  7449  062F  0826               	movf	(?___awtoft+1)^(0+128),w
  7450  0630  00AE               	movwf	((?___ftmul+1)^(0+128)+3)
  7451  0631  0827               	movf	(?___awtoft+2)^(0+128),w
  7452  0632  00AF               	movwf	((?___ftmul+2)^(0+128)+3)
  7453  0633  3000               	movlw	0
  7454  0634  00AA               	movwf	?___ftmul^(0+128)
  7455  0635  3000               	movlw	0
  7456  0636  00AB               	movwf	(?___ftmul+1)^(0+128)
  7457  0637  303F               	movlw	63
  7458  0638  00AC               	movwf	(?___ftmul+2)^(0+128)
  7459  0639  318A  22DB  3184   	fcall	___ftmul
  7460  063C  0021               	movlb	1	; select bank1
  7461  063D  082A               	movf	?___ftmul^(0+128),w
  7462  063E  00BA               	movwf	?___ftneg^(0+128)
  7463  063F  082B               	movf	(?___ftmul+1)^(0+128),w
  7464  0640  00BB               	movwf	(?___ftneg+1)^(0+128)
  7465  0641  082C               	movf	(?___ftmul+2)^(0+128),w
  7466  0642  00BC               	movwf	(?___ftneg+2)^(0+128)
  7467  0643  3199  21BA  3184   	fcall	___ftneg
  7468  0646  0021               	movlb	1	; select bank1
  7469  0647  083A               	movf	?___ftneg^(0+128),w
  7470  0648  00BD               	movwf	?___ftadd^(0+128)
  7471  0649  083B               	movf	(?___ftneg+1)^(0+128),w
  7472  064A  00BE               	movwf	(?___ftadd+1)^(0+128)
  7473  064B  083C               	movf	(?___ftneg+2)^(0+128),w
  7474  064C  00BF               	movwf	(?___ftadd+2)^(0+128)
  7475  064D  085C               	movf	_UpdateFanLevel$2899^(0+128),w
  7476  064E  00C0               	movwf	(?___ftadd^(0+128)+3)
  7477  064F  085D               	movf	(_UpdateFanLevel$2899+1)^(0+128),w
  7478  0650  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7479  0651  085E               	movf	(_UpdateFanLevel$2899+2)^(0+128),w
  7480  0652  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7481  0653  318C  2480  3184   	fcall	___ftadd
  7482  0656  0021               	movlb	1	; select bank1
  7483  0657  083D               	movf	?___ftadd^(0+128),w
  7484  0658  00CD               	movwf	(?___ftge^(0+128)+3)
  7485  0659  083E               	movf	(?___ftadd+1)^(0+128),w
  7486  065A  00CE               	movwf	((?___ftge+1)^(0+128)+3)
  7487  065B  083F               	movf	(?___ftadd+2)^(0+128),w
  7488  065C  00CF               	movwf	((?___ftge+2)^(0+128)+3)
  7489  065D  319C  2452  3184   	fcall	___ftge
  7490  0660  1C03               	btfss	3,0
  7491  0661  2EF9               	goto	l6053
  7492                           
  7493                           ;klondike.c: 233: FanLevel += (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp));
  7494  0662  0023               	movlb	3	; select bank3
  7495  0663  0829               	movf	(_Error+1)^(0+384),w
  7496  0664  0021               	movlb	1	; select bank1
  7497  0665  01A6               	clrf	(?___awtoft+1)^(0+128)
  7498  0666  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7499  0667  0023               	movlb	3	; select bank3
  7500  0668  0828               	movf	_Error^(0+384),w
  7501  0669  0021               	movlb	1	; select bank1
  7502  066A  01A5               	clrf	?___awtoft^(0+128)
  7503  066B  07A5               	addwf	?___awtoft^(0+128),f
  7504  066C  319B  2397  3184   	fcall	___awtoft
  7505  066F  0021               	movlb	1	; select bank1
  7506  0670  0825               	movf	?___awtoft^(0+128),w
  7507  0671  00C0               	movwf	(?___ftadd^(0+128)+3)
  7508  0672  0826               	movf	(?___awtoft+1)^(0+128),w
  7509  0673  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7510  0674  0827               	movf	(?___awtoft+2)^(0+128),w
  7511  0675  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7512  0676  0022               	movlb	2	; select bank2
  7513  0677  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7514  0678  0021               	movlb	1	; select bank1
  7515  0679  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7516  067A  01D9               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7517  067B  09D8               	comf	??_UpdateFanLevel^(0+128),f
  7518  067C  09D9               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7519  067D  0AD8               	incf	??_UpdateFanLevel^(0+128),f
  7520  067E  1903               	skipnz
  7521  067F  0AD9               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7522  0680  0020               	movlb	0	; select bank0
  7523  0681  0865               	movf	_LastTemp,w
  7524  0682  0021               	movlb	1	; select bank1
  7525  0683  0758               	addwf	??_UpdateFanLevel^(0+128),w
  7526  0684  00DA               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7527  0685  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7528  0686  1803               	skipnc
  7529  0687  0A59               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7530  0688  00DB               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7531  0689  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7532  068A  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7533  068B  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7534  068C  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7535  068D  35DA               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7536  068E  0DDB               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7537  068F  085A               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7538  0690  00A5               	movwf	?___awtoft^(0+128)
  7539  0691  085B               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7540  0692  00A6               	movwf	(?___awtoft+1)^(0+128)
  7541  0693  319B  2397  3184   	fcall	___awtoft
  7542  0696  0021               	movlb	1	; select bank1
  7543  0697  0825               	movf	?___awtoft^(0+128),w
  7544  0698  00BA               	movwf	?___ftneg^(0+128)
  7545  0699  0826               	movf	(?___awtoft+1)^(0+128),w
  7546  069A  00BB               	movwf	(?___ftneg+1)^(0+128)
  7547  069B  0827               	movf	(?___awtoft+2)^(0+128),w
  7548  069C  00BC               	movwf	(?___ftneg+2)^(0+128)
  7549  069D  3199  21BA  3184   	fcall	___ftneg
  7550  06A0  0021               	movlb	1	; select bank1
  7551  06A1  083A               	movf	?___ftneg^(0+128),w
  7552  06A2  00BD               	movwf	?___ftadd^(0+128)
  7553  06A3  083B               	movf	(?___ftneg+1)^(0+128),w
  7554  06A4  00BE               	movwf	(?___ftadd+1)^(0+128)
  7555  06A5  083C               	movf	(?___ftneg+2)^(0+128),w
  7556  06A6  00BF               	movwf	(?___ftadd+2)^(0+128)
  7557  06A7  318C  2480  3184   	fcall	___ftadd
  7558  06AA  0021               	movlb	1	; select bank1
  7559  06AB  083D               	movf	?___ftadd^(0+128),w
  7560  06AC  00DF               	movwf	_UpdateFanLevel$2898^(0+128)
  7561  06AD  083E               	movf	(?___ftadd+1)^(0+128),w
  7562  06AE  00E0               	movwf	(_UpdateFanLevel$2898+1)^(0+128)
  7563  06AF  083F               	movf	(?___ftadd+2)^(0+128),w
  7564  06B0  00E1               	movwf	(_UpdateFanLevel$2898+2)^(0+128)
  7565                           
  7566                           ;klondike.c: 233: FanLevel += (1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp));
  7567  06B1  085F               	movf	_UpdateFanLevel$2898^(0+128),w
  7568  06B2  00C0               	movwf	(?___ftadd^(0+128)+3)
  7569  06B3  0860               	movf	(_UpdateFanLevel$2898+1)^(0+128),w
  7570  06B4  00C1               	movwf	((?___ftadd+1)^(0+128)+3)
  7571  06B5  0861               	movf	(_UpdateFanLevel$2898+2)^(0+128),w
  7572  06B6  00C2               	movwf	((?___ftadd+2)^(0+128)+3)
  7573  06B7  0023               	movlb	3	; select bank3
  7574  06B8  082B               	movf	(_LastError+1)^(0+384),w
  7575  06B9  0021               	movlb	1	; select bank1
  7576  06BA  01A6               	clrf	(?___awtoft+1)^(0+128)
  7577  06BB  07A6               	addwf	(?___awtoft+1)^(0+128),f
  7578  06BC  0023               	movlb	3	; select bank3
  7579  06BD  082A               	movf	_LastError^(0+384),w
  7580  06BE  0021               	movlb	1	; select bank1
  7581  06BF  01A5               	clrf	?___awtoft^(0+128)
  7582  06C0  07A5               	addwf	?___awtoft^(0+128),f
  7583  06C1  319B  2397  3184   	fcall	___awtoft
  7584  06C4  0021               	movlb	1	; select bank1
  7585  06C5  0825               	movf	?___awtoft^(0+128),w
  7586  06C6  00AD               	movwf	(?___ftmul^(0+128)+3)
  7587  06C7  0826               	movf	(?___awtoft+1)^(0+128),w
  7588  06C8  00AE               	movwf	((?___ftmul+1)^(0+128)+3)
  7589  06C9  0827               	movf	(?___awtoft+2)^(0+128),w
  7590  06CA  00AF               	movwf	((?___ftmul+2)^(0+128)+3)
  7591  06CB  3000               	movlw	0
  7592  06CC  00AA               	movwf	?___ftmul^(0+128)
  7593  06CD  3000               	movlw	0
  7594  06CE  00AB               	movwf	(?___ftmul+1)^(0+128)
  7595  06CF  303F               	movlw	63
  7596  06D0  00AC               	movwf	(?___ftmul+2)^(0+128)
  7597  06D1  318A  22DB  3184   	fcall	___ftmul
  7598  06D4  0021               	movlb	1	; select bank1
  7599  06D5  082A               	movf	?___ftmul^(0+128),w
  7600  06D6  00BA               	movwf	?___ftneg^(0+128)
  7601  06D7  082B               	movf	(?___ftmul+1)^(0+128),w
  7602  06D8  00BB               	movwf	(?___ftneg+1)^(0+128)
  7603  06D9  082C               	movf	(?___ftmul+2)^(0+128),w
  7604  06DA  00BC               	movwf	(?___ftneg+2)^(0+128)
  7605  06DB  3199  21BA  3184   	fcall	___ftneg
  7606  06DE  0021               	movlb	1	; select bank1
  7607  06DF  083A               	movf	?___ftneg^(0+128),w
  7608  06E0  00BD               	movwf	?___ftadd^(0+128)
  7609  06E1  083B               	movf	(?___ftneg+1)^(0+128),w
  7610  06E2  00BE               	movwf	(?___ftadd+1)^(0+128)
  7611  06E3  083C               	movf	(?___ftneg+2)^(0+128),w
  7612  06E4  00BF               	movwf	(?___ftadd+2)^(0+128)
  7613  06E5  318C  2480  3184   	fcall	___ftadd
  7614  06E8  0021               	movlb	1	; select bank1
  7615  06E9  083D               	movf	?___ftadd^(0+128),w
  7616  06EA  00CA               	movwf	?___fttol^(0+128)
  7617  06EB  083E               	movf	(?___ftadd+1)^(0+128),w
  7618  06EC  00CB               	movwf	(?___fttol+1)^(0+128)
  7619  06ED  083F               	movf	(?___ftadd+2)^(0+128),w
  7620  06EE  00CC               	movwf	(?___fttol+2)^(0+128)
  7621  06EF  3193  23F6  3184   	fcall	___fttol
  7622  06F2  0021               	movlb	1	; select bank1
  7623  06F3  084A               	movf	?___fttol^(0+128),w
  7624  06F4  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7625  06F5  0858               	movf	??_UpdateFanLevel^(0+128),w
  7626  06F6  0023               	movlb	3	; select bank3
  7627  06F7  07E6               	addwf	_FanLevel^(0+384),f
  7628                           
  7629                           ;klondike.c: 234: }
  7630  06F8  2F2D               	goto	l751
  7631  06F9                     l6053:	
  7632                           
  7633                           ;klondike.c: 235: else if(FanLevel + Step > 255) {
  7634  06F9  0023               	movlb	3	; select bank3
  7635  06FA  0866               	movf	_FanLevel^(0+384),w
  7636  06FB  072C               	addwf	_Step^(0+384),w
  7637  06FC  0021               	movlb	1	; select bank1
  7638  06FD  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7639  06FE  0023               	movlb	3	; select bank3
  7640  06FF  082D               	movf	(_Step+1)^(0+384),w
  7641  0700  1803               	skipnc
  7642  0701  0A2D               	incf	(_Step+1)^(0+384),w
  7643  0702  0021               	movlb	1	; select bank1
  7644  0703  00D9               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7645  0704  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7646  0705  3A80               	xorlw	128
  7647  0706  00FF               	movwf	127
  7648  0707  3081               	movlw	129
  7649  0708  027F               	subwf	127,w
  7650  0709  1D03               	skipz
  7651  070A  2F0D               	goto	u5425
  7652  070B  3000               	movlw	0
  7653  070C  0258               	subwf	??_UpdateFanLevel^(0+128),w
  7654  070D                     u5425:	
  7655  070D  1C03               	skipc
  7656  070E  2F11               	goto	l6057
  7657                           
  7658                           ;klondike.c: 236: FanLevel = 255;
  7659  070F  30FF               	movlw	255
  7660  0710  2F28               	goto	L7
  7661  0711                     l6057:	
  7662                           ;klondike.c: 237: }
  7663                           
  7664                           
  7665                           ;klondike.c: 238: else if(FanLevel + Step < 75) {
  7666  0711  0023               	movlb	3	; select bank3
  7667  0712  0866               	movf	_FanLevel^(0+384),w
  7668  0713  072C               	addwf	_Step^(0+384),w
  7669  0714  0021               	movlb	1	; select bank1
  7670  0715  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7671  0716  0023               	movlb	3	; select bank3
  7672  0717  082D               	movf	(_Step+1)^(0+384),w
  7673  0718  1803               	skipnc
  7674  0719  0A2D               	incf	(_Step+1)^(0+384),w
  7675  071A  0021               	movlb	1	; select bank1
  7676  071B  00D9               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7677  071C  0859               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7678  071D  3A80               	xorlw	128
  7679  071E  00FF               	movwf	127
  7680  071F  3080               	movlw	128
  7681  0720  027F               	subwf	127,w
  7682  0721  1D03               	skipz
  7683  0722  2F25               	goto	u5435
  7684  0723  304B               	movlw	75
  7685  0724  0258               	subwf	??_UpdateFanLevel^(0+128),w
  7686  0725                     u5435:	
  7687  0725  1803               	skipnc
  7688  0726  2F2D               	goto	l751
  7689                           
  7690                           ;klondike.c: 239: FanLevel = 75;
  7691  0727  304B               	movlw	75
  7692  0728                     L7:	
  7693  0728  0021               	movlb	1	; select bank1
  7694  0729  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7695  072A  0858               	movf	??_UpdateFanLevel^(0+128),w
  7696  072B  0023               	movlb	3	; select bank3
  7697  072C  00E6               	movwf	_FanLevel^(0+384)
  7698  072D                     l751:	
  7699                           
  7700                           ;klondike.c: 240: }
  7701                           ;klondike.c: 242: LastTemp = Status.Temp;
  7702  072D  0022               	movlb	2	; select bank2
  7703  072E  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7704  072F  0021               	movlb	1	; select bank1
  7705  0730  00D8               	movwf	??_UpdateFanLevel^(0+128)
  7706  0731  0858               	movf	??_UpdateFanLevel^(0+128),w
  7707  0732  0020               	movlb	0	; select bank0
  7708  0733  00E5               	movwf	_LastTemp
  7709                           
  7710                           ;klondike.c: 243: LastError = Error;
  7711  0734  0023               	movlb	3	; select bank3
  7712  0735  0829               	movf	(_Error+1)^(0+384),w
  7713  0736  01AB               	clrf	(_LastError+1)^(0+384)
  7714  0737  07AB               	addwf	(_LastError+1)^(0+384),f
  7715  0738  0828               	movf	_Error^(0+384),w
  7716  0739  01AA               	clrf	_LastError^(0+384)
  7717  073A  07AA               	addwf	_LastError^(0+384),f
  7718                           
  7719                           ;klondike.c: 245: PWM1DCH = Status.FanSpeed = FanLevel;
  7720  073B  3006               	movlw	6
  7721  073C  3E59               	addlw	_Status& (0+255)
  7722  073D  0086               	movwf	6
  7723  073E  3001               	movlw	1	; select bank2/3
  7724  073F  0087               	movwf	7
  7725  0740  0866               	movf	_FanLevel^(0+384),w
  7726  0741  3FC0               	movwi [0]fsr1
  7727  0742  002C               	movlb	12	; select bank12
  7728  0743  0092               	movwf	18	;volatile
  7729  0744  0008               	return
  7730  0745                     __end_of_UpdateFanLevel:	
  7731                           
  7732                           	psect	text22
  7733  1ABF                     __ptext22:	
  7734 ;; *************** function ___lbtoft *****************
  7735 ;; Defined at:
  7736 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lbtoft.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  c               1    wreg     unsigned char 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  c               1   17[BANK0 ] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  3    5[BANK1 ] float 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, pclath, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7750 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7754 ;;Total ram usage:        8 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    5
  7757 ;; This function calls:
  7758 ;;		___ftpack
  7759 ;; This function is called by:
  7760 ;;		_UpdateFanLevel
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           
  7765                           ;psect for function ___lbtoft
  7766  1ABF                     ___lbtoft:	
  7767                           
  7768                           ;incstack = 0
  7769                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  7770                           ;___lbtoft@c stored from wreg
  7771  1ABF  0020               	movlb	0	; select bank0
  7772  1AC0  00E1               	movwf	___lbtoft@c
  7773  1AC1  0861               	movf	___lbtoft@c,w
  7774  1AC2  0021               	movlb	1	; select bank1
  7775  1AC3  00A8               	movwf	??___lbtoft^(0+128)
  7776  1AC4  01A9               	clrf	(??___lbtoft^(0+128)+1)
  7777  1AC5  01AA               	clrf	(??___lbtoft^(0+128)+2)
  7778  1AC6  0828               	movf	??___lbtoft^(0+128),w
  7779  1AC7  00A0               	movwf	?___ftpack^(0+128)
  7780  1AC8  0829               	movf	(??___lbtoft+1)^(0+128),w
  7781  1AC9  00A1               	movwf	(?___ftpack+1)^(0+128)
  7782  1ACA  082A               	movf	(??___lbtoft+2)^(0+128),w
  7783  1ACB  00A2               	movwf	(?___ftpack+2)^(0+128)
  7784  1ACC  308E               	movlw	142
  7785  1ACD  00AB               	movwf	(??___lbtoft+3)^(0+128)
  7786  1ACE  082B               	movf	(??___lbtoft+3)^(0+128),w
  7787  1ACF  00A3               	movwf	(?___ftpack^(0+128)+3)
  7788  1AD0  01A4               	clrf	(?___ftpack^(0+128)+4)
  7789  1AD1  3190  2029         	fcall	___ftpack
  7790  1AD3  0021               	movlb	1	; select bank1
  7791  1AD4  0820               	movf	?___ftpack^(0+128),w
  7792  1AD5  00A5               	movwf	?___lbtoft^(0+128)
  7793  1AD6  0821               	movf	(?___ftpack+1)^(0+128),w
  7794  1AD7  00A6               	movwf	(?___lbtoft+1)^(0+128)
  7795  1AD8  0822               	movf	(?___ftpack+2)^(0+128),w
  7796  1AD9  00A7               	movwf	(?___lbtoft+2)^(0+128)
  7797  1ADA  0008               	return
  7798  1ADB                     __end_of___lbtoft:	
  7799                           
  7800                           	psect	text23
  7801  13F6                     __ptext23:	
  7802 ;; *************** function ___fttol *****************
  7803 ;; Defined at:
  7804 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  f1              3   42[BANK1 ] float 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  lval            4   51[BANK1 ] unsigned long 
  7809 ;;  exp1            1   55[BANK1 ] unsigned char 
  7810 ;;  sign1           1   50[BANK1 ] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  4   42[BANK1 ] long 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7820 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;Total ram usage:       14 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    4
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_UpdateFanLevel
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           
  7835                           ;psect for function ___fttol
  7836  13F6                     ___fttol:	
  7837                           
  7838                           ;incstack = 0
  7839                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7840  13F6  0021               	movlb	1	; select bank1
  7841  13F7  084A               	movf	___fttol@f1^(0+128),w
  7842  13F8  00CE               	movwf	??___fttol^(0+128)
  7843  13F9  084B               	movf	(___fttol@f1+1)^(0+128),w
  7844  13FA  00CF               	movwf	(??___fttol^(0+128)+1)
  7845  13FB  084C               	movf	(___fttol@f1+2)^(0+128),w
  7846  13FC  00D0               	movwf	(??___fttol^(0+128)+2)
  7847  13FD  1003               	clrc
  7848  13FE  0D4F               	rlf	(??___fttol^(0+128)+1),w
  7849  13FF  0D50               	rlf	(??___fttol^(0+128)+2),w
  7850  1400  00D1               	movwf	(??___fttol+3)^(0+128)
  7851  1401  0851               	movf	(??___fttol+3)^(0+128),w
  7852  1402  00D7               	movwf	___fttol@exp1^(0+128)
  7853  1403  08D7               	movf	___fttol@exp1^(0+128),f
  7854  1404  1D03               	skipz
  7855  1405  2C0F               	goto	l6495
  7856  1406  3000               	movlw	0
  7857  1407  00CD               	movwf	(?___fttol+3)^(0+128)
  7858  1408  3000               	movlw	0
  7859  1409  00CC               	movwf	(?___fttol+2)^(0+128)
  7860  140A  3000               	movlw	0
  7861  140B  00CB               	movwf	(?___fttol+1)^(0+128)
  7862  140C  3000               	movlw	0
  7863  140D  00CA               	movwf	?___fttol^(0+128)
  7864  140E  0008               	return
  7865  140F                     l6495:	
  7866  140F  084A               	movf	___fttol@f1^(0+128),w
  7867  1410  00CE               	movwf	??___fttol^(0+128)
  7868  1411  084B               	movf	(___fttol@f1+1)^(0+128),w
  7869  1412  00CF               	movwf	(??___fttol^(0+128)+1)
  7870  1413  084C               	movf	(___fttol@f1+2)^(0+128),w
  7871  1414  00D0               	movwf	(??___fttol^(0+128)+2)
  7872  1415  3017               	movlw	23
  7873  1416                     u6215:	
  7874  1416  36D0               	lsrf	(??___fttol^(0+128)+2),f
  7875  1417  0CCF               	rrf	(??___fttol^(0+128)+1),f
  7876  1418  0CCE               	rrf	??___fttol^(0+128),f
  7877  1419  0B89               	decfsz	9,f
  7878  141A  2C16               	goto	u6215
  7879  141B  084E               	movf	??___fttol^(0+128),w
  7880  141C  00D1               	movwf	(??___fttol+3)^(0+128)
  7881  141D  0851               	movf	(??___fttol+3)^(0+128),w
  7882  141E  00D2               	movwf	___fttol@sign1^(0+128)
  7883  141F  17CB               	bsf	(___fttol@f1^(0+128)+1),7
  7884  1420  30FF               	movlw	255
  7885  1421  05CA               	andwf	___fttol@f1^(0+128),f
  7886  1422  30FF               	movlw	255
  7887  1423  05CB               	andwf	(___fttol@f1+1)^(0+128),f
  7888  1424  3000               	movlw	0
  7889  1425  05CC               	andwf	(___fttol@f1+2)^(0+128),f
  7890  1426  084A               	movf	___fttol@f1^(0+128),w
  7891  1427  00D3               	movwf	___fttol@lval^(0+128)
  7892  1428  084B               	movf	(___fttol@f1+1)^(0+128),w
  7893  1429  00D4               	movwf	(___fttol@lval^(0+128)+1)
  7894  142A  084C               	movf	(___fttol@f1+2)^(0+128),w
  7895  142B  00D5               	movwf	(___fttol@lval^(0+128)+2)
  7896  142C  01D6               	clrf	(___fttol@lval^(0+128)+3)
  7897  142D  308E               	movlw	142
  7898  142E  02D7               	subwf	___fttol@exp1^(0+128),f
  7899  142F  1FD7               	btfss	___fttol@exp1^(0+128),7
  7900  1430  2C4D               	goto	l6515
  7901  1431  0857               	movf	___fttol@exp1^(0+128),w
  7902  1432  3A80               	xorlw	128
  7903  1433  3E8F               	addlw	143
  7904  1434  1803               	skipnc
  7905  1435  2C3F               	goto	l6513
  7906  1436  3000               	movlw	0
  7907  1437  00CD               	movwf	(?___fttol+3)^(0+128)
  7908  1438  3000               	movlw	0
  7909  1439  00CC               	movwf	(?___fttol+2)^(0+128)
  7910  143A  3000               	movlw	0
  7911  143B  00CB               	movwf	(?___fttol+1)^(0+128)
  7912  143C  3000               	movlw	0
  7913  143D  00CA               	movwf	?___fttol^(0+128)
  7914  143E  0008               	return
  7915  143F                     l6513:	
  7916  143F  3001               	movlw	1
  7917  1440                     u6245:	
  7918  1440  36D6               	lsrf	(___fttol@lval+3)^(0+128),f
  7919  1441  0CD5               	rrf	(___fttol@lval+2)^(0+128),f
  7920  1442  0CD4               	rrf	(___fttol@lval+1)^(0+128),f
  7921  1443  0CD3               	rrf	___fttol@lval^(0+128),f
  7922  1444  0B89               	decfsz	9,f
  7923  1445  2C40               	goto	u6245
  7924  1446  3001               	movlw	1
  7925  1447  00CE               	movwf	??___fttol^(0+128)
  7926  1448  084E               	movf	??___fttol^(0+128),w
  7927  1449  07D7               	addwf	___fttol@exp1^(0+128),f
  7928  144A  1903               	btfsc	3,2
  7929  144B  2C66               	goto	l6525
  7930  144C  2C3F               	goto	l6513
  7931  144D                     l6515:	
  7932  144D  3018               	movlw	24
  7933  144E  0257               	subwf	___fttol@exp1^(0+128),w
  7934  144F  1C03               	skipc
  7935  1450  2C63               	goto	l6523
  7936  1451  3000               	movlw	0
  7937  1452  00CD               	movwf	(?___fttol+3)^(0+128)
  7938  1453  3000               	movlw	0
  7939  1454  00CC               	movwf	(?___fttol+2)^(0+128)
  7940  1455  3000               	movlw	0
  7941  1456  00CB               	movwf	(?___fttol+1)^(0+128)
  7942  1457  3000               	movlw	0
  7943  1458  00CA               	movwf	?___fttol^(0+128)
  7944  1459  0008               	return
  7945  145A                     l6521:	
  7946  145A  3001               	movlw	1
  7947  145B                     u6275:	
  7948  145B  35D3               	lslf	___fttol@lval^(0+128),f
  7949  145C  0DD4               	rlf	(___fttol@lval+1)^(0+128),f
  7950  145D  0DD5               	rlf	(___fttol@lval+2)^(0+128),f
  7951  145E  0DD6               	rlf	(___fttol@lval+3)^(0+128),f
  7952  145F  0B89               	decfsz	9,f
  7953  1460  2C5B               	goto	u6275
  7954  1461  3001               	movlw	1
  7955  1462  02D7               	subwf	___fttol@exp1^(0+128),f
  7956  1463                     l6523:	
  7957  1463  08D7               	movf	___fttol@exp1^(0+128),f
  7958  1464  1D03               	skipz
  7959  1465  2C5A               	goto	l6521
  7960  1466                     l6525:	
  7961  1466  0852               	movf	___fttol@sign1^(0+128),w
  7962  1467  1903               	btfsc	3,2
  7963  1468  2C74               	goto	l6529
  7964  1469  09D3               	comf	___fttol@lval^(0+128),f
  7965  146A  09D4               	comf	(___fttol@lval+1)^(0+128),f
  7966  146B  09D5               	comf	(___fttol@lval+2)^(0+128),f
  7967  146C  09D6               	comf	(___fttol@lval+3)^(0+128),f
  7968  146D  0AD3               	incf	___fttol@lval^(0+128),f
  7969  146E  1903               	skipnz
  7970  146F  0AD4               	incf	(___fttol@lval+1)^(0+128),f
  7971  1470  1903               	skipnz
  7972  1471  0AD5               	incf	(___fttol@lval+2)^(0+128),f
  7973  1472  1903               	skipnz
  7974  1473  0AD6               	incf	(___fttol@lval+3)^(0+128),f
  7975  1474                     l6529:	
  7976  1474  0856               	movf	(___fttol@lval+3)^(0+128),w
  7977  1475  00CD               	movwf	(?___fttol+3)^(0+128)
  7978  1476  0855               	movf	(___fttol@lval+2)^(0+128),w
  7979  1477  00CC               	movwf	(?___fttol+2)^(0+128)
  7980  1478  0854               	movf	(___fttol@lval+1)^(0+128),w
  7981  1479  00CB               	movwf	(?___fttol+1)^(0+128)
  7982  147A  0853               	movf	___fttol@lval^(0+128),w
  7983  147B  00CA               	movwf	?___fttol^(0+128)
  7984  147C  0008               	return
  7985  147D                     __end_of___fttol:	
  7986                           
  7987                           	psect	text24
  7988  19BA                     __ptext24:	
  7989 ;; *************** function ___ftneg *****************
  7990 ;; Defined at:
  7991 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  f1              3   26[BANK1 ] float 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;		None
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  3   26[BANK1 ] float 
  7998 ;; Registers used:
  7999 ;;		wreg
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8005 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;Total ram usage:        3 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; Hardware stack levels required when called:    4
  8012 ;; This function calls:
  8013 ;;		Nothing
  8014 ;; This function is called by:
  8015 ;;		_UpdateFanLevel
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           
  8020                           ;psect for function ___ftneg
  8021  19BA                     ___ftneg:	
  8022                           
  8023                           ;incstack = 0
  8024                           ; Regs used in ___ftneg: [wreg]
  8025  19BA  0021               	movlb	1	; select bank1
  8026  19BB  083C               	movf	(___ftneg@f1+2)^(0+128),w
  8027  19BC  043B               	iorwf	(___ftneg@f1+1)^(0+128),w
  8028  19BD  043A               	iorwf	___ftneg@f1^(0+128),w
  8029  19BE  1903               	skipnz
  8030  19BF  0008               	return
  8031  19C0  3080               	movlw	128
  8032  19C1  06BC               	xorwf	(___ftneg@f1+2)^(0+128),f
  8033  19C2  0008               	return
  8034  19C3                     __end_of___ftneg:	
  8035                           
  8036                           	psect	text25
  8037  0ADB                     __ptext25:	
  8038 ;; *************** function ___ftmul *****************
  8039 ;; Defined at:
  8040 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  f1              3   10[BANK1 ] float 
  8043 ;;  f2              3   13[BANK1 ] float 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  f3_as_produc    3   21[BANK1 ] unsigned um
  8046 ;;  sign            1   25[BANK1 ] unsigned char 
  8047 ;;  cntr            1   24[BANK1 ] unsigned char 
  8048 ;;  exp             1   20[BANK1 ] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  3   10[BANK1 ] float 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0, pclath, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8058 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8061 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8062 ;;Total ram usage:       16 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    5
  8065 ;; This function calls:
  8066 ;;		___ftpack
  8067 ;; This function is called by:
  8068 ;;		_UpdateFanLevel
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           
  8073                           ;psect for function ___ftmul
  8074  0ADB                     ___ftmul:	
  8075                           
  8076                           ;incstack = 0
  8077                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8078  0ADB  0021               	movlb	1	; select bank1
  8079  0ADC  082A               	movf	___ftmul@f1^(0+128),w
  8080  0ADD  00B0               	movwf	??___ftmul^(0+128)
  8081  0ADE  082B               	movf	(___ftmul@f1+1)^(0+128),w
  8082  0ADF  00B1               	movwf	(??___ftmul^(0+128)+1)
  8083  0AE0  082C               	movf	(___ftmul@f1+2)^(0+128),w
  8084  0AE1  00B2               	movwf	(??___ftmul^(0+128)+2)
  8085  0AE2  1003               	clrc
  8086  0AE3  0D31               	rlf	(??___ftmul^(0+128)+1),w
  8087  0AE4  0D32               	rlf	(??___ftmul^(0+128)+2),w
  8088  0AE5  00B3               	movwf	(??___ftmul+3)^(0+128)
  8089  0AE6  0833               	movf	(??___ftmul+3)^(0+128),w
  8090  0AE7  00B4               	movwf	___ftmul@exp^(0+128)
  8091  0AE8  08B4               	movf	___ftmul@exp^(0+128),f
  8092  0AE9  1D03               	skipz
  8093  0AEA  2AF2               	goto	l6437
  8094  0AEB  3000               	movlw	0
  8095  0AEC  00AA               	movwf	?___ftmul^(0+128)
  8096  0AED  3000               	movlw	0
  8097  0AEE  00AB               	movwf	(?___ftmul+1)^(0+128)
  8098  0AEF  3000               	movlw	0
  8099  0AF0  00AC               	movwf	(?___ftmul+2)^(0+128)
  8100  0AF1  0008               	return
  8101  0AF2                     l6437:	
  8102  0AF2  082D               	movf	___ftmul@f2^(0+128),w
  8103  0AF3  00B0               	movwf	??___ftmul^(0+128)
  8104  0AF4  082E               	movf	(___ftmul@f2+1)^(0+128),w
  8105  0AF5  00B1               	movwf	(??___ftmul^(0+128)+1)
  8106  0AF6  082F               	movf	(___ftmul@f2+2)^(0+128),w
  8107  0AF7  00B2               	movwf	(??___ftmul^(0+128)+2)
  8108  0AF8  1003               	clrc
  8109  0AF9  0D31               	rlf	(??___ftmul^(0+128)+1),w
  8110  0AFA  0D32               	rlf	(??___ftmul^(0+128)+2),w
  8111  0AFB  00B3               	movwf	(??___ftmul+3)^(0+128)
  8112  0AFC  0833               	movf	(??___ftmul+3)^(0+128),w
  8113  0AFD  00B9               	movwf	___ftmul@sign^(0+128)
  8114  0AFE  08B9               	movf	___ftmul@sign^(0+128),f
  8115  0AFF  1D03               	skipz
  8116  0B00  2B08               	goto	l6443
  8117  0B01  3000               	movlw	0
  8118  0B02  00AA               	movwf	?___ftmul^(0+128)
  8119  0B03  3000               	movlw	0
  8120  0B04  00AB               	movwf	(?___ftmul+1)^(0+128)
  8121  0B05  3000               	movlw	0
  8122  0B06  00AC               	movwf	(?___ftmul+2)^(0+128)
  8123  0B07  0008               	return
  8124  0B08                     l6443:	
  8125  0B08  0839               	movf	___ftmul@sign^(0+128),w
  8126  0B09  3E7B               	addlw	123
  8127  0B0A  00B0               	movwf	??___ftmul^(0+128)
  8128  0B0B  0830               	movf	??___ftmul^(0+128),w
  8129  0B0C  07B4               	addwf	___ftmul@exp^(0+128),f
  8130  0B0D  082A               	movf	___ftmul@f1^(0+128),w
  8131  0B0E  00B0               	movwf	??___ftmul^(0+128)
  8132  0B0F  082B               	movf	(___ftmul@f1+1)^(0+128),w
  8133  0B10  00B1               	movwf	(??___ftmul^(0+128)+1)
  8134  0B11  082C               	movf	(___ftmul@f1+2)^(0+128),w
  8135  0B12  00B2               	movwf	(??___ftmul^(0+128)+2)
  8136  0B13  3010               	movlw	16
  8137  0B14                     u6095:	
  8138  0B14  36B2               	lsrf	(??___ftmul^(0+128)+2),f
  8139  0B15  0CB1               	rrf	(??___ftmul^(0+128)+1),f
  8140  0B16  0CB0               	rrf	??___ftmul^(0+128),f
  8141  0B17  0B89               	decfsz	9,f
  8142  0B18  2B14               	goto	u6095
  8143  0B19  0830               	movf	??___ftmul^(0+128),w
  8144  0B1A  00B3               	movwf	(??___ftmul+3)^(0+128)
  8145  0B1B  0833               	movf	(??___ftmul+3)^(0+128),w
  8146  0B1C  00B9               	movwf	___ftmul@sign^(0+128)
  8147  0B1D  082D               	movf	___ftmul@f2^(0+128),w
  8148  0B1E  00B0               	movwf	??___ftmul^(0+128)
  8149  0B1F  082E               	movf	(___ftmul@f2+1)^(0+128),w
  8150  0B20  00B1               	movwf	(??___ftmul^(0+128)+1)
  8151  0B21  082F               	movf	(___ftmul@f2+2)^(0+128),w
  8152  0B22  00B2               	movwf	(??___ftmul^(0+128)+2)
  8153  0B23  3010               	movlw	16
  8154  0B24                     u6105:	
  8155  0B24  36B2               	lsrf	(??___ftmul^(0+128)+2),f
  8156  0B25  0CB1               	rrf	(??___ftmul^(0+128)+1),f
  8157  0B26  0CB0               	rrf	??___ftmul^(0+128),f
  8158  0B27  0B89               	decfsz	9,f
  8159  0B28  2B24               	goto	u6105
  8160  0B29  0830               	movf	??___ftmul^(0+128),w
  8161  0B2A  00B3               	movwf	(??___ftmul+3)^(0+128)
  8162  0B2B  0833               	movf	(??___ftmul+3)^(0+128),w
  8163  0B2C  06B9               	xorwf	___ftmul@sign^(0+128),f
  8164  0B2D  3080               	movlw	128
  8165  0B2E  00B0               	movwf	??___ftmul^(0+128)
  8166  0B2F  0830               	movf	??___ftmul^(0+128),w
  8167  0B30  05B9               	andwf	___ftmul@sign^(0+128),f
  8168  0B31  17AB               	bsf	(___ftmul@f1^(0+128)+1),7
  8169  0B32  17AE               	bsf	(___ftmul@f2^(0+128)+1),7
  8170  0B33  30FF               	movlw	255
  8171  0B34  05AD               	andwf	___ftmul@f2^(0+128),f
  8172  0B35  30FF               	movlw	255
  8173  0B36  05AE               	andwf	(___ftmul@f2+1)^(0+128),f
  8174  0B37  3000               	movlw	0
  8175  0B38  05AF               	andwf	(___ftmul@f2+2)^(0+128),f
  8176  0B39  3000               	movlw	0
  8177  0B3A  00B5               	movwf	___ftmul@f3_as_product^(0+128)
  8178  0B3B  3000               	movlw	0
  8179  0B3C  00B6               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8180  0B3D  3000               	movlw	0
  8181  0B3E  00B7               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8182  0B3F  3007               	movlw	7
  8183  0B40  00B0               	movwf	??___ftmul^(0+128)
  8184  0B41  0830               	movf	??___ftmul^(0+128),w
  8185  0B42  00B8               	movwf	___ftmul@cntr^(0+128)
  8186  0B43                     l6455:	
  8187  0B43  1C2A               	btfss	___ftmul@f1^(0+128),0
  8188  0B44  2B4B               	goto	l6459
  8189  0B45  082D               	movf	___ftmul@f2^(0+128),w
  8190  0B46  07B5               	addwf	___ftmul@f3_as_product^(0+128),f
  8191  0B47  082E               	movf	(___ftmul@f2+1)^(0+128),w
  8192  0B48  3DB6               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8193  0B49  082F               	movf	(___ftmul@f2+2)^(0+128),w
  8194  0B4A  3DB7               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8195  0B4B                     l6459:	
  8196  0B4B  3001               	movlw	1
  8197  0B4C                     u6125:	
  8198  0B4C  36AC               	lsrf	(___ftmul@f1+2)^(0+128),f
  8199  0B4D  0CAB               	rrf	(___ftmul@f1+1)^(0+128),f
  8200  0B4E  0CAA               	rrf	___ftmul@f1^(0+128),f
  8201  0B4F  0B89               	decfsz	9,f
  8202  0B50  2B4C               	goto	u6125
  8203  0B51  3001               	movlw	1
  8204  0B52                     u6135:	
  8205  0B52  35AD               	lslf	___ftmul@f2^(0+128),f
  8206  0B53  0DAE               	rlf	(___ftmul@f2+1)^(0+128),f
  8207  0B54  0DAF               	rlf	(___ftmul@f2+2)^(0+128),f
  8208  0B55  0B89               	decfsz	9,f
  8209  0B56  2B52               	goto	u6135
  8210  0B57  3001               	movlw	1
  8211  0B58  02B8               	subwf	___ftmul@cntr^(0+128),f
  8212  0B59  1D03               	btfss	3,2
  8213  0B5A  2B43               	goto	l6455
  8214  0B5B  3009               	movlw	9
  8215  0B5C  00B0               	movwf	??___ftmul^(0+128)
  8216  0B5D  0830               	movf	??___ftmul^(0+128),w
  8217  0B5E  00B8               	movwf	___ftmul@cntr^(0+128)
  8218  0B5F                     l6467:	
  8219  0B5F  1C2A               	btfss	___ftmul@f1^(0+128),0
  8220  0B60  2B67               	goto	l6471
  8221  0B61  082D               	movf	___ftmul@f2^(0+128),w
  8222  0B62  07B5               	addwf	___ftmul@f3_as_product^(0+128),f
  8223  0B63  082E               	movf	(___ftmul@f2+1)^(0+128),w
  8224  0B64  3DB6               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8225  0B65  082F               	movf	(___ftmul@f2+2)^(0+128),w
  8226  0B66  3DB7               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8227  0B67                     l6471:	
  8228  0B67  3001               	movlw	1
  8229  0B68                     u6165:	
  8230  0B68  36AC               	lsrf	(___ftmul@f1+2)^(0+128),f
  8231  0B69  0CAB               	rrf	(___ftmul@f1+1)^(0+128),f
  8232  0B6A  0CAA               	rrf	___ftmul@f1^(0+128),f
  8233  0B6B  0B89               	decfsz	9,f
  8234  0B6C  2B68               	goto	u6165
  8235  0B6D  3001               	movlw	1
  8236  0B6E                     u6175:	
  8237  0B6E  36B7               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8238  0B6F  0CB6               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8239  0B70  0CB5               	rrf	___ftmul@f3_as_product^(0+128),f
  8240  0B71  0B89               	decfsz	9,f
  8241  0B72  2B6E               	goto	u6175
  8242  0B73  3001               	movlw	1
  8243  0B74  02B8               	subwf	___ftmul@cntr^(0+128),f
  8244  0B75  1D03               	btfss	3,2
  8245  0B76  2B5F               	goto	l6467
  8246  0B77  0835               	movf	___ftmul@f3_as_product^(0+128),w
  8247  0B78  00A0               	movwf	?___ftpack^(0+128)
  8248  0B79  0836               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8249  0B7A  00A1               	movwf	(?___ftpack+1)^(0+128)
  8250  0B7B  0837               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8251  0B7C  00A2               	movwf	(?___ftpack+2)^(0+128)
  8252  0B7D  0834               	movf	___ftmul@exp^(0+128),w
  8253  0B7E  00B0               	movwf	??___ftmul^(0+128)
  8254  0B7F  0830               	movf	??___ftmul^(0+128),w
  8255  0B80  00A3               	movwf	(?___ftpack^(0+128)+3)
  8256  0B81  0839               	movf	___ftmul@sign^(0+128),w
  8257  0B82  00B1               	movwf	(??___ftmul+1)^(0+128)
  8258  0B83  0831               	movf	(??___ftmul+1)^(0+128),w
  8259  0B84  00A4               	movwf	(?___ftpack^(0+128)+4)
  8260  0B85  3190  2029         	fcall	___ftpack
  8261  0B87  0021               	movlb	1	; select bank1
  8262  0B88  0820               	movf	?___ftpack^(0+128),w
  8263  0B89  00AA               	movwf	?___ftmul^(0+128)
  8264  0B8A  0821               	movf	(?___ftpack+1)^(0+128),w
  8265  0B8B  00AB               	movwf	(?___ftmul+1)^(0+128)
  8266  0B8C  0822               	movf	(?___ftpack+2)^(0+128),w
  8267  0B8D  00AC               	movwf	(?___ftmul+2)^(0+128)
  8268  0B8E  0008               	return
  8269  0B8F                     __end_of___ftmul:	
  8270                           
  8271                           	psect	text26
  8272  1C52                     __ptext26:	
  8273 ;; *************** function ___ftge *****************
  8274 ;; Defined at:
  8275 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftge.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  ff1             3   42[BANK1 ] float 
  8278 ;;  ff2             3   45[BANK1 ] float 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;		None
  8281 ;; Return value:  Size  Location     Type
  8282 ;;		None               void
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8290 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;Total ram usage:        9 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    4
  8297 ;; This function calls:
  8298 ;;		Nothing
  8299 ;; This function is called by:
  8300 ;;		_UpdateFanLevel
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function ___ftge
  8306  1C52                     ___ftge:	
  8307                           
  8308                           ;incstack = 0
  8309                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8310  1C52  0021               	movlb	1	; select bank1
  8311  1C53  1FCC               	btfss	(___ftge@ff1+2)^(0+128),7
  8312  1C54  2C69               	goto	l6415
  8313  1C55  094A               	comf	___ftge@ff1^(0+128),w
  8314  1C56  00D0               	movwf	??___ftge^(0+128)
  8315  1C57  094B               	comf	(___ftge@ff1+1)^(0+128),w
  8316  1C58  00D1               	movwf	(??___ftge^(0+128)+1)
  8317  1C59  094C               	comf	(___ftge@ff1+2)^(0+128),w
  8318  1C5A  00D2               	movwf	(??___ftge^(0+128)+2)
  8319  1C5B  0AD0               	incf	??___ftge^(0+128),f
  8320  1C5C  1903               	skipnz
  8321  1C5D  0AD1               	incf	(??___ftge^(0+128)+1),f
  8322  1C5E  1903               	skipnz
  8323  1C5F  0AD2               	incf	(??___ftge^(0+128)+2),f
  8324  1C60  3000               	movlw	0
  8325  1C61  0750               	addwf	??___ftge^(0+128),w
  8326  1C62  00CA               	movwf	___ftge@ff1^(0+128)
  8327  1C63  3000               	movlw	0
  8328  1C64  3D51               	addwfc	(??___ftge+1)^(0+128),w
  8329  1C65  00CB               	movwf	(___ftge@ff1+1)^(0+128)
  8330  1C66  3080               	movlw	128
  8331  1C67  3D52               	addwfc	(??___ftge+2)^(0+128),w
  8332  1C68  00CC               	movwf	(___ftge@ff1+2)^(0+128)
  8333  1C69                     l6415:	
  8334  1C69  1FCF               	btfss	(___ftge@ff2+2)^(0+128),7
  8335  1C6A  2C7F               	goto	l6419
  8336  1C6B  094D               	comf	___ftge@ff2^(0+128),w
  8337  1C6C  00D0               	movwf	??___ftge^(0+128)
  8338  1C6D  094E               	comf	(___ftge@ff2+1)^(0+128),w
  8339  1C6E  00D1               	movwf	(??___ftge^(0+128)+1)
  8340  1C6F  094F               	comf	(___ftge@ff2+2)^(0+128),w
  8341  1C70  00D2               	movwf	(??___ftge^(0+128)+2)
  8342  1C71  0AD0               	incf	??___ftge^(0+128),f
  8343  1C72  1903               	skipnz
  8344  1C73  0AD1               	incf	(??___ftge^(0+128)+1),f
  8345  1C74  1903               	skipnz
  8346  1C75  0AD2               	incf	(??___ftge^(0+128)+2),f
  8347  1C76  3000               	movlw	0
  8348  1C77  0750               	addwf	??___ftge^(0+128),w
  8349  1C78  00CD               	movwf	___ftge@ff2^(0+128)
  8350  1C79  3000               	movlw	0
  8351  1C7A  3D51               	addwfc	(??___ftge+1)^(0+128),w
  8352  1C7B  00CE               	movwf	(___ftge@ff2+1)^(0+128)
  8353  1C7C  3080               	movlw	128
  8354  1C7D  3D52               	addwfc	(??___ftge+2)^(0+128),w
  8355  1C7E  00CF               	movwf	(___ftge@ff2+2)^(0+128)
  8356  1C7F                     l6419:	
  8357  1C7F  3080               	movlw	128
  8358  1C80  06CC               	xorwf	(___ftge@ff1+2)^(0+128),f
  8359  1C81  3080               	movlw	128
  8360  1C82  06CF               	xorwf	(___ftge@ff2+2)^(0+128),f
  8361  1C83  084F               	movf	(___ftge@ff2+2)^(0+128),w
  8362  1C84  024C               	subwf	(___ftge@ff1+2)^(0+128),w
  8363  1C85  1D03               	skipz
  8364  1C86  0008               	return
  8365  1C87  084E               	movf	(___ftge@ff2+1)^(0+128),w
  8366  1C88  024B               	subwf	(___ftge@ff1+1)^(0+128),w
  8367  1C89  1D03               	skipz
  8368  1C8A  0008               	return
  8369  1C8B  084D               	movf	___ftge@ff2^(0+128),w
  8370  1C8C  024A               	subwf	___ftge@ff1^(0+128),w
  8371  1C8D  0008               	return
  8372  1C8E                     __end_of___ftge:	
  8373                           
  8374                           	psect	text27
  8375  0C80                     __ptext27:	
  8376 ;; *************** function ___ftadd *****************
  8377 ;; Defined at:
  8378 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  f1              3   29[BANK1 ] float 
  8381 ;;  f2              3   32[BANK1 ] float 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  exp1            1   41[BANK1 ] unsigned char 
  8384 ;;  exp2            1   40[BANK1 ] unsigned char 
  8385 ;;  sign            1   39[BANK1 ] unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  3   29[BANK1 ] float 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0, pclath, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:       13 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    5
  8402 ;; This function calls:
  8403 ;;		___ftpack
  8404 ;; This function is called by:
  8405 ;;		_UpdateFanLevel
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           
  8410                           ;psect for function ___ftadd
  8411  0C80                     ___ftadd:	
  8412                           
  8413                           ;incstack = 0
  8414                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8415  0C80  0021               	movlb	1	; select bank1
  8416  0C81  083D               	movf	___ftadd@f1^(0+128),w
  8417  0C82  00C3               	movwf	??___ftadd^(0+128)
  8418  0C83  083E               	movf	(___ftadd@f1+1)^(0+128),w
  8419  0C84  00C4               	movwf	(??___ftadd^(0+128)+1)
  8420  0C85  083F               	movf	(___ftadd@f1+2)^(0+128),w
  8421  0C86  00C5               	movwf	(??___ftadd^(0+128)+2)
  8422  0C87  1003               	clrc
  8423  0C88  0D44               	rlf	(??___ftadd^(0+128)+1),w
  8424  0C89  0D45               	rlf	(??___ftadd^(0+128)+2),w
  8425  0C8A  00C6               	movwf	(??___ftadd+3)^(0+128)
  8426  0C8B  0846               	movf	(??___ftadd+3)^(0+128),w
  8427  0C8C  00C9               	movwf	___ftadd@exp1^(0+128)
  8428  0C8D  0840               	movf	___ftadd@f2^(0+128),w
  8429  0C8E  00C3               	movwf	??___ftadd^(0+128)
  8430  0C8F  0841               	movf	(___ftadd@f2+1)^(0+128),w
  8431  0C90  00C4               	movwf	(??___ftadd^(0+128)+1)
  8432  0C91  0842               	movf	(___ftadd@f2+2)^(0+128),w
  8433  0C92  00C5               	movwf	(??___ftadd^(0+128)+2)
  8434  0C93  1003               	clrc
  8435  0C94  0D44               	rlf	(??___ftadd^(0+128)+1),w
  8436  0C95  0D45               	rlf	(??___ftadd^(0+128)+2),w
  8437  0C96  00C6               	movwf	(??___ftadd+3)^(0+128)
  8438  0C97  0846               	movf	(??___ftadd+3)^(0+128),w
  8439  0C98  00C8               	movwf	___ftadd@exp2^(0+128)
  8440  0C99  0849               	movf	___ftadd@exp1^(0+128),w
  8441  0C9A  1903               	btfsc	3,2
  8442  0C9B  2CA8               	goto	l6347
  8443  0C9C  0848               	movf	___ftadd@exp2^(0+128),w
  8444  0C9D  0249               	subwf	___ftadd@exp1^(0+128),w
  8445  0C9E  1803               	skipnc
  8446  0C9F  2CAF               	goto	l6351
  8447  0CA0  0349               	decf	___ftadd@exp1^(0+128),w
  8448  0CA1  3AFF               	xorlw	255
  8449  0CA2  0748               	addwf	___ftadd@exp2^(0+128),w
  8450  0CA3  00C3               	movwf	??___ftadd^(0+128)
  8451  0CA4  3019               	movlw	25
  8452  0CA5  0243               	subwf	??___ftadd^(0+128),w
  8453  0CA6  1C03               	skipc
  8454  0CA7  2CAF               	goto	l6351
  8455  0CA8                     l6347:	
  8456  0CA8  0840               	movf	___ftadd@f2^(0+128),w
  8457  0CA9  00BD               	movwf	?___ftadd^(0+128)
  8458  0CAA  0841               	movf	(___ftadd@f2+1)^(0+128),w
  8459  0CAB  00BE               	movwf	(?___ftadd+1)^(0+128)
  8460  0CAC  0842               	movf	(___ftadd@f2+2)^(0+128),w
  8461  0CAD  00BF               	movwf	(?___ftadd+2)^(0+128)
  8462  0CAE  0008               	return
  8463  0CAF                     l6351:	
  8464  0CAF  0848               	movf	___ftadd@exp2^(0+128),w
  8465  0CB0  1903               	btfsc	3,2
  8466  0CB1  0008               	return
  8467  0CB2  0849               	movf	___ftadd@exp1^(0+128),w
  8468  0CB3  0248               	subwf	___ftadd@exp2^(0+128),w
  8469  0CB4  1803               	skipnc
  8470  0CB5  2CBE               	goto	l6357
  8471  0CB6  0348               	decf	___ftadd@exp2^(0+128),w
  8472  0CB7  3AFF               	xorlw	255
  8473  0CB8  0749               	addwf	___ftadd@exp1^(0+128),w
  8474  0CB9  00C3               	movwf	??___ftadd^(0+128)
  8475  0CBA  3019               	movlw	25
  8476  0CBB  0243               	subwf	??___ftadd^(0+128),w
  8477  0CBC  1803               	btfsc	3,0
  8478  0CBD  0008               	return
  8479  0CBE                     l6357:	
  8480  0CBE  3006               	movlw	6
  8481  0CBF  00C3               	movwf	??___ftadd^(0+128)
  8482  0CC0  0843               	movf	??___ftadd^(0+128),w
  8483  0CC1  00C7               	movwf	___ftadd@sign^(0+128)
  8484  0CC2  1BBF               	btfsc	(___ftadd@f1+2)^(0+128),7
  8485  0CC3  17C7               	bsf	___ftadd@sign^(0+128),7
  8486  0CC4  1BC2               	btfsc	(___ftadd@f2+2)^(0+128),7
  8487  0CC5  1747               	bsf	___ftadd@sign^(0+128),6
  8488  0CC6  17BE               	bsf	(___ftadd@f1^(0+128)+1),7
  8489  0CC7  30FF               	movlw	255
  8490  0CC8  05BD               	andwf	___ftadd@f1^(0+128),f
  8491  0CC9  30FF               	movlw	255
  8492  0CCA  05BE               	andwf	(___ftadd@f1+1)^(0+128),f
  8493  0CCB  3000               	movlw	0
  8494  0CCC  05BF               	andwf	(___ftadd@f1+2)^(0+128),f
  8495  0CCD  17C1               	bsf	(___ftadd@f2^(0+128)+1),7
  8496  0CCE  30FF               	movlw	255
  8497  0CCF  05C0               	andwf	___ftadd@f2^(0+128),f
  8498  0CD0  30FF               	movlw	255
  8499  0CD1  05C1               	andwf	(___ftadd@f2+1)^(0+128),f
  8500  0CD2  3000               	movlw	0
  8501  0CD3  05C2               	andwf	(___ftadd@f2+2)^(0+128),f
  8502  0CD4  0848               	movf	___ftadd@exp2^(0+128),w
  8503  0CD5  0249               	subwf	___ftadd@exp1^(0+128),w
  8504  0CD6  1803               	skipnc
  8505  0CD7  2CFA               	goto	l6379
  8506  0CD8                     l6369:	
  8507  0CD8  3001               	movlw	1
  8508  0CD9                     u5905:	
  8509  0CD9  35C0               	lslf	___ftadd@f2^(0+128),f
  8510  0CDA  0DC1               	rlf	(___ftadd@f2+1)^(0+128),f
  8511  0CDB  0DC2               	rlf	(___ftadd@f2+2)^(0+128),f
  8512  0CDC  0B89               	decfsz	9,f
  8513  0CDD  2CD9               	goto	u5905
  8514  0CDE  3001               	movlw	1
  8515  0CDF  02C8               	subwf	___ftadd@exp2^(0+128),f
  8516  0CE0  0848               	movf	___ftadd@exp2^(0+128),w
  8517  0CE1  0649               	xorwf	___ftadd@exp1^(0+128),w
  8518  0CE2  1903               	skipnz
  8519  0CE3  2CF5               	goto	l6377
  8520  0CE4  3001               	movlw	1
  8521  0CE5  02C7               	subwf	___ftadd@sign^(0+128),f
  8522  0CE6  0847               	movf	___ftadd@sign^(0+128),w
  8523  0CE7  3907               	andlw	7
  8524  0CE8  1903               	btfsc	3,2
  8525  0CE9  2CF5               	goto	l6377
  8526  0CEA  2CD8               	goto	l6369
  8527  0CEB                     l6375:	
  8528  0CEB  3001               	movlw	1
  8529  0CEC                     u5935:	
  8530  0CEC  36BF               	lsrf	(___ftadd@f1+2)^(0+128),f
  8531  0CED  0CBE               	rrf	(___ftadd@f1+1)^(0+128),f
  8532  0CEE  0CBD               	rrf	___ftadd@f1^(0+128),f
  8533  0CEF  0B89               	decfsz	9,f
  8534  0CF0  2CEC               	goto	u5935
  8535  0CF1  3001               	movlw	1
  8536  0CF2  00C3               	movwf	??___ftadd^(0+128)
  8537  0CF3  0843               	movf	??___ftadd^(0+128),w
  8538  0CF4  07C9               	addwf	___ftadd@exp1^(0+128),f
  8539  0CF5                     l6377:	
  8540  0CF5  0849               	movf	___ftadd@exp1^(0+128),w
  8541  0CF6  0648               	xorwf	___ftadd@exp2^(0+128),w
  8542  0CF7  1903               	btfsc	3,2
  8543  0CF8  2D1F               	goto	l1112
  8544  0CF9  2CEB               	goto	l6375
  8545  0CFA                     l6379:	
  8546  0CFA  0849               	movf	___ftadd@exp1^(0+128),w
  8547  0CFB  0248               	subwf	___ftadd@exp2^(0+128),w
  8548  0CFC  1803               	skipnc
  8549  0CFD  2D1F               	goto	l1112
  8550  0CFE                     l6381:	
  8551  0CFE  3001               	movlw	1
  8552  0CFF                     u5965:	
  8553  0CFF  35BD               	lslf	___ftadd@f1^(0+128),f
  8554  0D00  0DBE               	rlf	(___ftadd@f1+1)^(0+128),f
  8555  0D01  0DBF               	rlf	(___ftadd@f1+2)^(0+128),f
  8556  0D02  0B89               	decfsz	9,f
  8557  0D03  2CFF               	goto	u5965
  8558  0D04  3001               	movlw	1
  8559  0D05  02C9               	subwf	___ftadd@exp1^(0+128),f
  8560  0D06  0848               	movf	___ftadd@exp2^(0+128),w
  8561  0D07  0649               	xorwf	___ftadd@exp1^(0+128),w
  8562  0D08  1903               	skipnz
  8563  0D09  2D1B               	goto	l6389
  8564  0D0A  3001               	movlw	1
  8565  0D0B  02C7               	subwf	___ftadd@sign^(0+128),f
  8566  0D0C  0847               	movf	___ftadd@sign^(0+128),w
  8567  0D0D  3907               	andlw	7
  8568  0D0E  1903               	btfsc	3,2
  8569  0D0F  2D1B               	goto	l6389
  8570  0D10  2CFE               	goto	l6381
  8571  0D11                     l6387:	
  8572  0D11  3001               	movlw	1
  8573  0D12                     u5995:	
  8574  0D12  36C2               	lsrf	(___ftadd@f2+2)^(0+128),f
  8575  0D13  0CC1               	rrf	(___ftadd@f2+1)^(0+128),f
  8576  0D14  0CC0               	rrf	___ftadd@f2^(0+128),f
  8577  0D15  0B89               	decfsz	9,f
  8578  0D16  2D12               	goto	u5995
  8579  0D17  3001               	movlw	1
  8580  0D18  00C3               	movwf	??___ftadd^(0+128)
  8581  0D19  0843               	movf	??___ftadd^(0+128),w
  8582  0D1A  07C8               	addwf	___ftadd@exp2^(0+128),f
  8583  0D1B                     l6389:	
  8584  0D1B  0849               	movf	___ftadd@exp1^(0+128),w
  8585  0D1C  0648               	xorwf	___ftadd@exp2^(0+128),w
  8586  0D1D  1D03               	skipz
  8587  0D1E  2D11               	goto	l6387
  8588  0D1F                     l1112:	
  8589  0D1F  1FC7               	btfss	___ftadd@sign^(0+128),7
  8590  0D20  2D31               	goto	l6393
  8591  0D21  30FF               	movlw	255
  8592  0D22  06BD               	xorwf	___ftadd@f1^(0+128),f
  8593  0D23  30FF               	movlw	255
  8594  0D24  06BE               	xorwf	(___ftadd@f1+1)^(0+128),f
  8595  0D25  30FF               	movlw	255
  8596  0D26  06BF               	xorwf	(___ftadd@f1+2)^(0+128),f
  8597  0D27  3001               	movlw	1
  8598  0D28  07BD               	addwf	___ftadd@f1^(0+128),f
  8599  0D29  3000               	movlw	0
  8600  0D2A  1803               	skipnc
  8601  0D2B  3001               	movlw	1
  8602  0D2C  07BE               	addwf	(___ftadd@f1+1)^(0+128),f
  8603  0D2D  3000               	movlw	0
  8604  0D2E  1803               	skipnc
  8605  0D2F  3001               	movlw	1
  8606  0D30  07BF               	addwf	(___ftadd@f1+2)^(0+128),f
  8607  0D31                     l6393:	
  8608  0D31  1F47               	btfss	___ftadd@sign^(0+128),6
  8609  0D32  2D43               	goto	l6397
  8610  0D33  30FF               	movlw	255
  8611  0D34  06C0               	xorwf	___ftadd@f2^(0+128),f
  8612  0D35  30FF               	movlw	255
  8613  0D36  06C1               	xorwf	(___ftadd@f2+1)^(0+128),f
  8614  0D37  30FF               	movlw	255
  8615  0D38  06C2               	xorwf	(___ftadd@f2+2)^(0+128),f
  8616  0D39  3001               	movlw	1
  8617  0D3A  07C0               	addwf	___ftadd@f2^(0+128),f
  8618  0D3B  3000               	movlw	0
  8619  0D3C  1803               	skipnc
  8620  0D3D  3001               	movlw	1
  8621  0D3E  07C1               	addwf	(___ftadd@f2+1)^(0+128),f
  8622  0D3F  3000               	movlw	0
  8623  0D40  1803               	skipnc
  8624  0D41  3001               	movlw	1
  8625  0D42  07C2               	addwf	(___ftadd@f2+2)^(0+128),f
  8626  0D43                     l6397:	
  8627  0D43  01C7               	clrf	___ftadd@sign^(0+128)
  8628  0D44  083D               	movf	___ftadd@f1^(0+128),w
  8629  0D45  07C0               	addwf	___ftadd@f2^(0+128),f
  8630  0D46  083E               	movf	(___ftadd@f1+1)^(0+128),w
  8631  0D47  3DC1               	addwfc	(___ftadd@f2+1)^(0+128),f
  8632  0D48  083F               	movf	(___ftadd@f1+2)^(0+128),w
  8633  0D49  3DC2               	addwfc	(___ftadd@f2+2)^(0+128),f
  8634  0D4A  1FC2               	btfss	(___ftadd@f2+2)^(0+128),7
  8635  0D4B  2D5E               	goto	l6407
  8636  0D4C  30FF               	movlw	255
  8637  0D4D  06C0               	xorwf	___ftadd@f2^(0+128),f
  8638  0D4E  30FF               	movlw	255
  8639  0D4F  06C1               	xorwf	(___ftadd@f2+1)^(0+128),f
  8640  0D50  30FF               	movlw	255
  8641  0D51  06C2               	xorwf	(___ftadd@f2+2)^(0+128),f
  8642  0D52  3001               	movlw	1
  8643  0D53  07C0               	addwf	___ftadd@f2^(0+128),f
  8644  0D54  3000               	movlw	0
  8645  0D55  1803               	skipnc
  8646  0D56  3001               	movlw	1
  8647  0D57  07C1               	addwf	(___ftadd@f2+1)^(0+128),f
  8648  0D58  3000               	movlw	0
  8649  0D59  1803               	skipnc
  8650  0D5A  3001               	movlw	1
  8651  0D5B  07C2               	addwf	(___ftadd@f2+2)^(0+128),f
  8652  0D5C  01C7               	clrf	___ftadd@sign^(0+128)
  8653  0D5D  0AC7               	incf	___ftadd@sign^(0+128),f
  8654  0D5E                     l6407:	
  8655  0D5E  0840               	movf	___ftadd@f2^(0+128),w
  8656  0D5F  00A0               	movwf	?___ftpack^(0+128)
  8657  0D60  0841               	movf	(___ftadd@f2+1)^(0+128),w
  8658  0D61  00A1               	movwf	(?___ftpack+1)^(0+128)
  8659  0D62  0842               	movf	(___ftadd@f2+2)^(0+128),w
  8660  0D63  00A2               	movwf	(?___ftpack+2)^(0+128)
  8661  0D64  0849               	movf	___ftadd@exp1^(0+128),w
  8662  0D65  00C3               	movwf	??___ftadd^(0+128)
  8663  0D66  0843               	movf	??___ftadd^(0+128),w
  8664  0D67  00A3               	movwf	(?___ftpack^(0+128)+3)
  8665  0D68  0847               	movf	___ftadd@sign^(0+128),w
  8666  0D69  00C4               	movwf	(??___ftadd+1)^(0+128)
  8667  0D6A  0844               	movf	(??___ftadd+1)^(0+128),w
  8668  0D6B  00A4               	movwf	(?___ftpack^(0+128)+4)
  8669  0D6C  3190  2029         	fcall	___ftpack
  8670  0D6E  0021               	movlb	1	; select bank1
  8671  0D6F  0820               	movf	?___ftpack^(0+128),w
  8672  0D70  00BD               	movwf	?___ftadd^(0+128)
  8673  0D71  0821               	movf	(?___ftpack+1)^(0+128),w
  8674  0D72  00BE               	movwf	(?___ftadd+1)^(0+128)
  8675  0D73  0822               	movf	(?___ftpack+2)^(0+128),w
  8676  0D74  00BF               	movwf	(?___ftadd+2)^(0+128)
  8677  0D75  0008               	return
  8678  0D76                     __end_of___ftadd:	
  8679                           
  8680                           	psect	text28
  8681  1B97                     __ptext28:	
  8682 ;; *************** function ___awtoft *****************
  8683 ;; Defined at:
  8684 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awtoft.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  c               2    5[BANK1 ] int 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  sign            1   17[BANK0 ] unsigned char 
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  3    5[BANK1 ] float 
  8691 ;; Registers used:
  8692 ;;		wreg, status,2, status,0, pclath, cstack
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8698 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;Total ram usage:        6 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    5
  8705 ;; This function calls:
  8706 ;;		___ftpack
  8707 ;; This function is called by:
  8708 ;;		_UpdateFanLevel
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           
  8713                           ;psect for function ___awtoft
  8714  1B97                     ___awtoft:	
  8715                           
  8716                           ;incstack = 0
  8717                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8718  1B97  0020               	movlb	0	; select bank0
  8719  1B98  01E1               	clrf	___awtoft@sign
  8720  1B99  0021               	movlb	1	; select bank1
  8721  1B9A  1FA6               	btfss	(___awtoft@c+1)^(0+128),7
  8722  1B9B  2BA4               	goto	l6319
  8723  1B9C  09A5               	comf	___awtoft@c^(0+128),f
  8724  1B9D  09A6               	comf	(___awtoft@c+1)^(0+128),f
  8725  1B9E  0AA5               	incf	___awtoft@c^(0+128),f
  8726  1B9F  1903               	skipnz
  8727  1BA0  0AA6               	incf	(___awtoft@c+1)^(0+128),f
  8728  1BA1  0020               	movlb	0	; select bank0
  8729  1BA2  01E1               	clrf	___awtoft@sign
  8730  1BA3  0AE1               	incf	___awtoft@sign,f
  8731  1BA4                     l6319:	
  8732  1BA4  0021               	movlb	1	; select bank1
  8733  1BA5  0825               	movf	___awtoft@c^(0+128),w
  8734  1BA6  00A0               	movwf	?___ftpack^(0+128)
  8735  1BA7  0826               	movf	(___awtoft@c+1)^(0+128),w
  8736  1BA8  00A1               	movwf	(?___ftpack+1)^(0+128)
  8737  1BA9  01A2               	clrf	(?___ftpack+2)^(0+128)
  8738  1BAA  308E               	movlw	142
  8739  1BAB  00A8               	movwf	??___awtoft^(0+128)
  8740  1BAC  0828               	movf	??___awtoft^(0+128),w
  8741  1BAD  00A3               	movwf	(?___ftpack^(0+128)+3)
  8742  1BAE  0020               	movlb	0	; select bank0
  8743  1BAF  0861               	movf	___awtoft@sign,w
  8744  1BB0  0021               	movlb	1	; select bank1
  8745  1BB1  00A9               	movwf	(??___awtoft+1)^(0+128)
  8746  1BB2  0829               	movf	(??___awtoft+1)^(0+128),w
  8747  1BB3  00A4               	movwf	(?___ftpack^(0+128)+4)
  8748  1BB4  3190  2029         	fcall	___ftpack
  8749  1BB6  0021               	movlb	1	; select bank1
  8750  1BB7  0820               	movf	?___ftpack^(0+128),w
  8751  1BB8  00A5               	movwf	?___awtoft^(0+128)
  8752  1BB9  0821               	movf	(?___ftpack+1)^(0+128),w
  8753  1BBA  00A6               	movwf	(?___awtoft+1)^(0+128)
  8754  1BBB  0822               	movf	(?___ftpack+2)^(0+128),w
  8755  1BBC  00A7               	movwf	(?___awtoft+2)^(0+128)
  8756  1BBD  0008               	return
  8757  1BBE                     __end_of___awtoft:	
  8758                           
  8759                           	psect	text29
  8760  1029                     __ptext29:	
  8761 ;; *************** function ___ftpack *****************
  8762 ;; Defined at:
  8763 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  arg             3    0[BANK1 ] unsigned um
  8766 ;;  exp             1    3[BANK1 ] unsigned char 
  8767 ;;  sign            1    4[BANK1 ] unsigned char 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  3    0[BANK1 ] float 
  8772 ;; Registers used:
  8773 ;;		wreg, status,2, status,0
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8779 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;Total ram usage:        8 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    4
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		___awtoft
  8790 ;;		___ftadd
  8791 ;;		___ftmul
  8792 ;;		___lbtoft
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function ___ftpack
  8798  1029                     ___ftpack:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8802  1029  0021               	movlb	1	; select bank1
  8803  102A  0823               	movf	___ftpack@exp^(0+128),w
  8804  102B  1903               	btfsc	3,2
  8805  102C  2832               	goto	l6241
  8806  102D  0822               	movf	(___ftpack@arg+2)^(0+128),w
  8807  102E  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  8808  102F  0420               	iorwf	___ftpack@arg^(0+128),w
  8809  1030  1D03               	skipz
  8810  1031  2845               	goto	l6247
  8811  1032                     l6241:	
  8812  1032  3000               	movlw	0
  8813  1033  00A0               	movwf	?___ftpack^(0+128)
  8814  1034  3000               	movlw	0
  8815  1035  00A1               	movwf	(?___ftpack+1)^(0+128)
  8816  1036  3000               	movlw	0
  8817  1037  00A2               	movwf	(?___ftpack+2)^(0+128)
  8818  1038  0008               	return
  8819  1039                     l6245:	
  8820  1039  3001               	movlw	1
  8821  103A  0020               	movlb	0	; select bank0
  8822  103B  00DE               	movwf	??___ftpack
  8823  103C  085E               	movf	??___ftpack,w
  8824  103D  0021               	movlb	1	; select bank1
  8825  103E  07A3               	addwf	___ftpack@exp^(0+128),f
  8826  103F  3001               	movlw	1
  8827  1040                     u5595:	
  8828  1040  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  8829  1041  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  8830  1042  0CA0               	rrf	___ftpack@arg^(0+128),f
  8831  1043  0B89               	decfsz	9,f
  8832  1044  2840               	goto	u5595
  8833  1045                     l6247:	
  8834  1045  30FE               	movlw	254
  8835  1046  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  8836  1047  1903               	btfsc	3,2
  8837  1048  2860               	goto	l1083
  8838  1049  2839               	goto	l6245
  8839  104A                     l6249:	
  8840  104A  3001               	movlw	1
  8841  104B  0020               	movlb	0	; select bank0
  8842  104C  00DE               	movwf	??___ftpack
  8843  104D  085E               	movf	??___ftpack,w
  8844  104E  0021               	movlb	1	; select bank1
  8845  104F  07A3               	addwf	___ftpack@exp^(0+128),f
  8846  1050  3001               	movlw	1
  8847  1051  07A0               	addwf	___ftpack@arg^(0+128),f
  8848  1052  3000               	movlw	0
  8849  1053  1803               	skipnc
  8850  1054  3001               	movlw	1
  8851  1055  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  8852  1056  3000               	movlw	0
  8853  1057  1803               	skipnc
  8854  1058  3001               	movlw	1
  8855  1059  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  8856  105A  3001               	movlw	1
  8857  105B                     u5615:	
  8858  105B  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  8859  105C  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  8860  105D  0CA0               	rrf	___ftpack@arg^(0+128),f
  8861  105E  0B89               	decfsz	9,f
  8862  105F  285B               	goto	u5615
  8863  1060                     l1083:	
  8864  1060  30FF               	movlw	255
  8865  1061  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  8866  1062  1903               	btfsc	3,2
  8867  1063  286D               	goto	l6257
  8868  1064  284A               	goto	l6249
  8869  1065                     l6255:	
  8870  1065  3001               	movlw	1
  8871  1066  02A3               	subwf	___ftpack@exp^(0+128),f
  8872  1067  3001               	movlw	1
  8873  1068                     u5635:	
  8874  1068  35A0               	lslf	___ftpack@arg^(0+128),f
  8875  1069  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  8876  106A  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  8877  106B  0B89               	decfsz	9,f
  8878  106C  2868               	goto	u5635
  8879  106D                     l6257:	
  8880  106D  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  8881  106E  2865               	goto	l6255
  8882  106F  1823               	btfsc	___ftpack@exp^(0+128),0
  8883  1070  2877               	goto	l1089
  8884  1071  30FF               	movlw	255
  8885  1072  05A0               	andwf	___ftpack@arg^(0+128),f
  8886  1073  307F               	movlw	127
  8887  1074  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  8888  1075  30FF               	movlw	255
  8889  1076  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  8890  1077                     l1089:	
  8891  1077  1003               	clrc
  8892  1078  0CA3               	rrf	___ftpack@exp^(0+128),f
  8893  1079  0823               	movf	___ftpack@exp^(0+128),w
  8894  107A  0020               	movlb	0	; select bank0
  8895  107B  00DE               	movwf	??___ftpack
  8896  107C  01DF               	clrf	??___ftpack+1
  8897  107D  01E0               	clrf	??___ftpack+2
  8898  107E  3010               	movlw	16
  8899  107F                     u5665:	
  8900  107F  35DE               	lslf	??___ftpack,f
  8901  1080  0DDF               	rlf	??___ftpack+1,f
  8902  1081  0DE0               	rlf	??___ftpack+2,f
  8903  1082  0B89               	decfsz	9,f
  8904  1083  287F               	goto	u5665
  8905  1084  085E               	movf	??___ftpack,w
  8906  1085  0021               	movlb	1	; select bank1
  8907  1086  04A0               	iorwf	___ftpack@arg^(0+128),f
  8908  1087  0020               	movlb	0	; select bank0
  8909  1088  085F               	movf	??___ftpack+1,w
  8910  1089  0021               	movlb	1	; select bank1
  8911  108A  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  8912  108B  0020               	movlb	0	; select bank0
  8913  108C  0860               	movf	??___ftpack+2,w
  8914  108D  0021               	movlb	1	; select bank1
  8915  108E  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  8916  108F  0824               	movf	___ftpack@sign^(0+128),w
  8917  1090  1903               	btfsc	3,2
  8918  1091  0008               	return
  8919  1092  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  8920  1093  0008               	return
  8921  1094                     __end_of___ftpack:	
  8922                           
  8923                           	psect	text30
  8924  0B8F                     __ptext30:	
  8925 ;; *************** function _USBDeviceTasks *****************
  8926 ;; Defined at:
  8927 ;;		line 669 in file "../USB/usb_device.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  i               1   31[BANK1 ] unsigned char 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;		None               void
  8934 ;; Registers used:
  8935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;Total ram usage:        3 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:   12
  8948 ;; This function calls:
  8949 ;;		_USBDeviceInit
  8950 ;;		_USBWakeFromSuspend
  8951 ;;		_USBSuspend
  8952 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8953 ;;		_USBCtrlEPAllowStatusStage
  8954 ;;		_USBStallHandler
  8955 ;;		_USBCtrlEPService
  8956 ;; This function is called by:
  8957 ;;		_main
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           
  8962                           ;psect for function _USBDeviceTasks
  8963  0B8F                     _USBDeviceTasks:	
  8964                           
  8965                           ;usb_device.c: 735: }
  8966                           ;usb_device.c: 757: if(USBDeviceState == DETACHED_STATE)
  8967                           
  8968                           ;usb_device.c: 734: return;
  8969                           
  8970                           ;usb_device.c: 733: PIR2bits.USBIF = 0;;
  8971                           
  8972                           ;usb_device.c: 705: USBDeviceState = DETACHED_STATE;
  8973                           
  8974                           ;usb_device.c: 702: UIE = 0;
  8975                           
  8976                           ;usb_device.c: 697: {
  8977                           ;usb_device.c: 699: UCON = 0;
  8978                           
  8979                           ;usb_device.c: 670: BYTE i;
  8980                           ;usb_device.c: 696: if (1 != 1)
  8981                           
  8982                           ;incstack = 0
  8983                           ; Regs used in _USBDeviceTasks: [allreg]
  8984  0B8F  0021               	movlb	1	; select bank1
  8985  0B90  08E6               	movf	_USBDeviceState^(0+128),f
  8986  0B91  1D03               	skipz
  8987  0B92  2BA3               	goto	l6859
  8988                           
  8989                           ;usb_device.c: 758: {
  8990                           ;usb_device.c: 760: UCON = 0;
  8991  0B93  003D               	movlb	29	; select bank29
  8992  0B94  018E               	clrf	14	;volatile
  8993                           
  8994                           ;usb_device.c: 763: UIE = 0;
  8995  0B95  0192               	clrf	18	;volatile
  8996                           
  8997                           ;usb_device.c: 767: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8998  0B96  3016               	movlw	22
  8999  0B97  0091               	movwf	17	;volatile
  9000  0B98  309F               	movlw	159
  9001  0B99  0097               	movwf	23	;volatile
  9002  0B9A  307B               	movlw	123
  9003  0B9B  0092               	movwf	18	;volatile
  9004  0B9C                     l140:	
  9005                           ;usb_device.c: 770: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9006                           
  9007  0B9C  198E               	btfsc	14,3	;volatile
  9008  0B9D  2BA0               	goto	l142
  9009  0B9E  158E               	bsf	14,3	;volatile
  9010  0B9F  2B9C               	goto	l140
  9011  0BA0                     l142:	
  9012                           
  9013                           ;usb_device.c: 773: USBDeviceState = ATTACHED_STATE;
  9014  0BA0  0021               	movlb	1	; select bank1
  9015  0BA1  01E6               	clrf	_USBDeviceState^(0+128)
  9016  0BA2  0AE6               	incf	_USBDeviceState^(0+128),f
  9017  0BA3                     l6859:	
  9018                           
  9019                           ;usb_device.c: 778: }
  9020                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  9021  0BA3  0866               	movf	_USBDeviceState^(0+128),w
  9022  0BA4  3A01               	xorlw	1
  9023  0BA5  1D03               	skipz
  9024  0BA6  2BB3               	goto	l6871
  9025                           
  9026                           ;usb_device.c: 782: {
  9027                           ;usb_device.c: 792: if(!UCONbits.SE0)
  9028  0BA7  003D               	movlb	29	; select bank29
  9029  0BA8  1A8E               	btfsc	14,5	;volatile
  9030  0BA9  2BB3               	goto	l6871
  9031                           
  9032                           ;usb_device.c: 793: {
  9033                           ;usb_device.c: 794: UIR = 0;;
  9034  0BAA  0190               	clrf	16	;volatile
  9035                           
  9036                           ;usb_device.c: 796: UIE=0;
  9037  0BAB  0192               	clrf	18	;volatile
  9038                           
  9039                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  9040  0BAC  1412               	bsf	18,0	;volatile
  9041                           
  9042                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  9043  0BAD  1612               	bsf	18,4	;volatile
  9044                           
  9045                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  9046  0BAE  3002               	movlw	2
  9047  0BAF  0021               	movlb	1	; select bank1
  9048  0BB0  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9049  0BB1  083D               	movf	??_USBDeviceTasks^(0+128),w
  9050  0BB2  00E6               	movwf	_USBDeviceState^(0+128)
  9051  0BB3                     l6871:	
  9052                           
  9053                           ;usb_device.c: 801: }
  9054                           ;usb_device.c: 802: }
  9055                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9056  0BB3  003D               	movlb	29	; select bank29
  9057  0BB4  1910               	btfsc	16,2	;volatile
  9058  0BB5  1D12               	btfss	18,2	;volatile
  9059  0BB6  2BC0               	goto	l6879
  9060                           
  9061                           ;usb_device.c: 819: {
  9062                           ;usb_device.c: 820: (UIR &= 0xFB);
  9063  0BB7  30FB               	movlw	251
  9064  0BB8  0021               	movlb	1	; select bank1
  9065  0BB9  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9066  0BBA  083D               	movf	??_USBDeviceTasks^(0+128),w
  9067  0BBB  003D               	movlb	29	; select bank29
  9068  0BBC  0590               	andwf	16,f	;volatile
  9069                           
  9070                           ;usb_device.c: 824: USBWakeFromSuspend();
  9071  0BBD  3188  20AF  318B   	fcall	_USBWakeFromSuspend
  9072  0BC0                     l6879:	
  9073                           
  9074                           ;usb_device.c: 826: }
  9075                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  9076  0BC0  003D               	movlb	29	; select bank29
  9077  0BC1  1C8E               	btfss	14,1	;volatile
  9078  0BC2  2BC6               	goto	l146
  9079                           
  9080                           ;usb_device.c: 832: {
  9081                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  9082  0BC3  0020               	movlb	0	; select bank0
  9083  0BC4  1112               	bcf	18,2	;volatile
  9084                           
  9085                           ;usb_device.c: 834: return;
  9086  0BC5  0008               	return
  9087  0BC6                     l146:	
  9088                           
  9089                           ;usb_device.c: 835: }
  9090                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  9091  0BC6  1810               	btfsc	16,0	;volatile
  9092  0BC7  1C12               	btfss	18,0	;volatile
  9093  0BC8  2BD6               	goto	l6891
  9094                           
  9095                           ;usb_device.c: 848: {
  9096                           ;usb_device.c: 849: USBDeviceInit();
  9097  0BC9  3188  20C7  318B   	fcall	_USBDeviceInit
  9098                           
  9099                           ;usb_device.c: 853: ;
  9100                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  9101  0BCC  3004               	movlw	4
  9102  0BCD  0021               	movlb	1	; select bank1
  9103  0BCE  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9104  0BCF  083D               	movf	??_USBDeviceTasks^(0+128),w
  9105  0BD0  00E6               	movwf	_USBDeviceState^(0+128)
  9106                           
  9107                           ;usb_device.c: 865: (UIR &= 0xFE);
  9108  0BD1  30FE               	movlw	254
  9109  0BD2  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9110  0BD3  083D               	movf	??_USBDeviceTasks^(0+128),w
  9111  0BD4  003D               	movlb	29	; select bank29
  9112  0BD5  0590               	andwf	16,f	;volatile
  9113  0BD6                     l6891:	
  9114                           
  9115                           ;usb_device.c: 866: }
  9116                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  9117  0BD6  1A10               	btfsc	16,4	;volatile
  9118  0BD7  1E12               	btfss	18,4	;volatile
  9119  0BD8  2BE2               	goto	l6899
  9120                           
  9121                           ;usb_device.c: 872: {
  9122                           ;usb_device.c: 877: USBSuspend();
  9123  0BD9  319A  2273  318B   	fcall	_USBSuspend
  9124                           
  9125                           ;usb_device.c: 880: (UIR &= 0xEF);
  9126  0BDC  30EF               	movlw	239
  9127  0BDD  0021               	movlb	1	; select bank1
  9128  0BDE  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9129  0BDF  083D               	movf	??_USBDeviceTasks^(0+128),w
  9130  0BE0  003D               	movlb	29	; select bank29
  9131  0BE1  0590               	andwf	16,f	;volatile
  9132  0BE2                     l6899:	
  9133                           
  9134                           ;usb_device.c: 881: }
  9135                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  9136  0BE2  1F10               	btfss	16,6	;volatile
  9137  0BE3  2C05               	goto	l6915
  9138                           
  9139                           ;usb_device.c: 884: {
  9140                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  9141  0BE4  1F12               	btfss	18,6	;volatile
  9142  0BE5  2BF3               	goto	l6905
  9143                           
  9144                           ;usb_device.c: 886: {
  9145                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  9146  0BE6  3073               	movlw	115
  9147  0BE7  0021               	movlb	1	; select bank1
  9148  0BE8  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9149  0BE9  3000               	movlw	0
  9150  0BEA  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9151  0BEB  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9152  0BEC  3001               	movlw	1
  9153  0BED  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
  9154  0BEE  3000               	movlw	0
  9155  0BEF  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9156  0BF0  319C  248E  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9157  0BF3                     l6905:	
  9158                           
  9159                           ;usb_device.c: 888: }
  9160                           ;usb_device.c: 889: (UIR &= 0xBF);
  9161  0BF3  30BF               	movlw	191
  9162  0BF4  0021               	movlb	1	; select bank1
  9163  0BF5  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9164  0BF6  083D               	movf	??_USBDeviceTasks^(0+128),w
  9165  0BF7  003D               	movlb	29	; select bank29
  9166  0BF8  0590               	andwf	16,f	;volatile
  9167                           
  9168                           ;usb_device.c: 914: if(USBStatusStageTimeoutCounter != 0u)
  9169  0BF9  0022               	movlb	2	; select bank2
  9170  0BFA  086A               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  9171  0BFB  1903               	btfsc	3,2
  9172  0BFC  2BFF               	goto	l6911
  9173                           
  9174                           ;usb_device.c: 915: {
  9175                           ;usb_device.c: 916: USBStatusStageTimeoutCounter--;
  9176  0BFD  3001               	movlw	1
  9177  0BFE  02EA               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  9178  0BFF                     l6911:	
  9179                           
  9180                           ;usb_device.c: 917: }
  9181                           ;usb_device.c: 923: if(USBStatusStageTimeoutCounter == 0)
  9182  0BFF  08EA               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  9183  0C00  1D03               	skipz
  9184  0C01  2C05               	goto	l6915
  9185                           
  9186                           ;usb_device.c: 924: {
  9187                           ;usb_device.c: 925: USBCtrlEPAllowStatusStage();
  9188  0C02  3190  2094  318B   	fcall	_USBCtrlEPAllowStatusStage
  9189  0C05                     l6915:	
  9190                           
  9191                           ;usb_device.c: 926: }
  9192                           ;usb_device.c: 928: }
  9193                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  9194  0C05  003D               	movlb	29	; select bank29
  9195  0C06  1A90               	btfsc	16,5	;volatile
  9196  0C07  1E92               	btfss	18,5	;volatile
  9197  0C08  2C0C               	goto	l6921
  9198                           
  9199                           ;usb_device.c: 931: {
  9200                           ;usb_device.c: 932: USBStallHandler();
  9201  0C09  319B  2372  318B   	fcall	_USBStallHandler
  9202  0C0C                     l6921:	
  9203                           
  9204                           ;usb_device.c: 933: }
  9205                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  9206  0C0C  003D               	movlb	29	; select bank29
  9207  0C0D  1890               	btfsc	16,1	;volatile
  9208  0C0E  1C92               	btfss	18,1	;volatile
  9209  0C0F  2C1F               	goto	l6929
  9210                           
  9211                           ;usb_device.c: 936: {
  9212                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  9213  0C10  30FF               	movlw	255
  9214  0C11  0021               	movlb	1	; select bank1
  9215  0C12  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9216  0C13  307F               	movlw	127
  9217  0C14  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9218  0C15  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9219  0C16  3001               	movlw	1
  9220  0C17  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
  9221  0C18  3000               	movlw	0
  9222  0C19  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9223  0C1A  319C  248E  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9224                           
  9225                           ;usb_device.c: 938: UEIR = 0;;
  9226  0C1D  003D               	movlb	29	; select bank29
  9227  0C1E  0193               	clrf	19	;volatile
  9228  0C1F                     l6929:	
  9229                           
  9230                           ;usb_device.c: 946: }
  9231                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  9232  0C1F  3004               	movlw	4
  9233  0C20  0021               	movlb	1	; select bank1
  9234  0C21  0266               	subwf	_USBDeviceState^(0+128),w
  9235  0C22  1803               	skipnc
  9236  0C23  2C27               	goto	l155
  9237                           
  9238                           ;usb_device.c: 954: {
  9239                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  9240  0C24  0020               	movlb	0	; select bank0
  9241  0C25  1112               	bcf	18,2	;volatile
  9242                           
  9243                           ;usb_device.c: 956: return;
  9244  0C26  0008               	return
  9245  0C27                     l155:	
  9246                           
  9247                           ;usb_device.c: 957: }
  9248                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  9249  0C27  003D               	movlb	29	; select bank29
  9250  0C28  1D92               	btfss	18,3	;volatile
  9251  0C29  2C7D               	goto	l156
  9252                           
  9253                           ;usb_device.c: 963: {
  9254                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  9255  0C2A  0021               	movlb	1	; select bank1
  9256  0C2B  01BF               	clrf	USBDeviceTasks@i^(0+128)
  9257  0C2C  2C76               	goto	L10
  9258  0C2D                     l6939:	
  9259                           
  9260                           ;usb_device.c: 967: {
  9261                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  9262  0C2D  080F               	movf	15,w	;volatile
  9263  0C2E  0021               	movlb	1	; select bank1
  9264  0C2F  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9265  0C30  083D               	movf	??_USBDeviceTasks^(0+128),w
  9266  0C31  00EE               	movwf	_USTATcopy^(0+128)
  9267                           
  9268                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  9269  0C32  0C6E               	rrf	_USTATcopy^(0+128),w
  9270  0C33  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9271  0C34  0CBD               	rrf	??_USBDeviceTasks^(0+128),f
  9272  0C35  0C3D               	rrf	??_USBDeviceTasks^(0+128),w
  9273  0C36  390F               	andlw	15
  9274  0C37  00BE               	movwf	(??_USBDeviceTasks+1)^(0+128)
  9275  0C38  083E               	movf	(??_USBDeviceTasks+1)^(0+128),w
  9276  0C39  0020               	movlb	0	; select bank0
  9277  0C3A  00E9               	movwf	_endpoint_number
  9278                           
  9279                           ;usb_device.c: 972: (UIR &= 0xF7);
  9280  0C3B  30F7               	movlw	247
  9281  0C3C  0021               	movlb	1	; select bank1
  9282  0C3D  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9283  0C3E  083D               	movf	??_USBDeviceTasks^(0+128),w
  9284  0C3F  003D               	movlb	29	; select bank29
  9285  0C40  0590               	andwf	16,f	;volatile
  9286                           
  9287                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  9288  0C41  0021               	movlb	1	; select bank1
  9289  0C42  196E               	btfsc	_USTATcopy^(0+128),2
  9290  0C43  2C48               	goto	l6949
  9291                           
  9292                           ;usb_device.c: 978: {
  9293                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  9294  0C44  0020               	movlb	0	; select bank0
  9295  0C45  0869               	movf	_endpoint_number,w
  9296  0C46  3EB0               	addlw	_ep_data_out& (0+255)
  9297  0C47  2C4B               	goto	L9
  9298  0C48                     l6949:	
  9299                           ;usb_device.c: 980: }
  9300                           
  9301                           
  9302                           ;usb_device.c: 981: else
  9303                           ;usb_device.c: 982: {
  9304                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9305  0C48  0020               	movlb	0	; select bank0
  9306  0C49  0869               	movf	_endpoint_number,w
  9307  0C4A  3EAE               	addlw	_ep_data_in& (0+255)
  9308  0C4B                     L9:	
  9309  0C4B  0086               	movwf	6
  9310  0C4C  3001               	movlw	1	; select bank3/4
  9311  0C4D  0087               	movwf	7
  9312  0C4E  0801               	movf	1,w
  9313  0C4F  3901               	andlw	1
  9314  0C50  0021               	movlb	1	; select bank1
  9315  0C51  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9316  0C52  3001               	movlw	1
  9317  0C53  06BD               	xorwf	??_USBDeviceTasks^(0+128),f
  9318  0C54  0801               	movf	1,w
  9319  0C55  063D               	xorwf	??_USBDeviceTasks^(0+128),w
  9320  0C56  39FE               	andlw	-2
  9321  0C57  063D               	xorwf	??_USBDeviceTasks^(0+128),w
  9322  0C58  0081               	movwf	1
  9323                           
  9324                           ;usb_device.c: 984: }
  9325                           ;usb_device.c: 989: if(endpoint_number == 0)
  9326  0C59  0020               	movlb	0	; select bank0
  9327  0C5A  08E9               	movf	_endpoint_number,f
  9328  0C5B  1D03               	skipz
  9329  0C5C  2C61               	goto	l6955
  9330                           
  9331                           ;usb_device.c: 990: {
  9332                           ;usb_device.c: 991: USBCtrlEPService();
  9333  0C5D  3191  2103  318B   	fcall	_USBCtrlEPService
  9334                           
  9335                           ;usb_device.c: 992: }
  9336  0C60  2C71               	goto	l6957
  9337  0C61                     l6955:	
  9338                           
  9339                           ;usb_device.c: 993: else
  9340                           ;usb_device.c: 994: {
  9341                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  9342  0C61  3072               	movlw	114
  9343  0C62  0021               	movlb	1	; select bank1
  9344  0C63  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9345  0C64  3000               	movlw	0
  9346  0C65  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9347  0C66  30EE               	movlw	_USTATcopy& (0+255)
  9348  0C67  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9349  0C68  083D               	movf	??_USBDeviceTasks^(0+128),w
  9350  0C69  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9351  0C6A  3000               	movlw	0
  9352  0C6B  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
  9353  0C6C  3000               	movlw	0
  9354  0C6D  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9355  0C6E  319C  248E  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9356  0C71                     l6957:	
  9357                           ;usb_device.c: 998: else
  9358                           ;usb_device.c: 999: break;
  9359                           
  9360                           ;usb_device.c: 996: }
  9361                           ;usb_device.c: 997: }
  9362                           
  9363  0C71  3001               	movlw	1
  9364  0C72  0021               	movlb	1	; select bank1
  9365  0C73  00BD               	movwf	??_USBDeviceTasks^(0+128)
  9366  0C74  083D               	movf	??_USBDeviceTasks^(0+128),w
  9367  0C75  07BF               	addwf	USBDeviceTasks@i^(0+128),f
  9368  0C76                     L10:	
  9369  0C76  3004               	movlw	4
  9370  0C77  023F               	subwf	USBDeviceTasks@i^(0+128),w
  9371  0C78  1803               	btfsc	3,0
  9372  0C79  2C7D               	goto	l156
  9373                           
  9374                           ;usb_device.c: 965: {
  9375                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  9376  0C7A  003D               	movlb	29	; select bank29
  9377  0C7B  1990               	btfsc	16,3	;volatile
  9378  0C7C  2C2D               	goto	l6939
  9379  0C7D                     l156:	
  9380                           
  9381                           ;usb_device.c: 1000: }
  9382                           ;usb_device.c: 1001: }
  9383                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  9384  0C7D  0020               	movlb	0	; select bank0
  9385  0C7E  1112               	bcf	18,2	;volatile
  9386  0C7F  0008               	return
  9387  0C80                     __end_of_USBDeviceTasks:	
  9388                           
  9389                           	psect	text31
  9390  1103                     __ptext31:	
  9391 ;; *************** function _USBCtrlEPService *****************
  9392 ;; Defined at:
  9393 ;;		line 2523 in file "../USB/usb_device.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  setup_cnt       1   28[BANK1 ] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;		None               void
  9400 ;; Registers used:
  9401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;Total ram usage:        4 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:   11
  9414 ;; This function calls:
  9415 ;;		_USBCtrlTrfSetupHandler
  9416 ;;		_USBCtrlTrfOutHandler
  9417 ;;		_USBCtrlTrfInHandler
  9418 ;; This function is called by:
  9419 ;;		_USBDeviceTasks
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           
  9424                           ;psect for function _USBCtrlEPService
  9425  1103                     _USBCtrlEPService:	
  9426                           
  9427                           ;usb_device.c: 2528: USBStatusStageTimeoutCounter = (BYTE)40;
  9428                           
  9429                           ;incstack = 0
  9430                           ; Regs used in _USBCtrlEPService: [allreg]
  9431  1103  3028               	movlw	40
  9432  1104  0021               	movlb	1	; select bank1
  9433  1105  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9434  1106  0839               	movf	??_USBCtrlEPService^(0+128),w
  9435  1107  0022               	movlb	2	; select bank2
  9436  1108  00EA               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  9437                           
  9438                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  9439  1109  0021               	movlb	1	; select bank1
  9440  110A  086E               	movf	_USTATcopy^(0+128),w
  9441  110B  39FD               	andlw	253
  9442  110C  1D03               	btfss	3,2
  9443  110D  296C               	goto	l7069
  9444                           
  9445                           ;usb_device.c: 2533: {
  9446                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9447  110E  366E               	lsrf	_USTATcopy^(0+128),w
  9448  110F  393F               	andlw	63
  9449  1110  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9450  1111  3001               	movlw	1
  9451  1112                     u6965:	
  9452  1112  35B9               	lslf	??_USBCtrlEPService^(0+128),f
  9453  1113  3EFF               	addlw	-1
  9454  1114  1D03               	skipz
  9455  1115  2912               	goto	u6965
  9456  1116  3539               	lslf	??_USBCtrlEPService^(0+128),w
  9457  1117  3E20               	addlw	32
  9458  1118  00BA               	movwf	(??_USBCtrlEPService+1)^(0+128)
  9459  1119  083A               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9460  111A  00E8               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  9461                           
  9462                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9463  111B  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9464  111C  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9465  111D  0839               	movf	??_USBCtrlEPService^(0+128),w
  9466  111E  0020               	movlb	0	; select bank0
  9467  111F  00EA               	movwf	_pBDTEntryEP0OutNext
  9468                           
  9469                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9470  1120  3004               	movlw	4
  9471  1121  0021               	movlb	1	; select bank1
  9472  1122  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9473  1123  0839               	movf	??_USBCtrlEPService^(0+128),w
  9474  1124  0020               	movlb	0	; select bank0
  9475  1125  06EA               	xorwf	_pBDTEntryEP0OutNext,f
  9476                           
  9477                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9478  1126  0021               	movlb	1	; select bank1
  9479  1127  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9480  1128  0086               	movwf	6
  9481  1129  0187               	clrf	7
  9482  112A  0C01               	rrf	1,w
  9483  112B  0C89               	rrf	9,f
  9484  112C  390F               	andlw	15
  9485  112D  3A0D               	xorlw	13
  9486  112E  1D03               	skipz
  9487  112F  2969               	goto	l7067
  9488                           
  9489                           ;usb_device.c: 2550: {
  9490                           ;usb_device.c: 2551: unsigned char setup_cnt;
  9491                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  9492  1130  01BC               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  9493  1131  3008               	movlw	8
  9494  1132  023C               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9495  1133  1803               	btfsc	3,0
  9496  1134  295A               	goto	l7063
  9497  1135                     l7057:	
  9498                           
  9499                           ;usb_device.c: 2558: {
  9500                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  9501  1135  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9502  1136  3E02               	addlw	2
  9503  1137  0086               	movwf	6
  9504  1138  0187               	clrf	7
  9505  1139  3F40               	moviw [0]fsr1
  9506  113A  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9507  113B  3F41               	moviw [1]fsr1
  9508  113C  00BA               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9509  113D  0839               	movf	??_USBCtrlEPService^(0+128),w
  9510  113E  0086               	movwf	6
  9511  113F  083A               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9512  1140  0087               	movwf	7
  9513  1141  0801               	movf	1,w
  9514  1142  00BB               	movwf	(??_USBCtrlEPService+2)^(0+128)
  9515  1143  083C               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  9516  1144  3E40               	addlw	64
  9517  1145  0086               	movwf	6
  9518  1146  0187               	clrf	7
  9519  1147  083B               	movf	(??_USBCtrlEPService+2)^(0+128),w
  9520  1148  0081               	movwf	1
  9521                           
  9522                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  9523  1149  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9524  114A  3E02               	addlw	2
  9525  114B  0086               	movwf	6
  9526  114C  0187               	clrf	7
  9527  114D  3001               	movlw	1
  9528  114E  0781               	addwf	1,f
  9529  114F  3141               	addfsr 1,1
  9530  1150  1803               	skipnc
  9531  1151  0A81               	incf	1,f
  9532  1152  3001               	movlw	1
  9533  1153  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9534  1154  0839               	movf	??_USBCtrlEPService^(0+128),w
  9535  1155  07BC               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  9536  1156  3008               	movlw	8
  9537  1157  023C               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9538  1158  1C03               	skipc
  9539  1159  2935               	goto	l7057
  9540  115A                     l7063:	
  9541                           
  9542                           ;usb_device.c: 2561: }
  9543                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9544  115A  3040               	movlw	64
  9545  115B  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9546  115C  3000               	movlw	0
  9547  115D  00BA               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9548  115E  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9549  115F  3E02               	addlw	2
  9550  1160  0086               	movwf	6
  9551  1161  0187               	clrf	7
  9552  1162  0839               	movf	??_USBCtrlEPService^(0+128),w
  9553  1163  3FC0               	movwi [0]fsr1
  9554  1164  083A               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9555  1165  3FC1               	movwi [1]fsr1
  9556                           
  9557                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  9558  1166  319D  250D         	fcall	_USBCtrlTrfSetupHandler
  9559                           
  9560                           ;usb_device.c: 2566: }
  9561  1168  0008               	return
  9562  1169                     l7067:	
  9563                           
  9564                           ;usb_device.c: 2567: else
  9565                           ;usb_device.c: 2568: {
  9566                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  9567  1169  319B  23E8         	fcall	_USBCtrlTrfOutHandler
  9568                           
  9569                           ;usb_device.c: 2571: }
  9570                           ;usb_device.c: 2572: }
  9571  116B  0008               	return
  9572  116C                     l7069:	
  9573                           
  9574                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  9575  116C  30FD               	movlw	253
  9576  116D  0021               	movlb	1	; select bank1
  9577  116E  056E               	andwf	_USTATcopy^(0+128),w
  9578  116F  00B9               	movwf	??_USBCtrlEPService^(0+128)
  9579  1170  0839               	movf	??_USBCtrlEPService^(0+128),w
  9580  1171  3A04               	xorlw	4
  9581  1172  1D03               	skipz
  9582  1173  0008               	return
  9583                           
  9584                           ;usb_device.c: 2574: {
  9585                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  9586  1174  319F  2733         	fcall	_USBCtrlTrfInHandler
  9587  1176  0008               	return
  9588  1177                     __end_of_USBCtrlEPService:	
  9589                           
  9590                           	psect	text32
  9591  1F33                     __ptext32:	
  9592 ;; *************** function _USBCtrlTrfInHandler *****************
  9593 ;; Defined at:
  9594 ;;		line 2748 in file "../USB/usb_device.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  lastDTS         1   17[BANK0 ] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;		None               void
  9601 ;; Registers used:
  9602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;Total ram usage:        3 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    5
  9615 ;; This function calls:
  9616 ;;		_USBCtrlTrfTxService
  9617 ;; This function is called by:
  9618 ;;		_USBCtrlEPService
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function _USBCtrlTrfInHandler
  9624  1F33                     _USBCtrlTrfInHandler:	
  9625                           
  9626                           ;usb_device.c: 2749: BYTE lastDTS;
  9627                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9628                           
  9629                           ;incstack = 0
  9630                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9631  1F33  0021               	movlb	1	; select bank1
  9632  1F34  0863               	movf	_pBDTEntryIn^(0+128),w
  9633  1F35  0086               	movwf	6
  9634  1F36  0187               	clrf	7
  9635  1F37  3000               	movlw	0
  9636  1F38  1B01               	btfsc	1,6
  9637  1F39  3001               	movlw	1
  9638  1F3A  0020               	movlb	0	; select bank0
  9639  1F3B  00E1               	movwf	USBCtrlTrfInHandler@lastDTS
  9640                           
  9641                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9642  1F3C  3004               	movlw	4
  9643  1F3D  0021               	movlb	1	; select bank1
  9644  1F3E  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9645  1F3F  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9646  1F40  06E3               	xorwf	_pBDTEntryIn^(0+128),f
  9647                           
  9648                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  9649  1F41  0866               	movf	_USBDeviceState^(0+128),w
  9650  1F42  3A08               	xorlw	8
  9651  1F43  1D03               	skipz
  9652  1F44  2F53               	goto	l315
  9653                           
  9654                           ;usb_device.c: 2760: {
  9655                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  9656  1F45  0020               	movlb	0	; select bank0
  9657  1F46  0842               	movf	66,w	;volatile
  9658  1F47  003D               	movlb	29	; select bank29
  9659  1F48  0096               	movwf	22	;volatile
  9660                           
  9661                           ;usb_device.c: 2762: if(UADDR != 0u)
  9662  1F49  0816               	movf	22,w	;volatile
  9663  1F4A  1903               	btfsc	3,2
  9664  1F4B  2F4E               	goto	l7343
  9665                           
  9666                           ;usb_device.c: 2763: {
  9667                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  9668  1F4C  3010               	movlw	16
  9669  1F4D  2F4F               	goto	L11
  9670  1F4E                     l7343:	
  9671                           ;usb_device.c: 2765: }
  9672                           
  9673                           
  9674                           ;usb_device.c: 2766: else
  9675                           ;usb_device.c: 2767: {
  9676                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  9677  1F4E  3004               	movlw	4
  9678  1F4F                     L11:	
  9679  1F4F  0021               	movlb	1	; select bank1
  9680  1F50  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9681  1F51  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9682  1F52  00E6               	movwf	_USBDeviceState^(0+128)
  9683  1F53                     l315:	
  9684                           
  9685                           ;usb_device.c: 2769: }
  9686                           ;usb_device.c: 2770: }
  9687                           ;usb_device.c: 2773: if(controlTransferState == 1)
  9688  1F53  0020               	movlb	0	; select bank0
  9689  1F54  0868               	movf	_controlTransferState,w
  9690  1F55  3A01               	xorlw	1
  9691  1F56  1D03               	skipz
  9692  1F57  2F8C               	goto	l318
  9693                           
  9694                           ;usb_device.c: 2774: {
  9695                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  9696  1F58  3048               	movlw	72
  9697  1F59  0021               	movlb	1	; select bank1
  9698  1F5A  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9699  1F5B  3000               	movlw	0
  9700  1F5C  00A1               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  9701  1F5D  0863               	movf	_pBDTEntryIn^(0+128),w
  9702  1F5E  3E02               	addlw	2
  9703  1F5F  0086               	movwf	6
  9704  1F60  0187               	clrf	7
  9705  1F61  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9706  1F62  3FC0               	movwi [0]fsr1
  9707  1F63  0821               	movf	(??_USBCtrlTrfInHandler+1)^(0+128),w
  9708  1F64  3FC1               	movwi [1]fsr1
  9709                           
  9710                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  9711  1F65  3195  2508  319F   	fcall	_USBCtrlTrfTxService
  9712                           
  9713                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  9714  1F68  0020               	movlb	0	; select bank0
  9715  1F69  086C               	movf	_shortPacketStatus,w
  9716  1F6A  3A02               	xorlw	2
  9717  1F6B  1D03               	skipz
  9718  1F6C  2F76               	goto	l7353
  9719                           
  9720                           ;usb_device.c: 2783: {
  9721                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  9722  1F6D  3084               	movlw	132
  9723  1F6E  0021               	movlb	1	; select bank1
  9724  1F6F  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9725  1F70  0863               	movf	_pBDTEntryIn^(0+128),w
  9726  1F71  0086               	movwf	6
  9727  1F72  0187               	clrf	7
  9728  1F73  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9729  1F74  0081               	movwf	1
  9730                           
  9731                           ;usb_device.c: 2787: }
  9732  1F75  0008               	return
  9733  1F76                     l7353:	
  9734                           
  9735                           ;usb_device.c: 2788: else
  9736                           ;usb_device.c: 2789: {
  9737                           ;usb_device.c: 2790: if(lastDTS == 0)
  9738  1F76  0020               	movlb	0	; select bank0
  9739  1F77  08E1               	movf	USBCtrlTrfInHandler@lastDTS,f
  9740  1F78  1D03               	skipz
  9741  1F79  2F83               	goto	l7357
  9742                           
  9743                           ;usb_device.c: 2791: {
  9744                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9745  1F7A  30C8               	movlw	200
  9746  1F7B  0021               	movlb	1	; select bank1
  9747  1F7C  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9748  1F7D  0863               	movf	_pBDTEntryIn^(0+128),w
  9749  1F7E  0086               	movwf	6
  9750  1F7F  0187               	clrf	7
  9751  1F80  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9752  1F81  0081               	movwf	1
  9753                           
  9754                           ;usb_device.c: 2793: }
  9755  1F82  0008               	return
  9756  1F83                     l7357:	
  9757                           
  9758                           ;usb_device.c: 2794: else
  9759                           ;usb_device.c: 2795: {
  9760                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9761  1F83  3088               	movlw	136
  9762  1F84  0021               	movlb	1	; select bank1
  9763  1F85  00A0               	movwf	??_USBCtrlTrfInHandler^(0+128)
  9764  1F86  0863               	movf	_pBDTEntryIn^(0+128),w
  9765  1F87  0086               	movwf	6
  9766  1F88  0187               	clrf	7
  9767  1F89  0820               	movf	??_USBCtrlTrfInHandler^(0+128),w
  9768  1F8A  0081               	movwf	1
  9769                           
  9770                           ;usb_device.c: 2797: }
  9771                           ;usb_device.c: 2798: }
  9772                           ;usb_device.c: 2799: }
  9773  1F8B  0008               	return
  9774  1F8C                     l318:	
  9775                           
  9776                           ;usb_device.c: 2800: else
  9777                           ;usb_device.c: 2801: {
  9778                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  9779  1F8C  0023               	movlb	3	; select bank3
  9780  1F8D  1FA2               	btfss	(_outPipes^(0+384)+2),7
  9781  1F8E  2F96               	goto	l7365
  9782                           
  9783                           ;usb_device.c: 2806: {
  9784                           ;usb_device.c: 2807: if(outPipes[0].pFunc != (0))
  9785  1F8F  0825               	movf	(_outPipes+5)^(0+384),w
  9786  1F90  1903               	btfsc	3,2
  9787  1F91  2F95               	goto	l7363
  9788                           
  9789                           ;usb_device.c: 2808: {
  9790                           ;usb_device.c: 2809: outPipes[0].pFunc();
  9791  1F92  0825               	movf	(_outPipes+5)^(0+384),w
  9792  1F93  319F  2F33         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9793  1F95                     l7363:	
  9794                           
  9795                           ;usb_device.c: 2810: }
  9796                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  9797  1F95  13A2               	bcf	(_outPipes^(0+384)+2),7
  9798  1F96                     l7365:	
  9799                           
  9800                           ;usb_device.c: 2812: }
  9801                           ;usb_device.c: 2814: controlTransferState = 0;
  9802  1F96  0020               	movlb	0	; select bank0
  9803  1F97  01E8               	clrf	_controlTransferState
  9804  1F98  0008               	return
  9805  1F99                     __end_of_USBCtrlTrfInHandler:	
  9806                           
  9807                           	psect	text33
  9808  1BE8                     __ptext33:	
  9809 ;; *************** function _USBCtrlTrfOutHandler *****************
  9810 ;; Defined at:
  9811 ;;		line 2695 in file "../USB/usb_device.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;		None
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;		None               void
  9818 ;; Registers used:
  9819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;Total ram usage:        2 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; Hardware stack levels required when called:    6
  9832 ;; This function calls:
  9833 ;;		_USBCtrlTrfRxService
  9834 ;; This function is called by:
  9835 ;;		_USBCtrlEPService
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           
  9840                           ;psect for function _USBCtrlTrfOutHandler
  9841  1BE8                     _USBCtrlTrfOutHandler:	
  9842                           
  9843                           ;usb_device.c: 2696: if(controlTransferState == 2)
  9844                           
  9845                           ;incstack = 0
  9846                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9847  1BE8  0020               	movlb	0	; select bank0
  9848  1BE9  0868               	movf	_controlTransferState,w
  9849  1BEA  3A02               	xorlw	2
  9850  1BEB  1D03               	skipz
  9851  1BEC  2BF0               	goto	l7325
  9852                           
  9853                           ;usb_device.c: 2697: {
  9854                           ;usb_device.c: 2698: USBCtrlTrfRxService();
  9855  1BED  318A  2229         	fcall	_USBCtrlTrfRxService
  9856                           
  9857                           ;usb_device.c: 2699: }
  9858  1BEF  0008               	return
  9859  1BF0                     l7325:	
  9860                           
  9861                           ;usb_device.c: 2700: else
  9862                           ;usb_device.c: 2701: {
  9863                           ;usb_device.c: 2704: controlTransferState = 0;
  9864  1BF0  0020               	movlb	0	; select bank0
  9865  1BF1  01E8               	clrf	_controlTransferState
  9866                           
  9867                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
  9868  1BF2  0023               	movlb	3	; select bank3
  9869  1BF3  08B4               	movf	_BothEP0OutUOWNsSet^(0+384),f
  9870  1BF4  1D03               	skipz
  9871  1BF5  2C18               	goto	l7331
  9872                           
  9873                           ;usb_device.c: 2712: {
  9874                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
  9875  1BF6  3008               	movlw	8
  9876  1BF7  0021               	movlb	1	; select bank1
  9877  1BF8  00A2               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  9878  1BF9  0020               	movlb	0	; select bank0
  9879  1BFA  0A6A               	incf	_pBDTEntryEP0OutNext,w
  9880  1BFB  0086               	movwf	6
  9881  1BFC  0187               	clrf	7
  9882  1BFD  0021               	movlb	1	; select bank1
  9883  1BFE  0822               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  9884  1BFF  0081               	movwf	1
  9885                           
  9886                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9887  1C00  3040               	movlw	64
  9888  1C01  00A2               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  9889  1C02  3000               	movlw	0
  9890  1C03  00A3               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  9891  1C04  0020               	movlb	0	; select bank0
  9892  1C05  086A               	movf	_pBDTEntryEP0OutNext,w
  9893  1C06  3E02               	addlw	2
  9894  1C07  0086               	movwf	6
  9895  1C08  0187               	clrf	7
  9896  1C09  0021               	movlb	1	; select bank1
  9897  1C0A  0822               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  9898  1C0B  3FC0               	movwi [0]fsr1
  9899  1C0C  0823               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  9900  1C0D  3FC1               	movwi [1]fsr1
  9901                           
  9902                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  9903  1C0E  308C               	movlw	140
  9904  1C0F  00A2               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  9905  1C10  0020               	movlb	0	; select bank0
  9906  1C11  086A               	movf	_pBDTEntryEP0OutNext,w
  9907  1C12  0086               	movwf	6
  9908  1C13  0187               	clrf	7
  9909  1C14  0021               	movlb	1	; select bank1
  9910  1C15  0822               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  9911  1C16  0081               	movwf	1
  9912                           
  9913                           ;usb_device.c: 2716: }
  9914  1C17  0008               	return
  9915  1C18                     l7331:	
  9916                           
  9917                           ;usb_device.c: 2717: else
  9918                           ;usb_device.c: 2718: {
  9919                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
  9920  1C18  0023               	movlb	3	; select bank3
  9921  1C19  01B4               	clrf	_BothEP0OutUOWNsSet^(0+384)
  9922  1C1A  0008               	return
  9923  1C1B                     __end_of_USBCtrlTrfOutHandler:	
  9924                           
  9925                           	psect	text34
  9926  0A29                     __ptext34:	
  9927 ;; *************** function _USBCtrlTrfRxService *****************
  9928 ;; Defined at:
  9929 ;;		line 2019 in file "../USB/usb_device.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;  byteToRead      1    1[BANK1 ] unsigned char 
  9934 ;;  i               1    0[BANK1 ] unsigned char 
  9935 ;; Return value:  Size  Location     Type
  9936 ;;		None               void
  9937 ;; Registers used:
  9938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;Total ram usage:        4 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; Hardware stack levels required when called:    5
  9951 ;; This function calls:
  9952 ;;		_USBCtrlEPAllowStatusStage
  9953 ;; This function is called by:
  9954 ;;		_USBCtrlTrfOutHandler
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           
  9959                           ;psect for function _USBCtrlTrfRxService
  9960  0A29                     _USBCtrlTrfRxService:	
  9961                           
  9962                           ;usb_device.c: 2020: BYTE byteToRead;
  9963                           ;usb_device.c: 2021: BYTE i;
  9964                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9965                           
  9966                           ;incstack = 0
  9967                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9968  0A29  0021               	movlb	1	; select bank1
  9969  0A2A  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9970  0A2B  0086               	movwf	6
  9971  0A2C  0187               	clrf	7
  9972  0A2D  3F41               	moviw [1]fsr1
  9973  0A2E  00A1               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  9974                           
  9975                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
  9976  0A2F  0821               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  9977  0A30  0020               	movlb	0	; select bank0
  9978  0A31  00E0               	movwf	??_USBCtrlTrfRxService
  9979  0A32  01E1               	clrf	??_USBCtrlTrfRxService+1
  9980  0A33  0861               	movf	??_USBCtrlTrfRxService+1,w
  9981  0A34  0023               	movlb	3	; select bank3
  9982  0A35  0224               	subwf	((_outPipes+1)^(0+384)+3),w
  9983  0A36  1D03               	skipz
  9984  0A37  2A3C               	goto	u7195
  9985  0A38  0020               	movlb	0	; select bank0
  9986  0A39  0860               	movf	??_USBCtrlTrfRxService,w
  9987  0A3A  0023               	movlb	3	; select bank3
  9988  0A3B  0223               	subwf	(_outPipes^(0+384)+3),w
  9989  0A3C                     u7195:	
  9990  0A3C  1803               	skipnc
  9991  0A3D  2A44               	goto	l7211
  9992                           
  9993                           ;usb_device.c: 2032: {
  9994                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
  9995  0A3E  0823               	movf	(_outPipes^(0+384)+3),w
  9996  0A3F  0020               	movlb	0	; select bank0
  9997  0A40  00E0               	movwf	??_USBCtrlTrfRxService
  9998  0A41  0860               	movf	??_USBCtrlTrfRxService,w
  9999  0A42  0021               	movlb	1	; select bank1
 10000  0A43  00A1               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
 10001  0A44                     l7211:	
 10002                           
 10003                           ;usb_device.c: 2034: }
 10004                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
 10005  0A44  3003               	movlw	3
 10006  0A45  3EA0               	addlw	_outPipes& (0+255)
 10007  0A46  0086               	movwf	6
 10008  0A47  3001               	movlw	1	; select bank3/4
 10009  0A48  0087               	movwf	7
 10010  0A49  0021               	movlb	1	; select bank1
 10011  0A4A  0821               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 10012  0A4B  0020               	movlb	0	; select bank0
 10013  0A4C  00E0               	movwf	??_USBCtrlTrfRxService
 10014  0A4D  01E1               	clrf	??_USBCtrlTrfRxService+1
 10015  0A4E  09E0               	comf	??_USBCtrlTrfRxService,f
 10016  0A4F  09E1               	comf	??_USBCtrlTrfRxService+1,f
 10017  0A50  0AE0               	incf	??_USBCtrlTrfRxService,f
 10018  0A51  1903               	skipnz
 10019  0A52  0AE1               	incf	??_USBCtrlTrfRxService+1,f
 10020  0A53  3F40               	moviw [0]fsr1
 10021  0A54  0760               	addwf	??_USBCtrlTrfRxService,w
 10022  0A55  0023               	movlb	3	; select bank3
 10023  0A56  00A3               	movwf	(_outPipes^(0+384)+3)
 10024  0A57  3F41               	moviw [1]fsr1
 10025  0A58  0020               	movlb	0	; select bank0
 10026  0A59  3D61               	addwfc	??_USBCtrlTrfRxService+1,w
 10027  0A5A  0023               	movlb	3	; select bank3
 10028  0A5B  00A4               	movwf	(_outPipes^(0+384)+4)
 10029                           
 10030                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
 10031  0A5C  0021               	movlb	1	; select bank1
 10032  0A5D  01A0               	clrf	USBCtrlTrfRxService@i^(0+128)
 10033  0A5E                     l7221:	
 10034  0A5E  0821               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 10035  0A5F  0220               	subwf	USBCtrlTrfRxService@i^(0+128),w
 10036  0A60  1803               	btfsc	3,0
 10037  0A61  2A7C               	goto	l7223
 10038                           
 10039                           ;usb_device.c: 2041: {
 10040                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10041  0A62  0820               	movf	USBCtrlTrfRxService@i^(0+128),w
 10042  0A63  3E48               	addlw	72
 10043  0A64  0086               	movwf	6
 10044  0A65  0187               	clrf	7
 10045  0A66  0801               	movf	1,w
 10046  0A67  0020               	movlb	0	; select bank0
 10047  0A68  00E0               	movwf	??_USBCtrlTrfRxService
 10048  0A69  0023               	movlb	3	; select bank3
 10049  0A6A  0820               	movf	_outPipes^(0+384),w
 10050  0A6B  0086               	movwf	6
 10051  0A6C  0187               	clrf	7
 10052  0A6D  0020               	movlb	0	; select bank0
 10053  0A6E  0860               	movf	??_USBCtrlTrfRxService,w
 10054  0A6F  0081               	movwf	1
 10055  0A70  3001               	movlw	1
 10056  0A71  00E0               	movwf	??_USBCtrlTrfRxService
 10057  0A72  0860               	movf	??_USBCtrlTrfRxService,w
 10058  0A73  0023               	movlb	3	; select bank3
 10059  0A74  07A0               	addwf	_outPipes^(0+384),f
 10060  0A75  3001               	movlw	1
 10061  0A76  0020               	movlb	0	; select bank0
 10062  0A77  00E0               	movwf	??_USBCtrlTrfRxService
 10063  0A78  0860               	movf	??_USBCtrlTrfRxService,w
 10064  0A79  0021               	movlb	1	; select bank1
 10065  0A7A  07A0               	addwf	USBCtrlTrfRxService@i^(0+128),f
 10066  0A7B  2A5E               	goto	l7221
 10067  0A7C                     l7223:	
 10068                           
 10069                           ;usb_device.c: 2043: }
 10070                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
 10071  0A7C  3003               	movlw	3
 10072  0A7D  3EA0               	addlw	_outPipes& (0+255)
 10073  0A7E  0086               	movwf	6
 10074  0A7F  3001               	movlw	1	; select bank3/4
 10075  0A80  0087               	movwf	7
 10076  0A81  0016               	moviw fsr1++
 10077  0A82  0401               	iorwf	1,w
 10078  0A83  1903               	skipnz
 10079  0A84  2AB1               	goto	l7231
 10080                           
 10081                           ;usb_device.c: 2048: {
 10082                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
 10083  0A85  3008               	movlw	8
 10084  0A86  0020               	movlb	0	; select bank0
 10085  0A87  00E0               	movwf	??_USBCtrlTrfRxService
 10086  0A88  0A6A               	incf	_pBDTEntryEP0OutNext,w
 10087  0A89  0086               	movwf	6
 10088  0A8A  0187               	clrf	7
 10089  0A8B  0860               	movf	??_USBCtrlTrfRxService,w
 10090  0A8C  0081               	movwf	1
 10091                           
 10092                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 10093  0A8D  3048               	movlw	72
 10094  0A8E  00E0               	movwf	??_USBCtrlTrfRxService
 10095  0A8F  3000               	movlw	0
 10096  0A90  00E1               	movwf	??_USBCtrlTrfRxService+1
 10097  0A91  086A               	movf	_pBDTEntryEP0OutNext,w
 10098  0A92  3E02               	addlw	2
 10099  0A93  0086               	movwf	6
 10100  0A94  0187               	clrf	7
 10101  0A95  0860               	movf	??_USBCtrlTrfRxService,w
 10102  0A96  3FC0               	movwi [0]fsr1
 10103  0A97  0861               	movf	??_USBCtrlTrfRxService+1,w
 10104  0A98  3FC1               	movwi [1]fsr1
 10105                           
 10106                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10107  0A99  0021               	movlb	1	; select bank1
 10108  0A9A  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 10109  0A9B  0086               	movwf	6
 10110  0A9C  0187               	clrf	7
 10111  0A9D  1B01               	btfsc	1,6
 10112  0A9E  2AA8               	goto	l7229
 10113                           
 10114                           ;usb_device.c: 2052: {
 10115                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 10116  0A9F  30C8               	movlw	200
 10117  0AA0  0020               	movlb	0	; select bank0
 10118  0AA1  00E0               	movwf	??_USBCtrlTrfRxService
 10119  0AA2  086A               	movf	_pBDTEntryEP0OutNext,w
 10120  0AA3  0086               	movwf	6
 10121  0AA4  0187               	clrf	7
 10122  0AA5  0860               	movf	??_USBCtrlTrfRxService,w
 10123  0AA6  0081               	movwf	1
 10124                           
 10125                           ;usb_device.c: 2054: }
 10126  0AA7  0008               	return
 10127  0AA8                     l7229:	
 10128                           
 10129                           ;usb_device.c: 2055: else
 10130                           ;usb_device.c: 2056: {
 10131                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
 10132  0AA8  3088               	movlw	136
 10133  0AA9  0020               	movlb	0	; select bank0
 10134  0AAA  00E0               	movwf	??_USBCtrlTrfRxService
 10135  0AAB  086A               	movf	_pBDTEntryEP0OutNext,w
 10136  0AAC  0086               	movwf	6
 10137  0AAD  0187               	clrf	7
 10138  0AAE  0860               	movf	??_USBCtrlTrfRxService,w
 10139  0AAF  0081               	movwf	1
 10140                           
 10141                           ;usb_device.c: 2058: }
 10142                           ;usb_device.c: 2059: }
 10143  0AB0  0008               	return
 10144  0AB1                     l7231:	
 10145                           
 10146                           ;usb_device.c: 2060: else
 10147                           ;usb_device.c: 2061: {
 10148                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
 10149  0AB1  3008               	movlw	8
 10150  0AB2  0020               	movlb	0	; select bank0
 10151  0AB3  00E0               	movwf	??_USBCtrlTrfRxService
 10152  0AB4  0A6A               	incf	_pBDTEntryEP0OutNext,w
 10153  0AB5  0086               	movwf	6
 10154  0AB6  0187               	clrf	7
 10155  0AB7  0860               	movf	??_USBCtrlTrfRxService,w
 10156  0AB8  0081               	movwf	1
 10157                           
 10158                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 10159  0AB9  3040               	movlw	64
 10160  0ABA  00E0               	movwf	??_USBCtrlTrfRxService
 10161  0ABB  3000               	movlw	0
 10162  0ABC  00E1               	movwf	??_USBCtrlTrfRxService+1
 10163  0ABD  086A               	movf	_pBDTEntryEP0OutNext,w
 10164  0ABE  3E02               	addlw	2
 10165  0ABF  0086               	movwf	6
 10166  0AC0  0187               	clrf	7
 10167  0AC1  0860               	movf	??_USBCtrlTrfRxService,w
 10168  0AC2  3FC0               	movwi [0]fsr1
 10169  0AC3  0861               	movf	??_USBCtrlTrfRxService+1,w
 10170  0AC4  3FC1               	movwi [1]fsr1
 10171                           
 10172                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 10173  0AC5  3084               	movlw	132
 10174  0AC6  00E0               	movwf	??_USBCtrlTrfRxService
 10175  0AC7  086A               	movf	_pBDTEntryEP0OutNext,w
 10176  0AC8  0086               	movwf	6
 10177  0AC9  0187               	clrf	7
 10178  0ACA  0860               	movf	??_USBCtrlTrfRxService,w
 10179  0ACB  0081               	movwf	1
 10180                           
 10181                           ;usb_device.c: 2077: if(outPipes[0].pFunc != (0))
 10182  0ACC  0023               	movlb	3	; select bank3
 10183  0ACD  0825               	movf	(_outPipes+5)^(0+384),w
 10184  0ACE  1903               	btfsc	3,2
 10185  0ACF  2AD3               	goto	l7237
 10186                           
 10187                           ;usb_device.c: 2078: {
 10188                           ;usb_device.c: 2084: outPipes[0].pFunc();
 10189  0AD0  0825               	movf	(_outPipes+5)^(0+384),w
 10190  0AD1  318A  2A29         	ljmp	$	;if you get stuck here, you called an invalid pointer
 10191  0AD3                     l7237:	
 10192                           
 10193                           ;usb_device.c: 2089: }
 10194                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
 10195  0AD3  13A2               	bcf	(_outPipes^(0+384)+2),7
 10196                           
 10197                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
 10198  0AD4  0020               	movlb	0	; select bank0
 10199  0AD5  08E7               	movf	_USBDeferStatusStagePacket,f
 10200  0AD6  1D03               	skipz
 10201  0AD7  0008               	return
 10202                           
 10203                           ;usb_device.c: 2105: {
 10204                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
 10205  0AD8  3190  2094         	fcall	_USBCtrlEPAllowStatusStage
 10206  0ADA  0008               	return
 10207  0ADB                     __end_of_USBCtrlTrfRxService:	
 10208                           
 10209                           	psect	text35
 10210  1D0D                     __ptext35:	
 10211 ;; *************** function _USBCtrlTrfSetupHandler *****************
 10212 ;; Defined at:
 10213 ;;		line 2623 in file "../USB/usb_device.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;		None
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;		None               void
 10220 ;; Registers used:
 10221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10229 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;Total ram usage:        1 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:   10
 10234 ;; This function calls:
 10235 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10236 ;;		_USBCtrlEPServiceComplete
 10237 ;;		_USBCheckStdRequest
 10238 ;; This function is called by:
 10239 ;;		_USBCtrlEPService
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           
 10244                           ;psect for function _USBCtrlTrfSetupHandler
 10245  1D0D                     _USBCtrlTrfSetupHandler:	
 10246                           
 10247                           ;usb_device.c: 2627: shortPacketStatus = 0;
 10248                           
 10249                           ;incstack = 0
 10250                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
 10251  1D0D  0020               	movlb	0	; select bank0
 10252  1D0E  01EC               	clrf	_shortPacketStatus
 10253                           
 10254                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
 10255  1D0F  01E7               	clrf	_USBDeferStatusStagePacket	;volatile
 10256                           
 10257                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
 10258  1D10  0023               	movlb	3	; select bank3
 10259  1D11  01BB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 10260                           
 10261                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
 10262  1D12  01BC               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 10263                           
 10264                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
 10265  1D13  01B4               	clrf	_BothEP0OutUOWNsSet^(0+384)
 10266                           
 10267                           ;usb_device.c: 2632: controlTransferState = 0;
 10268  1D14  0020               	movlb	0	; select bank0
 10269  1D15  01E8               	clrf	_controlTransferState
 10270                           
 10271                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10272  1D16  307F               	movlw	127
 10273  1D17  0021               	movlb	1	; select bank1
 10274  1D18  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10275  1D19  0863               	movf	_pBDTEntryIn^(0+128),w
 10276  1D1A  0086               	movwf	6
 10277  1D1B  0187               	clrf	7
 10278  1D1C  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10279  1D1D  0581               	andwf	1,f
 10280                           
 10281                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10282  1D1E  3004               	movlw	4
 10283  1D1F  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10284  1D20  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10285  1D21  06E3               	xorwf	_pBDTEntryIn^(0+128),f
 10286                           
 10287                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10288  1D22  307F               	movlw	127
 10289  1D23  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10290  1D24  0863               	movf	_pBDTEntryIn^(0+128),w
 10291  1D25  0086               	movwf	6
 10292  1D26  0187               	clrf	7
 10293  1D27  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10294  1D28  0581               	andwf	1,f
 10295                           
 10296                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10297  1D29  3004               	movlw	4
 10298  1D2A  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10299  1D2B  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10300  1D2C  06E3               	xorwf	_pBDTEntryIn^(0+128),f
 10301                           
 10302                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10303  1D2D  307F               	movlw	127
 10304  1D2E  00B8               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10305  1D2F  0020               	movlb	0	; select bank0
 10306  1D30  086A               	movf	_pBDTEntryEP0OutNext,w
 10307  1D31  0086               	movwf	6
 10308  1D32  0187               	clrf	7
 10309  1D33  0021               	movlb	1	; select bank1
 10310  1D34  0838               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10311  1D35  0581               	andwf	1,f
 10312                           
 10313                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
 10314  1D36  01EB               	clrf	(_inPipes^(0+128)+2)
 10315                           
 10316                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
 10317  1D37  01EC               	clrf	(_inPipes^(0+128)+3)
 10318  1D38  01ED               	clrf	((_inPipes+1)^(0+128)+3)
 10319                           
 10320                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
 10321  1D39  0023               	movlb	3	; select bank3
 10322  1D3A  01A2               	clrf	(_outPipes^(0+384)+2)
 10323                           
 10324                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
 10325  1D3B  01A3               	clrf	(_outPipes^(0+384)+3)
 10326  1D3C  01A4               	clrf	((_outPipes+1)^(0+384)+3)
 10327                           
 10328                           ;usb_device.c: 2656: USBCheckStdRequest();
 10329  1D3D  319E  26DA  319D   	fcall	_USBCheckStdRequest
 10330                           
 10331                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10332  1D40  3003               	movlw	3
 10333  1D41  0021               	movlb	1	; select bank1
 10334  1D42  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10335  1D43  3000               	movlw	0
 10336  1D44  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10337  1D45  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10338  1D46  3000               	movlw	0
 10339  1D47  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 10340  1D48  3000               	movlw	0
 10341  1D49  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10342  1D4A  319C  248E  319D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10343                           
 10344                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
 10345  1D4D  3194  247D         	fcall	_USBCtrlEPServiceComplete
 10346  1D4F  0008               	return
 10347  1D50                     __end_of_USBCtrlTrfSetupHandler:	
 10348                           
 10349                           	psect	text36
 10350  1EDA                     __ptext36:	
 10351 ;; *************** function _USBCheckStdRequest *****************
 10352 ;; Defined at:
 10353 ;;		line 2839 in file "../USB/usb_device.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;		None
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;		None               void
 10360 ;; Registers used:
 10361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;Total ram usage:        1 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    9
 10374 ;; This function calls:
 10375 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10376 ;;		_USBStdSetCfgHandler
 10377 ;;		_USBStdGetDscHandler
 10378 ;;		_USBStdGetStatusHandler
 10379 ;;		_USBStdFeatureReqHandler
 10380 ;; This function is called by:
 10381 ;;		_USBCtrlTrfSetupHandler
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           
 10386                           ;psect for function _USBCheckStdRequest
 10387  1EDA                     _USBCheckStdRequest:	
 10388                           
 10389                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
 10390                           
 10391                           ;incstack = 0
 10392                           ; Regs used in _USBCheckStdRequest: [allreg]
 10393  1EDA  0020               	movlb	0	; select bank0
 10394  1EDB  0E40               	swapf	64,w	;volatile
 10395  1EDC  0C89               	rrf	9,f
 10396  1EDD  3903               	andlw	3
 10397  1EDE  3A00               	xorlw	0
 10398  1EDF  1D03               	btfss	3,2
 10399  1EE0  0008               	return
 10400  1EE1  2F27               	goto	l7403
 10401  1EE2                     l332:	
 10402                           ;usb_device.c: 2843: {
 10403                           ;usb_device.c: 2844: case 5:
 10404                           
 10405                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
 10406                           
 10407                           
 10408                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
 10409  1EE2  0021               	movlb	1	; select bank1
 10410  1EE3  17EB               	bsf	(_inPipes^(0+128)+2),7
 10411                           
 10412                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
 10413  1EE4  3008               	movlw	8
 10414  1EE5  00B7               	movwf	??_USBCheckStdRequest^(0+128)
 10415  1EE6  0837               	movf	??_USBCheckStdRequest^(0+128),w
 10416  1EE7  00E6               	movwf	_USBDeviceState^(0+128)
 10417                           
 10418                           ;usb_device.c: 2848: break;
 10419  1EE8  0008               	return
 10420  1EE9                     l7373:	
 10421                           ;usb_device.c: 2849: case 6:
 10422                           
 10423                           
 10424                           ;usb_device.c: 2850: USBStdGetDscHandler();
 10425  1EE9  3192  2271         	fcall	_USBStdGetDscHandler
 10426                           
 10427                           ;usb_device.c: 2851: break;
 10428  1EEB  0008               	return
 10429  1EEC                     l7375:	
 10430                           ;usb_device.c: 2852: case 9:
 10431                           
 10432                           
 10433                           ;usb_device.c: 2853: USBStdSetCfgHandler();
 10434  1EEC  3193  2372         	fcall	_USBStdSetCfgHandler
 10435                           
 10436                           ;usb_device.c: 2854: break;
 10437  1EEE  0008               	return
 10438  1EEF                     l7377:	
 10439                           ;usb_device.c: 2855: case 8:
 10440                           
 10441                           
 10442                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
 10443  1EEF  306D               	movlw	low _USBActiveConfiguration
 10444  1EF0  0021               	movlb	1	; select bank1
 10445  1EF1  00E9               	movwf	_inPipes^(0+128)
 10446  1EF2  3000               	movlw	high _USBActiveConfiguration
 10447  1EF3  00EA               	movwf	(_inPipes+1)^(0+128)
 10448                           
 10449                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10450  1EF4  146B               	bsf	(_inPipes^(0+128)+2),0
 10451                           
 10452                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
 10453  1EF5  01EC               	clrf	(_inPipes^(0+128)+3)
 10454  1EF6  0AEC               	incf	(_inPipes^(0+128)+3),f
 10455                           
 10456                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
 10457  1EF7  17EB               	bsf	(_inPipes^(0+128)+2),7
 10458                           
 10459                           ;usb_device.c: 2860: break;
 10460  1EF8  0008               	return
 10461  1EF9                     l7385:	
 10462                           ;usb_device.c: 2861: case 0:
 10463                           
 10464                           
 10465                           ;usb_device.c: 2862: USBStdGetStatusHandler();
 10466  1EF9  319E  2630         	fcall	_USBStdGetStatusHandler
 10467                           
 10468                           ;usb_device.c: 2863: break;
 10469  1EFB  0008               	return
 10470  1EFC                     l7387:	
 10471                           ;usb_device.c: 2864: case 1:
 10472                           
 10473                           
 10474                           ;usb_device.c: 2865: case 3:
 10475                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
 10476  1EFC  318D  2576         	fcall	_USBStdFeatureReqHandler
 10477                           
 10478                           ;usb_device.c: 2867: break;
 10479  1EFE  0008               	return
 10480  1EFF                     l7389:	
 10481                           ;usb_device.c: 2868: case 10:
 10482                           
 10483                           
 10484                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
 10485  1EFF  0020               	movlb	0	; select bank0
 10486  1F00  0844               	movf	68,w	;volatile
 10487  1F01  3E6E               	addlw	_USBAlternateInterface& (0+255)
 10488  1F02  0021               	movlb	1	; select bank1
 10489  1F03  00E9               	movwf	_inPipes^(0+128)
 10490  1F04  3000               	movlw	0
 10491  1F05  00EA               	movwf	(_inPipes+1)^(0+128)
 10492                           
 10493                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10494  1F06  146B               	bsf	(_inPipes^(0+128)+2),0
 10495                           
 10496                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
 10497  1F07  01EC               	clrf	(_inPipes^(0+128)+3)
 10498  1F08  0AEC               	incf	(_inPipes^(0+128)+3),f
 10499                           
 10500                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
 10501  1F09  17EB               	bsf	(_inPipes^(0+128)+2),7
 10502                           
 10503                           ;usb_device.c: 2873: break;
 10504  1F0A  0008               	return
 10505  1F0B                     l341:	
 10506                           ;usb_device.c: 2874: case 11:
 10507                           
 10508                           
 10509                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
 10510  1F0B  0021               	movlb	1	; select bank1
 10511  1F0C  17EB               	bsf	(_inPipes^(0+128)+2),7
 10512                           
 10513                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10514  1F0D  0020               	movlb	0	; select bank0
 10515  1F0E  0842               	movf	66,w	;volatile
 10516  1F0F  0021               	movlb	1	; select bank1
 10517  1F10  00B7               	movwf	??_USBCheckStdRequest^(0+128)
 10518  1F11  0020               	movlb	0	; select bank0
 10519  1F12  0844               	movf	68,w	;volatile
 10520  1F13  3E6E               	addlw	_USBAlternateInterface& (0+255)
 10521  1F14  0086               	movwf	6
 10522  1F15  0187               	clrf	7
 10523  1F16  0021               	movlb	1	; select bank1
 10524  1F17  0837               	movf	??_USBCheckStdRequest^(0+128),w
 10525  1F18  0081               	movwf	1
 10526                           
 10527                           ;usb_device.c: 2877: break;
 10528  1F19  0008               	return
 10529  1F1A                     l7399:	
 10530                           ;usb_device.c: 2878: case 7:
 10531                           
 10532                           
 10533                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10534  1F1A  3002               	movlw	2
 10535  1F1B  0021               	movlb	1	; select bank1
 10536  1F1C  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10537  1F1D  3000               	movlw	0
 10538  1F1E  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10539  1F1F  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10540  1F20  3000               	movlw	0
 10541  1F21  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 10542  1F22  3000               	movlw	0
 10543  1F23  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10544  1F24  319C  248E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10545                           
 10546                           ;usb_device.c: 2884: }
 10547                           
 10548                           ;usb_device.c: 2883: break;
 10549                           
 10550                           ;usb_device.c: 2882: default:
 10551                           
 10552                           ;usb_device.c: 2881: case 12:
 10553                           
 10554                           ;usb_device.c: 2880: break;
 10555  1F26  0008               	return
 10556  1F27                     l7403:	
 10557  1F27  0020               	movlb	0	; select bank0
 10558  1F28  0841               	movf	65,w	;volatile
 10559                           
 10560                           ; Switch size 1, requested type "space"
 10561                           ; Number of cases is 11, Range of values is 0 to 12
 10562                           ; switch strategies available:
 10563                           ; Name         Instructions Cycles
 10564                           ; direct_byte           32     6 (fixed)
 10565                           ; simple_byte           34    18 (average)
 10566                           ; jumptable            260     6 (fixed)
 10567                           ; rangetable            17     4 (fixed)
 10568                           ; spacedrange           31     6 (fixed)
 10569                           ; locatedrange          13     3 (fixed)
 10570                           ;	Chosen strategy is direct_byte
 10571  1F29  0084               	movwf	4
 10572  1F2A  300D               	movlw	13
 10573  1F2B  0204               	subwf	4,w
 10574  1F2C  1803               	skipnc
 10575  1F2D  0008               	return
 10576  1F2E  3198               	movlp	high S8073
 10577  1F2F  3504               	lslf	4,w
 10578  1F30  3E00               	addlw	low S8073
 10579  1F31  0082               	movwf	2
 10580  1F32                     l330:	
 10581  1F32  0008               	return
 10582  1F33                     __end_of_USBCheckStdRequest:	
 10583                           
 10584                           	psect	swtext1
 10585  1800                     __pswtext1:	
 10586  1800                     S8073:	
 10587  1800  319E  2EF9         	ljmp	l7385
 10588  1802  319E  2EFC         	ljmp	l7387
 10589  1804  319F  2F32         	ljmp	l330
 10590  1806  319E  2EFC         	ljmp	l7387
 10591  1808  319F  2F32         	ljmp	l330
 10592  180A  319E  2EE2         	ljmp	l332
 10593  180C  319E  2EE9         	ljmp	l7373
 10594  180E  319F  2F1A         	ljmp	l7399
 10595  1810  319E  2EEF         	ljmp	l7377
 10596  1812  319E  2EEC         	ljmp	l7375
 10597  1814  319E  2EFF         	ljmp	l7389
 10598  1816  319F  2F0B         	ljmp	l341
 10599  1818  319F  2F32         	ljmp	l330
 10600                           
 10601                           	psect	text37
 10602  0D76                     __ptext37:	
 10603 ;; *************** function _USBStdFeatureReqHandler *****************
 10604 ;; Defined at:
 10605 ;;		line 2907 in file "../USB/usb_device.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  pUEP            2   19[BANK1 ] PTR unsigned char 
 10610 ;;		 -> UEP0(1), 
 10611 ;;  p               1   22[BANK1 ] PTR struct __BDT
 10612 ;;		 -> NULL(0), BDT(32), 
 10613 ;;  current_ep_d    1   21[BANK1 ] struct .
 10614 ;; Return value:  Size  Location     Type
 10615 ;;		None               void
 10616 ;; Registers used:
 10617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;Total ram usage:        6 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    8
 10630 ;; This function calls:
 10631 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10632 ;; This function is called by:
 10633 ;;		_USBCheckStdRequest
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           
 10638                           ;psect for function _USBStdFeatureReqHandler
 10639  0D76                     _USBStdFeatureReqHandler:	
 10640                           
 10641                           ;usb_device.c: 2908: BDT_ENTRY *p;
 10642                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
 10643                           ;usb_device.c: 2913: unsigned char* pUEP;
 10644                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
 10645                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
 10646                           
 10647                           ;incstack = 0
 10648                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10649  0D76  0020               	movlb	0	; select bank0
 10650  0D77  0842               	movf	66,w	;volatile
 10651  0D78  3A01               	xorlw	1
 10652  0D79  1D03               	skipz
 10653  0D7A  2D8D               	goto	l7421
 10654  0D7B  0840               	movf	64,w	;volatile
 10655  0D7C  391F               	andlw	31
 10656  0D7D  3800               	iorlw	0
 10657  0D7E  1D03               	skipz
 10658  0D7F  2D8D               	goto	l7421
 10659                           
 10660                           ;usb_device.c: 2953: {
 10661                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
 10662  0D80  0021               	movlb	1	; select bank1
 10663  0D81  17EB               	bsf	(_inPipes^(0+128)+2),7
 10664                           
 10665                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
 10666  0D82  0020               	movlb	0	; select bank0
 10667  0D83  0841               	movf	65,w	;volatile
 10668  0D84  3A03               	xorlw	3
 10669  0D85  1D03               	skipz
 10670  0D86  2D8B               	goto	l7419
 10671                           
 10672                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
 10673  0D87  0022               	movlb	2	; select bank2
 10674  0D88  01E8               	clrf	_RemoteWakeup^(0+256)
 10675  0D89  0AE8               	incf	_RemoteWakeup^(0+256),f
 10676  0D8A  2D8D               	goto	l7421
 10677  0D8B                     l7419:	
 10678                           
 10679                           ;usb_device.c: 2957: else
 10680                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
 10681  0D8B  0022               	movlb	2	; select bank2
 10682  0D8C  01E8               	clrf	_RemoteWakeup^(0+256)
 10683  0D8D                     l7421:	
 10684                           
 10685                           ;usb_device.c: 2959: }
 10686                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
 10687                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
 10688                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 10689                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
 10690  0D8D  0020               	movlb	0	; select bank0
 10691  0D8E  0842               	movf	66,w
 10692  0D8F  1D03               	skipz
 10693  0D90  0008               	return
 10694  0D91  0840               	movf	64,w	;volatile
 10695  0D92  391F               	andlw	31
 10696  0D93  3A02               	xorlw	2
 10697  0D94  1D03               	skipz
 10698  0D95  0008               	return
 10699  0D96  0844               	movf	68,w	;volatile
 10700  0D97  390F               	andlw	15
 10701  0D98  3A00               	xorlw	0
 10702  0D99  1903               	skipnz
 10703  0D9A  0008               	return
 10704  0D9B  0844               	movf	68,w	;volatile
 10705  0D9C  390F               	andlw	15
 10706  0D9D  0021               	movlb	1	; select bank1
 10707  0D9E  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10708  0D9F  3002               	movlw	2
 10709  0DA0  0231               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 10710  0DA1  1803               	skipnc
 10711  0DA2  0008               	return
 10712  0DA3  0866               	movf	_USBDeviceState^(0+128),w
 10713  0DA4  3A20               	xorlw	32
 10714  0DA5  1D03               	skipz
 10715  0DA6  0008               	return
 10716                           
 10717                           ;usb_device.c: 2966: {
 10718                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
 10719  0DA7  17EB               	bsf	(_inPipes^(0+128)+2),7
 10720                           
 10721                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
 10722  0DA8  0020               	movlb	0	; select bank0
 10723  0DA9  1BC4               	btfsc	68,7	;volatile
 10724  0DAA  2DBB               	goto	l7435
 10725                           
 10726                           ;usb_device.c: 2973: {
 10727                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10728  0DAB  0844               	movf	68,w	;volatile
 10729  0DAC  390F               	andlw	15
 10730  0DAD  3EB2               	addlw	_pBDTEntryOut& (0+255)
 10731  0DAE  0086               	movwf	6
 10732  0DAF  3001               	movlw	1	; select bank3/4
 10733  0DB0  0087               	movwf	7
 10734  0DB1  0801               	movf	1,w
 10735  0DB2  0021               	movlb	1	; select bank1
 10736  0DB3  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10737  0DB4  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10738  0DB5  00B6               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10739                           
 10740                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10741  0DB6  0020               	movlb	0	; select bank0
 10742  0DB7  0844               	movf	68,w	;volatile
 10743  0DB8  390F               	andlw	15
 10744  0DB9  3EB0               	addlw	_ep_data_out& (0+255)
 10745  0DBA  2DCA               	goto	L12
 10746  0DBB                     l7435:	
 10747                           ;usb_device.c: 2976: }
 10748                           
 10749                           
 10750                           ;usb_device.c: 2977: else
 10751                           ;usb_device.c: 2978: {
 10752                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10753  0DBB  0020               	movlb	0	; select bank0
 10754  0DBC  0844               	movf	68,w	;volatile
 10755  0DBD  390F               	andlw	15
 10756  0DBE  3EE3               	addlw	_pBDTEntryIn& (0+255)
 10757  0DBF  0086               	movwf	6
 10758  0DC0  0187               	clrf	7
 10759  0DC1  0801               	movf	1,w
 10760  0DC2  0021               	movlb	1	; select bank1
 10761  0DC3  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10762  0DC4  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10763  0DC5  00B6               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10764                           
 10765                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10766  0DC6  0020               	movlb	0	; select bank0
 10767  0DC7  0844               	movf	68,w	;volatile
 10768  0DC8  390F               	andlw	15
 10769  0DC9  3EAE               	addlw	_ep_data_in& (0+255)
 10770  0DCA                     L12:	
 10771  0DCA  0086               	movwf	6
 10772  0DCB  3001               	movlw	1	; select bank3/4
 10773  0DCC  0087               	movwf	7
 10774  0DCD  0801               	movf	1,w
 10775  0DCE  0021               	movlb	1	; select bank1
 10776  0DCF  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10777  0DD0  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10778  0DD1  00B5               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 10779                           
 10780                           ;usb_device.c: 2981: }
 10781                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
 10782  0DD2  1835               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 10783  0DD3  2DD9               	goto	l353
 10784                           
 10785                           ;usb_device.c: 2988: {
 10786                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
 10787  0DD4  30FB               	movlw	251
 10788  0DD5  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10789  0DD6  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10790  0DD7  05B6               	andwf	USBStdFeatureReqHandler@p^(0+128),f
 10791                           
 10792                           ;usb_device.c: 2990: }
 10793  0DD8  2DDA               	goto	l354
 10794  0DD9                     l353:	
 10795                           
 10796                           ;usb_device.c: 2991: else
 10797                           ;usb_device.c: 2992: {
 10798                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
 10799  0DD9  1536               	bsf	USBStdFeatureReqHandler@p^(0+128),2
 10800  0DDA                     l354:	
 10801                           
 10802                           ;usb_device.c: 2994: }
 10803                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
 10804  0DDA  0020               	movlb	0	; select bank0
 10805  0DDB  1BC4               	btfsc	68,7	;volatile
 10806  0DDC  2DE8               	goto	l7443
 10807                           
 10808                           ;usb_device.c: 3000: {
 10809                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10810  0DDD  0021               	movlb	1	; select bank1
 10811  0DDE  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10812  0DDF  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10813  0DE0  0020               	movlb	0	; select bank0
 10814  0DE1  0844               	movf	68,w	;volatile
 10815  0DE2  390F               	andlw	15
 10816  0DE3  3EB2               	addlw	_pBDTEntryOut& (0+255)
 10817  0DE4  0086               	movwf	6
 10818  0DE5  3001               	movlw	1	; select bank3/4
 10819  0DE6  0087               	movwf	7
 10820  0DE7  2DF1               	goto	L13
 10821  0DE8                     l7443:	
 10822                           ;usb_device.c: 3002: }
 10823                           
 10824                           
 10825                           ;usb_device.c: 3003: else
 10826                           ;usb_device.c: 3004: {
 10827                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10828  0DE8  0021               	movlb	1	; select bank1
 10829  0DE9  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10830  0DEA  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10831  0DEB  0020               	movlb	0	; select bank0
 10832  0DEC  0844               	movf	68,w	;volatile
 10833  0DED  390F               	andlw	15
 10834  0DEE  3EE3               	addlw	_pBDTEntryIn& (0+255)
 10835  0DEF  0086               	movwf	6
 10836  0DF0  0187               	clrf	7
 10837  0DF1                     L13:	
 10838  0DF1  0021               	movlb	1	; select bank1
 10839  0DF2  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10840  0DF3  0081               	movwf	1
 10841                           
 10842                           ;usb_device.c: 3006: }
 10843                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
 10844  0DF4  0020               	movlb	0	; select bank0
 10845  0DF5  0841               	movf	65,w	;volatile
 10846  0DF6  3A03               	xorlw	3
 10847  0DF7  1D03               	skipz
 10848  0DF8  2E16               	goto	l7455
 10849                           
 10850                           ;usb_device.c: 3010: {
 10851                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
 10852  0DF9  0021               	movlb	1	; select bank1
 10853  0DFA  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10854  0DFB  0086               	movwf	6
 10855  0DFC  0187               	clrf	7
 10856  0DFD  1F81               	btfss	1,7
 10857  0DFE  2E0D               	goto	l358
 10858                           
 10859                           ;usb_device.c: 3012: {
 10860                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
 10861  0DFF  0020               	movlb	0	; select bank0
 10862  0E00  1BC4               	btfsc	68,7	;volatile
 10863  0E01  2E06               	goto	l7453
 10864                           
 10865                           ;usb_device.c: 3016: {
 10866                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10867  0E02  0844               	movf	68,w	;volatile
 10868  0E03  390F               	andlw	15
 10869  0E04  3EB0               	addlw	_ep_data_out& (0+255)
 10870  0E05  2E09               	goto	L14
 10871  0E06                     l7453:	
 10872                           ;usb_device.c: 3018: }
 10873                           
 10874                           
 10875                           ;usb_device.c: 3019: else
 10876                           ;usb_device.c: 3020: {
 10877                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10878  0E06  0844               	movf	68,w	;volatile
 10879  0E07  390F               	andlw	15
 10880  0E08  3EAE               	addlw	_ep_data_in& (0+255)
 10881  0E09                     L14:	
 10882  0E09  0086               	movwf	6
 10883  0E0A  3001               	movlw	1	; select bank3/4
 10884  0E0B  0087               	movwf	7
 10885  0E0C  1481               	bsf	1,1
 10886  0E0D                     l358:	
 10887                           
 10888                           ;usb_device.c: 3022: }
 10889                           ;usb_device.c: 3023: }
 10890                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
 10891  0E0D  3084               	movlw	132
 10892  0E0E  0021               	movlb	1	; select bank1
 10893  0E0F  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10894  0E10  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10895  0E11  0086               	movwf	6
 10896  0E12  0187               	clrf	7
 10897  0E13  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10898  0E14  0481               	iorwf	1,f
 10899                           
 10900                           ;usb_device.c: 3027: }
 10901  0E15  0008               	return
 10902  0E16                     l7455:	
 10903                           
 10904                           ;usb_device.c: 3028: else
 10905                           ;usb_device.c: 3029: {
 10906                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10907  0E16  3004               	movlw	4
 10908  0E17  0021               	movlb	1	; select bank1
 10909  0E18  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10910  0E19  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10911  0E1A  06B6               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10912                           
 10913                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
 10914  0E1B  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10915  0E1C  0086               	movwf	6
 10916  0E1D  0187               	clrf	7
 10917  0E1E  1F81               	btfss	1,7
 10918  0E1F  2E3B               	goto	l7465
 10919                           
 10920                           ;usb_device.c: 3036: {
 10921                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
 10922  0E20  307F               	movlw	127
 10923  0E21  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10924  0E22  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10925  0E23  0086               	movwf	6
 10926  0E24  0187               	clrf	7
 10927  0E25  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10928  0E26  0581               	andwf	1,f
 10929                           
 10930                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
 10931  0E27  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10932  0E28  0086               	movwf	6
 10933  0E29  0187               	clrf	7
 10934  0E2A  1701               	bsf	1,6
 10935                           
 10936                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10937  0E2B  3005               	movlw	5
 10938  0E2C  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10939  0E2D  3000               	movlw	0
 10940  0E2E  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10941  0E2F  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10942  0E30  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10943  0E31  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10944  0E32  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10945  0E33  3001               	movlw	1
 10946  0E34  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 10947  0E35  3000               	movlw	0
 10948  0E36  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10949  0E37  319C  248E  318D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10950                           
 10951                           ;usb_device.c: 3042: }
 10952  0E3A  2E40               	goto	l7467
 10953  0E3B                     l7465:	
 10954                           
 10955                           ;usb_device.c: 3043: else
 10956                           ;usb_device.c: 3044: {
 10957                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
 10958  0E3B  0021               	movlb	1	; select bank1
 10959  0E3C  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10960  0E3D  0086               	movwf	6
 10961  0E3E  0187               	clrf	7
 10962  0E3F  1701               	bsf	1,6
 10963  0E40                     l7467:	
 10964                           
 10965                           ;usb_device.c: 3047: }
 10966                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10967  0E40  3004               	movlw	4
 10968  0E41  0021               	movlb	1	; select bank1
 10969  0E42  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10970  0E43  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10971  0E44  06B6               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10972                           
 10973                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10974  0E45  18B5               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 10975  0E46  2E4C               	goto	l366
 10976  0E47  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10977  0E48  0086               	movwf	6
 10978  0E49  0187               	clrf	7
 10979  0E4A  1F81               	btfss	1,7
 10980  0E4B  2E72               	goto	l7479
 10981  0E4C                     l366:	
 10982                           
 10983                           ;usb_device.c: 3058: {
 10984                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
 10985  0E4C  0020               	movlb	0	; select bank0
 10986  0E4D  1BC4               	btfsc	68,7	;volatile
 10987  0E4E  2E53               	goto	l7475
 10988                           
 10989                           ;usb_device.c: 3060: {
 10990                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10991  0E4F  0844               	movf	68,w	;volatile
 10992  0E50  390F               	andlw	15
 10993  0E51  3EB0               	addlw	_ep_data_out& (0+255)
 10994  0E52  2E56               	goto	L15
 10995  0E53                     l7475:	
 10996                           ;usb_device.c: 3062: }
 10997                           
 10998                           
 10999                           ;usb_device.c: 3063: else
 11000                           ;usb_device.c: 3064: {
 11001                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11002  0E53  0844               	movf	68,w	;volatile
 11003  0E54  390F               	andlw	15
 11004  0E55  3EAE               	addlw	_ep_data_in& (0+255)
 11005  0E56                     L15:	
 11006  0E56  0086               	movwf	6
 11007  0E57  3001               	movlw	1	; select bank3/4
 11008  0E58  0087               	movwf	7
 11009  0E59  1081               	bcf	1,1
 11010                           
 11011                           ;usb_device.c: 3066: }
 11012                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11013  0E5A  303B               	movlw	59
 11014  0E5B  0021               	movlb	1	; select bank1
 11015  0E5C  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11016  0E5D  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11017  0E5E  0086               	movwf	6
 11018  0E5F  0187               	clrf	7
 11019  0E60  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11020  0E61  0581               	andwf	1,f
 11021                           
 11022                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11023  0E62  3005               	movlw	5
 11024  0E63  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11025  0E64  3000               	movlw	0
 11026  0E65  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11027  0E66  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11028  0E67  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11029  0E68  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11030  0E69  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11031  0E6A  3001               	movlw	1
 11032  0E6B  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 11033  0E6C  3000               	movlw	0
 11034  0E6D  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11035  0E6E  319C  248E  318D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11036                           
 11037                           ;usb_device.c: 3072: }
 11038  0E71  2E7A               	goto	l7481
 11039  0E72                     l7479:	
 11040                           
 11041                           ;usb_device.c: 3073: else
 11042                           ;usb_device.c: 3074: {
 11043                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11044  0E72  303B               	movlw	59
 11045  0E73  0021               	movlb	1	; select bank1
 11046  0E74  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11047  0E75  0836               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11048  0E76  0086               	movwf	6
 11049  0E77  0187               	clrf	7
 11050  0E78  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11051  0E79  0581               	andwf	1,f
 11052  0E7A                     l7481:	
 11053                           
 11054                           ;usb_device.c: 3077: }
 11055                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11056  0E7A  0020               	movlb	0	; select bank0
 11057  0E7B  0844               	movf	68,w	;volatile
 11058  0E7C  390F               	andlw	15
 11059  0E7D  3E98               	addlw	152
 11060  0E7E  0021               	movlb	1	; select bank1
 11061  0E7F  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11062  0E80  01B2               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 11063  0E81  300E               	movlw	14
 11064  0E82  3DB2               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 11065  0E83  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11066  0E84  00B3               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 11067  0E85  0832               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 11068  0E86  00B4               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 11069                           
 11070                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
 11071  0E87  30FE               	movlw	254
 11072  0E88  00B1               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11073  0E89  0833               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 11074  0E8A  0086               	movwf	6
 11075  0E8B  0834               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 11076  0E8C  0087               	movwf	7
 11077  0E8D  0831               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11078  0E8E  0581               	andwf	1,f
 11079  0E8F  0008               	return
 11080  0E90                     __end_of_USBStdFeatureReqHandler:	
 11081                           
 11082                           	psect	text38
 11083  1E30                     __ptext38:	
 11084 ;; *************** function _USBStdGetStatusHandler *****************
 11085 ;; Defined at:
 11086 ;;		line 2283 in file "../USB/usb_device.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;		None
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  p               1   15[BANK0 ] PTR struct __BDT
 11091 ;;		 -> NULL(0), BDT(32), 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;		None               void
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11105 ;;Total ram usage:        2 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    4
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_USBCheckStdRequest
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           
 11116                           ;psect for function _USBStdGetStatusHandler
 11117  1E30                     _USBStdGetStatusHandler:	
 11118                           
 11119                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
 11120                           
 11121                           ;incstack = 0
 11122                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 11123  1E30  0020               	movlb	0	; select bank0
 11124  1E31  01C8               	clrf	72	;volatile
 11125                           
 11126                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
 11127  1E32  3000               	movlw	0
 11128  1E33  00C9               	movwf	73	;volatile
 11129                           
 11130                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
 11131  1E34  2E68               	goto	l5329
 11132  1E35                     l271:	
 11133                           ;usb_device.c: 2288: {
 11134                           ;usb_device.c: 2289: case (0x00):
 11135                           
 11136                           
 11137                           ;usb_device.c: 2295: if(1 == 1)
 11138  1E35  0021               	movlb	1	; select bank1
 11139  1E36  17EB               	bsf	(_inPipes^(0+128)+2),7
 11140                           
 11141                           ;usb_device.c: 2296: {
 11142                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
 11143  1E37  0020               	movlb	0	; select bank0
 11144  1E38  1448               	bsf	72,0	;volatile
 11145                           
 11146                           ;usb_device.c: 2298: }
 11147                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
 11148  1E39  0022               	movlb	2	; select bank2
 11149  1E3A  0868               	movf	_RemoteWakeup^(0+256),w
 11150  1E3B  3A01               	xorlw	1
 11151  1E3C  1D03               	skipz
 11152  1E3D  2E74               	goto	l274
 11153                           
 11154                           ;usb_device.c: 2301: {
 11155                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
 11156  1E3E  0020               	movlb	0	; select bank0
 11157  1E3F  14C8               	bsf	72,1	;volatile
 11158                           
 11159                           ;usb_device.c: 2303: }
 11160                           ;usb_device.c: 2304: break;
 11161  1E40  2E74               	goto	l274
 11162  1E41                     l275:	
 11163                           ;usb_device.c: 2305: case (0x01):
 11164                           
 11165                           
 11166                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
 11167  1E41  0021               	movlb	1	; select bank1
 11168  1E42  17EB               	bsf	(_inPipes^(0+128)+2),7
 11169                           
 11170                           ;usb_device.c: 2307: break;
 11171  1E43  2E74               	goto	l274
 11172  1E44                     l276:	
 11173                           ;usb_device.c: 2308: case (0x02):
 11174                           
 11175                           
 11176                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
 11177  1E44  0021               	movlb	1	; select bank1
 11178  1E45  17EB               	bsf	(_inPipes^(0+128)+2),7
 11179                           
 11180                           ;usb_device.c: 2313: {
 11181                           ;usb_device.c: 2314: BDT_ENTRY *p;
 11182                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
 11183  1E46  0020               	movlb	0	; select bank0
 11184  1E47  1BC4               	btfsc	68,7	;volatile
 11185  1E48  2E50               	goto	l5319
 11186                           
 11187                           ;usb_device.c: 2317: {
 11188                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11189  1E49  0844               	movf	68,w	;volatile
 11190  1E4A  390F               	andlw	15
 11191  1E4B  3EB2               	addlw	_pBDTEntryOut& (0+255)
 11192  1E4C  0086               	movwf	6
 11193  1E4D  3001               	movlw	1	; select bank3/4
 11194  1E4E  0087               	movwf	7
 11195  1E4F  2E55               	goto	L16
 11196  1E50                     l5319:	
 11197                           ;usb_device.c: 2319: }
 11198                           
 11199                           
 11200                           ;usb_device.c: 2320: else
 11201                           ;usb_device.c: 2321: {
 11202                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11203  1E50  0844               	movf	68,w	;volatile
 11204  1E51  390F               	andlw	15
 11205  1E52  3EE3               	addlw	_pBDTEntryIn& (0+255)
 11206  1E53  0086               	movwf	6
 11207  1E54  0187               	clrf	7
 11208  1E55                     L16:	
 11209  1E55  0801               	movf	1,w
 11210  1E56  00DE               	movwf	??_USBStdGetStatusHandler
 11211  1E57  085E               	movf	??_USBStdGetStatusHandler,w
 11212  1E58  00DF               	movwf	USBStdGetStatusHandler@p
 11213                           
 11214                           ;usb_device.c: 2323: }
 11215                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 11216  1E59  085F               	movf	USBStdGetStatusHandler@p,w
 11217  1E5A  0086               	movwf	6
 11218  1E5B  0187               	clrf	7
 11219  1E5C  1F81               	btfss	1,7
 11220  1E5D  2E74               	goto	l274
 11221  1E5E  085F               	movf	USBStdGetStatusHandler@p,w
 11222  1E5F  0086               	movwf	6
 11223  1E60  0187               	clrf	7
 11224  1E61  1D01               	btfss	1,2
 11225  1E62  2E74               	goto	l274
 11226                           
 11227                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
 11228  1E63  3001               	movlw	1
 11229  1E64  00DE               	movwf	??_USBStdGetStatusHandler
 11230  1E65  085E               	movf	??_USBStdGetStatusHandler,w
 11231  1E66  00C8               	movwf	72	;volatile
 11232                           
 11233                           ;usb_device.c: 2328: }
 11234                           ;usb_device.c: 2329: }
 11235                           
 11236                           ;usb_device.c: 2327: break;
 11237  1E67  2E74               	goto	l274
 11238  1E68                     l5329:	
 11239  1E68  0840               	movf	64,w	;volatile
 11240  1E69  391F               	andlw	31
 11241                           
 11242                           ; Switch size 1, requested type "space"
 11243                           ; Number of cases is 3, Range of values is 0 to 2
 11244                           ; switch strategies available:
 11245                           ; Name         Instructions Cycles
 11246                           ; simple_byte           10     6 (average)
 11247                           ; direct_byte           12     6 (fixed)
 11248                           ; jumptable            260     6 (fixed)
 11249                           ; rangetable             7     4 (fixed)
 11250                           ; spacedrange           11     6 (fixed)
 11251                           ; locatedrange           3     3 (fixed)
 11252                           ;	Chosen strategy is simple_byte
 11253  1E6A  3A00               	xorlw	0	; case 0
 11254  1E6B  1903               	skipnz
 11255  1E6C  2E35               	goto	l271
 11256  1E6D  3A01               	xorlw	1	; case 1
 11257  1E6E  1903               	skipnz
 11258  1E6F  2E41               	goto	l275
 11259  1E70  3A03               	xorlw	3	; case 2
 11260  1E71  1903               	skipnz
 11261  1E72  2E44               	goto	l276
 11262  1E73  2E74               	goto	l274
 11263  1E74                     l274:	
 11264                           
 11265                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
 11266  1E74  0021               	movlb	1	; select bank1
 11267  1E75  1FEB               	btfss	(_inPipes^(0+128)+2),7
 11268  1E76  0008               	return
 11269                           
 11270                           ;usb_device.c: 2332: {
 11271                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
 11272  1E77  3048               	movlw	72
 11273  1E78  00E9               	movwf	_inPipes^(0+128)
 11274  1E79  3000               	movlw	0
 11275  1E7A  00EA               	movwf	(_inPipes+1)^(0+128)
 11276                           
 11277                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11278  1E7B  146B               	bsf	(_inPipes^(0+128)+2),0
 11279                           
 11280                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
 11281  1E7C  3002               	movlw	2
 11282  1E7D  0020               	movlb	0	; select bank0
 11283  1E7E  00DE               	movwf	??_USBStdGetStatusHandler
 11284  1E7F  085E               	movf	??_USBStdGetStatusHandler,w
 11285  1E80  0021               	movlb	1	; select bank1
 11286  1E81  00EC               	movwf	(_inPipes^(0+128)+3)
 11287  1E82  0008               	return
 11288  1E83                     __end_of_USBStdGetStatusHandler:	
 11289                           
 11290                           	psect	text39
 11291  1271                     __ptext39:	
 11292 ;; *************** function _USBStdGetDscHandler *****************
 11293 ;; Defined at:
 11294 ;;		line 2207 in file "../USB/usb_device.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;		None               void
 11301 ;; Registers used:
 11302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11310 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11311 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;Total ram usage:        3 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:    4
 11315 ;; This function calls:
 11316 ;;		Nothing
 11317 ;; This function is called by:
 11318 ;;		_USBCheckStdRequest
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           
 11323                           ;psect for function _USBStdGetDscHandler
 11324  1271                     _USBStdGetDscHandler:	
 11325                           
 11326                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
 11327                           
 11328                           ;incstack = 0
 11329                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11330  1271  0020               	movlb	0	; select bank0
 11331  1272  0840               	movf	64,w	;volatile
 11332  1273  3A80               	xorlw	128
 11333  1274  1D03               	skipz
 11334  1275  0008               	return
 11335                           
 11336                           ;usb_device.c: 2209: {
 11337                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11338  1276  30C0               	movlw	192
 11339  1277  00DE               	movwf	??_USBStdGetDscHandler
 11340  1278  085E               	movf	??_USBStdGetDscHandler,w
 11341  1279  0021               	movlb	1	; select bank1
 11342  127A  00EB               	movwf	(_inPipes^(0+128)+2)
 11343                           
 11344                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
 11345  127B  2AE3               	goto	l5307
 11346  127C                     l5287:	
 11347                           ;usb_device.c: 2213: {
 11348                           ;usb_device.c: 2214: case 0x01:
 11349                           
 11350                           
 11351                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
 11352  127C  308D               	movlw	low (_device_dsc| (0+32768))
 11353  127D  0021               	movlb	1	; select bank1
 11354  127E  00E9               	movwf	_inPipes^(0+128)
 11355  127F  3088               	movlw	high (_device_dsc| (0+32768))
 11356  1280  00EA               	movwf	(_inPipes+1)^(0+128)
 11357                           
 11358                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
 11359  1281  3012               	movlw	18
 11360  1282  00EC               	movwf	(_inPipes^(0+128)+3)
 11361  1283  3000               	movlw	0
 11362  1284  00ED               	movwf	(_inPipes^(0+128)+4)
 11363                           
 11364                           ;usb_device.c: 2221: break;
 11365  1285  0008               	return
 11366  1286                     l5289:	
 11367                           ;usb_device.c: 2222: case 0x02:
 11368                           
 11369                           
 11370                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11371  1286  3004               	movlw	low (_USB_CD_Ptr| (0+32768))
 11372  1287  0084               	movwf	4
 11373  1288  3088               	movlw	high (_USB_CD_Ptr| (0+32768))
 11374  1289  0085               	movwf	5
 11375  128A  0020               	movlb	0	; select bank0
 11376  128B  0842               	movf	66,w	;volatile
 11377  128C  0784               	addwf	4,f
 11378  128D  1803               	skipnc
 11379  128E  0A85               	incf	5,f
 11380  128F  3F00               	moviw [0]fsr0
 11381  1290  0021               	movlb	1	; select bank1
 11382  1291  00E9               	movwf	_inPipes^(0+128)
 11383  1292  3088               	movlw	(high __stringtab)| (0+128)
 11384  1293  00EA               	movwf	(_inPipes+1)^(0+128)
 11385                           
 11386                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11387  1294  086A               	movf	(_inPipes+1)^(0+128),w
 11388  1295  0020               	movlb	0	; select bank0
 11389  1296  00DF               	movwf	??_USBStdGetDscHandler+1
 11390  1297  0021               	movlb	1	; select bank1
 11391  1298  0869               	movf	_inPipes^(0+128),w
 11392  1299  0020               	movlb	0	; select bank0
 11393  129A  00DE               	movwf	??_USBStdGetDscHandler
 11394  129B  3002               	movlw	2
 11395  129C  075E               	addwf	??_USBStdGetDscHandler,w
 11396  129D  0084               	movwf	4
 11397  129E  085F               	movf	??_USBStdGetDscHandler+1,w
 11398  129F  1803               	skipnc
 11399  12A0  0A5F               	incf	??_USBStdGetDscHandler+1,w
 11400  12A1  0085               	movwf	5
 11401  12A2  0800               	movf	0,w	;code access
 11402  12A3  00E0               	movwf	??_USBStdGetDscHandler+2
 11403  12A4  0860               	movf	??_USBStdGetDscHandler+2,w
 11404  12A5  0021               	movlb	1	; select bank1
 11405  12A6  00EC               	movwf	(_inPipes^(0+128)+3)
 11406                           
 11407                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11408  12A7  086A               	movf	(_inPipes+1)^(0+128),w
 11409  12A8  0020               	movlb	0	; select bank0
 11410  12A9  00DF               	movwf	??_USBStdGetDscHandler+1
 11411  12AA  0021               	movlb	1	; select bank1
 11412  12AB  0869               	movf	_inPipes^(0+128),w
 11413  12AC  0020               	movlb	0	; select bank0
 11414  12AD  00DE               	movwf	??_USBStdGetDscHandler
 11415  12AE  3003               	movlw	3
 11416  12AF  075E               	addwf	??_USBStdGetDscHandler,w
 11417  12B0  0084               	movwf	4
 11418  12B1  085F               	movf	??_USBStdGetDscHandler+1,w
 11419  12B2  1803               	skipnc
 11420  12B3  0A5F               	incf	??_USBStdGetDscHandler+1,w
 11421  12B4  0085               	movwf	5
 11422  12B5  0800               	movf	0,w	;code access
 11423  12B6  00E0               	movwf	??_USBStdGetDscHandler+2
 11424  12B7  0860               	movf	??_USBStdGetDscHandler+2,w
 11425  12B8  0021               	movlb	1	; select bank1
 11426  12B9  00ED               	movwf	(_inPipes^(0+128)+4)
 11427                           
 11428                           ;usb_device.c: 2234: break;
 11429  12BA  0008               	return
 11430  12BB                     l5295:	
 11431                           ;usb_device.c: 2235: case 0x03:
 11432                           
 11433                           
 11434                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
 11435  12BB  3003               	movlw	3
 11436  12BC  0020               	movlb	0	; select bank0
 11437  12BD  0242               	subwf	66,w	;volatile
 11438  12BE  1803               	skipnc
 11439  12BF  2ADD               	goto	l5301
 11440                           
 11441                           ;usb_device.c: 2240: {
 11442                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11443  12C0  3001               	movlw	low (_USB_SD_Ptr| (0+32768))
 11444  12C1  0084               	movwf	4
 11445  12C2  3088               	movlw	high (_USB_SD_Ptr| (0+32768))
 11446  12C3  0085               	movwf	5
 11447  12C4  0842               	movf	66,w	;volatile
 11448  12C5  0784               	addwf	4,f
 11449  12C6  1803               	skipnc
 11450  12C7  0A85               	incf	5,f
 11451  12C8  3F00               	moviw [0]fsr0
 11452  12C9  0021               	movlb	1	; select bank1
 11453  12CA  00E9               	movwf	_inPipes^(0+128)
 11454  12CB  3088               	movlw	(high __stringtab)| (0+128)
 11455  12CC  00EA               	movwf	(_inPipes+1)^(0+128)
 11456                           
 11457                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11458  12CD  0869               	movf	_inPipes^(0+128),w
 11459  12CE  0084               	movwf	4
 11460  12CF  086A               	movf	(_inPipes+1)^(0+128),w
 11461  12D0  0085               	movwf	5
 11462  12D1  0800               	movf	0,w	;code access
 11463  12D2  0020               	movlb	0	; select bank0
 11464  12D3  00DE               	movwf	??_USBStdGetDscHandler
 11465  12D4  01DF               	clrf	??_USBStdGetDscHandler+1
 11466  12D5  085E               	movf	??_USBStdGetDscHandler,w
 11467  12D6  0021               	movlb	1	; select bank1
 11468  12D7  00EC               	movwf	(_inPipes^(0+128)+3)
 11469  12D8  0020               	movlb	0	; select bank0
 11470  12D9  085F               	movf	??_USBStdGetDscHandler+1,w
 11471  12DA  0021               	movlb	1	; select bank1
 11472  12DB  00ED               	movwf	((_inPipes+1)^(0+128)+3)
 11473                           
 11474                           ;usb_device.c: 2245: }
 11475  12DC  0008               	return
 11476  12DD                     l5301:	
 11477                           
 11478                           ;usb_device.c: 2255: else
 11479                           ;usb_device.c: 2256: {
 11480                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
 11481  12DD  0021               	movlb	1	; select bank1
 11482  12DE  01EB               	clrf	(_inPipes^(0+128)+2)
 11483                           
 11484                           ;usb_device.c: 2258: }
 11485                           ;usb_device.c: 2259: break;
 11486  12DF  0008               	return
 11487  12E0                     l5303:	
 11488                           ;usb_device.c: 2260: default:
 11489                           
 11490                           
 11491                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
 11492  12E0  0021               	movlb	1	; select bank1
 11493  12E1  01EB               	clrf	(_inPipes^(0+128)+2)
 11494                           
 11495                           ;usb_device.c: 2263: }
 11496                           
 11497                           ;usb_device.c: 2262: break;
 11498  12E2  0008               	return
 11499  12E3                     l5307:	
 11500  12E3  0020               	movlb	0	; select bank0
 11501  12E4  0843               	movf	67,w	;volatile
 11502                           
 11503                           ; Switch size 1, requested type "space"
 11504                           ; Number of cases is 3, Range of values is 1 to 3
 11505                           ; switch strategies available:
 11506                           ; Name         Instructions Cycles
 11507                           ; simple_byte           10     6 (average)
 11508                           ; direct_byte           15     9 (fixed)
 11509                           ; jumptable            263     9 (fixed)
 11510                           ;	Chosen strategy is simple_byte
 11511  12E5  3A01               	xorlw	1	; case 1
 11512  12E6  1903               	skipnz
 11513  12E7  2A7C               	goto	l5287
 11514  12E8  3A03               	xorlw	3	; case 2
 11515  12E9  1903               	skipnz
 11516  12EA  2A86               	goto	l5289
 11517  12EB  3A01               	xorlw	1	; case 3
 11518  12EC  1903               	skipnz
 11519  12ED  2ABB               	goto	l5295
 11520  12EE  2AE0               	goto	l5303
 11521  12EF  0008               	return
 11522  12F0                     __end_of_USBStdGetDscHandler:	
 11523                           
 11524                           	psect	text40
 11525  1372                     __ptext40:	
 11526 ;; *************** function _USBStdSetCfgHandler *****************
 11527 ;; Defined at:
 11528 ;;		line 2132 in file "../USB/usb_device.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;		None
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  p               2   18[BANK1 ] PTR unsigned char 
 11533 ;;		 -> UEP1(1), 
 11534 ;;  i               1   20[BANK1 ] unsigned char 
 11535 ;;  i               1   21[BANK1 ] unsigned char 
 11536 ;; Return value:  Size  Location     Type
 11537 ;;		None               void
 11538 ;; Registers used:
 11539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11549 ;;Total ram usage:        5 bytes
 11550 ;; Hardware stack levels used:    1
 11551 ;; Hardware stack levels required when called:    8
 11552 ;; This function calls:
 11553 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11554 ;;		_memset
 11555 ;; This function is called by:
 11556 ;;		_USBCheckStdRequest
 11557 ;; This function uses a non-reentrant model
 11558 ;;
 11559                           
 11560                           
 11561                           ;psect for function _USBStdSetCfgHandler
 11562  1372                     _USBStdSetCfgHandler:	
 11563                           
 11564                           ;usb_device.c: 2133: BYTE i;
 11565                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
 11566                           
 11567                           ;incstack = 0
 11568                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11569  1372  0021               	movlb	1	; select bank1
 11570  1373  17EB               	bsf	(_inPipes^(0+128)+2),7
 11571                           
 11572                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 11573  1374  300E               	movlw	14
 11574  1375  00B3               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 11575  1376  3099               	movlw	153
 11576  1377  00B2               	movwf	USBStdSetCfgHandler@p^(0+128)
 11577  1378  01B4               	clrf	USBStdSetCfgHandler@i_1089^(0+128)
 11578  1379  0834               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11579  137A  1D03               	skipz
 11580  137B  2B8C               	goto	l7259
 11581  137C                     l7251:	
 11582  137C  0832               	movf	USBStdSetCfgHandler@p^(0+128),w
 11583  137D  0086               	movwf	6
 11584  137E  0833               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 11585  137F  0087               	movwf	7
 11586  1380  0181               	clrf	1
 11587  1381  3001               	movlw	1
 11588  1382  07B2               	addwf	USBStdSetCfgHandler@p^(0+128),f
 11589  1383  3000               	movlw	0
 11590  1384  3DB3               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 11591  1385  3001               	movlw	1
 11592  1386  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11593  1387  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11594  1388  07B4               	addwf	USBStdSetCfgHandler@i_1089^(0+128),f
 11595  1389  0834               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11596  138A  1903               	btfsc	3,2
 11597  138B  2B7C               	goto	l7251
 11598  138C                     l7259:	
 11599                           
 11600                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11601  138C  3000               	movlw	0
 11602  138D  0020               	movlb	0	; select bank0
 11603  138E  00DE               	movwf	?_memset
 11604  138F  3000               	movlw	0
 11605  1390  00DF               	movwf	?_memset+1
 11606  1391  3020               	movlw	32
 11607  1392  00E0               	movwf	?_memset+2
 11608  1393  3000               	movlw	0
 11609  1394  00E1               	movwf	?_memset+3
 11610  1395  3020               	movlw	32
 11611  1396  319B  2351  3193   	fcall	_memset
 11612                           
 11613                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
 11614  1399  003D               	movlb	29	; select bank29
 11615  139A  170E               	bsf	14,6	;volatile
 11616                           
 11617                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(1+1u); i++)
 11618  139B  0021               	movlb	1	; select bank1
 11619  139C  01B5               	clrf	USBStdSetCfgHandler@i^(0+128)
 11620  139D  3002               	movlw	2
 11621  139E  0235               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11622  139F  1803               	btfsc	3,0
 11623  13A0  2BB5               	goto	l7275
 11624  13A1                     l7269:	
 11625                           
 11626                           ;usb_device.c: 2151: {
 11627                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
 11628  13A1  0835               	movf	USBStdSetCfgHandler@i^(0+128),w
 11629  13A2  3EAE               	addlw	_ep_data_in& (0+255)
 11630  13A3  0086               	movwf	6
 11631  13A4  3001               	movlw	1	; select bank3/4
 11632  13A5  0087               	movwf	7
 11633  13A6  0181               	clrf	1
 11634                           
 11635                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
 11636  13A7  0835               	movf	USBStdSetCfgHandler@i^(0+128),w
 11637  13A8  3EB0               	addlw	_ep_data_out& (0+255)
 11638  13A9  0086               	movwf	6
 11639  13AA  3001               	movlw	1	; select bank3/4
 11640  13AB  0087               	movwf	7
 11641  13AC  0181               	clrf	1
 11642  13AD  3001               	movlw	1
 11643  13AE  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11644  13AF  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11645  13B0  07B5               	addwf	USBStdSetCfgHandler@i^(0+128),f
 11646  13B1  3002               	movlw	2
 11647  13B2  0235               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11648  13B3  1C03               	skipc
 11649  13B4  2BA1               	goto	l7269
 11650  13B5                     l7275:	
 11651                           
 11652                           ;usb_device.c: 2154: }
 11653                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,1);
 11654  13B5  3000               	movlw	0
 11655  13B6  0020               	movlb	0	; select bank0
 11656  13B7  00DE               	movwf	?_memset
 11657  13B8  3000               	movlw	0
 11658  13B9  00DF               	movwf	?_memset+1
 11659  13BA  3001               	movlw	1
 11660  13BB  00E0               	movwf	?_memset+2
 11661  13BC  3000               	movlw	0
 11662  13BD  00E1               	movwf	?_memset+3
 11663  13BE  306E               	movlw	_USBAlternateInterface& (0+255)
 11664  13BF  319B  2351  3193   	fcall	_memset
 11665                           
 11666                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
 11667  13C2  003D               	movlb	29	; select bank29
 11668  13C3  130E               	bcf	14,6	;volatile
 11669                           
 11670                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11671  13C4  3028               	movlw	40
 11672  13C5  0021               	movlb	1	; select bank1
 11673  13C6  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11674  13C7  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11675  13C8  00E3               	movwf	_pBDTEntryIn^(0+128)
 11676                           
 11677                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11678  13C9  3020               	movlw	32
 11679  13CA  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11680  13CB  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11681  13CC  00E8               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
 11682                           
 11683                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11684  13CD  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 11685  13CE  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11686  13CF  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11687  13D0  0020               	movlb	0	; select bank0
 11688  13D1  00EA               	movwf	_pBDTEntryEP0OutNext
 11689                           
 11690                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11691  13D2  0842               	movf	66,w	;volatile
 11692  13D3  0021               	movlb	1	; select bank1
 11693  13D4  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11694  13D5  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11695  13D6  0020               	movlb	0	; select bank0
 11696  13D7  00ED               	movwf	_USBActiveConfiguration
 11697                           
 11698                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
 11699  13D8  08ED               	movf	_USBActiveConfiguration,f
 11700  13D9  1D03               	skipz
 11701  13DA  2BE1               	goto	l7291
 11702                           
 11703                           ;usb_device.c: 2173: {
 11704                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
 11705  13DB  3010               	movlw	16
 11706  13DC  0021               	movlb	1	; select bank1
 11707  13DD  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11708  13DE  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11709  13DF  00E6               	movwf	_USBDeviceState^(0+128)
 11710                           
 11711                           ;usb_device.c: 2176: }
 11712  13E0  0008               	return
 11713  13E1                     l7291:	
 11714                           
 11715                           ;usb_device.c: 2177: else
 11716                           ;usb_device.c: 2178: {
 11717                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11718  13E1  3001               	movlw	1
 11719  13E2  0021               	movlb	1	; select bank1
 11720  13E3  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11721  13E4  3000               	movlw	0
 11722  13E5  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11723  13E6  306D               	movlw	_USBActiveConfiguration& (0+255)
 11724  13E7  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11725  13E8  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11726  13E9  00AE               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11727  13EA  3001               	movlw	1
 11728  13EB  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 11729  13EC  3000               	movlw	0
 11730  13ED  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11731  13EE  319C  248E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11732                           
 11733                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
 11734  13F0  3020               	movlw	32
 11735  13F1  0021               	movlb	1	; select bank1
 11736  13F2  00B1               	movwf	??_USBStdSetCfgHandler^(0+128)
 11737  13F3  0831               	movf	??_USBStdSetCfgHandler^(0+128),w
 11738  13F4  00E6               	movwf	_USBDeviceState^(0+128)
 11739  13F5  0008               	return
 11740  13F6                     __end_of_USBStdSetCfgHandler:	
 11741                           
 11742                           	psect	text41
 11743  1B51                     __ptext41:	
 11744 ;; *************** function _memset *****************
 11745 ;; Defined at:
 11746 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memset.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;  p1              1    wreg     PTR void 
 11749 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11750 ;;  c               2   14[BANK0 ] int 
 11751 ;;  n               2   16[BANK0 ] unsigned int 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  p1              1    1[BANK1 ] PTR void 
 11754 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11755 ;;  p               1    2[BANK1 ] PTR unsigned char 
 11756 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1    wreg      PTR void 
 11759 ;; Registers used:
 11760 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11766 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;Total ram usage:        7 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:    4
 11773 ;; This function calls:
 11774 ;;		Nothing
 11775 ;; This function is called by:
 11776 ;;		_USBStdSetCfgHandler
 11777 ;; This function uses a non-reentrant model
 11778 ;;
 11779                           
 11780                           
 11781                           ;psect for function _memset
 11782  1B51                     _memset:	
 11783                           
 11784                           ;incstack = 0
 11785                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11786                           ;memset@p1 stored from wreg
 11787  1B51  0021               	movlb	1	; select bank1
 11788  1B52  00A1               	movwf	memset@p1^(0+128)
 11789  1B53  0821               	movf	memset@p1^(0+128),w
 11790  1B54  00A0               	movwf	??_memset^(0+128)
 11791  1B55  0820               	movf	??_memset^(0+128),w
 11792  1B56  00A2               	movwf	memset@p^(0+128)
 11793  1B57                     l5281:	
 11794  1B57  3001               	movlw	1
 11795  1B58  0020               	movlb	0	; select bank0
 11796  1B59  02E0               	subwf	memset@n,f
 11797  1B5A  3000               	movlw	0
 11798  1B5B  3BE1               	subwfb	memset@n+1,f
 11799  1B5C  30FF               	movlw	255
 11800  1B5D  0661               	xorwf	memset@n+1,w
 11801  1B5E  1D03               	skipz
 11802  1B5F  2B62               	goto	u4235
 11803  1B60  30FF               	movlw	255
 11804  1B61  0660               	xorwf	memset@n,w
 11805  1B62                     u4235:	
 11806  1B62  1903               	btfsc	3,2
 11807  1B63  0008               	return
 11808  1B64  0020               	movlb	0	; select bank0
 11809  1B65  085E               	movf	memset@c,w
 11810  1B66  0021               	movlb	1	; select bank1
 11811  1B67  00A0               	movwf	??_memset^(0+128)
 11812  1B68  0822               	movf	memset@p^(0+128),w
 11813  1B69  0086               	movwf	6
 11814  1B6A  0187               	clrf	7
 11815  1B6B  0820               	movf	??_memset^(0+128),w
 11816  1B6C  0081               	movwf	1
 11817  1B6D  3001               	movlw	1
 11818  1B6E  00A0               	movwf	??_memset^(0+128)
 11819  1B6F  0820               	movf	??_memset^(0+128),w
 11820  1B70  07A2               	addwf	memset@p^(0+128),f
 11821  1B71  2B57               	goto	l5281
 11822  1B72                     __end_of_memset:	
 11823                           ;	Return value of _memset is never used
 11824                           
 11825                           
 11826                           	psect	text42
 11827  147D                     __ptext42:	
 11828 ;; *************** function _USBCtrlEPServiceComplete *****************
 11829 ;; Defined at:
 11830 ;;		line 1786 in file "../USB/usb_device.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;		None
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;		None
 11835 ;; Return value:  Size  Location     Type
 11836 ;;		None               void
 11837 ;; Registers used:
 11838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;Total ram usage:        2 bytes
 11849 ;; Hardware stack levels used:    1
 11850 ;; Hardware stack levels required when called:    6
 11851 ;; This function calls:
 11852 ;;		_USBCtrlEPAllowStatusStage
 11853 ;;		_USBCtrlEPAllowDataStage
 11854 ;; This function is called by:
 11855 ;;		_USBCtrlTrfSetupHandler
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           
 11860                           ;psect for function _USBCtrlEPServiceComplete
 11861  147D                     _USBCtrlEPServiceComplete:	
 11862                           
 11863                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
 11864                           
 11865                           ;incstack = 0
 11866                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11867  147D  003D               	movlb	29	; select bank29
 11868  147E  120E               	bcf	14,4	;volatile
 11869                           
 11870                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
 11871  147F  0021               	movlb	1	; select bank1
 11872  1480  1BEB               	btfsc	(_inPipes^(0+128)+2),7
 11873  1481  2CBF               	goto	l208
 11874                           
 11875                           ;usb_device.c: 1798: {
 11876                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
 11877  1482  0023               	movlb	3	; select bank3
 11878  1483  1FA2               	btfss	(_outPipes^(0+384)+2),7
 11879  1484  2C96               	goto	l7173
 11880                           
 11881                           ;usb_device.c: 1800: {
 11882                           ;usb_device.c: 1801: controlTransferState = 2;
 11883  1485  3002               	movlw	2
 11884  1486  0021               	movlb	1	; select bank1
 11885  1487  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11886  1488  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11887  1489  0020               	movlb	0	; select bank0
 11888  148A  00E8               	movwf	_controlTransferState
 11889                           
 11890                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
 11891  148B  0023               	movlb	3	; select bank3
 11892  148C  08BC               	movf	_USBDeferOUTDataStagePackets^(0+384),f
 11893  148D  1D03               	skipz
 11894  148E  2C91               	goto	l7169
 11895                           
 11896                           ;usb_device.c: 1813: {
 11897                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
 11898  148F  319E  2683         	fcall	_USBCtrlEPAllowDataStage
 11899  1491                     l7169:	
 11900                           
 11901                           ;usb_device.c: 1815: }
 11902                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
 11903  1491  0023               	movlb	3	; select bank3
 11904  1492  01BF               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11905                           
 11906                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
 11907  1493  0022               	movlb	2	; select bank2
 11908  1494  01E9               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11909                           
 11910                           ;usb_device.c: 1821: }
 11911  1495  0008               	return
 11912  1496                     l7173:	
 11913                           
 11914                           ;usb_device.c: 1822: else
 11915                           ;usb_device.c: 1823: {
 11916                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
 11917  1496  3008               	movlw	8
 11918  1497  0021               	movlb	1	; select bank1
 11919  1498  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11920  1499  0020               	movlb	0	; select bank0
 11921  149A  0A6A               	incf	_pBDTEntryEP0OutNext,w
 11922  149B  0086               	movwf	6
 11923  149C  0187               	clrf	7
 11924  149D  0021               	movlb	1	; select bank1
 11925  149E  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11926  149F  0081               	movwf	1
 11927                           
 11928                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 11929  14A0  3040               	movlw	64
 11930  14A1  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11931  14A2  3000               	movlw	0
 11932  14A3  00A3               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
 11933  14A4  0020               	movlb	0	; select bank0
 11934  14A5  086A               	movf	_pBDTEntryEP0OutNext,w
 11935  14A6  3E02               	addlw	2
 11936  14A7  0086               	movwf	6
 11937  14A8  0187               	clrf	7
 11938  14A9  0021               	movlb	1	; select bank1
 11939  14AA  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11940  14AB  3FC0               	movwi [0]fsr1
 11941  14AC  0823               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
 11942  14AD  3FC1               	movwi [1]fsr1
 11943                           
 11944                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 11945  14AE  308C               	movlw	140
 11946  14AF  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11947  14B0  0020               	movlb	0	; select bank0
 11948  14B1  086A               	movf	_pBDTEntryEP0OutNext,w
 11949  14B2  0086               	movwf	6
 11950  14B3  0187               	clrf	7
 11951  14B4  0021               	movlb	1	; select bank1
 11952  14B5  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11953  14B6  0081               	movwf	1
 11954                           
 11955                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
 11956  14B7  3084               	movlw	132
 11957  14B8  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 11958  14B9  0863               	movf	_pBDTEntryIn^(0+128),w
 11959  14BA  0086               	movwf	6
 11960  14BB  0187               	clrf	7
 11961  14BC  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 11962  14BD  0081               	movwf	1
 11963                           
 11964                           ;usb_device.c: 1832: }
 11965                           ;usb_device.c: 1833: }
 11966  14BE  0008               	return
 11967  14BF                     l208:	
 11968                           
 11969                           ;usb_device.c: 1834: else
 11970                           ;usb_device.c: 1835: {
 11971                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
 11972  14BF  0020               	movlb	0	; select bank0
 11973  14C0  1FC0               	btfss	64,7	;volatile
 11974  14C1  2CD6               	goto	l7189
 11975                           
 11976                           ;usb_device.c: 1837: {
 11977                           ;usb_device.c: 1838: controlTransferState = 1;
 11978  14C2  01E8               	clrf	_controlTransferState
 11979  14C3  0AE8               	incf	_controlTransferState,f
 11980                           
 11981                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
 11982  14C4  0023               	movlb	3	; select bank3
 11983  14C5  08BB               	movf	_USBDeferINDataStagePackets^(0+384),f
 11984  14C6  1D03               	skipz
 11985  14C7  2CCB               	goto	l7181
 11986                           
 11987                           ;usb_device.c: 1853: {
 11988                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
 11989  14C8  319E  2683  3194   	fcall	_USBCtrlEPAllowDataStage
 11990  14CB                     l7181:	
 11991                           
 11992                           ;usb_device.c: 1855: }
 11993                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
 11994  14CB  0023               	movlb	3	; select bank3
 11995  14CC  01BF               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11996                           
 11997                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
 11998  14CD  0022               	movlb	2	; select bank2
 11999  14CE  01E9               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12000                           
 12001                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
 12002  14CF  0020               	movlb	0	; select bank0
 12003  14D0  08E7               	movf	_USBDeferStatusStagePacket,f
 12004  14D1  1D03               	skipz
 12005  14D2  0008               	return
 12006                           
 12007                           ;usb_device.c: 1880: {
 12008                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
 12009  14D3  3190  2094         	fcall	_USBCtrlEPAllowStatusStage
 12010                           
 12011                           ;usb_device.c: 1882: }
 12012                           ;usb_device.c: 1883: }
 12013  14D5  0008               	return
 12014  14D6                     l7189:	
 12015                           
 12016                           ;usb_device.c: 1884: else
 12017                           ;usb_device.c: 1885: {
 12018                           ;usb_device.c: 1896: controlTransferState = 2;
 12019  14D6  3002               	movlw	2
 12020  14D7  0021               	movlb	1	; select bank1
 12021  14D8  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 12022  14D9  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 12023  14DA  0020               	movlb	0	; select bank0
 12024  14DB  00E8               	movwf	_controlTransferState
 12025                           
 12026                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
 12027  14DC  3008               	movlw	8
 12028  14DD  0021               	movlb	1	; select bank1
 12029  14DE  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 12030  14DF  0020               	movlb	0	; select bank0
 12031  14E0  0A6A               	incf	_pBDTEntryEP0OutNext,w
 12032  14E1  0086               	movwf	6
 12033  14E2  0187               	clrf	7
 12034  14E3  0021               	movlb	1	; select bank1
 12035  14E4  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 12036  14E5  0081               	movwf	1
 12037                           
 12038                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12039  14E6  3040               	movlw	64
 12040  14E7  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 12041  14E8  3000               	movlw	0
 12042  14E9  00A3               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
 12043  14EA  0020               	movlb	0	; select bank0
 12044  14EB  086A               	movf	_pBDTEntryEP0OutNext,w
 12045  14EC  3E02               	addlw	2
 12046  14ED  0086               	movwf	6
 12047  14EE  0187               	clrf	7
 12048  14EF  0021               	movlb	1	; select bank1
 12049  14F0  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 12050  14F1  3FC0               	movwi [0]fsr1
 12051  14F2  0823               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
 12052  14F3  3FC1               	movwi [1]fsr1
 12053                           
 12054                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 12055  14F4  3084               	movlw	132
 12056  14F5  00A2               	movwf	??_USBCtrlEPServiceComplete^(0+128)
 12057  14F6  0020               	movlb	0	; select bank0
 12058  14F7  086A               	movf	_pBDTEntryEP0OutNext,w
 12059  14F8  0086               	movwf	6
 12060  14F9  0187               	clrf	7
 12061  14FA  0021               	movlb	1	; select bank1
 12062  14FB  0822               	movf	??_USBCtrlEPServiceComplete^(0+128),w
 12063  14FC  0081               	movwf	1
 12064                           
 12065                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
 12066  14FD  0023               	movlb	3	; select bank3
 12067  14FE  01BF               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 12068                           
 12069                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
 12070  14FF  0022               	movlb	2	; select bank2
 12071  1500  01E9               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12072                           
 12073                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
 12074  1501  0020               	movlb	0	; select bank0
 12075  1502  08E7               	movf	_USBDeferStatusStagePacket,f
 12076  1503  1D03               	skipz
 12077  1504  0008               	return
 12078                           
 12079                           ;usb_device.c: 1907: {
 12080                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
 12081  1505  3190  2094         	fcall	_USBCtrlEPAllowStatusStage
 12082  1507  0008               	return
 12083  1508                     __end_of_USBCtrlEPServiceComplete:	
 12084                           
 12085                           	psect	text43
 12086  1E83                     __ptext43:	
 12087 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12088 ;; Defined at:
 12089 ;;		line 1660 in file "../USB/usb_device.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;		None
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;		None
 12094 ;; Return value:  Size  Location     Type
 12095 ;;		None               void
 12096 ;; Registers used:
 12097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12098 ;; Tracked objects:
 12099 ;;		On entry : 0/0
 12100 ;;		On exit  : 0/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;Total ram usage:        2 bytes
 12108 ;; Hardware stack levels used:    1
 12109 ;; Hardware stack levels required when called:    5
 12110 ;; This function calls:
 12111 ;;		_USBCtrlTrfTxService
 12112 ;; This function is called by:
 12113 ;;		_USBCtrlEPServiceComplete
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           
 12118                           ;psect for function _USBCtrlEPAllowDataStage
 12119  1E83                     _USBCtrlEPAllowDataStage:	
 12120                           
 12121                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
 12122                           
 12123                           ;incstack = 0
 12124                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12125  1E83  0023               	movlb	3	; select bank3
 12126  1E84  01BB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 12127                           
 12128                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
 12129  1E85  01BC               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 12130                           
 12131                           ;usb_device.c: 1664: if(controlTransferState == 2)
 12132  1E86  0020               	movlb	0	; select bank0
 12133  1E87  0868               	movf	_controlTransferState,w
 12134  1E88  3A02               	xorlw	2
 12135  1E89  1D03               	skipz
 12136  1E8A  2EAD               	goto	l7107
 12137                           
 12138                           ;usb_device.c: 1665: {
 12139                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
 12140  1E8B  3008               	movlw	8
 12141  1E8C  0021               	movlb	1	; select bank1
 12142  1E8D  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 12143  1E8E  0020               	movlb	0	; select bank0
 12144  1E8F  0A6A               	incf	_pBDTEntryEP0OutNext,w
 12145  1E90  0086               	movwf	6
 12146  1E91  0187               	clrf	7
 12147  1E92  0021               	movlb	1	; select bank1
 12148  1E93  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 12149  1E94  0081               	movwf	1
 12150                           
 12151                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 12152  1E95  3048               	movlw	72
 12153  1E96  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 12154  1E97  3000               	movlw	0
 12155  1E98  00A1               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
 12156  1E99  0020               	movlb	0	; select bank0
 12157  1E9A  086A               	movf	_pBDTEntryEP0OutNext,w
 12158  1E9B  3E02               	addlw	2
 12159  1E9C  0086               	movwf	6
 12160  1E9D  0187               	clrf	7
 12161  1E9E  0021               	movlb	1	; select bank1
 12162  1E9F  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 12163  1EA0  3FC0               	movwi [0]fsr1
 12164  1EA1  0821               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
 12165  1EA2  3FC1               	movwi [1]fsr1
 12166                           
 12167                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12168  1EA3  30C8               	movlw	200
 12169  1EA4  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 12170  1EA5  0020               	movlb	0	; select bank0
 12171  1EA6  086A               	movf	_pBDTEntryEP0OutNext,w
 12172  1EA7  0086               	movwf	6
 12173  1EA8  0187               	clrf	7
 12174  1EA9  0021               	movlb	1	; select bank1
 12175  1EAA  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 12176  1EAB  0081               	movwf	1
 12177                           
 12178                           ;usb_device.c: 1670: }
 12179  1EAC  0008               	return
 12180  1EAD                     l7107:	
 12181                           
 12182                           ;usb_device.c: 1671: else
 12183                           ;usb_device.c: 1672: {
 12184                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 12185  1EAD  0021               	movlb	1	; select bank1
 12186  1EAE  086D               	movf	((_inPipes+1)^(0+128)+3),w
 12187  1EAF  0020               	movlb	0	; select bank0
 12188  1EB0  0247               	subwf	71,w	;volatile
 12189  1EB1  1D03               	skipz
 12190  1EB2  2EB7               	goto	u7055
 12191  1EB3  0021               	movlb	1	; select bank1
 12192  1EB4  086C               	movf	(_inPipes^(0+128)+3),w
 12193  1EB5  0020               	movlb	0	; select bank0
 12194  1EB6  0246               	subwf	70,w	;volatile
 12195  1EB7                     u7055:	
 12196  1EB7  1803               	skipnc
 12197  1EB8  2EC2               	goto	l7111
 12198                           
 12199                           ;usb_device.c: 1676: {
 12200                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
 12201  1EB9  0847               	movf	71,w	;volatile
 12202  1EBA  0021               	movlb	1	; select bank1
 12203  1EBB  01ED               	clrf	((_inPipes+1)^(0+128)+3)
 12204  1EBC  07ED               	addwf	((_inPipes+1)^(0+128)+3),f
 12205  1EBD  0020               	movlb	0	; select bank0
 12206  1EBE  0846               	movf	70,w	;volatile
 12207  1EBF  0021               	movlb	1	; select bank1
 12208  1EC0  01EC               	clrf	(_inPipes^(0+128)+3)
 12209  1EC1  07EC               	addwf	(_inPipes^(0+128)+3),f
 12210  1EC2                     l7111:	
 12211                           
 12212                           ;usb_device.c: 1678: }
 12213                           ;usb_device.c: 1679: USBCtrlTrfTxService();
 12214  1EC2  3195  2508  319E   	fcall	_USBCtrlTrfTxService
 12215                           
 12216                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 12217  1EC5  3048               	movlw	72
 12218  1EC6  0021               	movlb	1	; select bank1
 12219  1EC7  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 12220  1EC8  3000               	movlw	0
 12221  1EC9  00A1               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
 12222  1ECA  0863               	movf	_pBDTEntryIn^(0+128),w
 12223  1ECB  3E02               	addlw	2
 12224  1ECC  0086               	movwf	6
 12225  1ECD  0187               	clrf	7
 12226  1ECE  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 12227  1ECF  3FC0               	movwi [0]fsr1
 12228  1ED0  0821               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
 12229  1ED1  3FC1               	movwi [1]fsr1
 12230                           
 12231                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12232  1ED2  30C8               	movlw	200
 12233  1ED3  00A0               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
 12234  1ED4  0863               	movf	_pBDTEntryIn^(0+128),w
 12235  1ED5  0086               	movwf	6
 12236  1ED6  0187               	clrf	7
 12237  1ED7  0820               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
 12238  1ED8  0081               	movwf	1
 12239  1ED9  0008               	return
 12240  1EDA                     __end_of_USBCtrlEPAllowDataStage:	
 12241                           
 12242                           	psect	text44
 12243  1508                     __ptext44:	
 12244 ;; *************** function _USBCtrlTrfTxService *****************
 12245 ;; Defined at:
 12246 ;;		line 1938 in file "../USB/usb_device.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;		None
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;  byteToSend      1   16[BANK0 ] unsigned char 
 12251 ;; Return value:  Size  Location     Type
 12252 ;;		None               void
 12253 ;; Registers used:
 12254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;Total ram usage:        3 bytes
 12265 ;; Hardware stack levels used:    1
 12266 ;; Hardware stack levels required when called:    4
 12267 ;; This function calls:
 12268 ;;		Nothing
 12269 ;; This function is called by:
 12270 ;;		_USBCtrlEPAllowDataStage
 12271 ;;		_USBCtrlTrfInHandler
 12272 ;; This function uses a non-reentrant model
 12273 ;;
 12274                           
 12275                           
 12276                           ;psect for function _USBCtrlTrfTxService
 12277  1508                     _USBCtrlTrfTxService:	
 12278                           
 12279                           ;usb_device.c: 1939: BYTE byteToSend;
 12280                           ;usb_device.c: 1943: byteToSend = 8;
 12281                           
 12282                           ;incstack = 0
 12283                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 12284  1508  3008               	movlw	8
 12285  1509  0020               	movlb	0	; select bank0
 12286  150A  00DE               	movwf	??_USBCtrlTrfTxService
 12287  150B  085E               	movf	??_USBCtrlTrfTxService,w
 12288  150C  00E0               	movwf	USBCtrlTrfTxService@byteToSend
 12289                           
 12290                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
 12291  150D  3000               	movlw	0
 12292  150E  0021               	movlb	1	; select bank1
 12293  150F  026D               	subwf	((_inPipes+1)^(0+128)+3),w
 12294  1510  3008               	movlw	8
 12295  1511  1903               	skipnz
 12296  1512  026C               	subwf	(_inPipes^(0+128)+3),w
 12297  1513  1803               	skipnc
 12298  1514  2D28               	goto	l7129
 12299                           
 12300                           ;usb_device.c: 1945: {
 12301                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
 12302  1515  086C               	movf	(_inPipes^(0+128)+3),w
 12303  1516  0020               	movlb	0	; select bank0
 12304  1517  00DE               	movwf	??_USBCtrlTrfTxService
 12305  1518  085E               	movf	??_USBCtrlTrfTxService,w
 12306  1519  00E0               	movwf	USBCtrlTrfTxService@byteToSend
 12307                           
 12308                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
 12309  151A  08EC               	movf	_shortPacketStatus,f
 12310  151B  1D03               	skipz
 12311  151C  2D20               	goto	l7125
 12312                           
 12313                           ;usb_device.c: 1954: {
 12314                           ;usb_device.c: 1955: shortPacketStatus = 1;
 12315  151D  01EC               	clrf	_shortPacketStatus
 12316  151E  0AEC               	incf	_shortPacketStatus,f
 12317                           
 12318                           ;usb_device.c: 1956: }
 12319  151F  2D28               	goto	l7129
 12320  1520                     l7125:	
 12321                           
 12322                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
 12323  1520  086C               	movf	_shortPacketStatus,w
 12324  1521  3A01               	xorlw	1
 12325  1522  1D03               	skipz
 12326  1523  2D28               	goto	l7129
 12327                           
 12328                           ;usb_device.c: 1958: {
 12329                           ;usb_device.c: 1959: shortPacketStatus = 2;
 12330  1524  3002               	movlw	2
 12331  1525  00DE               	movwf	??_USBCtrlTrfTxService
 12332  1526  085E               	movf	??_USBCtrlTrfTxService,w
 12333  1527  00EC               	movwf	_shortPacketStatus
 12334  1528                     l7129:	
 12335                           
 12336                           ;usb_device.c: 1960: }
 12337                           ;usb_device.c: 1961: }
 12338                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
 12339  1528  3003               	movlw	3
 12340  1529  3EE9               	addlw	_inPipes& (0+255)
 12341  152A  0086               	movwf	6
 12342  152B  0187               	clrf	7
 12343  152C  0020               	movlb	0	; select bank0
 12344  152D  0860               	movf	USBCtrlTrfTxService@byteToSend,w
 12345  152E  00DE               	movwf	??_USBCtrlTrfTxService
 12346  152F  01DF               	clrf	??_USBCtrlTrfTxService+1
 12347  1530  09DE               	comf	??_USBCtrlTrfTxService,f
 12348  1531  09DF               	comf	??_USBCtrlTrfTxService+1,f
 12349  1532  0ADE               	incf	??_USBCtrlTrfTxService,f
 12350  1533  1903               	skipnz
 12351  1534  0ADF               	incf	??_USBCtrlTrfTxService+1,f
 12352  1535  3F40               	moviw [0]fsr1
 12353  1536  075E               	addwf	??_USBCtrlTrfTxService,w
 12354  1537  0021               	movlb	1	; select bank1
 12355  1538  00EC               	movwf	(_inPipes^(0+128)+3)
 12356  1539  3F41               	moviw [1]fsr1
 12357  153A  0020               	movlb	0	; select bank0
 12358  153B  3D5F               	addwfc	??_USBCtrlTrfTxService+1,w
 12359  153C  0021               	movlb	1	; select bank1
 12360  153D  00ED               	movwf	(_inPipes^(0+128)+4)
 12361                           
 12362                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
 12363  153E  0020               	movlb	0	; select bank0
 12364  153F  0860               	movf	USBCtrlTrfTxService@byteToSend,w
 12365  1540  00DE               	movwf	??_USBCtrlTrfTxService
 12366  1541  0021               	movlb	1	; select bank1
 12367  1542  0A63               	incf	_pBDTEntryIn^(0+128),w
 12368  1543  0086               	movwf	6
 12369  1544  0187               	clrf	7
 12370  1545  0020               	movlb	0	; select bank0
 12371  1546  085E               	movf	??_USBCtrlTrfTxService,w
 12372  1547  0081               	movwf	1
 12373                           
 12374                           ;usb_device.c: 1974: pDst = ( BYTE*)CtrlTrfData;
 12375  1548  3048               	movlw	72
 12376  1549  00DE               	movwf	??_USBCtrlTrfTxService
 12377  154A  085E               	movf	??_USBCtrlTrfTxService,w
 12378  154B  0022               	movlb	2	; select bank2
 12379  154C  00ED               	movwf	_pDst^(0+256)
 12380                           
 12381                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12382  154D  0021               	movlb	1	; select bank1
 12383  154E  1C6B               	btfss	(_inPipes^(0+128)+2),0
 12384  154F  2D6E               	goto	l7147
 12385  1550  2D90               	goto	l7157
 12386  1551                     l7139:	
 12387                           ;usb_device.c: 1976: {
 12388                           ;usb_device.c: 1977: while(byteToSend)
 12389                           
 12390                           
 12391                           ;usb_device.c: 1978: {
 12392                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
 12393  1551  0021               	movlb	1	; select bank1
 12394  1552  0869               	movf	_inPipes^(0+128),w
 12395  1553  0084               	movwf	4
 12396  1554  086A               	movf	(_inPipes+1)^(0+128),w
 12397  1555  0085               	movwf	5
 12398  1556  0800               	movf	0,w	;code access
 12399  1557  0020               	movlb	0	; select bank0
 12400  1558  00DE               	movwf	??_USBCtrlTrfTxService
 12401  1559  0022               	movlb	2	; select bank2
 12402  155A  086D               	movf	_pDst^(0+256),w
 12403  155B  0086               	movwf	6
 12404  155C  0187               	clrf	7
 12405  155D  0020               	movlb	0	; select bank0
 12406  155E  085E               	movf	??_USBCtrlTrfTxService,w
 12407  155F  0081               	movwf	1
 12408  1560  3001               	movlw	1
 12409  1561  0021               	movlb	1	; select bank1
 12410  1562  07E9               	addwf	_inPipes^(0+128),f
 12411  1563  3000               	movlw	0
 12412  1564  3DEA               	addwfc	(_inPipes+1)^(0+128),f
 12413  1565  3001               	movlw	1
 12414  1566  0020               	movlb	0	; select bank0
 12415  1567  00DE               	movwf	??_USBCtrlTrfTxService
 12416  1568  085E               	movf	??_USBCtrlTrfTxService,w
 12417  1569  0022               	movlb	2	; select bank2
 12418  156A  07ED               	addwf	_pDst^(0+256),f
 12419                           
 12420                           ;usb_device.c: 1980: byteToSend--;
 12421  156B  3001               	movlw	1
 12422  156C  0020               	movlb	0	; select bank0
 12423  156D  02E0               	subwf	USBCtrlTrfTxService@byteToSend,f
 12424  156E                     l7147:	
 12425  156E  0020               	movlb	0	; select bank0
 12426  156F  08E0               	movf	USBCtrlTrfTxService@byteToSend,f
 12427  1570  1903               	btfsc	3,2
 12428  1571  0008               	return
 12429  1572  2D51               	goto	l7139
 12430  1573                     l7149:	
 12431                           ;usb_device.c: 1983: else
 12432                           ;usb_device.c: 1984: {
 12433                           ;usb_device.c: 1985: while(byteToSend)
 12434                           
 12435                           ;usb_device.c: 1981: }
 12436                           ;usb_device.c: 1982: }
 12437                           
 12438                           
 12439                           ;usb_device.c: 1986: {
 12440                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
 12441  1573  0021               	movlb	1	; select bank1
 12442  1574  0869               	movf	_inPipes^(0+128),w
 12443  1575  0084               	movwf	4
 12444  1576  086A               	movf	(_inPipes+1)^(0+128),w
 12445  1577  0085               	movwf	5
 12446  1578  0800               	movf	0,w	;code access
 12447  1579  0020               	movlb	0	; select bank0
 12448  157A  00DE               	movwf	??_USBCtrlTrfTxService
 12449  157B  0022               	movlb	2	; select bank2
 12450  157C  086D               	movf	_pDst^(0+256),w
 12451  157D  0086               	movwf	6
 12452  157E  0187               	clrf	7
 12453  157F  0020               	movlb	0	; select bank0
 12454  1580  085E               	movf	??_USBCtrlTrfTxService,w
 12455  1581  0081               	movwf	1
 12456  1582  3001               	movlw	1
 12457  1583  0021               	movlb	1	; select bank1
 12458  1584  07E9               	addwf	_inPipes^(0+128),f
 12459  1585  3000               	movlw	0
 12460  1586  3DEA               	addwfc	(_inPipes+1)^(0+128),f
 12461  1587  3001               	movlw	1
 12462  1588  0020               	movlb	0	; select bank0
 12463  1589  00DE               	movwf	??_USBCtrlTrfTxService
 12464  158A  085E               	movf	??_USBCtrlTrfTxService,w
 12465  158B  0022               	movlb	2	; select bank2
 12466  158C  07ED               	addwf	_pDst^(0+256),f
 12467                           
 12468                           ;usb_device.c: 1988: byteToSend--;
 12469  158D  3001               	movlw	1
 12470  158E  0020               	movlb	0	; select bank0
 12471  158F  02E0               	subwf	USBCtrlTrfTxService@byteToSend,f
 12472  1590                     l7157:	
 12473  1590  0020               	movlb	0	; select bank0
 12474  1591  08E0               	movf	USBCtrlTrfTxService@byteToSend,f
 12475  1592  1903               	btfsc	3,2
 12476  1593  0008               	return
 12477  1594  2D73               	goto	l7149
 12478  1595                     __end_of_USBCtrlTrfTxService:	
 12479                           
 12480                           	psect	text45
 12481  1094                     __ptext45:	
 12482 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12483 ;; Defined at:
 12484 ;;		line 1590 in file "../USB/usb_device.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;		None
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;		None               void
 12491 ;; Registers used:
 12492 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;Total ram usage:        2 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; Hardware stack levels required when called:    4
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_USBDeviceTasks
 12509 ;;		_USBCtrlEPServiceComplete
 12510 ;;		_USBCtrlTrfRxService
 12511 ;; This function uses a non-reentrant model
 12512 ;;
 12513                           
 12514                           
 12515                           ;psect for function _USBCtrlEPAllowStatusStage
 12516  1094                     _USBCtrlEPAllowStatusStage:	
 12517                           
 12518                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
 12519                           
 12520                           ;incstack = 0
 12521                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 12522  1094  0022               	movlb	2	; select bank2
 12523  1095  08E9               	movf	_USBStatusStageEnabledFlag1^(0+256),f
 12524  1096  1D03               	skipz
 12525  1097  0008               	return
 12526                           
 12527                           ;usb_device.c: 1597: {
 12528                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
 12529  1098  3001               	movlw	1
 12530  1099  0020               	movlb	0	; select bank0
 12531  109A  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12532  109B  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12533  109C  0022               	movlb	2	; select bank2
 12534  109D  00E9               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12535                           
 12536                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
 12537  109E  0023               	movlb	3	; select bank3
 12538  109F  08BF               	movf	_USBStatusStageEnabledFlag2^(0+384),f
 12539  10A0  1D03               	skipz
 12540  10A1  0008               	return
 12541                           
 12542                           ;usb_device.c: 1600: {
 12543                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
 12544  10A2  3001               	movlw	1
 12545  10A3  0020               	movlb	0	; select bank0
 12546  10A4  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12547  10A5  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12548  10A6  0023               	movlb	3	; select bank3
 12549  10A7  00BF               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 12550                           
 12551                           ;usb_device.c: 1605: if(controlTransferState == 2)
 12552  10A8  0020               	movlb	0	; select bank0
 12553  10A9  0868               	movf	_controlTransferState,w
 12554  10AA  3A02               	xorlw	2
 12555  10AB  1D03               	skipz
 12556  10AC  28BD               	goto	l7021
 12557                           
 12558                           ;usb_device.c: 1606: {
 12559                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
 12560  10AD  0021               	movlb	1	; select bank1
 12561  10AE  0A63               	incf	_pBDTEntryIn^(0+128),w
 12562  10AF  0086               	movwf	6
 12563  10B0  0187               	clrf	7
 12564  10B1  0181               	clrf	1
 12565                           
 12566                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12567  10B2  30C8               	movlw	200
 12568  10B3  0020               	movlb	0	; select bank0
 12569  10B4  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12570  10B5  0021               	movlb	1	; select bank1
 12571  10B6  0863               	movf	_pBDTEntryIn^(0+128),w
 12572  10B7  0086               	movwf	6
 12573  10B8  0187               	clrf	7
 12574  10B9  0020               	movlb	0	; select bank0
 12575  10BA  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12576  10BB  0081               	movwf	1
 12577                           
 12578                           ;usb_device.c: 1609: }
 12579  10BC  0008               	return
 12580  10BD                     l7021:	
 12581                           
 12582                           ;usb_device.c: 1610: else if(controlTransferState == 1)
 12583  10BD  0868               	movf	_controlTransferState,w
 12584  10BE  3A01               	xorlw	1
 12585  10BF  1D03               	skipz
 12586  10C0  0008               	return
 12587                           
 12588                           ;usb_device.c: 1611: {
 12589                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
 12590  10C1  0023               	movlb	3	; select bank3
 12591  10C2  01B4               	clrf	_BothEP0OutUOWNsSet^(0+384)
 12592                           
 12593                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
 12594  10C3  3008               	movlw	8
 12595  10C4  0020               	movlb	0	; select bank0
 12596  10C5  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12597  10C6  0021               	movlb	1	; select bank1
 12598  10C7  0A68               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
 12599  10C8  0086               	movwf	6
 12600  10C9  0187               	clrf	7
 12601  10CA  0020               	movlb	0	; select bank0
 12602  10CB  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12603  10CC  0081               	movwf	1
 12604                           
 12605                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12606  10CD  3040               	movlw	64
 12607  10CE  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12608  10CF  3000               	movlw	0
 12609  10D0  00DF               	movwf	??_USBCtrlEPAllowStatusStage+1
 12610  10D1  0021               	movlb	1	; select bank1
 12611  10D2  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12612  10D3  3E02               	addlw	2
 12613  10D4  0086               	movwf	6
 12614  10D5  0187               	clrf	7
 12615  10D6  0020               	movlb	0	; select bank0
 12616  10D7  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12617  10D8  3FC0               	movwi [0]fsr1
 12618  10D9  085F               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12619  10DA  3FC1               	movwi [1]fsr1
 12620                           
 12621                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
 12622  10DB  3084               	movlw	132
 12623  10DC  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12624  10DD  0021               	movlb	1	; select bank1
 12625  10DE  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12626  10DF  0086               	movwf	6
 12627  10E0  0187               	clrf	7
 12628  10E1  0020               	movlb	0	; select bank0
 12629  10E2  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12630  10E3  0081               	movwf	1
 12631                           
 12632                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
 12633  10E4  0023               	movlb	3	; select bank3
 12634  10E5  01B4               	clrf	_BothEP0OutUOWNsSet^(0+384)
 12635  10E6  0AB4               	incf	_BothEP0OutUOWNsSet^(0+384),f
 12636                           
 12637                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
 12638  10E7  3008               	movlw	8
 12639  10E8  0020               	movlb	0	; select bank0
 12640  10E9  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12641  10EA  0A6A               	incf	_pBDTEntryEP0OutNext,w
 12642  10EB  0086               	movwf	6
 12643  10EC  0187               	clrf	7
 12644  10ED  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12645  10EE  0081               	movwf	1
 12646                           
 12647                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12648  10EF  3040               	movlw	64
 12649  10F0  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12650  10F1  3000               	movlw	0
 12651  10F2  00DF               	movwf	??_USBCtrlEPAllowStatusStage+1
 12652  10F3  086A               	movf	_pBDTEntryEP0OutNext,w
 12653  10F4  3E02               	addlw	2
 12654  10F5  0086               	movwf	6
 12655  10F6  0187               	clrf	7
 12656  10F7  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12657  10F8  3FC0               	movwi [0]fsr1
 12658  10F9  085F               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12659  10FA  3FC1               	movwi [1]fsr1
 12660                           
 12661                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12662  10FB  3080               	movlw	128
 12663  10FC  00DE               	movwf	??_USBCtrlEPAllowStatusStage
 12664  10FD  086A               	movf	_pBDTEntryEP0OutNext,w
 12665  10FE  0086               	movwf	6
 12666  10FF  0187               	clrf	7
 12667  1100  085E               	movf	??_USBCtrlEPAllowStatusStage,w
 12668  1101  0081               	movwf	1
 12669  1102  0008               	return
 12670  1103                     __end_of_USBCtrlEPAllowStatusStage:	
 12671                           
 12672                           	psect	text46
 12673  1B72                     __ptext46:	
 12674 ;; *************** function _USBStallHandler *****************
 12675 ;; Defined at:
 12676 ;;		line 2356 in file "../USB/usb_device.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;		None
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;		None
 12681 ;; Return value:  Size  Location     Type
 12682 ;;		None               void
 12683 ;; Registers used:
 12684 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;Total ram usage:        1 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    4
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_USBDeviceTasks
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           
 12705                           ;psect for function _USBStallHandler
 12706  1B72                     _USBStallHandler:	
 12707                           
 12708                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
 12709                           
 12710                           ;incstack = 0
 12711                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12712  1B72  003D               	movlb	29	; select bank29
 12713  1B73  1C18               	btfss	24,0	;volatile
 12714  1B74  2B90               	goto	l4975
 12715                           
 12716                           ;usb_device.c: 2369: {
 12717                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12718  1B75  0021               	movlb	1	; select bank1
 12719  1B76  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12720  1B77  0086               	movwf	6
 12721  1B78  0187               	clrf	7
 12722  1B79  0801               	movf	1,w
 12723  1B7A  3A80               	xorlw	128
 12724  1B7B  1D03               	skipz
 12725  1B7C  2B8E               	goto	l4973
 12726  1B7D  0863               	movf	_pBDTEntryIn^(0+128),w
 12727  1B7E  0086               	movwf	6
 12728  1B7F  0187               	clrf	7
 12729  1B80  0801               	movf	1,w
 12730  1B81  3A84               	xorlw	132
 12731  1B82  1D03               	skipz
 12732  1B83  2B8E               	goto	l4973
 12733                           
 12734                           ;usb_device.c: 2372: {
 12735                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12736  1B84  308C               	movlw	140
 12737  1B85  0020               	movlb	0	; select bank0
 12738  1B86  00DE               	movwf	??_USBStallHandler
 12739  1B87  0021               	movlb	1	; select bank1
 12740  1B88  0868               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
 12741  1B89  0086               	movwf	6
 12742  1B8A  0187               	clrf	7
 12743  1B8B  0020               	movlb	0	; select bank0
 12744  1B8C  085E               	movf	??_USBStallHandler,w
 12745  1B8D  0081               	movwf	1
 12746  1B8E                     l4973:	
 12747                           
 12748                           ;usb_device.c: 2375: }
 12749                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
 12750  1B8E  003D               	movlb	29	; select bank29
 12751  1B8F  1018               	bcf	24,0	;volatile
 12752  1B90                     l4975:	
 12753                           
 12754                           ;usb_device.c: 2377: }
 12755                           ;usb_device.c: 2379: (UIR &= 0xDF);
 12756  1B90  30DF               	movlw	223
 12757  1B91  0020               	movlb	0	; select bank0
 12758  1B92  00DE               	movwf	??_USBStallHandler
 12759  1B93  085E               	movf	??_USBStallHandler,w
 12760  1B94  003D               	movlb	29	; select bank29
 12761  1B95  0590               	andwf	16,f	;volatile
 12762  1B96  0008               	return
 12763  1B97                     __end_of_USBStallHandler:	
 12764                           
 12765                           	psect	text47
 12766  1A73                     __ptext47:	
 12767 ;; *************** function _USBSuspend *****************
 12768 ;; Defined at:
 12769 ;;		line 2399 in file "../USB/usb_device.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;		None
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;		None
 12774 ;; Return value:  Size  Location     Type
 12775 ;;		None               void
 12776 ;; Registers used:
 12777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12786 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12787 ;;Total ram usage:        1 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:    8
 12790 ;; This function calls:
 12791 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12792 ;; This function is called by:
 12793 ;;		_USBDeviceTasks
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           
 12798                           ;psect for function _USBSuspend
 12799  1A73                     _USBSuspend:	
 12800                           
 12801                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
 12802                           
 12803                           ;incstack = 0
 12804                           ; Regs used in _USBSuspend: [allreg]
 12805  1A73  003D               	movlb	29	; select bank29
 12806  1A74  1512               	bsf	18,2	;volatile
 12807                           
 12808                           ;usb_device.c: 2424: (UIR &= 0xEF);
 12809  1A75  30EF               	movlw	239
 12810  1A76  0021               	movlb	1	; select bank1
 12811  1A77  00B1               	movwf	??_USBSuspend^(0+128)
 12812  1A78  0831               	movf	??_USBSuspend^(0+128),w
 12813  1A79  003D               	movlb	29	; select bank29
 12814  1A7A  0590               	andwf	16,f	;volatile
 12815                           
 12816                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
 12817  1A7B  148E               	bsf	14,1	;volatile
 12818                           
 12819                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
 12820  1A7C  0023               	movlb	3	; select bank3
 12821  1A7D  01BA               	clrf	_USBBusIsSuspended^(0+384)
 12822  1A7E  0ABA               	incf	_USBBusIsSuspended^(0+384),f
 12823                           
 12824                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12825  1A7F  3075               	movlw	117
 12826  1A80  0021               	movlb	1	; select bank1
 12827  1A81  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12828  1A82  3000               	movlw	0
 12829  1A83  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12830  1A84  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12831  1A85  3000               	movlw	0
 12832  1A86  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 12833  1A87  3000               	movlw	0
 12834  1A88  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12835  1A89  319C  248E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12836  1A8B  0008               	return
 12837  1A8C                     __end_of_USBSuspend:	
 12838                           
 12839                           	psect	text48
 12840  08AF                     __ptext48:	
 12841 ;; *************** function _USBWakeFromSuspend *****************
 12842 ;; Defined at:
 12843 ;;		line 2456 in file "../USB/usb_device.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;		None
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;		None
 12848 ;; Return value:  Size  Location     Type
 12849 ;;		None               void
 12850 ;; Registers used:
 12851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12852 ;; Tracked objects:
 12853 ;;		On entry : 0/0
 12854 ;;		On exit  : 0/0
 12855 ;;		Unchanged: 0/0
 12856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;Total ram usage:        1 bytes
 12862 ;; Hardware stack levels used:    1
 12863 ;; Hardware stack levels required when called:    8
 12864 ;; This function calls:
 12865 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12866 ;; This function is called by:
 12867 ;;		_USBDeviceTasks
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871                           
 12872                           ;psect for function _USBWakeFromSuspend
 12873  08AF                     _USBWakeFromSuspend:	
 12874                           
 12875                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
 12876                           
 12877                           ;incstack = 0
 12878                           ; Regs used in _USBWakeFromSuspend: [allreg]
 12879  08AF  0023               	movlb	3	; select bank3
 12880  08B0  01BA               	clrf	_USBBusIsSuspended^(0+384)
 12881                           
 12882                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12883  08B1  3074               	movlw	116
 12884  08B2  0021               	movlb	1	; select bank1
 12885  08B3  00AC               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12886  08B4  3000               	movlw	0
 12887  08B5  00AD               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12888  08B6  01AE               	clrf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12889  08B7  3000               	movlw	0
 12890  08B8  00AF               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+3)
 12891  08B9  3000               	movlw	0
 12892  08BA  00B0               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12893  08BB  319C  248E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12894                           
 12895                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
 12896  08BD  003D               	movlb	29	; select bank29
 12897  08BE  108E               	bcf	14,1	;volatile
 12898                           
 12899                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
 12900  08BF  1112               	bcf	18,2	;volatile
 12901                           
 12902                           ;usb_device.c: 2495: {
 12903                           ;usb_device.c: 2496: (UIR &= 0xFB);
 12904  08C0  30FB               	movlw	251
 12905  08C1  0021               	movlb	1	; select bank1
 12906  08C2  00B1               	movwf	??_USBWakeFromSuspend^(0+128)
 12907  08C3  0831               	movf	??_USBWakeFromSuspend^(0+128),w
 12908  08C4  003D               	movlb	29	; select bank29
 12909  08C5  0590               	andwf	16,f	;volatile
 12910  08C6  0008               	return
 12911  08C7                     __end_of_USBWakeFromSuspend:	
 12912                           
 12913                           	psect	text49
 12914  1C8E                     __ptext49:	
 12915 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 12916 ;; Defined at:
 12917 ;;		line 630 in file "main.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;  event           2   12[BANK1 ] int 
 12920 ;;  pdata           1   14[BANK1 ] PTR void 
 12921 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(32), 
 12922 ;;  size            2   15[BANK1 ] unsigned short 
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      enum E5
 12927 ;; Registers used:
 12928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12934 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;Total ram usage:        5 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    7
 12941 ;; This function calls:
 12942 ;;		_USBCBSuspend
 12943 ;;		_USBCBWakeFromSuspend
 12944 ;;		_USBCB_SOF_Handler
 12945 ;;		_USBCBErrorHandler
 12946 ;;		_USBCBCheckOtherReq
 12947 ;;		_USBCBStdSetDscHandler
 12948 ;;		_USBCBInitEP
 12949 ;; This function is called by:
 12950 ;;		_USBDeviceTasks
 12951 ;;		_USBStdSetCfgHandler
 12952 ;;		_USBSuspend
 12953 ;;		_USBWakeFromSuspend
 12954 ;;		_USBCtrlTrfSetupHandler
 12955 ;;		_USBCheckStdRequest
 12956 ;;		_USBStdFeatureReqHandler
 12957 ;; This function uses a non-reentrant model
 12958 ;;
 12959                           
 12960                           
 12961                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 12962  1C8E                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 12963                           
 12964                           ;main.c: 631: switch( event )
 12965                           
 12966                           ;incstack = 0
 12967                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12968  1C8E  2CA4               	goto	l6999
 12969  1C8F                     l6983:	
 12970                           ;main.c: 636: case EVENT_SOF:
 12971                           
 12972                           ;main.c: 635: break;
 12973                           
 12974                           ;main.c: 632: {
 12975                           ;main.c: 633: case EVENT_TRANSFER:
 12976                           
 12977                           
 12978                           ;main.c: 637: USBCB_SOF_Handler();
 12979  1C8F  3199  21B9         	fcall	_USBCB_SOF_Handler
 12980                           
 12981                           ;main.c: 638: break;
 12982  1C91  0008               	return
 12983  1C92                     l6985:	
 12984                           ;main.c: 639: case EVENT_SUSPEND:
 12985                           
 12986                           
 12987                           ;main.c: 640: USBCBSuspend();
 12988  1C92  3199  21B7         	fcall	_USBCBSuspend
 12989                           
 12990                           ;main.c: 641: break;
 12991  1C94  0008               	return
 12992  1C95                     l6987:	
 12993                           ;main.c: 642: case EVENT_RESUME:
 12994                           
 12995                           
 12996                           ;main.c: 643: USBCBWakeFromSuspend();
 12997  1C95  3199  21B8         	fcall	_USBCBWakeFromSuspend
 12998                           
 12999                           ;main.c: 644: break;
 13000  1C97  0008               	return
 13001  1C98                     l6989:	
 13002                           ;main.c: 645: case EVENT_CONFIGURED:
 13003                           
 13004                           
 13005                           ;main.c: 646: USBCBInitEP();
 13006  1C98  319B  2314         	fcall	_USBCBInitEP
 13007                           
 13008                           ;main.c: 647: break;
 13009  1C9A  0008               	return
 13010  1C9B                     l6991:	
 13011                           ;main.c: 648: case EVENT_SET_DESCRIPTOR:
 13012                           
 13013                           
 13014                           ;main.c: 649: USBCBStdSetDscHandler();
 13015  1C9B  3180  2002         	fcall	_USBCBStdSetDscHandler
 13016                           
 13017                           ;main.c: 650: break;
 13018  1C9D  0008               	return
 13019  1C9E                     l6993:	
 13020                           ;main.c: 651: case EVENT_EP0_REQUEST:
 13021                           
 13022                           
 13023                           ;main.c: 652: USBCBCheckOtherReq();
 13024  1C9E  3187  27FD         	fcall	_USBCBCheckOtherReq
 13025                           
 13026                           ;main.c: 653: break;
 13027  1CA0  0008               	return
 13028  1CA1                     l6995:	
 13029                           ;main.c: 654: case EVENT_BUS_ERROR:
 13030                           
 13031                           
 13032                           ;main.c: 655: USBCBErrorHandler();
 13033  1CA1  3190  2000         	fcall	_USBCBErrorHandler
 13034                           
 13035                           ;main.c: 669: }
 13036                           
 13037                           ;main.c: 668: break;
 13038                           
 13039                           ;main.c: 667: default:
 13040                           
 13041                           ;main.c: 666: break;
 13042                           
 13043                           ;main.c: 657: case EVENT_TRANSFER_TERMINATED:
 13044                           
 13045                           ;main.c: 656: break;
 13046  1CA3  0008               	return
 13047  1CA4                     l6999:	
 13048                           
 13049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13050                           ; Switch size 1, requested type "space"
 13051                           ; Number of cases is 2, Range of values is 0 to 127
 13052                           ; switch strategies available:
 13053                           ; Name         Instructions Cycles
 13054                           ; simple_byte            7     4 (average)
 13055                           ; direct_byte          262     6 (fixed)
 13056                           ; jumptable            260     6 (fixed)
 13057                           ; rangetable           132     6 (fixed)
 13058                           ; spacedrange          261     8 (fixed)
 13059                           ; locatedrange         128     3 (fixed)
 13060                           ;	Chosen strategy is simple_byte
 13061  1CA4  0021               	movlb	1	; select bank1
 13062  1CA5  082D               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 13063  1CA6  3A00               	xorlw	0	; case 0
 13064  1CA7  1903               	skipnz
 13065  1CA8  2CAD               	goto	l8075
 13066  1CA9  3A7F               	xorlw	127	; case 127
 13067  1CAA  1903               	skipnz
 13068  1CAB  2CC7               	goto	l8077
 13069  1CAC  2CCC               	goto	l936
 13070  1CAD                     l8075:	
 13071                           
 13072                           ; Switch size 1, requested type "space"
 13073                           ; Number of cases is 8, Range of values is 1 to 117
 13074                           ; switch strategies available:
 13075                           ; Name         Instructions Cycles
 13076                           ; simple_byte           25    13 (average)
 13077                           ; direct_byte          243     9 (fixed)
 13078                           ; jumptable            263     9 (fixed)
 13079                           ;	Chosen strategy is simple_byte
 13080  1CAD  082C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13081  1CAE  3A01               	xorlw	1	; case 1
 13082  1CAF  1903               	skipnz
 13083  1CB0  2C98               	goto	l6989
 13084  1CB1  3A03               	xorlw	3	; case 2
 13085  1CB2  1903               	skipnz
 13086  1CB3  2C9B               	goto	l6991
 13087  1CB4  3A01               	xorlw	1	; case 3
 13088  1CB5  1903               	skipnz
 13089  1CB6  2C9E               	goto	l6993
 13090  1CB7  3A06               	xorlw	6	; case 5
 13091  1CB8  1903               	skipnz
 13092  1CB9  2CCC               	goto	l936
 13093  1CBA  3A77               	xorlw	119	; case 114
 13094  1CBB  1903               	skipnz
 13095  1CBC  2CCC               	goto	l936
 13096  1CBD  3A01               	xorlw	1	; case 115
 13097  1CBE  1903               	skipnz
 13098  1CBF  2C8F               	goto	l6983
 13099  1CC0  3A07               	xorlw	7	; case 116
 13100  1CC1  1903               	skipnz
 13101  1CC2  2C95               	goto	l6987
 13102  1CC3  3A01               	xorlw	1	; case 117
 13103  1CC4  1903               	skipnz
 13104  1CC5  2C92               	goto	l6985
 13105  1CC6  2CCC               	goto	l936
 13106  1CC7                     l8077:	
 13107                           
 13108                           ; Switch size 1, requested type "space"
 13109                           ; Number of cases is 1, Range of values is 255 to 255
 13110                           ; switch strategies available:
 13111                           ; Name         Instructions Cycles
 13112                           ; simple_byte            4     3 (average)
 13113                           ; direct_byte            7     5 (fixed)
 13114                           ; jumptable            263     9 (fixed)
 13115                           ;	Chosen strategy is simple_byte
 13116  1CC7  082C               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13117  1CC8  3AFF               	xorlw	255	; case 255
 13118  1CC9  1903               	skipnz
 13119  1CCA  2CA1               	goto	l6995
 13120  1CCB  2CCC               	goto	l936
 13121  1CCC                     l936:	
 13122                           ;main.c: 670: return TRUE;
 13123                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 13124                           
 13125  1CCC  0008               	return
 13126  1CCD                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 13127                           
 13128                           	psect	text50
 13129  1B14                     __ptext50:	
 13130 ;; *************** function _USBCBInitEP *****************
 13131 ;; Defined at:
 13132 ;;		line 460 in file "main.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;		None
 13135 ;; Auto vars:     Size  Location     Type
 13136 ;;		None
 13137 ;; Return value:  Size  Location     Type
 13138 ;;		None               void
 13139 ;; Registers used:
 13140 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;Total ram usage:        3 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:    6
 13153 ;; This function calls:
 13154 ;;		_USBEnableEndpoint
 13155 ;;		_USBTransferOnePacket
 13156 ;; This function is called by:
 13157 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13158 ;; This function uses a non-reentrant model
 13159 ;;
 13160                           
 13161                           
 13162                           ;psect for function _USBCBInitEP
 13163  1B14                     _USBCBInitEP:	
 13164                           
 13165                           ;main.c: 462: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
 13166                           
 13167                           ;incstack = 0
 13168                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13169  1B14  301E               	movlw	30
 13170  1B15  0021               	movlb	1	; select bank1
 13171  1B16  00A9               	movwf	??_USBCBInitEP^(0+128)
 13172  1B17  0829               	movf	??_USBCBInitEP^(0+128),w
 13173  1B18  0020               	movlb	0	; select bank0
 13174  1B19  00E1               	movwf	?_USBEnableEndpoint
 13175  1B1A  3001               	movlw	1
 13176  1B1B  319B  23BE  319B   	fcall	_USBEnableEndpoint
 13177                           
 13178                           ;main.c: 464: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
 13179  1B1E  0021               	movlb	1	; select bank1
 13180  1B1F  01A0               	clrf	?_USBTransferOnePacket^(0+128)
 13181  1B20  30A0               	movlw	160
 13182  1B21  00A9               	movwf	??_USBCBInitEP^(0+128)
 13183  1B22  0829               	movf	??_USBCBInitEP^(0+128),w
 13184  1B23  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
 13185  1B24  3040               	movlw	64
 13186  1B25  00AA               	movwf	(??_USBCBInitEP+1)^(0+128)
 13187  1B26  082A               	movf	(??_USBCBInitEP+1)^(0+128),w
 13188  1B27  00A2               	movwf	(?_USBTransferOnePacket^(0+128)+2)
 13189  1B28  3001               	movlw	1
 13190  1B29  319D  25E2         	fcall	_USBTransferOnePacket
 13191  1B2B  0021               	movlb	1	; select bank1
 13192  1B2C  00AB               	movwf	(??_USBCBInitEP+2)^(0+128)
 13193  1B2D  082B               	movf	(??_USBCBInitEP+2)^(0+128),w
 13194  1B2E  0023               	movlb	3	; select bank3
 13195  1B2F  00BE               	movwf	_USBGenericOutHandle^(0+384)
 13196  1B30  0008               	return
 13197  1B31                     __end_of_USBCBInitEP:	
 13198                           
 13199                           	psect	text51
 13200  1DE2                     __ptext51:	
 13201 ;; *************** function _USBTransferOnePacket *****************
 13202 ;; Defined at:
 13203 ;;		line 1173 in file "../USB/usb_device.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;  ep              1    wreg     unsigned char 
 13206 ;;  dir             1    0[BANK1 ] unsigned char 
 13207 ;;  data            1    1[BANK1 ] PTR unsigned char 
 13208 ;;		 -> INPacket(64), OUTPacket(64), 
 13209 ;;  len             1    2[BANK1 ] unsigned char 
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  ep              1    5[BANK1 ] unsigned char 
 13212 ;;  handle          1    6[BANK1 ] PTR volatile struct __BD
 13213 ;;		 -> NULL(0), BDT(32), 
 13214 ;; Return value:  Size  Location     Type
 13215 ;;                  1    wreg      PTR void 
 13216 ;; Registers used:
 13217 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13218 ;; Tracked objects:
 13219 ;;		On entry : 0/0
 13220 ;;		On exit  : 0/0
 13221 ;;		Unchanged: 0/0
 13222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13223 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13224 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13225 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13226 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 13227 ;;Total ram usage:        7 bytes
 13228 ;; Hardware stack levels used:    1
 13229 ;; Hardware stack levels required when called:    4
 13230 ;; This function calls:
 13231 ;;		Nothing
 13232 ;; This function is called by:
 13233 ;;		_ProcessIO
 13234 ;;		_USBCBInitEP
 13235 ;; This function uses a non-reentrant model
 13236 ;;
 13237                           
 13238                           
 13239                           ;psect for function _USBTransferOnePacket
 13240  1DE2                     _USBTransferOnePacket:	
 13241                           
 13242                           ;incstack = 0
 13243                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 13244                           ;USBTransferOnePacket@ep stored from wreg
 13245  1DE2  0021               	movlb	1	; select bank1
 13246  1DE3  00A5               	movwf	USBTransferOnePacket@ep^(0+128)
 13247                           
 13248                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
 13249                           ;usb_device.c: 1177: if(dir != 0)
 13250  1DE4  0820               	movf	USBTransferOnePacket@dir^(0+128),w
 13251  1DE5  1903               	btfsc	3,2
 13252  1DE6  2DEC               	goto	l7077
 13253                           
 13254                           ;usb_device.c: 1178: {
 13255                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
 13256  1DE7  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 13257  1DE8  3EE3               	addlw	_pBDTEntryIn& (0+255)
 13258  1DE9  0086               	movwf	6
 13259  1DEA  0187               	clrf	7
 13260  1DEB  2DF1               	goto	L17
 13261  1DEC                     l7077:	
 13262                           ;usb_device.c: 1181: }
 13263                           
 13264                           
 13265                           ;usb_device.c: 1182: else
 13266                           ;usb_device.c: 1183: {
 13267                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
 13268  1DEC  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 13269  1DED  3EB2               	addlw	_pBDTEntryOut& (0+255)
 13270  1DEE  0086               	movwf	6
 13271  1DEF  3001               	movlw	1	; select bank3/4
 13272  1DF0  0087               	movwf	7
 13273  1DF1                     L17:	
 13274  1DF1  0801               	movf	1,w
 13275  1DF2  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13276  1DF3  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13277  1DF4  00A6               	movwf	USBTransferOnePacket@handle^(0+128)
 13278                           
 13279                           ;usb_device.c: 1186: }
 13280                           ;usb_device.c: 1190: if(handle == 0)
 13281  1DF5  08A6               	movf	USBTransferOnePacket@handle^(0+128),f
 13282  1DF6  1D03               	skipz
 13283  1DF7  2DFA               	goto	l7085
 13284                           
 13285                           ;usb_device.c: 1191: {
 13286                           ;usb_device.c: 1192: return 0;
 13287  1DF8  3000               	movlw	0
 13288  1DF9  0008               	return
 13289  1DFA                     l7085:	
 13290                           
 13291                           ;usb_device.c: 1193: }
 13292                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
 13293  1DFA  0821               	movf	USBTransferOnePacket@data^(0+128),w
 13294  1DFB  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13295  1DFC  3002               	movlw	2
 13296  1DFD  00A4               	movwf	(??_USBTransferOnePacket^(0+128)+1)
 13297  1DFE  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 13298  1DFF  3E02               	addlw	2
 13299  1E00  0086               	movwf	6
 13300  1E01  0187               	clrf	7
 13301  1E02  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13302  1E03  3FC0               	movwi [0]fsr1
 13303  1E04  0824               	movf	(??_USBTransferOnePacket+1)^(0+128),w
 13304  1E05  3FC1               	movwi [1]fsr1
 13305                           
 13306                           ;usb_device.c: 1207: handle->CNT = len;
 13307  1E06  0822               	movf	USBTransferOnePacket@len^(0+128),w
 13308  1E07  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13309  1E08  0A26               	incf	USBTransferOnePacket@handle^(0+128),w
 13310  1E09  0086               	movwf	6
 13311  1E0A  0187               	clrf	7
 13312  1E0B  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13313  1E0C  0081               	movwf	1
 13314                           
 13315                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
 13316  1E0D  3040               	movlw	64
 13317  1E0E  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13318  1E0F  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 13319  1E10  0086               	movwf	6
 13320  1E11  0187               	clrf	7
 13321  1E12  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13322  1E13  0581               	andwf	1,f
 13323                           
 13324                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
 13325  1E14  3088               	movlw	136
 13326  1E15  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13327  1E16  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 13328  1E17  0086               	movwf	6
 13329  1E18  0187               	clrf	7
 13330  1E19  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13331  1E1A  0481               	iorwf	1,f
 13332                           
 13333                           ;usb_device.c: 1212: if(dir != 0)
 13334  1E1B  0820               	movf	USBTransferOnePacket@dir^(0+128),w
 13335  1E1C  1903               	btfsc	3,2
 13336  1E1D  2E25               	goto	l7095
 13337                           
 13338                           ;usb_device.c: 1213: {
 13339                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
 13340  1E1E  3004               	movlw	4
 13341  1E1F  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13342  1E20  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 13343  1E21  3EE3               	addlw	_pBDTEntryIn& (0+255)
 13344  1E22  0086               	movwf	6
 13345  1E23  0187               	clrf	7
 13346  1E24  2E2C               	goto	L18
 13347  1E25                     l7095:	
 13348                           ;usb_device.c: 1216: }
 13349                           
 13350                           
 13351                           ;usb_device.c: 1217: else
 13352                           ;usb_device.c: 1218: {
 13353                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
 13354  1E25  3004               	movlw	4
 13355  1E26  00A3               	movwf	??_USBTransferOnePacket^(0+128)
 13356  1E27  0825               	movf	USBTransferOnePacket@ep^(0+128),w
 13357  1E28  3EB2               	addlw	_pBDTEntryOut& (0+255)
 13358  1E29  0086               	movwf	6
 13359  1E2A  3001               	movlw	1	; select bank3/4
 13360  1E2B  0087               	movwf	7
 13361  1E2C                     L18:	
 13362  1E2C  0823               	movf	??_USBTransferOnePacket^(0+128),w
 13363  1E2D  0681               	xorwf	1,f
 13364                           
 13365                           ;usb_device.c: 1221: }
 13366                           ;usb_device.c: 1222: return (void*)handle;
 13367  1E2E  0826               	movf	USBTransferOnePacket@handle^(0+128),w
 13368  1E2F  0008               	return
 13369  1E30                     __end_of_USBTransferOnePacket:	
 13370                           
 13371                           	psect	text52
 13372  1BBE                     __ptext52:	
 13373 ;; *************** function _USBEnableEndpoint *****************
 13374 ;; Defined at:
 13375 ;;		line 1056 in file "../USB/usb_device.c"
 13376 ;; Parameters:    Size  Location     Type
 13377 ;;  ep              1    wreg     unsigned char 
 13378 ;;  options         1   17[BANK0 ] unsigned char 
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;  ep              1    8[BANK1 ] unsigned char 
 13381 ;;  p               2    6[BANK1 ] PTR unsigned char 
 13382 ;;		 -> UEP0(1), 
 13383 ;; Return value:  Size  Location     Type
 13384 ;;		None               void
 13385 ;; Registers used:
 13386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/0
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13392 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;Total ram usage:        6 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    5
 13399 ;; This function calls:
 13400 ;;		_USBConfigureEndpoint
 13401 ;; This function is called by:
 13402 ;;		_USBCBInitEP
 13403 ;; This function uses a non-reentrant model
 13404 ;;
 13405                           
 13406                           
 13407                           ;psect for function _USBEnableEndpoint
 13408  1BBE                     _USBEnableEndpoint:	
 13409                           
 13410                           ;incstack = 0
 13411                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13412                           ;USBEnableEndpoint@ep stored from wreg
 13413  1BBE  0021               	movlb	1	; select bank1
 13414  1BBF  00A8               	movwf	USBEnableEndpoint@ep^(0+128)
 13415                           
 13416                           ;usb_device.c: 1057: unsigned char* p;
 13417                           ;usb_device.c: 1061: if(options & 0x04)
 13418  1BC0  0020               	movlb	0	; select bank0
 13419  1BC1  1D61               	btfss	USBEnableEndpoint@options,2
 13420  1BC2  2BC9               	goto	l5015
 13421                           
 13422                           ;usb_device.c: 1062: {
 13423                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
 13424  1BC3  01DE               	clrf	?_USBConfigureEndpoint
 13425  1BC4  0021               	movlb	1	; select bank1
 13426  1BC5  0828               	movf	USBEnableEndpoint@ep^(0+128),w
 13427  1BC6  319D  2595  319B   	fcall	_USBConfigureEndpoint
 13428  1BC9                     l5015:	
 13429                           
 13430                           ;usb_device.c: 1064: }
 13431                           ;usb_device.c: 1065: if(options & 0x02)
 13432  1BC9  0020               	movlb	0	; select bank0
 13433  1BCA  1CE1               	btfss	USBEnableEndpoint@options,1
 13434  1BCB  2BD2               	goto	l5019
 13435                           
 13436                           ;usb_device.c: 1066: {
 13437                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
 13438  1BCC  01DE               	clrf	?_USBConfigureEndpoint
 13439  1BCD  0ADE               	incf	?_USBConfigureEndpoint,f
 13440  1BCE  0021               	movlb	1	; select bank1
 13441  1BCF  0828               	movf	USBEnableEndpoint@ep^(0+128),w
 13442  1BD0  319D  2595         	fcall	_USBConfigureEndpoint
 13443  1BD2                     l5019:	
 13444                           
 13445                           ;usb_device.c: 1068: }
 13446                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
 13447  1BD2  0021               	movlb	1	; select bank1
 13448  1BD3  0828               	movf	USBEnableEndpoint@ep^(0+128),w
 13449  1BD4  3E98               	addlw	152
 13450  1BD5  00A4               	movwf	??_USBEnableEndpoint^(0+128)
 13451  1BD6  01A5               	clrf	(??_USBEnableEndpoint^(0+128)+1)
 13452  1BD7  300E               	movlw	14
 13453  1BD8  3DA5               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
 13454  1BD9  0824               	movf	??_USBEnableEndpoint^(0+128),w
 13455  1BDA  00A6               	movwf	USBEnableEndpoint@p^(0+128)
 13456  1BDB  0825               	movf	(??_USBEnableEndpoint+1)^(0+128),w
 13457  1BDC  00A7               	movwf	(USBEnableEndpoint@p+1)^(0+128)
 13458                           
 13459                           ;usb_device.c: 1078: *p = options;
 13460  1BDD  0020               	movlb	0	; select bank0
 13461  1BDE  0861               	movf	USBEnableEndpoint@options,w
 13462  1BDF  0021               	movlb	1	; select bank1
 13463  1BE0  00A4               	movwf	??_USBEnableEndpoint^(0+128)
 13464  1BE1  0826               	movf	USBEnableEndpoint@p^(0+128),w
 13465  1BE2  0086               	movwf	6
 13466  1BE3  0827               	movf	(USBEnableEndpoint@p+1)^(0+128),w
 13467  1BE4  0087               	movwf	7
 13468  1BE5  0824               	movf	??_USBEnableEndpoint^(0+128),w
 13469  1BE6  0081               	movwf	1
 13470  1BE7  0008               	return
 13471  1BE8                     __end_of_USBEnableEndpoint:	
 13472                           
 13473                           	psect	text53
 13474  1D95                     __ptext53:	
 13475 ;; *************** function _USBConfigureEndpoint *****************
 13476 ;; Defined at:
 13477 ;;		line 1713 in file "../USB/usb_device.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;  EPNum           1    wreg     unsigned char 
 13480 ;;  direction       1   14[BANK0 ] unsigned char 
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;  EPNum           1   15[BANK0 ] unsigned char 
 13483 ;;  handle          1   16[BANK0 ] PTR volatile struct __BD
 13484 ;;		 -> BDT(32), 
 13485 ;; Return value:  Size  Location     Type
 13486 ;;		None               void
 13487 ;; Registers used:
 13488 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13494 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13496 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13497 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;Total ram usage:        7 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; Hardware stack levels required when called:    4
 13501 ;; This function calls:
 13502 ;;		Nothing
 13503 ;; This function is called by:
 13504 ;;		_USBEnableEndpoint
 13505 ;; This function uses a non-reentrant model
 13506 ;;
 13507                           
 13508                           
 13509                           ;psect for function _USBConfigureEndpoint
 13510  1D95                     _USBConfigureEndpoint:	
 13511                           
 13512                           ;incstack = 0
 13513                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13514                           ;USBConfigureEndpoint@EPNum stored from wreg
 13515  1D95  0020               	movlb	0	; select bank0
 13516  1D96  00DF               	movwf	USBConfigureEndpoint@EPNum
 13517                           
 13518                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
 13519                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
 13520  1D97  3020               	movlw	32
 13521  1D98  0021               	movlb	1	; select bank1
 13522  1D99  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13523  1D9A  0820               	movf	??_USBConfigureEndpoint^(0+128),w
 13524  1D9B  0020               	movlb	0	; select bank0
 13525  1D9C  00E0               	movwf	USBConfigureEndpoint@handle
 13526                           
 13527                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
 13528  1D9D  085E               	movf	USBConfigureEndpoint@direction,w
 13529  1D9E  0021               	movlb	1	; select bank1
 13530  1D9F  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13531  1DA0  3001               	movlw	1
 13532  1DA1                     u3825:	
 13533  1DA1  35A0               	lslf	??_USBConfigureEndpoint^(0+128),f
 13534  1DA2  0B89               	decfsz	9,f
 13535  1DA3  2DA1               	goto	u3825
 13536  1DA4  0020               	movlb	0	; select bank0
 13537  1DA5  085F               	movf	USBConfigureEndpoint@EPNum,w
 13538  1DA6  0021               	movlb	1	; select bank1
 13539  1DA7  00A1               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
 13540  1DA8  3001               	movlw	1
 13541  1DA9                     u3835:	
 13542  1DA9  35A1               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
 13543  1DAA  3EFF               	addlw	-1
 13544  1DAB  1D03               	skipz
 13545  1DAC  2DA9               	goto	u3835
 13546  1DAD  3521               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
 13547  1DAE  0720               	addwf	??_USBConfigureEndpoint^(0+128),w
 13548  1DAF  00A2               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
 13549  1DB0  3001               	movlw	1
 13550  1DB1                     u3845:	
 13551  1DB1  35A2               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
 13552  1DB2  3EFF               	addlw	-1
 13553  1DB3  1D03               	skipz
 13554  1DB4  2DB1               	goto	u3845
 13555  1DB5  3522               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
 13556  1DB6  00A3               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
 13557  1DB7  0823               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
 13558  1DB8  0020               	movlb	0	; select bank0
 13559  1DB9  07E0               	addwf	USBConfigureEndpoint@handle,f
 13560                           
 13561                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
 13562  1DBA  0860               	movf	USBConfigureEndpoint@handle,w
 13563  1DBB  0086               	movwf	6
 13564  1DBC  0187               	clrf	7
 13565  1DBD  1381               	bcf	1,7
 13566                           
 13567                           ;usb_device.c: 1726: if(direction == 0)
 13568  1DBE  08DE               	movf	USBConfigureEndpoint@direction,f
 13569  1DBF  1D03               	skipz
 13570  1DC0  2DCB               	goto	l5033
 13571                           
 13572                           ;usb_device.c: 1727: {
 13573                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
 13574  1DC1  0860               	movf	USBConfigureEndpoint@handle,w
 13575  1DC2  0021               	movlb	1	; select bank1
 13576  1DC3  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13577  1DC4  0020               	movlb	0	; select bank0
 13578  1DC5  085F               	movf	USBConfigureEndpoint@EPNum,w
 13579  1DC6  3EB2               	addlw	_pBDTEntryOut& (0+255)
 13580  1DC7  0086               	movwf	6
 13581  1DC8  3001               	movlw	1	; select bank3/4
 13582  1DC9  0087               	movwf	7
 13583  1DCA  2DD4               	goto	L19
 13584  1DCB                     l5033:	
 13585                           ;usb_device.c: 1729: }
 13586                           
 13587                           
 13588                           ;usb_device.c: 1730: else
 13589                           ;usb_device.c: 1731: {
 13590                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
 13591  1DCB  0020               	movlb	0	; select bank0
 13592  1DCC  0860               	movf	USBConfigureEndpoint@handle,w
 13593  1DCD  0021               	movlb	1	; select bank1
 13594  1DCE  00A0               	movwf	??_USBConfigureEndpoint^(0+128)
 13595  1DCF  0020               	movlb	0	; select bank0
 13596  1DD0  085F               	movf	USBConfigureEndpoint@EPNum,w
 13597  1DD1  3EE3               	addlw	_pBDTEntryIn& (0+255)
 13598  1DD2  0086               	movwf	6
 13599  1DD3  0187               	clrf	7
 13600  1DD4                     L19:	
 13601  1DD4  0021               	movlb	1	; select bank1
 13602  1DD5  0820               	movf	??_USBConfigureEndpoint^(0+128),w
 13603  1DD6  0081               	movwf	1
 13604                           
 13605                           ;usb_device.c: 1733: }
 13606                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
 13607  1DD7  0020               	movlb	0	; select bank0
 13608  1DD8  0860               	movf	USBConfigureEndpoint@handle,w
 13609  1DD9  0086               	movwf	6
 13610  1DDA  0187               	clrf	7
 13611  1DDB  1301               	bcf	1,6
 13612                           
 13613                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
 13614  1DDC  0860               	movf	USBConfigureEndpoint@handle,w
 13615  1DDD  3E04               	addlw	4
 13616  1DDE  0086               	movwf	6
 13617  1DDF  0187               	clrf	7
 13618  1DE0  1701               	bsf	1,6
 13619  1DE1  0008               	return
 13620  1DE2                     __end_of_USBConfigureEndpoint:	
 13621                           
 13622                           	psect	text54
 13623  0002                     __ptext54:	
 13624 ;; *************** function _USBCBStdSetDscHandler *****************
 13625 ;; Defined at:
 13626 ;;		line 434 in file "main.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;		None
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;		None
 13631 ;; Return value:  Size  Location     Type
 13632 ;;		None               void
 13633 ;; Registers used:
 13634 ;;		None
 13635 ;; Tracked objects:
 13636 ;;		On entry : 0/0
 13637 ;;		On exit  : 0/0
 13638 ;;		Unchanged: 0/0
 13639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13644 ;;Total ram usage:        0 bytes
 13645 ;; Hardware stack levels used:    1
 13646 ;; Hardware stack levels required when called:    4
 13647 ;; This function calls:
 13648 ;;		Nothing
 13649 ;; This function is called by:
 13650 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           
 13655                           ;psect for function _USBCBStdSetDscHandler
 13656  0002                     _USBCBStdSetDscHandler:	
 13657                           
 13658                           ;incstack = 0
 13659                           ; Regs used in _USBCBStdSetDscHandler: []
 13660  0002  0008               	return
 13661  0003                     __end_of_USBCBStdSetDscHandler:	
 13662                           
 13663                           	psect	text55
 13664  07FD                     __ptext55:	
 13665 ;; *************** function _USBCBCheckOtherReq *****************
 13666 ;; Defined at:
 13667 ;;		line 409 in file "main.c"
 13668 ;; Parameters:    Size  Location     Type
 13669 ;;		None
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;		None               void
 13674 ;; Registers used:
 13675 ;;		status,2, status,0, pclath, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13685 ;;Total ram usage:        0 bytes
 13686 ;; Hardware stack levels used:    1
 13687 ;; Hardware stack levels required when called:    5
 13688 ;; This function calls:
 13689 ;;		_USBCheckVendorRequest
 13690 ;; This function is called by:
 13691 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13692 ;; This function uses a non-reentrant model
 13693 ;;
 13694                           
 13695                           
 13696                           ;psect for function _USBCBCheckOtherReq
 13697  07FD                     _USBCBCheckOtherReq:	
 13698                           
 13699                           ;main.c: 410: USBCheckVendorRequest();
 13700                           
 13701                           ;incstack = 0
 13702                           ; Regs used in _USBCBCheckOtherReq: [status,2+status,0+pclath+cstack]
 13703  07FD  3190  2001         	fcall	_USBCheckVendorRequest
 13704  07FF  0008               	return
 13705  0800                     __end_of_USBCBCheckOtherReq:	
 13706                           
 13707                           	psect	text56
 13708  1001                     __ptext56:	
 13709 ;; *************** function _USBCheckVendorRequest *****************
 13710 ;; Defined at:
 13711 ;;		line 248 in file "../USB/usb_function_generic.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;		None
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;		None               void
 13718 ;; Registers used:
 13719 ;;		None
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;Total ram usage:        0 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:    4
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_USBCBCheckOtherReq
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           
 13740                           ;psect for function _USBCheckVendorRequest
 13741  1001                     _USBCheckVendorRequest:	
 13742                           
 13743                           ;incstack = 0
 13744                           ; Regs used in _USBCheckVendorRequest: []
 13745  1001  0008               	return
 13746  1002                     __end_of_USBCheckVendorRequest:	
 13747                           
 13748                           	psect	text57
 13749  1000                     __ptext57:	
 13750 ;; *************** function _USBCBErrorHandler *****************
 13751 ;; Defined at:
 13752 ;;		line 358 in file "main.c"
 13753 ;; Parameters:    Size  Location     Type
 13754 ;;		None
 13755 ;; Auto vars:     Size  Location     Type
 13756 ;;		None
 13757 ;; Return value:  Size  Location     Type
 13758 ;;		None               void
 13759 ;; Registers used:
 13760 ;;		None
 13761 ;; Tracked objects:
 13762 ;;		On entry : 0/0
 13763 ;;		On exit  : 0/0
 13764 ;;		Unchanged: 0/0
 13765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;Total ram usage:        0 bytes
 13771 ;; Hardware stack levels used:    1
 13772 ;; Hardware stack levels required when called:    4
 13773 ;; This function calls:
 13774 ;;		Nothing
 13775 ;; This function is called by:
 13776 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780                           
 13781                           ;psect for function _USBCBErrorHandler
 13782  1000                     _USBCBErrorHandler:	
 13783                           
 13784                           ;incstack = 0
 13785                           ; Regs used in _USBCBErrorHandler: []
 13786  1000  0008               	return
 13787  1001                     __end_of_USBCBErrorHandler:	
 13788                           
 13789                           	psect	text58
 13790  19B9                     __ptext58:	
 13791 ;; *************** function _USBCB_SOF_Handler *****************
 13792 ;; Defined at:
 13793 ;;		line 335 in file "main.c"
 13794 ;; Parameters:    Size  Location     Type
 13795 ;;		None
 13796 ;; Auto vars:     Size  Location     Type
 13797 ;;		None
 13798 ;; Return value:  Size  Location     Type
 13799 ;;		None               void
 13800 ;; Registers used:
 13801 ;;		None
 13802 ;; Tracked objects:
 13803 ;;		On entry : 0/0
 13804 ;;		On exit  : 0/0
 13805 ;;		Unchanged: 0/0
 13806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13811 ;;Total ram usage:        0 bytes
 13812 ;; Hardware stack levels used:    1
 13813 ;; Hardware stack levels required when called:    4
 13814 ;; This function calls:
 13815 ;;		Nothing
 13816 ;; This function is called by:
 13817 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13818 ;; This function uses a non-reentrant model
 13819 ;;
 13820                           
 13821                           
 13822                           ;psect for function _USBCB_SOF_Handler
 13823  19B9                     _USBCB_SOF_Handler:	
 13824                           
 13825                           ;incstack = 0
 13826                           ; Regs used in _USBCB_SOF_Handler: []
 13827  19B9  0008               	return
 13828  19BA                     __end_of_USBCB_SOF_Handler:	
 13829                           
 13830                           	psect	text59
 13831  19B8                     __ptext59:	
 13832 ;; *************** function _USBCBWakeFromSuspend *****************
 13833 ;; Defined at:
 13834 ;;		line 305 in file "main.c"
 13835 ;; Parameters:    Size  Location     Type
 13836 ;;		None
 13837 ;; Auto vars:     Size  Location     Type
 13838 ;;		None
 13839 ;; Return value:  Size  Location     Type
 13840 ;;		None               void
 13841 ;; Registers used:
 13842 ;;		None
 13843 ;; Tracked objects:
 13844 ;;		On entry : 0/0
 13845 ;;		On exit  : 0/0
 13846 ;;		Unchanged: 0/0
 13847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13852 ;;Total ram usage:        0 bytes
 13853 ;; Hardware stack levels used:    1
 13854 ;; Hardware stack levels required when called:    4
 13855 ;; This function calls:
 13856 ;;		Nothing
 13857 ;; This function is called by:
 13858 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13859 ;;		_USBCBSendResume
 13860 ;; This function uses a non-reentrant model
 13861 ;;
 13862                           
 13863                           
 13864                           ;psect for function _USBCBWakeFromSuspend
 13865  19B8                     _USBCBWakeFromSuspend:	
 13866                           
 13867                           ;incstack = 0
 13868                           ; Regs used in _USBCBWakeFromSuspend: []
 13869  19B8  0008               	return
 13870  19B9                     __end_of_USBCBWakeFromSuspend:	
 13871                           
 13872                           	psect	text60
 13873  19B7                     __ptext60:	
 13874 ;; *************** function _USBCBSuspend *****************
 13875 ;; Defined at:
 13876 ;;		line 264 in file "main.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;		None
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;		None
 13881 ;; Return value:  Size  Location     Type
 13882 ;;		None               void
 13883 ;; Registers used:
 13884 ;;		None
 13885 ;; Tracked objects:
 13886 ;;		On entry : 0/0
 13887 ;;		On exit  : 0/0
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;Total ram usage:        0 bytes
 13895 ;; Hardware stack levels used:    1
 13896 ;; Hardware stack levels required when called:    4
 13897 ;; This function calls:
 13898 ;;		Nothing
 13899 ;; This function is called by:
 13900 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13901 ;; This function uses a non-reentrant model
 13902 ;;
 13903                           
 13904                           
 13905                           ;psect for function _USBCBSuspend
 13906  19B7                     _USBCBSuspend:	
 13907                           
 13908                           ;incstack = 0
 13909                           ; Regs used in _USBCBSuspend: []
 13910  19B7  0008               	return
 13911  19B8                     __end_of_USBCBSuspend:	
 13912                           
 13913                           	psect	text61
 13914  08C7                     __ptext61:	
 13915 ;; *************** function _USBDeviceInit *****************
 13916 ;; Defined at:
 13917 ;;		line 467 in file "../USB/usb_device.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;		None
 13920 ;; Auto vars:     Size  Location     Type
 13921 ;;  p               2    0[BANK1 ] PTR unsigned char 
 13922 ;;		 -> UEP1(1), 
 13923 ;;  i               1    2[BANK1 ] unsigned char 
 13924 ;;  i               1    3[BANK1 ] unsigned char 
 13925 ;; Return value:  Size  Location     Type
 13926 ;;		None               void
 13927 ;; Registers used:
 13928 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;Total ram usage:        6 bytes
 13939 ;; Hardware stack levels used:    1
 13940 ;; Hardware stack levels required when called:    4
 13941 ;; This function calls:
 13942 ;;		Nothing
 13943 ;; This function is called by:
 13944 ;;		_USBDeviceTasks
 13945 ;;		_InitializeSystem
 13946 ;; This function uses a non-reentrant model
 13947 ;;
 13948                           
 13949                           
 13950                           ;psect for function _USBDeviceInit
 13951  08C7                     _USBDeviceInit:	
 13952                           
 13953                           ;usb_device.c: 468: BYTE i;
 13954                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
 13955                           
 13956                           ;incstack = 0
 13957                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 13958  08C7  0021               	movlb	1	; select bank1
 13959  08C8  1112               	bcf	18,2	;volatile
 13960                           
 13961                           ;usb_device.c: 473: UEIR = 0;;
 13962  08C9  003D               	movlb	29	; select bank29
 13963  08CA  0193               	clrf	19	;volatile
 13964                           
 13965                           ;usb_device.c: 476: UIR = 0;;
 13966  08CB  0190               	clrf	16	;volatile
 13967                           
 13968                           ;usb_device.c: 479: UEP0 = 0;
 13969  08CC  0198               	clrf	24	;volatile
 13970                           
 13971                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 13972  08CD  300E               	movlw	14
 13973  08CE  0021               	movlb	1	; select bank1
 13974  08CF  00A1               	movwf	(USBDeviceInit@p+1)^(0+128)
 13975  08D0  3099               	movlw	153
 13976  08D1  00A0               	movwf	USBDeviceInit@p^(0+128)
 13977  08D2  01A2               	clrf	USBDeviceInit@i_718^(0+128)
 13978  08D3  0822               	movf	USBDeviceInit@i_718^(0+128),w
 13979  08D4  1D03               	skipz
 13980  08D5  28E8               	goto	l6785
 13981  08D6                     l6777:	
 13982  08D6  0820               	movf	USBDeviceInit@p^(0+128),w
 13983  08D7  0086               	movwf	6
 13984  08D8  0821               	movf	(USBDeviceInit@p+1)^(0+128),w
 13985  08D9  0087               	movwf	7
 13986  08DA  0181               	clrf	1
 13987  08DB  3001               	movlw	1
 13988  08DC  07A0               	addwf	USBDeviceInit@p^(0+128),f
 13989  08DD  3000               	movlw	0
 13990  08DE  3DA1               	addwfc	(USBDeviceInit@p+1)^(0+128),f
 13991  08DF  3001               	movlw	1
 13992  08E0  0020               	movlb	0	; select bank0
 13993  08E1  00DE               	movwf	??_USBDeviceInit
 13994  08E2  085E               	movf	??_USBDeviceInit,w
 13995  08E3  0021               	movlb	1	; select bank1
 13996  08E4  07A2               	addwf	USBDeviceInit@i_718^(0+128),f
 13997  08E5  0822               	movf	USBDeviceInit@i_718^(0+128),w
 13998  08E6  1903               	btfsc	3,2
 13999  08E7  28D6               	goto	l6777
 14000  08E8                     l6785:	
 14001                           
 14002                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14003  08E8  3016               	movlw	22
 14004  08E9  003D               	movlb	29	; select bank29
 14005  08EA  0091               	movwf	17	;volatile
 14006  08EB  309F               	movlw	159
 14007  08EC  0097               	movwf	23	;volatile
 14008  08ED  307B               	movlw	123
 14009  08EE  0092               	movwf	18	;volatile
 14010                           
 14011                           ;usb_device.c: 486: ;
 14012                           ;usb_device.c: 489: ;
 14013                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14014  08EF  0021               	movlb	1	; select bank1
 14015  08F0  01A3               	clrf	USBDeviceInit@i^(0+128)
 14016  08F1  3008               	movlw	8
 14017  08F2  0223               	subwf	USBDeviceInit@i^(0+128),w
 14018  08F3  1803               	btfsc	3,0
 14019  08F4  2910               	goto	l128
 14020  08F5                     l6793:	
 14021                           
 14022                           ;usb_device.c: 493: {
 14023                           ;usb_device.c: 494: BDT[i].Val = 0x00;
 14024  08F5  0823               	movf	USBDeviceInit@i^(0+128),w
 14025  08F6  0020               	movlb	0	; select bank0
 14026  08F7  00DE               	movwf	??_USBDeviceInit
 14027  08F8  3001               	movlw	1
 14028  08F9                     u6605:	
 14029  08F9  35DE               	lslf	??_USBDeviceInit,f
 14030  08FA  3EFF               	addlw	-1
 14031  08FB  1D03               	skipz
 14032  08FC  28F9               	goto	u6605
 14033  08FD  355E               	lslf	??_USBDeviceInit,w
 14034  08FE  3E20               	addlw	32
 14035  08FF  0086               	movwf	6
 14036  0900  0187               	clrf	7
 14037  0901  3000               	movlw	0
 14038  0902  3FC0               	movwi [0]fsr1
 14039  0903  3000               	movlw	0
 14040  0904  3FC1               	movwi [1]fsr1
 14041  0905  3FC2               	movwi [2]fsr1
 14042  0906  3FC3               	movwi [3]fsr1
 14043  0907  3001               	movlw	1
 14044  0908  00DE               	movwf	??_USBDeviceInit
 14045  0909  085E               	movf	??_USBDeviceInit,w
 14046  090A  0021               	movlb	1	; select bank1
 14047  090B  07A3               	addwf	USBDeviceInit@i^(0+128),f
 14048  090C  3008               	movlw	8
 14049  090D  0223               	subwf	USBDeviceInit@i^(0+128),w
 14050  090E  1C03               	skipc
 14051  090F  28F5               	goto	l6793
 14052  0910                     l128:	
 14053                           
 14054                           ;usb_device.c: 495: }
 14055                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
 14056  0910  003D               	movlb	29	; select bank29
 14057  0911  170E               	bsf	14,6	;volatile
 14058                           
 14059                           ;usb_device.c: 501: UADDR = 0x00;
 14060  0912  0196               	clrf	22	;volatile
 14061                           
 14062                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
 14063  0913  120E               	bcf	14,4	;volatile
 14064                           
 14065                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
 14066  0914  130E               	bcf	14,6	;volatile
 14067  0915                     l6813:	
 14068                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
 14069                           
 14070  0915  003D               	movlb	29	; select bank29
 14071  0916  1D90               	btfss	16,3	;volatile
 14072  0917  2925               	goto	l6815
 14073                           
 14074                           ;usb_device.c: 511: {
 14075                           ;usb_device.c: 512: (UIR &= 0xF7);
 14076  0918  30F7               	movlw	247
 14077  0919  0020               	movlb	0	; select bank0
 14078  091A  00DE               	movwf	??_USBDeviceInit
 14079  091B  085E               	movf	??_USBDeviceInit,w
 14080  091C  003D               	movlb	29	; select bank29
 14081  091D  0590               	andwf	16,f	;volatile
 14082                           
 14083                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
 14084  091E  0021               	movlb	1	; select bank1
 14085  091F  01EB               	clrf	(_inPipes^(0+128)+2)
 14086                           
 14087                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
 14088  0920  0023               	movlb	3	; select bank3
 14089  0921  01A2               	clrf	(_outPipes^(0+384)+2)
 14090                           
 14091                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
 14092  0922  01A3               	clrf	(_outPipes^(0+384)+3)
 14093  0923  01A4               	clrf	((_outPipes+1)^(0+384)+3)
 14094  0924  2915               	goto	l6813
 14095  0925                     l6815:	
 14096                           
 14097                           ;usb_device.c: 517: }
 14098                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
 14099  0925  3001               	movlw	1
 14100  0926  0020               	movlb	0	; select bank0
 14101  0927  00DE               	movwf	??_USBDeviceInit
 14102  0928  085E               	movf	??_USBDeviceInit,w
 14103  0929  0022               	movlb	2	; select bank2
 14104  092A  00E9               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 14105                           
 14106                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
 14107  092B  3001               	movlw	1
 14108  092C  0020               	movlb	0	; select bank0
 14109  092D  00DE               	movwf	??_USBDeviceInit
 14110  092E  085E               	movf	??_USBDeviceInit,w
 14111  092F  0023               	movlb	3	; select bank3
 14112  0930  00BF               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 14113                           
 14114                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
 14115  0931  01BB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 14116                           
 14117                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
 14118  0932  01BC               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 14119                           
 14120                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
 14121  0933  01BA               	clrf	_USBBusIsSuspended^(0+384)
 14122                           
 14123                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(1+1u); i++)
 14124  0934  0021               	movlb	1	; select bank1
 14125  0935  01A3               	clrf	USBDeviceInit@i^(0+128)
 14126  0936  3002               	movlw	2
 14127  0937  0223               	subwf	USBDeviceInit@i^(0+128),w
 14128  0938  1803               	btfsc	3,0
 14129  0939  295B               	goto	l6833
 14130  093A                     l6827:	
 14131                           
 14132                           ;usb_device.c: 531: {
 14133                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
 14134  093A  0823               	movf	USBDeviceInit@i^(0+128),w
 14135  093B  3EE3               	addlw	_pBDTEntryIn& (0+255)
 14136  093C  0086               	movwf	6
 14137  093D  0187               	clrf	7
 14138  093E  0181               	clrf	1
 14139                           
 14140                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
 14141  093F  0823               	movf	USBDeviceInit@i^(0+128),w
 14142  0940  3EB2               	addlw	_pBDTEntryOut& (0+255)
 14143  0941  0086               	movwf	6
 14144  0942  3001               	movlw	1	; select bank3/4
 14145  0943  0087               	movwf	7
 14146  0944  0181               	clrf	1
 14147                           
 14148                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
 14149  0945  0823               	movf	USBDeviceInit@i^(0+128),w
 14150  0946  3EAE               	addlw	_ep_data_in& (0+255)
 14151  0947  0086               	movwf	6
 14152  0948  3001               	movlw	1	; select bank3/4
 14153  0949  0087               	movwf	7
 14154  094A  0181               	clrf	1
 14155                           
 14156                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
 14157  094B  0823               	movf	USBDeviceInit@i^(0+128),w
 14158  094C  3EB0               	addlw	_ep_data_out& (0+255)
 14159  094D  0086               	movwf	6
 14160  094E  3001               	movlw	1	; select bank3/4
 14161  094F  0087               	movwf	7
 14162  0950  0181               	clrf	1
 14163  0951  3001               	movlw	1
 14164  0952  0020               	movlb	0	; select bank0
 14165  0953  00DE               	movwf	??_USBDeviceInit
 14166  0954  085E               	movf	??_USBDeviceInit,w
 14167  0955  0021               	movlb	1	; select bank1
 14168  0956  07A3               	addwf	USBDeviceInit@i^(0+128),f
 14169  0957  3002               	movlw	2
 14170  0958  0223               	subwf	USBDeviceInit@i^(0+128),w
 14171  0959  1C03               	skipc
 14172  095A  293A               	goto	l6827
 14173  095B                     l6833:	
 14174                           
 14175                           ;usb_device.c: 536: }
 14176                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14177  095B  3028               	movlw	40
 14178  095C  0020               	movlb	0	; select bank0
 14179  095D  00DE               	movwf	??_USBDeviceInit
 14180  095E  085E               	movf	??_USBDeviceInit,w
 14181  095F  0021               	movlb	1	; select bank1
 14182  0960  00E3               	movwf	_pBDTEntryIn^(0+128)
 14183                           
 14184                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
 14185  0961  3016               	movlw	22
 14186  0962  003D               	movlb	29	; select bank29
 14187  0963  0098               	movwf	24	;volatile
 14188                           
 14189                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 14190  0964  3040               	movlw	64
 14191  0965  0020               	movlb	0	; select bank0
 14192  0966  00DE               	movwf	??_USBDeviceInit
 14193  0967  3000               	movlw	0
 14194  0968  00DF               	movwf	??_USBDeviceInit+1
 14195  0969  085E               	movf	??_USBDeviceInit,w
 14196  096A  00A2               	movwf	34	;volatile
 14197  096B  085F               	movf	??_USBDeviceInit+1,w
 14198  096C  00A3               	movwf	35	;volatile
 14199                           
 14200                           ;usb_device.c: 544: BDT[0].CNT = 8;
 14201  096D  3008               	movlw	8
 14202  096E  00A1               	movwf	33	;volatile
 14203                           
 14204                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
 14205  096F  3084               	movlw	132
 14206  0970  00DE               	movwf	??_USBDeviceInit
 14207  0971  085E               	movf	??_USBDeviceInit,w
 14208  0972  00A0               	movwf	32	;volatile
 14209                           
 14210                           ;usb_device.c: 548: USBActiveConfiguration = 0;
 14211  0973  01ED               	clrf	_USBActiveConfiguration
 14212                           
 14213                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
 14214  0974  0021               	movlb	1	; select bank1
 14215  0975  01E6               	clrf	_USBDeviceState^(0+128)
 14216  0976  0008               	return
 14217  0977                     __end_of_USBDeviceInit:	
 14218                           
 14219                           	psect	intentry
 14220  0004                     __pintentry:	
 14221 ;; *************** function _ISRCode *****************
 14222 ;; Defined at:
 14223 ;;		line 70 in file "main.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;		None
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;		None
 14228 ;; Return value:  Size  Location     Type
 14229 ;;		None               void
 14230 ;; Registers used:
 14231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14241 ;;Total ram usage:        1 bytes
 14242 ;; Hardware stack levels used:    1
 14243 ;; Hardware stack levels required when called:    3
 14244 ;; This function calls:
 14245 ;;		_ResultRx
 14246 ;; This function is called by:
 14247 ;;		Interrupt level 1
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251  0004                     _ISRCode:	
 14252                           
 14253                           ;incstack = 0
 14254                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14255  0004  3180               	pagesel	$
 14256  0005  0020               	movlb	0	; select bank0
 14257  0006  087F               	movf	127,w
 14258  0007  00DD               	movwf	??_ISRCode
 14259                           
 14260                           ;main.c: 72: if(IOCBF)
 14261  0008  0027               	movlb	7	; select bank7
 14262  0009  0816               	movf	22,w	;volatile
 14263  000A  1903               	btfsc	3,2
 14264  000B  280E               	goto	i1l852
 14265                           
 14266                           ;main.c: 73: ResultRx();
 14267  000C  3189  2177         	fcall	_ResultRx
 14268  000E                     i1l852:	
 14269  000E  0020               	movlb	0	; select bank0
 14270  000F  085D               	movf	??_ISRCode,w
 14271  0010  00FF               	movwf	127
 14272  0011  0009               	retfie
 14273  0012                     __end_of_ISRCode:	
 14274                           
 14275                           	psect	text63
 14276  0977                     __ptext63:	
 14277 ;; *************** function _ResultRx *****************
 14278 ;; Defined at:
 14279 ;;		line 191 in file "klondike.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;		None
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;		None
 14284 ;; Return value:  Size  Location     Type
 14285 ;;		None               void
 14286 ;; Registers used:
 14287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14295 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14296 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14297 ;;Total ram usage:        7 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; Hardware stack levels required when called:    2
 14300 ;; This function calls:
 14301 ;;		i1_SendCmdReply
 14302 ;;		i1___bmul
 14303 ;; This function is called by:
 14304 ;;		_ISRCode
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           
 14309                           ;psect for function _ResultRx
 14310  0977                     _ResultRx:	
 14311                           
 14312                           ;klondike.c: 192: TimeOut = 0;
 14313                           
 14314                           ;incstack = 0
 14315                           ; Regs used in _ResultRx: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14316  0977  0023               	movlb	3	; select bank3
 14317  0978  01B9               	clrf	_TimeOut^(0+384)
 14318                           
 14319                           ;klondike.c: 193: ResultPos++;
 14320  0979  3001               	movlw	1
 14321  097A  0020               	movlb	0	; select bank0
 14322  097B  00D8               	movwf	??_ResultRx
 14323  097C  0858               	movf	??_ResultRx,w
 14324  097D  07E6               	addwf	_ResultPos,f
 14325                           
 14326                           ;klondike.c: 195: if(ResultPos == 2)
 14327  097E  0866               	movf	_ResultPos,w
 14328  097F  3A02               	xorlw	2
 14329  0980  1903               	btfsc	3,2
 14330                           
 14331                           ;klondike.c: 196: ResultPos = 0;
 14332  0981  01E6               	clrf	_ResultPos
 14333  0982                     i1l7989:	
 14334                           ;klondike.c: 198: while(ResultQC < 4) {
 14335                           
 14336  0982  3004               	movlw	4
 14337  0983  0023               	movlb	3	; select bank3
 14338  0984  0237               	subwf	_ResultQC^(0+384),w
 14339  0985  1803               	btfsc	3,0
 14340  0986  29CC               	goto	i1l7991
 14341                           
 14342                           ;klondike.c: 199: if(RCIF) {
 14343  0987  0020               	movlb	0	; select bank0
 14344  0988  1E91               	btfss	17,5	;volatile
 14345  0989  29AD               	goto	i1l7981
 14346                           
 14347                           ;klondike.c: 200: ResultQue[ResultPos][2+ResultQC++] = RCREG;
 14348  098A  0023               	movlb	3	; select bank3
 14349  098B  0819               	movf	25,w	;volatile
 14350  098C  0020               	movlb	0	; select bank0
 14351  098D  00D8               	movwf	??_ResultRx
 14352  098E  3002               	movlw	2
 14353  098F  0023               	movlb	3	; select bank3
 14354  0990  0737               	addwf	_ResultQC^(0+384),w
 14355  0991  0020               	movlb	0	; select bank0
 14356  0992  00D9               	movwf	??_ResultRx+1
 14357  0993  30C0               	movlw	_ResultQue& (0+255)
 14358  0994  0759               	addwf	??_ResultRx+1,w
 14359  0995  00DA               	movwf	??_ResultRx+2
 14360  0996  3006               	movlw	6
 14361  0997  00DB               	movwf	??_ResultRx+3
 14362  0998  085B               	movf	??_ResultRx+3,w
 14363  0999  00F0               	movwf	?i1___bmul
 14364  099A  0866               	movf	_ResultPos,w
 14365  099B  3199  21E8  3189   	fcall	i1___bmul
 14366  099E  0020               	movlb	0	; select bank0
 14367  099F  075A               	addwf	??_ResultRx+2,w
 14368  09A0  00DC               	movwf	??_ResultRx+4
 14369  09A1  085C               	movf	??_ResultRx+4,w
 14370  09A2  0086               	movwf	6
 14371  09A3  3001               	movlw	1	; select bank3/4
 14372  09A4  0087               	movwf	7
 14373  09A5  0858               	movf	??_ResultRx,w
 14374  09A6  0081               	movwf	1
 14375  09A7  3001               	movlw	1
 14376  09A8  00D8               	movwf	??_ResultRx
 14377  09A9  0858               	movf	??_ResultRx,w
 14378  09AA  0023               	movlb	3	; select bank3
 14379  09AB  07B7               	addwf	_ResultQC^(0+384),f
 14380                           
 14381                           ;klondike.c: 201: TimeOut = 0;
 14382  09AC  01B9               	clrf	_TimeOut^(0+384)
 14383  09AD                     i1l7981:	
 14384                           
 14385                           ;klondike.c: 202: }
 14386                           ;klondike.c: 203: if(TimeOut++ > 32) {
 14387  09AD  3001               	movlw	1
 14388  09AE  0020               	movlb	0	; select bank0
 14389  09AF  00D8               	movwf	??_ResultRx
 14390  09B0  0858               	movf	??_ResultRx,w
 14391  09B1  0023               	movlb	3	; select bank3
 14392  09B2  07B9               	addwf	_TimeOut^(0+384),f
 14393  09B3  3022               	movlw	34
 14394  09B4  0239               	subwf	_TimeOut^(0+384),w
 14395  09B5  1C03               	skipc
 14396  09B6  29BE               	goto	i1l741
 14397                           
 14398                           ;klondike.c: 204: Status.Noise++;
 14399  09B7  3001               	movlw	1
 14400  09B8  0020               	movlb	0	; select bank0
 14401  09B9  00D8               	movwf	??_ResultRx
 14402  09BA  0858               	movf	??_ResultRx,w
 14403  09BB  0022               	movlb	2	; select bank2
 14404  09BC  07E5               	addwf	(_Status^(0+256)+12),f	;volatile
 14405                           
 14406                           ;klondike.c: 205: goto outrx;
 14407  09BD  2A22               	goto	i1l8001
 14408  09BE                     i1l741:	
 14409                           
 14410                           ;klondike.c: 206: }
 14411                           ;klondike.c: 207: if(RCSTAbits.OERR) {
 14412  09BE  1C9D               	btfss	29,1	;volatile
 14413  09BF  2982               	goto	i1l7989
 14414                           
 14415                           ;klondike.c: 208: if(Status.State == 'W') {
 14416  09C0  0022               	movlb	2	; select bank2
 14417  09C1  0859               	movf	_Status^(0+256),w	;volatile
 14418  09C2  3A57               	xorlw	87
 14419  09C3  1D03               	skipz
 14420  09C4  2A22               	goto	i1l8001
 14421                           
 14422                           ;klondike.c: 209: Status.ErrorCount++;
 14423  09C5  3001               	movlw	1
 14424  09C6  0020               	movlb	0	; select bank0
 14425  09C7  00D8               	movwf	??_ResultRx
 14426  09C8  0858               	movf	??_ResultRx,w
 14427  09C9  0022               	movlb	2	; select bank2
 14428  09CA  07E0               	addwf	(_Status^(0+256)+7),f	;volatile
 14429                           
 14430                           ;klondike.c: 210: }
 14431                           ;klondike.c: 211: goto outrx;
 14432  09CB  2A22               	goto	i1l8001
 14433  09CC                     i1l7991:	
 14434                           
 14435                           ;klondike.c: 212: }
 14436                           ;klondike.c: 213: }
 14437                           ;klondike.c: 215: if(Status.State == 'W') {
 14438  09CC  0022               	movlb	2	; select bank2
 14439  09CD  0859               	movf	_Status^(0+256),w	;volatile
 14440  09CE  3A57               	xorlw	87
 14441  09CF  1D03               	skipz
 14442  09D0  2A22               	goto	i1l8001
 14443                           
 14444                           ;klondike.c: 216: ResultQue[ResultPos][0] = '=';
 14445  09D1  303D               	movlw	61
 14446  09D2  0020               	movlb	0	; select bank0
 14447  09D3  00D8               	movwf	??_ResultRx
 14448  09D4  3006               	movlw	6
 14449  09D5  00D9               	movwf	??_ResultRx+1
 14450  09D6  0859               	movf	??_ResultRx+1,w
 14451  09D7  00F0               	movwf	?i1___bmul
 14452  09D8  0866               	movf	_ResultPos,w
 14453  09D9  3199  21E8  3189   	fcall	i1___bmul
 14454  09DC  3EC0               	addlw	_ResultQue& (0+255)
 14455  09DD  0086               	movwf	6
 14456  09DE  3001               	movlw	1	; select bank3/4
 14457  09DF  0087               	movwf	7
 14458  09E0  0020               	movlb	0	; select bank0
 14459  09E1  0858               	movf	??_ResultRx,w
 14460  09E2  0081               	movwf	1
 14461                           
 14462                           ;klondike.c: 217: ResultQue[ResultPos][1] = Status.WorkID;
 14463  09E3  0022               	movlb	2	; select bank2
 14464  09E4  085D               	movf	(_Status^(0+256)+4),w	;volatile
 14465  09E5  0020               	movlb	0	; select bank0
 14466  09E6  00D8               	movwf	??_ResultRx
 14467  09E7  3006               	movlw	6
 14468  09E8  00D9               	movwf	??_ResultRx+1
 14469  09E9  0859               	movf	??_ResultRx+1,w
 14470  09EA  00F0               	movwf	?i1___bmul
 14471  09EB  0866               	movf	_ResultPos,w
 14472  09EC  3199  21E8  3189   	fcall	i1___bmul
 14473  09EF  0020               	movlb	0	; select bank0
 14474  09F0  00DA               	movwf	??_ResultRx+2
 14475  09F1  0A5A               	incf	??_ResultRx+2,w
 14476  09F2  3EC0               	addlw	_ResultQue& (0+255)
 14477  09F3  0086               	movwf	6
 14478  09F4  3001               	movlw	1	; select bank3/4
 14479  09F5  0087               	movwf	7
 14480  09F6  0858               	movf	??_ResultRx,w
 14481  09F7  0081               	movwf	1
 14482                           
 14483                           ;klondike.c: 218: SendCmdReply(&ResultQue[ResultPos], &ResultQue[ResultPos]+1, sizeof(Re
      +                          sultQue[ResultPos])-1);
 14484  09F8  3006               	movlw	6
 14485  09F9  00D8               	movwf	??_ResultRx
 14486  09FA  0858               	movf	??_ResultRx,w
 14487  09FB  00F0               	movwf	?i1___bmul
 14488  09FC  0866               	movf	_ResultPos,w
 14489  09FD  3199  21E8  3189   	fcall	i1___bmul
 14490  0A00  3EC0               	addlw	_ResultQue& (0+255)
 14491  0A01  0020               	movlb	0	; select bank0
 14492  0A02  00D9               	movwf	??_ResultRx+1
 14493  0A03  0859               	movf	??_ResultRx+1,w
 14494  0A04  00FC               	movwf	_ResultRx$3333
 14495                           
 14496                           ;klondike.c: 218: SendCmdReply(&ResultQue[ResultPos], &ResultQue[ResultPos]+1, sizeof(Re
      +                          sultQue[ResultPos])-1);
 14497  0A05  3006               	movlw	6
 14498  0A06  00D8               	movwf	??_ResultRx
 14499  0A07  0858               	movf	??_ResultRx,w
 14500  0A08  00F0               	movwf	?i1___bmul
 14501  0A09  0866               	movf	_ResultPos,w
 14502  0A0A  3199  21E8  3189   	fcall	i1___bmul
 14503  0A0D  0020               	movlb	0	; select bank0
 14504  0A0E  00D9               	movwf	??_ResultRx+1
 14505  0A0F  0A59               	incf	??_ResultRx+1,w
 14506  0A10  3EC0               	addlw	_ResultQue& (0+255)
 14507  0A11  00DA               	movwf	??_ResultRx+2
 14508  0A12  085A               	movf	??_ResultRx+2,w
 14509  0A13  00FD               	movwf	_ResultRx$3334
 14510                           
 14511                           ;klondike.c: 218: SendCmdReply(&ResultQue[ResultPos], &ResultQue[ResultPos]+1, sizeof(Re
      +                          sultQue[ResultPos])-1);
 14512  0A14  087C               	movf	_ResultRx$3333,w
 14513  0A15  00F6               	movwf	?i1_SendCmdReply
 14514  0A16  3001               	movlw	1
 14515  0A17  00F7               	movwf	?i1_SendCmdReply+1
 14516  0A18  087D               	movf	_ResultRx$3334,w
 14517  0A19  00F8               	movwf	?i1_SendCmdReply+2
 14518  0A1A  3001               	movlw	1
 14519  0A1B  00F9               	movwf	?i1_SendCmdReply+3
 14520  0A1C  3005               	movlw	5
 14521  0A1D  00D8               	movwf	??_ResultRx
 14522  0A1E  0858               	movf	??_ResultRx,w
 14523  0A1F  00FA               	movwf	?i1_SendCmdReply+4
 14524  0A20  3195  2595         	fcall	i1_SendCmdReply
 14525  0A22                     i1l8001:	
 14526                           ;klondike.c: 219: }
 14527                           ;klondike.c: 221: outrx:
 14528                           
 14529                           
 14530                           ;klondike.c: 222: { RCSTAbits.SPEN = 0; RCSTAbits.SPEN = 1; };
 14531  0A22  0023               	movlb	3	; select bank3
 14532  0A23  139D               	bcf	29,7	;volatile
 14533  0A24  179D               	bsf	29,7	;volatile
 14534                           
 14535                           ;klondike.c: 223: ResultQC = 0;
 14536  0A25  01B7               	clrf	_ResultQC^(0+384)
 14537                           
 14538                           ;klondike.c: 224: IOCBF = 0;
 14539  0A26  0027               	movlb	7	; select bank7
 14540  0A27  0196               	clrf	22	;volatile
 14541  0A28  0008               	return
 14542  0A29                     __end_of_ResultRx:	
 14543                           
 14544                           	psect	text64
 14545  1595                     __ptext64:	
 14546 ;; *************** function i1_SendCmdReply *****************
 14547 ;; Defined at:
 14548 ;;		line 208 in file "main.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;  SendCmdReply    2    6[COMMON] PTR unsigned char 
 14551 ;;		 -> ResultQue(12), OUTPacket(64), 
 14552 ;;  SendCmdReply    2    8[COMMON] PTR unsigned char 
 14553 ;;		 -> ResultQue(12), Cfg(6), ID(12), Status(13), 
 14554 ;;  SendCmdReply    1   10[COMMON] unsigned char 
 14555 ;; Auto vars:     Size  Location     Type
 14556 ;;  SendCmdReply    1   11[COMMON] unsigned char 
 14557 ;; Return value:  Size  Location     Type
 14558 ;;		None               void
 14559 ;; Registers used:
 14560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14561 ;; Tracked objects:
 14562 ;;		On entry : 0/0
 14563 ;;		On exit  : 0/0
 14564 ;;		Unchanged: 0/0
 14565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14566 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14568 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14569 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14570 ;;Total ram usage:       14 bytes
 14571 ;; Hardware stack levels used:    1
 14572 ;; Hardware stack levels required when called:    1
 14573 ;; This function calls:
 14574 ;;		i1___wmul
 14575 ;;		i1___bmul
 14576 ;; This function is called by:
 14577 ;;		_ResultRx
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           
 14582                           ;psect for function i1_SendCmdReply
 14583  1595                     i1_SendCmdReply:	
 14584                           
 14585                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
 14586                           
 14587                           ;incstack = 0
 14588                           ; Regs used in i1_SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14589  1595  087A               	movf	i1SendCmdReply@count,w
 14590  1596  0020               	movlb	0	; select bank0
 14591  1597  00D0               	movwf	??i1_SendCmdReply
 14592  1598  01D1               	clrf	??i1_SendCmdReply+1
 14593  1599  0021               	movlb	1	; select bank1
 14594  159A  086F               	movf	_WQI^(0+128),w
 14595  159B  0020               	movlb	0	; select bank0
 14596  159C  00D2               	movwf	??i1_SendCmdReply+2
 14597  159D  01D3               	clrf	??i1_SendCmdReply+3
 14598  159E  0852               	movf	??i1_SendCmdReply+2,w
 14599  159F  00F0               	movwf	?i1___wmul
 14600  15A0  0853               	movf	??i1_SendCmdReply+3,w
 14601  15A1  00F1               	movwf	?i1___wmul+1
 14602  15A2  300F               	movlw	15
 14603  15A3  00F2               	movwf	?i1___wmul+2
 14604  15A4  3000               	movlw	0
 14605  15A5  00F3               	movwf	?i1___wmul+3
 14606  15A6  319A  22F7  3195   	fcall	i1___wmul
 14607  15A9  0020               	movlb	0	; select bank0
 14608  15AA  0850               	movf	??i1_SendCmdReply,w
 14609  15AB  0770               	addwf	?i1___wmul,w
 14610  15AC  00D4               	movwf	??i1_SendCmdReply+4
 14611  15AD  0851               	movf	??i1_SendCmdReply+1,w
 14612  15AE  3D71               	addwfc	?i1___wmul+1,w
 14613  15AF  00D5               	movwf	??i1_SendCmdReply+5
 14614  15B0  0854               	movf	??i1_SendCmdReply+4,w
 14615  15B1  3E02               	addlw	2
 14616  15B2  00D6               	movwf	??i1_SendCmdReply+6
 14617  15B3  3000               	movlw	0
 14618  15B4  3D55               	addwfc	??i1_SendCmdReply+5,w
 14619  15B5  00D7               	movwf	??i1_SendCmdReply+7
 14620  15B6  0857               	movf	??i1_SendCmdReply+7,w
 14621  15B7  3A80               	xorlw	128
 14622  15B8  00FF               	movwf	127
 14623  15B9  3080               	movlw	128
 14624  15BA  027F               	subwf	127,w
 14625  15BB  1D03               	skipz
 14626  15BC  2DBF               	goto	u844_25
 14627  15BD  3040               	movlw	64
 14628  15BE  0256               	subwf	??i1_SendCmdReply+6,w
 14629  15BF                     u844_25:	
 14630  15BF  1803               	skipnc
 14631  15C0  0008               	return
 14632                           
 14633                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
 14634  15C1  0876               	movf	i1SendCmdReply@cmd,w
 14635  15C2  0086               	movwf	6
 14636  15C3  0877               	movf	i1SendCmdReply@cmd+1,w
 14637  15C4  0087               	movwf	7
 14638  15C5  0801               	movf	1,w
 14639  15C6  0020               	movlb	0	; select bank0
 14640  15C7  00D0               	movwf	??i1_SendCmdReply
 14641  15C8  300F               	movlw	15
 14642  15C9  00D1               	movwf	??i1_SendCmdReply+1
 14643  15CA  0851               	movf	??i1_SendCmdReply+1,w
 14644  15CB  00F0               	movwf	?i1___bmul
 14645  15CC  0021               	movlb	1	; select bank1
 14646  15CD  086F               	movf	_WQI^(0+128),w
 14647  15CE  3199  21E8  3195   	fcall	i1___bmul
 14648  15D1  3E20               	addlw	32
 14649  15D2  0086               	movwf	6
 14650  15D3  3002               	movlw	2	; select bank4/5
 14651  15D4  0087               	movwf	7
 14652  15D5  0020               	movlb	0	; select bank0
 14653  15D6  0850               	movf	??i1_SendCmdReply,w
 14654  15D7  0081               	movwf	1
 14655                           
 14656                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
 14657  15D8  0021               	movlb	1	; select bank1
 14658  15D9  0865               	movf	_SlaveAddress^(0+128),w
 14659  15DA  0020               	movlb	0	; select bank0
 14660  15DB  00D0               	movwf	??i1_SendCmdReply
 14661  15DC  300F               	movlw	15
 14662  15DD  00D1               	movwf	??i1_SendCmdReply+1
 14663  15DE  0851               	movf	??i1_SendCmdReply+1,w
 14664  15DF  00F0               	movwf	?i1___bmul
 14665  15E0  0021               	movlb	1	; select bank1
 14666  15E1  086F               	movf	_WQI^(0+128),w
 14667  15E2  3199  21E8  3195   	fcall	i1___bmul
 14668  15E5  0020               	movlb	0	; select bank0
 14669  15E6  00D2               	movwf	??i1_SendCmdReply+2
 14670  15E7  0A52               	incf	??i1_SendCmdReply+2,w
 14671  15E8  3E20               	addlw	32
 14672  15E9  0086               	movwf	6
 14673  15EA  3002               	movlw	2	; select bank4/5
 14674  15EB  0087               	movwf	7
 14675  15EC  0850               	movf	??i1_SendCmdReply,w
 14676  15ED  0081               	movwf	1
 14677                           
 14678                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
 14679  15EE  01FB               	clrf	i1SendCmdReply@n
 14680  15EF                     i1l7963:	
 14681  15EF  087A               	movf	i1SendCmdReply@count,w
 14682  15F0  027B               	subwf	i1SendCmdReply@n,w
 14683  15F1  1803               	btfsc	3,0
 14684  15F2  2E1F               	goto	i1l7965
 14685                           
 14686                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
 14687  15F3  0879               	movf	i1SendCmdReply@data+1,w
 14688  15F4  00D1               	movwf	??i1_SendCmdReply+1
 14689  15F5  0878               	movf	i1SendCmdReply@data,w
 14690  15F6  00D0               	movwf	??i1_SendCmdReply
 14691  15F7  087B               	movf	i1SendCmdReply@n,w
 14692  15F8  0750               	addwf	??i1_SendCmdReply,w
 14693  15F9  0084               	movwf	4
 14694  15FA  0851               	movf	??i1_SendCmdReply+1,w
 14695  15FB  1803               	skipnc
 14696  15FC  0A51               	incf	??i1_SendCmdReply+1,w
 14697  15FD  0085               	movwf	5
 14698  15FE  0800               	movf	0,w	;code access
 14699  15FF  00D2               	movwf	??i1_SendCmdReply+2
 14700  1600  0021               	movlb	1	; select bank1
 14701  1601  086F               	movf	_WQI^(0+128),w
 14702  1602  0020               	movlb	0	; select bank0
 14703  1603  00D3               	movwf	??i1_SendCmdReply+3
 14704  1604  01D4               	clrf	??i1_SendCmdReply+4
 14705  1605  0853               	movf	??i1_SendCmdReply+3,w
 14706  1606  00F0               	movwf	?i1___wmul
 14707  1607  0854               	movf	??i1_SendCmdReply+4,w
 14708  1608  00F1               	movwf	?i1___wmul+1
 14709  1609  300F               	movlw	15
 14710  160A  00F2               	movwf	?i1___wmul+2
 14711  160B  3000               	movlw	0
 14712  160C  00F3               	movwf	?i1___wmul+3
 14713  160D  319A  22F7  3195   	fcall	i1___wmul
 14714  1610  0870               	movf	?i1___wmul,w
 14715  1611  077B               	addwf	i1SendCmdReply@n,w
 14716  1612  3E02               	addlw	2
 14717  1613  3E20               	addlw	32
 14718  1614  0086               	movwf	6
 14719  1615  3002               	movlw	2	; select bank4/5
 14720  1616  0087               	movwf	7
 14721  1617  0020               	movlb	0	; select bank0
 14722  1618  0852               	movf	??i1_SendCmdReply+2,w
 14723  1619  0081               	movwf	1
 14724  161A  3001               	movlw	1
 14725  161B  00D0               	movwf	??i1_SendCmdReply
 14726  161C  0850               	movf	??i1_SendCmdReply,w
 14727  161D  07FB               	addwf	i1SendCmdReply@n,f
 14728  161E  2DEF               	goto	i1l7963
 14729  161F                     i1l7965:	
 14730                           
 14731                           ;main.c: 214: WQI = (WQI+1) & 3;
 14732  161F  0021               	movlb	1	; select bank1
 14733  1620  0A6F               	incf	_WQI^(0+128),w
 14734  1621  3903               	andlw	3
 14735  1622  0020               	movlb	0	; select bank0
 14736  1623  00D0               	movwf	??i1_SendCmdReply
 14737  1624  0850               	movf	??i1_SendCmdReply,w
 14738  1625  0021               	movlb	1	; select bank1
 14739  1626  00EF               	movwf	_WQI^(0+128)
 14740  1627  0008               	return
 14741  1628                     __end_ofi1_SendCmdReply:	
 14742                           
 14743                           	psect	text65
 14744  19E8                     __ptext65:	
 14745 ;; *************** function i1___bmul *****************
 14746 ;; Defined at:
 14747 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;  __bmul          1    wreg     unsigned char 
 14750 ;;  __bmul          1    0[COMMON] unsigned char 
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;  __bmul          1    2[COMMON] unsigned char 
 14753 ;;  __bmul          1    3[COMMON] unsigned char 
 14754 ;; Return value:  Size  Location     Type
 14755 ;;                  1    wreg      unsigned char 
 14756 ;; Registers used:
 14757 ;;		wreg, status,2, status,0
 14758 ;; Tracked objects:
 14759 ;;		On entry : 0/0
 14760 ;;		On exit  : 0/0
 14761 ;;		Unchanged: 0/0
 14762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14763 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14767 ;;Total ram usage:        4 bytes
 14768 ;; Hardware stack levels used:    1
 14769 ;; This function calls:
 14770 ;;		Nothing
 14771 ;; This function is called by:
 14772 ;;		_ResultRx
 14773 ;;		i1_SendCmdReply
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777                           
 14778                           ;psect for function i1___bmul
 14779  19E8                     i1___bmul:	
 14780                           
 14781                           ;incstack = 0
 14782                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 14783                           ;i1___bmul@multiplier stored from wreg
 14784  19E8  00F2               	movwf	i1___bmul@multiplier
 14785  19E9  01F3               	clrf	i1___bmul@product
 14786  19EA                     i1l6589:	
 14787  19EA  1C72               	btfss	i1___bmul@multiplier,0
 14788  19EB  29F0               	goto	i1l6593
 14789  19EC  0870               	movf	i1___bmul@multiplicand,w
 14790  19ED  00F1               	movwf	??i1___bmul
 14791  19EE  0871               	movf	??i1___bmul,w
 14792  19EF  07F3               	addwf	i1___bmul@product,f
 14793  19F0                     i1l6593:	
 14794  19F0  1003               	clrc
 14795  19F1  0DF0               	rlf	i1___bmul@multiplicand,f
 14796  19F2  1003               	clrc
 14797  19F3  0CF2               	rrf	i1___bmul@multiplier,f
 14798  19F4  08F2               	movf	i1___bmul@multiplier,f
 14799  19F5  1D03               	skipz
 14800  19F6  29EA               	goto	i1l6589
 14801  19F7  0873               	movf	i1___bmul@product,w
 14802  19F8  0008               	return
 14803  19F9                     __end_ofi1___bmul:	
 14804                           
 14805                           	psect	text66
 14806  1AF7                     __ptext66:	
 14807 ;; *************** function i1___wmul *****************
 14808 ;; Defined at:
 14809 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
 14810 ;; Parameters:    Size  Location     Type
 14811 ;;  __wmul          2    0[COMMON] unsigned int 
 14812 ;;  __wmul          2    2[COMMON] unsigned int 
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;  __wmul          2    4[COMMON] unsigned int 
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  2    0[COMMON] unsigned int 
 14817 ;; Registers used:
 14818 ;;		wreg, status,2, status,0
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14828 ;;Total ram usage:        6 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		i1_SendCmdReply
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           
 14838                           ;psect for function i1___wmul
 14839  1AF7                     i1___wmul:	
 14840                           
 14841                           ;incstack = 0
 14842                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 14843  1AF7  01F4               	clrf	i1___wmul@product
 14844  1AF8  01F5               	clrf	i1___wmul@product+1
 14845  1AF9                     i1l6577:	
 14846  1AF9  1C70               	btfss	i1___wmul@multiplier,0
 14847  1AFA  2AFF               	goto	i1l1295
 14848  1AFB  0872               	movf	i1___wmul@multiplicand,w
 14849  1AFC  07F4               	addwf	i1___wmul@product,f
 14850  1AFD  0873               	movf	i1___wmul@multiplicand+1,w
 14851  1AFE  3DF5               	addwfc	i1___wmul@product+1,f
 14852  1AFF                     i1l1295:	
 14853  1AFF  3001               	movlw	1
 14854  1B00                     u642_25:	
 14855  1B00  35F2               	lslf	i1___wmul@multiplicand,f
 14856  1B01  0DF3               	rlf	i1___wmul@multiplicand+1,f
 14857  1B02  0B89               	decfsz	9,f
 14858  1B03  2B00               	goto	u642_25
 14859  1B04  3001               	movlw	1
 14860  1B05                     u643_25:	
 14861  1B05  36F1               	lsrf	i1___wmul@multiplier+1,f
 14862  1B06  0CF0               	rrf	i1___wmul@multiplier,f
 14863  1B07  0B89               	decfsz	9,f
 14864  1B08  2B05               	goto	u643_25
 14865  1B09  0871               	movf	i1___wmul@multiplier+1,w
 14866  1B0A  0470               	iorwf	i1___wmul@multiplier,w
 14867  1B0B  1D03               	skipz
 14868  1B0C  2AF9               	goto	i1l6577
 14869  1B0D  0875               	movf	i1___wmul@product+1,w
 14870  1B0E  01F1               	clrf	?i1___wmul+1
 14871  1B0F  07F1               	addwf	?i1___wmul+1,f
 14872  1B10  0874               	movf	i1___wmul@product,w
 14873  1B11  01F0               	clrf	?i1___wmul
 14874  1B12  07F0               	addwf	?i1___wmul,f
 14875  1B13  0008               	return
 14876  1B14                     __end_ofi1___wmul:	
 14877  007E                     btemp	set	126	;btemp
 14878  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    174
    Data        72
    BSS         152
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     18      32
    BANK1            80     67      80
    BANK2            80     57      80
    BANK3            80      0      73
    BANK4            16      0      16
    BANK5            16      0       0
    BANK6            80      0      56
    BANK7            80      0      32
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           28      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    ResultRx$3334	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$3333	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$3268	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$3267	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$2897	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ResultRx$2896	PTR unsigned char  size(1) Largest target is 12
		 -> ResultQue(BANK3[12]), 

    ?___lbtoft	float  size(1) Largest target is 0

    ?___ftpack	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_rotate	unsigned long  size(1) Largest target is 0

    ?_memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BANK0[32]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    SendCmdReply@data	PTR unsigned char  size(2) Largest target is 13
		 -> ResultQue(BANK3[12]), Cfg(BANK3[6]), ID(CODE[12]), Status(BANK2[13]), 

    SendCmdReply@cmd	PTR unsigned char  size(2) Largest target is 64
		 -> ResultQue(BANK3[12]), OUTPacket(BANK5[64]), 

    USBGenericInHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBGenericOutHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    ProcessCmd@cmd	PTR unsigned char  size(1) Largest target is 64
		 -> OUTPacket(BANK5[64]), 

    I2CInBuf	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    AsicPreCalc@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    SendAsicData@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 32
		 -> configDescriptor1(CODE[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> INPacket(BANK4[64]), OUTPacket(BANK5[64]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    S118$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply
    i1_SendCmdReply->i1___wmul

Critical Paths under _main in BANK0

    _ProcessIO->___bmul
    _ProcessCmd->___lwdiv
    _ProcessCmd->___wmul
    _SendCmdReply->___bmul
    _SendCmdReply->___wmul
    _AsicPushWork->___wmul
    _AsicPreCalc->___wmul
    _SendAsicData->___wmul
    _DetectAsics->___awdiv
    _UpdateFanLevel->___awtoft
    _UpdateFanLevel->___lbtoft
    ___lbtoft->___ftpack
    ___fttol->___awtoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___ftadd->___awtoft
    ___ftadd->___lbtoft
    ___awtoft->___ftpack
    _USBCtrlEPService->_USBCtrlTrfInHandler
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBStdSetCfgHandler->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCBInitEP->_USBEnableEndpoint
    _USBTransferOnePacket->___bmul
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _ISRCode in BANK0

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply

Critical Paths under _main in BANK1

    _main->_WorkTick
    _ProcessIO->_ProcessCmd
    _ProcessCmd->_AsicPushWork
    _SendCmdReply->___wmul
    _AsicPushWork->_AsicPreCalc
    _AsicPreCalc->_rotate
    _SendAsicData->___wmul
    _UserInit->_DetectAsics
    _DetectAsics->___awdiv
    _WorkTick->_UpdateFanLevel
    _UpdateFanLevel->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___awtoft
    ___ftge->___ftadd
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCBInitEP
    _USBCBInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    _AsicPushWork->_AsicPreCalc

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19366
                     _USBDeviceTasks
                       _AsicPushWork
                           _WorkTick
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            8     8      0    4802
                                             37 BANK1      8     8      0
               _USBTransferOnePacket
                         _ProcessCmd
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _ProcessCmd                                           7     7      0    4152
                                             30 BANK1      7     7      0
                       _AsicPushWork
                       _SendCmdReply
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     241
                                             14 BANK0      4     0      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (3) _SendCmdReply                                        14     9      5     495
                                              2 BANK1     14     9      5
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     136
                                             14 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _AsicPushWork                                         5     5      0    2871
                                             25 BANK1      5     5      0
                       _SendAsicData
                        _AsicPreCalc
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     136
                                             14 BANK0      4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AsicPreCalc                                         69    67      2    2673
                                             13 BANK1     12    10      2
                                              0 BANK2     57    57      0
                             _rotate
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _rotate                                              13     8      5     124
                                              0 BANK1     13     8      5
 ---------------------------------------------------------------------------------
 (4) _SendAsicData                                         6     4      2      62
                                              2 BANK1      6     4      2
                             _Send32
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Send32                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0     974
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0     578
                        _DetectAsics
                            _InitFAN
                     _InitTempSensor
                       _InitWorkTick
                       _InitResultRx
 ---------------------------------------------------------------------------------
 (3) _InitResultRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitWorkTick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTempSensor                                       1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitFAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DetectAsics                                         10    10      0     578
                                              5 BANK1     10    10      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     445
                                             14 BANK0      4     0      4
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _WorkTick                                             1     1      0    2847
                                             66 BANK1      1     1      0
                     _UpdateFanLevel
 ---------------------------------------------------------------------------------
 (2) _UpdateFanLevel                                      19    19      0    2847
                                             56 BANK1     10    10      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             8     5      3     231
                                             17 BANK0      1     1      0
                                              5 BANK1      7     4      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     252
                                             42 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      45
                                             26 BANK1      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6     535
                                             10 BANK1     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     136
                                             42 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    1049
                                             29 BANK1     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3     300
                                             17 BANK0      1     1      0
                                              5 BANK1      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5     209
                                             14 BANK0      3     3      0
                                              0 BANK1      5     0      5
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    7872
                                             29 BANK1      3     3      0
                      _USBDeviceInit
                 _USBWakeFromSuspend
                         _USBSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    4864
                                             25 BANK1      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                             17 BANK0      1     1      0
                                              0 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                              2 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                             16 BANK0      2     2      0
                                              0 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    4428
                                             24 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    3444
                                             23 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1371
                                             17 BANK1      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1179
                                             17 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4      96
                                             14 BANK0      4     0      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                              2 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              0 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0     136
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0     848
                                             17 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0     848
                                             17 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5     848
                                             12 BANK1      5     0      5
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
                  _USBCBErrorHandler
                 _USBCBCheckOtherReq
              _USBCBStdSetDscHandler
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          3     3      0     817
                                              9 BANK1      3     3      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     4      3     440
                                              0 BANK1      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     377
                                             17 BANK0      1     0      1
                                              4 BANK1      5     5      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     222
                                             14 BANK0      3     2      1
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
              _USBCheckVendorRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckVendorRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     396
                                             14 BANK0      2     2      0
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISRCode                                             1     1      0    1404
                                             13 BANK0      1     1      0
                           _ResultRx
 ---------------------------------------------------------------------------------
 (11) _ResultRx                                            7     7      0    1404
                                             12 COMMON     2     2      0
                                              8 BANK0      5     5      0
                     i1_SendCmdReply
                           i1___bmul
 ---------------------------------------------------------------------------------
 (12) i1_SendCmdReply                                     14     9      5    1138
                                              6 COMMON     6     1      5
                                              0 BANK0      8     8      0
                           i1___wmul
                           i1___bmul
 ---------------------------------------------------------------------------------
 (12) i1___bmul                                            4     3      1     212
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     300
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceTasks
     _USBDeviceInit
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
       _USBCBErrorHandler
       _USBCBCheckOtherReq
         _USBCheckVendorRequest
       _USBCBStdSetDscHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
           ___bmul (ARG)
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
           _USBCBErrorHandler
           _USBCBCheckOtherReq
             _USBCheckVendorRequest
           _USBCBStdSetDscHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
               ___bmul (ARG)
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
             _USBCBErrorHandler
             _USBCBCheckOtherReq
               _USBCheckVendorRequest
             _USBCBStdSetDscHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
                 ___bmul (ARG)
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _AsicPushWork
     _SendAsicData
       _Send32
       ___wmul (ARG)
     _AsicPreCalc
       _rotate
       ___wmul (ARG)
     ___wmul
   _WorkTick
     _UpdateFanLevel
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
       ___lbtoft
         ___ftpack
   _InitializeSystem
     _USBDeviceInit
     _UserInit
       _DetectAsics
         ___awdiv
       _InitFAN
       _InitTempSensor
       _InitWorkTick
       _InitResultRx
   _ProcessIO
     _USBTransferOnePacket
       ___bmul (ARG)
     _ProcessCmd
       _AsicPushWork
         _SendAsicData
           _Send32
           ___wmul (ARG)
         _AsicPreCalc
           _rotate
           ___wmul (ARG)
         ___wmul
       _SendCmdReply
         ___bmul
         ___wmul
       ___lwdiv
       ___wmul
     ___bmul

 _ISRCode (ROOT)
   _ResultRx
     i1_SendCmdReply
       i1___wmul
       i1___bmul
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0      11       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     12      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     43      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     39      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      49      11       91.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0      10      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      38      17       70.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      20      19       40.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              1C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     190      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Oct 25 03:43:52 2013

                              _USB_SD_Ptr 0801                                         pc 0002  
                          ___bmul@product 0060                               _SSPSTATbits 0214  
                                      _ID 089F                    ?_USBCheckVendorRequest 0070  
                            ___awdiv@sign 00A2                             _USBDeviceInit 08C7  
                     ___wmul@multiplicand 0060                          i1___wmul@product 0074  
                            ___ftadd@exp1 00C9                              ___ftadd@exp2 00C8  
                     __end_of_AsicPreCalc 04E1                                       LATC 010E  
                              _BankRanges 03A0      USER_USB_CALLBACK_EVENT_HANDLER@event 00AC  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00AE                              ___ftadd@sign 00C7  
                     __end_of_DetectAsics 07FD                                       l140 0B9C  
                                     l142 0BA0                                       l128 0910  
                                     l208 14BF                                       l330 1F32  
                                     l146 0BC6                                       l315 1F53  
                                     l155 0C27                                       l332 1EE2  
                                     l156 0C7D                                       l341 1F0B  
             __end_of_USBStdGetDscHandler 12F0                                       l318 1F8C  
                                     l271 1E35                                       l353 0DD9  
                                     l274 1E74                                       l354 0DDA  
                                     l275 1E41                                       l276 1E44  
                                     l701 0F15                                       l366 0E4C  
                                     l358 0E0D                                       l702 0F27  
                                     l703 0F32                                       l751 072D  
                                     _BDT 0020                                       l695 0FFD  
                                     l855 1A5F                                       l936 1CCC  
                                     _GIE 005F                                       _PR2 001B  
                                     _UIE 0E92                                       _UIR 0E90  
                                     _Cfg 01E0                                       _WQI 00EF  
                                     _WQX 016F                                       _buf 0260  
                              _USBSuspend 1A73                                       _ptr 006B  
                    USBStdSetCfgHandler@i 00B5                      USBStdSetCfgHandler@p 00B2  
                                     wreg 0009                            _USBDeviceTasks 0B8F  
                          _USBDeviceState 00E6                    ??_USBCBWakeFromSuspend 005E  
                                    S8073 1800                     ??_USBCtrlTrfRxService 0060  
                USBEnableEndpoint@options 0061                                      INDF1 0001  
                            __CFG_LVP$OFF 0000                                      FSR1H 0007  
                                    FSR1L 0006                                      l1112 0D1F  
                                    l1083 1060                                      l1089 1077  
                                    l1295 100F                USBConfigureEndpoint@handle 0060  
                                    l5015 1BC9                                      l5033 1DCB  
                                    l5019 1BD2                                      l5301 12DD  
                                    l5303 12E0                                      l6031 1CF8  
                                    l5307 12E3                                      l7021 10BD  
                                    l6053 06F9                                      l6029 1CF2  
                                    l7111 1EC2                                      l5319 1E50  
                                    l5281 1B57                                      l5329 1E68  
                                    l6241 1032                                      l6057 0711  
                                    l7107 1EAD                                      l7211 0A44  
                                    l7125 1520                                      l7221 0A5E  
                                    l6245 1039                                      l5295 12BB  
                                    l5287 127C                                      l7231 0AB1  
                                    l7223 0A7C                                      l7063 115A  
                                    l6255 1065                                      l6247 1045  
                                    l6319 1BA4                                      l6407 0D5E  
                                    l6351 0CAF                                      l6415 1C69  
                                    l7129 1528                                      l5289 1286  
                                    l7057 1135                                      l6257 106D  
                                    l6249 104A                                      l6521 145A  
                                    l6513 143F                                      l7139 1551  
                                    l7147 156E                                      l7251 137C  
                                    l7403 1F27                                      l7331 1C18  
                                    l7067 1169                                      l6347 0CA8  
                                    l6419 1C7F                                      l6443 0B08  
                                    l6523 1463                                      l6515 144D  
                                    l7085 1DFA                                      l7077 1DEC  
                                    l7149 1573                                      l7157 1590  
                                    l7181 14CB                                      l7173 1496  
                                    l7421 0D8D                                      l7237 0AD3  
                                    l7229 0AA8                                      l7325 1BF0  
                                    l7069 116C                                      l6381 0CFE  
                                    l6357 0CBE                                      l6437 0AF2  
                                    l6525 1466                                      l7095 1E25  
                                    l7343 1F4E                                      l6375 0CEB  
                                    l6471 0B67                                      l6455 0B43  
                                    l7169 1491                                      l7353 1F76  
                                    l6393 0D31                                      l6377 0CF5  
                                    l6369 0CD8                                      l6529 1474  
                                    l8075 1CAD                                      l7291 13E1  
                                    l7275 13B5                                      l7259 138C  
                                    l7443 0DE8                                      l7435 0DBB  
                                    l7419 0D8B                                      l7363 1F95  
                                    l6387 0D11                                      l6379 0CFA  
                                    l6467 0B5F                                      l6459 0B4B  
                                    l6813 0915                                      l8077 1CC7  
                                    l4973 1B8E                                      l7189 14D6  
                                    l7269 13A1                                      l7453 0E06  
                                    l7373 1EE9                                      l7365 1F96  
                                    l7357 1F83                                      l6397 0D43  
                                    l6389 0D1B                                      l7621 0EF0  
                                    l6815 0925                                      l4975 1B90  
                                    l7455 0E16                                      l7375 1EEC  
                                    l6911 0BFF                                      l6495 140F  
                                    l7543 0028                                      l7615 0EDE  
                                    l7607 0ED7                                      l6833 095B  
                                    l7481 0E7A                                      l7465 0E3B  
                                    l7385 1EF9                                      l7377 1EEF  
                                    l6921 0C0C                                      l6905 0BF3  
                                    l7617 0EEF                                      l6827 093A  
                                    l7475 0E53                                      l7467 0E40  
                                    l7387 1EFC                                      l6915 0C05  
                                    l7707 07AA                                      l7651 0FC7  
                                    l7643 0F95                                      l7389 1EFF  
                                    l7709 07F5                                      l7549 0063  
                                    l7901 1A0E                                      l7645 0FA6  
                                    l7637 0F52                                      l7479 0E72  
                                    l7399 1F1A                                      l6871 0BB3  
                                    l6793 08F5                                      l6785 08E8  
                                    l6777 08D6                                      l6929 0C1F  
                                    l7905 1A14                                      l7841 11CA  
                                    l7833 11AF                                      l7825 1191  
                                    l6955 0C61                                      l6939 0C2D  
                                    l6891 0BD6                                      l6859 0BA3  
                                    l7595 0E93                                      l7659 0FE4  
                                    l7827 1194                                      l6957 0C71  
                                    l6949 0C48                                      l7933 1D7F  
                                    l7925 1D5B                                      l6991 1C9B  
                                    l6983 1C8F                                      l6879 0BC0  
                                    l7863 1FA6                                      l7943 1005  
                                    l7687 171C                                      l7927 1D6A  
                                    l7839 11C7                                      l6993 1C9E  
                                    l6985 1C92                                      l7881 1FCD  
                                    l7689 174E                                      l7937 1D8A  
                                    l6995 1CA1                                      l6987 1C95  
                                    l6899 0BE2                                      l7891 1FED  
                                    l7795 1A67                                      l6989 1C98  
                                    l7869 1FB3                                      l6999 1CA4  
                                    l7895 1FF6                                      l7887 1FE2  
                                    l7879 1FBE                                      l7799 1A6F  
                                    _LATC 010E                                      u4235 1B62  
                                    u6105 0B24                                      u6125 0B4C  
                                    u6135 0B52                                      u6215 1416  
                                    u3825 1DA1                                      u5425 070D  
                                    u3835 1DA9                                      u5435 0725  
                                    _RCIF 008D                                      u3845 1DB1  
                                    u6165 0B68                                      u6245 1440  
                                    u7055 1EB7                                      u5615 105B  
                                    u6175 0B6E                                      u6095 0B14  
                                    u5375 1CEB                                      u8105 07DF  
                                    u8025 0F43                                      u5635 1068  
                                    u6275 145B                                      u8035 0F4A  
                                    u6605 08F9                                      u8045 0F5C  
                   ??_USBCtrlTrfTxService 005E                                      u7600 001E  
                                    u5665 107F                                      u5905 0CD9  
                                    u8065 16EC                                      u7195 0A3C  
                                    u5595 1040                                      u8245 1FC3  
                                    u8085 07B5                                      u5935 0CEC  
                                    u8095 07CA                                      u8415 1011  
                                    _UCFG 0E91                                      u8265 1FCF  
                                    u7705 014C                                      u7625 0049  
                                    u8425 1016                                      u8345 1D60  
                                    u8275 1FDA                                      u7715 0164  
                                    u7580 1C2E                                      _UEP0 0E98  
                                    u5965 0CFF                                      u8285 1FE4  
                                    u7805 0325                                      u7725 0192  
                                    u8365 1D6C                                      _UEP1 0E99  
                                    u7590 1C3F                                      u7815 0376  
                                    u7735 01E2                                      u7655 006D  
                                    u8375 1D77                                      u7585 1C29  
                                    u7905 04C9                                      u7825 038E  
                                    u7745 0246                                      u7665 0085  
                                    u8385 1D81                                      u7930 0EC6  
                                    u5995 0D12                                      u7595 1C3B  
                                    u7835 03B9                                      u7755 025E  
                                    u7675 00AF                                      _UEIE 0E97  
                                    u6965 1112                                      u7845 03EF  
                                    u7765 0276                                      u7685 00E4  
                                    u7855 0407                                      u7775 028E  
                                    u7695 0118                                      u7960 0F05  
                                    u7865 0466                                      u7785 02A7  
                                    u7875 0481                                      u7795 02D5  
                                    u7885 0499                                      u7895 04B1  
                                    _UEIR 0E93                                      _UCON 0E8E  
                                    _TMR0 0015                           __end_of_ISRCode 0012  
                                    _Step 01AC    USBStdFeatureReqHandler@current_ep_data 00B5  
                                    _pDst 016D                                      _main 1A5C  
                            ___ftpack@arg 00A0                              ___ftpack@exp 00A3  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                      __end_of_AsicPushWork 1372  
                                    start 0012                             __CFG_IESO$OFF 0000  
                      _USBCBCheckOtherReq 07FD                __end_of_USBCheckStdRequest 1F33  
                  ??_USBCtrlTrfOutHandler 00A2                         ___bmul@multiplier 0061  
                            ___ftmul@cntr 00B8                              ___ftmul@sign 00B9  
               ??_USBStdFeatureReqHandler 00B1                           __end_of_InitFAN 1AF7  
                ??_USBStdGetStatusHandler 005E                              ___fttol@exp1 00D7  
                            ___fttol@lval 00D3                            ?_USBDeviceInit 0070  
                           ?_InitResultRx 0070                       ?_USBCBCheckOtherReq 0070  
                         i1SendCmdReply@n 007B                                     ?_main 0070  
                         __end_of___awdiv 2000                           __end_of___ftadd 0D76  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 008B  
                         __end_of___ftneg 19C3                           __end_of___ftmul 0B8F  
                         ___awdiv@divisor 005E                    __end_of_USBDeviceTasks 0C80  
                         __end_of___fttol 147D                 ?_USBCtrlEPServiceComplete 0070  
                                   _IOCBF 0396                           __end_of___lwdiv 1D95  
                                   i1l741 09BE                                     i1l852 000E  
                                   _UADDR 0E96                           ___awdiv@counter 00A1  
                                   _RCREG 0199                             ?_InitWorkTick 0070  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _USTAT 0E8F        __size_of_USBCtrlEPAllowStatusStage 006F  
                           __CFG_PWRTE$ON 0000                                     _Error 01A8  
                          __CFG_FCMEN$OFF 0000           __end_of_USBCtrlEPAllowDataStage 1EDA  
                                   _sd000 08AB                                     _sd001 0805  
                                   _sd002 0839                             ___awtoft@sign 0061  
                           ___ftpack@sign 00A4                      ??_USBCBCheckOtherReq 005E  
                        __end_ofi1___bmul 19F9                          __end_ofi1___wmul 1B14  
                        ??i1_SendCmdReply 0050                                     status 0003  
                     i1___wmul@multiplier 0070                                     wtemp0 007E  
            __size_of_USBStdSetCfgHandler 0084                            __CFG_MCLRE$OFF 0000  
                         __initialization 11F4                               _AsicPreCalc 0014  
                            __end_of_main 1A73                               _DetectAsics 0745  
                          ??_InitResultRx 005E                 __size_of_USBCtrlEPService 0074  
                                  ??_main 0062                             ___fttol@sign1 00D2  
                          ??_InitWorkTick 005E                 __size_of_InitializeSystem 0019  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                        __end_of_ResultRx 0A29                                 ??_ISRCode 005D  
                          _InitTempSensor 1A45                          __end_of_UserInit 1A30  
                                  _I2CCmd 0062                                    _ACTCON 039B  
                                  _ADRESH 009C                          ___awdiv@dividend 0060  
                        __end_of___awtoft 1BBE                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 1094                          __end_of___lbtoft 1ADB  
                        __end_of_WorkTick 1D0D                                    _IOCAF3 1C9B  
                                  _T1GSPM 00CC                                    i1l1295 1AFF  
                                  i1l8001 0A22                                    i1l6577 1AF9  
                                  i1l6593 19F0                                    i1l6589 19EA  
                                  i1l7963 15EF                                    i1l7965 161F  
                                  i1l7981 09AD                                    i1l7991 09CC  
                                  i1l7989 0982                                    _OSCCON 0099  
                                  u642_25 1B00                                    u643_25 1B05  
                                  u844_25 15BF                                    _TMR1GE 00CF  
                                  _TMR0IF 005A                                    _TMR0CS 04AD  
                                  _TMR1IE 0488                                    _TMR1IF 0088  
                                  _PWM1OE 309E                                    _TMR2IF 0089  
                                  _TMR1ON 00C0                                    _TMR2ON 00E2  
                                  _SSP1EN 10AD                                    _SSP1IF 008B  
                                  _SSPADD 0212                                    _SSPBUF 0211  
                               ??_InitFAN 005E                                _TempTarget 01E7  
                                  _Send32 1754                         _shortPacketStatus 006C  
                           ?_SendCmdReply 00A2                           USBDeviceTasks@i 00BF  
                           ?_SendAsicData 00A2               USBStdFeatureReqHandler@pUEP 00B3  
                USBTransferOnePacket@data 00A1                USBCtrlTrfInHandler@lastDTS 0061  
                                  _Status 0159                           ??_USBDeviceInit 005E  
                                  ___bmul 1A0B                                    ___ftge 1C52  
                                  ___wmul 1002                                 ??___awdiv 00A0  
                               ??___ftadd 00C3                                 ??___ftneg 0062  
                               ??___ftmul 00B0                                 ??___fttol 00CE  
                            ?_USBCBInitEP 0070                                 ??___lwdiv 00A0  
                       _USBEnableEndpoint 1BBE           __size_of_USBStdGetStatusHandler 0053  
                                  _memset 1B51                          ___awdiv@quotient 00A3  
                              _ProcessCmd 0E90                        ?_USBEnableEndpoint 0061  
                                  _rotate 1C1B                     _USBCBStdSetDscHandler 0002  
                   ___ftmul@f3_as_product 00B5             __size_of_USBTransferOnePacket 004E  
                      __size_of_ProcessIO 007D                    __end_of_InitTempSensor 1A5C  
                     ??_USBEnableEndpoint 00A4                               _CtrlTrfData 0048  
                   __size_of_AsicPushWork 0082                      _controlTransferState 0068  
                 __end_of__initialization 126E                                ___ftadd@f1 00BD  
                              ___ftadd@f2 00C0                                ___ftge@ff1 00CA  
                              ___ftge@ff2 00CD                  __size_of_USBStallHandler 0025  
                          ??_SendCmdReply 00A7                                ___ftneg@f1 00BA  
                              ___awtoft@c 00A5                                ___lbtoft@c 0061  
                     ___bmul@multiplicand 005E                            ??_SendAsicData 00A4  
                     __size_of_USBSuspend 0019                                ___ftmul@f1 00AA  
                              ___ftmul@f2 00AD                   ??_USBCheckVendorRequest 005E  
                              ___fttol@f1 00CA                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 1BE8                             __end_of_sd000 08AF  
                           __end_of_sd001 0839                             __end_of_sd002 086D  
                            __pidataBANK0 0003                              __pidataBANK2 19DB  
                            __pidataBANK3 1AA5                              __pidataBANK7 1B31  
                       _USBCB_SOF_Handler 19B9          __size_of_USBCtrlEPAllowDataStage 0057  
           __size_of_USBConfigureEndpoint 004D               __end_of_USBCtrlTrfInHandler 1F99  
                      ?_USBCB_SOF_Handler 0070                                __end_of_ID 08AB  
                               ?i1___bmul 0070                                 ?i1___wmul 0070  
                          _OPTION_REGbits 0095                              _AsicPushWork 12F0  
                         ?_InitTempSensor 0070                       i1SendCmdReply@count 007A  
                     ??_USBCB_SOF_Handler 005E                  ??_USBCtrlTrfSetupHandler 00B8  
                        i1___bmul@product 0073                    _USBStdGetStatusHandler 1E30  
                    __end_of_InitResultRx 1A0B                                __pbssBANK0 0062  
                              __pbssBANK1 00E3                                __pbssBANK2 0166  
                              __pbssBANK3 01A0                                __pbssBANK4 0260  
                              __pbssBANK6 0320                         i1SendCmdReply@cmd 0076  
                    __end_of_InitWorkTick 1A45               __size_of_USBWakeFromSuspend 0018  
                             _pBDTEntryIn 00E3                         __end_of_ProcessIO 11F4  
        __end_of_USBCtrlEPServiceComplete 1508                                   ?_Send32 0070  
               __end_of_USBCB_SOF_Handler 19BA                                __pmaintext 1A5C  
                    USBCtrlTrfRxService@i 00A0                                 ?_ResultRx 0070  
                                 ?___bmul 005E                                   ?___ftge 00CA  
                                 ?___wmul 005E                                __pintentry 0004  
                               ?_UserInit 0070                                   _I2CAddr 01B5  
                                 ?_memset 005E                    ?_USBCBStdSetDscHandler 0070  
                              _device_dsc 088D                                 ?___awtoft 00A5  
                               ?___ftpack 00A0                                 ?___lbtoft 00A5  
                        _USBCtrlEPService 1103                                 ?_WorkTick 0070  
                             ?_ProcessCmd 0070                                ??i1___bmul 0071  
                              _ep_data_in 01AE                                   ?_rotate 00A0  
                              ??i1___wmul 0074                          _InitializeSystem 1A8C  
                             _NonceRanges 0320               __end_of_USBCtrlTrfRxService 0ADB  
                      _USBCheckStdRequest 1EDA                         _configDescriptor1 086D  
             __end_of_USBCtrlTrfTxService 1595                       _USBStdSetCfgHandler 1372  
                                 _ISRCode 0004                                   _PWM1DCH 0612  
                                 _PWM1DCL 0611                                   _OSCTUNE 0098  
                                 _PWM1CON 0613                                   _TMR1GIE 048F  
                                 _TMR1GIF 008F                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
           __size_of_USBCBWakeFromSuspend 0001                                __stringtab 0800  
                                 _UIRbits 0E90                                   _InitFAN 1ADB  
                    ?_USBStdSetCfgHandler 0070                           __size_of_Send32 00AC  
                                 _TimeOut 01B9                                ??_ResultRx 0058  
              __size_of_USBEnableEndpoint 002A                              ?_AsicPreCalc 00AD  
                            ?_DetectAsics 0070                      ??_USBCheckStdRequest 00B7  
                         __size_of___bmul 0012                           __size_of___ftge 003C  
           __size_of_USBCtrlTrfOutHandler 0033                                   ___awdiv 1F99  
                                 ___ftadd 0C80                                   ___ftneg 19BA  
                        ??_USBDeviceTasks 00BD                           __size_of___wmul 0027  
                                 _WorkNow 00E7                                   ___ftmul 0ADB  
                                 _WorkQue 233C                                   ___fttol 13F6  
                                 ___lwdiv 1D50                         ??_USBStallHandler 005E  
                              ??_UserInit 0062                                ??___awtoft 00A8  
                              ??___ftpack 005E                                ??___lbtoft 00A8  
                         __size_of_memset 0021                                ??_WorkTick 00E2  
               __end_of_configDescriptor1 088D                      __size_of_USBCBInitEP 001D  
                                 __ptext1 1177                                   __ptext2 0E90  
                                 __ptext3 1D50                                   __ptext4 16BD  
                                 __ptext5 1A0B                                   __ptext6 12F0  
                                 __ptext7 1002                                   __ptext8 0014  
                                 __ptext9 1C1B                                   _inPipes 00E9  
                 __size_of_UpdateFanLevel 0264                          _DetectAsics$2895 00AC  
             _USBDeferOUTDataStagePackets 01BC                           __size_of_rotate 0037  
                               _T1CONbits 0018                              ??_USBSuspend 00B1  
                               _T2CONbits 001C                         _USBCBErrorHandler 1000  
                    __end_of_SendCmdReply 1754                       i1___bmul@multiplier 0072  
                               _IOCBPbits 0394                      __end_of_SendAsicData 16BD  
                      ?_USBCBErrorHandler 0070                             ?_USBCBSuspend 0070  
                      __end_of_USB_CD_Ptr 0805           __size_of_USBCtrlTrfSetupHandler 0043  
                                 clrloop0 19D0                      end_of_initialization 126E  
                          _ProcessIO$2411 00CB                            _ProcessIO$2377 00C9  
             __size_of_USBCBCheckOtherReq 0003                        __end_of_USB_SD_Ptr 0804  
                     _pBDTEntryEP0OutNext 006A                                   init_ram 19C3  
                     ??_USBCBErrorHandler 005E                                   memset@c 005E  
                                 memset@n 0060                                   memset@p 00A2  
                                 initloop 19C4                       __size_of_ProcessCmd 0170  
                ?_USBStdFeatureReqHandler 0070                     ??_USBStdSetCfgHandler 00B1  
                        SendCmdReply@data 00A4                __size_of_USBCB_SOF_Handler 0001  
                      __end_of_USBSuspend 1A8C                   _USBCtrlEPAllowDataStage 1E83  
                               _RCSTAbits 019D                                   rotate@x 00A0  
                                 rotate@y 00A4                           AsicPreCalc@work 00AD  
                _USBCtrlEPServiceComplete 147D                     i1___wmul@multiplicand 0072  
              _USBStatusStageEnabledFlag1 0169                _USBStatusStageEnabledFlag2 01BF  
                      USBEnableEndpoint@p 00A6                 __end_of_USBCBErrorHandler 1001  
                        __CFG_FOSC$INTOSC 0000                     __size_of_InitResultRx 0012  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                            ??_USBCBSuspend 005E  
                      _BothEP0OutUOWNsSet 01B4                 USBStdSetCfgHandler@i_1089 00B4  
                               _OUTPacket 02A0                 USBConfigureEndpoint@EPNum 005F  
              ?_USBCtrlEPAllowStatusStage 0070                     __size_of_InitWorkTick 0015  
     USER_USB_CALLBACK_EVENT_HANDLER@size 00AF                                 _USTATcopy 00EE  
            __end_of_USBTransferOnePacket 1E30                                 _TXSTAbits 019E  
                           _PrecalcHashes 0340                               ___ftmul@exp 00B4  
                      USBDeviceInit@i_718 00A2                            __end_of_Send32 1800  
                  _USBCtrlTrfSetupHandler 1D0D            __size_of_USBCheckVendorRequest 0001  
           __end_of_USBCheckVendorRequest 1002                   __size_ofi1_SendCmdReply 0093  
                          __end_of___bmul 1A1D                     __end_of_USBDeviceInit 0977  
                          __end_of___ftge 1C8E                              _InitResultRx 19F9  
                          __end_of___wmul 1029                          ??_InitTempSensor 005E  
                             _BAUDCONbits 019F                            __end_of_memset 1B72  
                       _USBBusIsSuspended 01BA                            __end_of_rotate 1C52  
                            _InitWorkTick 1A30                         __size_ofi1___bmul 0011  
                               _LastError 01AA                       start_initialization 11F4  
                       __size_ofi1___wmul 001D                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 00A1              __end_of_USBConfigureEndpoint 1DE2  
         __end_of_USBStdFeatureReqHandler 0E90         __end_of_USBCtrlEPAllowStatusStage 1103  
                __end_of_USBCtrlEPService 1177                          SendAsicData@work 00A2  
                __end_of_InitializeSystem 1AA5                 ??_USBCtrlEPAllowDataStage 00A0  
                          USBDeviceInit@i 00A3                                  ??_Send32 005E  
                          USBDeviceInit@p 00A0                    _pBDTEntryEP0OutCurrent 00E8  
                 USBTransferOnePacket@dir 00A0                   USBTransferOnePacket@len 00A2  
                 ??_USBCBStdSetDscHandler 005E                                  ??___bmul 005F  
                                ??___ftge 00D0                                 _ResultPos 0066  
                               _ResultQue 01C0                                  ??___wmul 0062  
                     _USBStdGetDscHandler 1271                                 _ProcessIO 1177  
                             __pdataBANK0 006F                               __pdataBANK2 0159  
                             __pdataBANK3 01CC                               __pdataBANK7 03A0  
                       __size_of_ResultRx 00B2                      __size_of_AsicPreCalc 04CD  
                                ??_memset 00A0                      __size_of_DetectAsics 00B8  
                            ??_ProcessCmd 00BE                     __size_of_SendCmdReply 0097  
                          _UpdateFanLevel 04E1                                  ??_rotate 00A5  
              __size_of_USBCBErrorHandler 0001                     __size_of_SendAsicData 0095  
                       __size_of_UserInit 0013                    _USBActiveConfiguration 006D  
          __end_of_USBStdGetStatusHandler 1E83                         __size_of___awtoft 0027  
                       __size_of___ftpack 006B                         __size_of___lbtoft 001C  
                             __pbssBIGRAM 233C                         __size_of_WorkTick 0040  
                           __pcstackBANK0 0050                             __pcstackBANK1 00A0  
                           __pcstackBANK2 0120              __size_of_USBCtrlTrfInHandler 0066  
                                ?_ISRCode 0070                      ?_USBStdGetDscHandler 0070  
                      i1SendCmdReply@data 0078                             _ResultRx$3333 007C  
                           _ResultRx$3334 007D                __end_of_USBWakeFromSuspend 08C7  
                         _USBStallHandler 1B72                              _pBDTEntryOut 01B2  
                                ?_InitFAN 0070                              _send32_count 016E  
                               __pnvBANK3 01E6                        __end_of_ProcessCmd 1000  
                        ___lwdiv@dividend 0060                              _SendCmdReply 16BD  
                            _SendAsicData 1628                      __end_of_USBCBSuspend 19B8  
            __end_of_USBCBWakeFromSuspend 19B9                                  ?___awdiv 005E  
                                ?___ftadd 00BD                                  ?___ftneg 00BA  
                              ?_ProcessIO 0070                                  ?___ftmul 00AA  
                                ?___fttol 00CA                                  ?___lwdiv 005E  
                  __end_of_UpdateFanLevel 0745                              AsicPreCalc@K 0120  
                            AsicPreCalc@m 012C                              AsicPreCalc@n 0158  
                            AsicPreCalc@x 0154                              AsicPreCalc@y 0150  
                            AsicPreCalc@z 014C                                 __pstrings 0800  
              USBCBSendResume@delay_count 01A6                                 __pswtext1 1800  
                    _USBTransferOnePacket 1DE2                                  _I2CInBuf 01B6  
                            DetectAsics@x 00AE                                  _I2CCount 0063  
                                _I2CState 0064                                 _last_bit0 016B  
                               _last_bit1 016C              __end_of_USBCtrlTrfOutHandler 1C1B  
                   ??_USBStdGetDscHandler 005E                               _ep_data_out 01B0  
                        ___lwdiv@quotient 00A2              __size_of_USBCtrlTrfRxService 00B2  
           USBConfigureEndpoint@direction 005E              __size_of_USBCtrlTrfTxService 008D  
                          ___wmul@product 00A0                                  _LATAbits 010C  
                                _LATCbits 010E                ??_USBCtrlEPServiceComplete 00A2  
                               clear_ram0 19CF                                  _PIE2bits 0092  
                   i1___bmul@multiplicand 0070                           SendCmdReply@cmd 00A2  
                                _PIR2bits 0012                                  _INPacket 0220  
               USBCtrlEPService@setup_cnt 00BC                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 01BB                            i1_SendCmdReply 1595  
                           ??_USBCBInitEP 00A9               __size_of_USBCheckStdRequest 0059  
                                _UCONbits 0E8E                           ?_UpdateFanLevel 0070  
                     _UpdateFanLevel$2898 00DF                       _UpdateFanLevel$2899 00DC  
                    _USBConfigureEndpoint 1D95                             ProcessCmd@cmd 00C4  
        __size_of_USBStdFeatureReqHandler 011A                                  i1___bmul 19E8  
                              _ADCON0bits 009D                                _ADCON1bits 009E  
                              _ADCON2bits 009F                         ___wmul@multiplier 005E  
                   ?_USBTransferOnePacket 00A0                                  i1___wmul 1AF7  
                                _BankSize 01E8                                  _FanLevel 01E6  
                            _RemoteWakeup 0168                                  _ClockCfg 01D8  
              __end_of_USBCBCheckOtherReq 0800                                  _HashTime 006F  
                 __end_of_USBStallHandler 1B97                          __size_of_ISRCode 000E  
             ??_USBCtrlEPAllowStatusStage 005E               __end_of_USBStdSetCfgHandler 13F6  
                                _LastTemp 0065                              _SlaveAddress 00E5  
                      __end_of_device_dsc 089F                   ?_USBCtrlTrfSetupHandler 0070  
                        __size_of_InitFAN 001C                   USBStdGetStatusHandler@p 005F  
                  __end_ofi1_SendCmdReply 1628                    USBTransferOnePacket@ep 00A5  
                                _ResultQC 01B7                                  _ResultRx 0977  
                                _SetupPkt 0040                                  _SlowTick 01B8  
                             ??_ProcessIO 00C5                     ?_USBConfigureEndpoint 005E  
                                _UserInit 1A1D                          __size_of___awdiv 0067  
                        __size_of___ftadd 00F6                          __size_of___ftneg 0009  
                        __size_of___ftmul 00B4                          __size_of___fttol 0087  
                        __size_of___lwdiv 0045                                  ___awtoft 1B97  
                                ___ftpack 1029                                  ___lbtoft 1ABF  
                                _WorkTick 1CCD                        __end_of__stringtab 0801  
                              _ANSELBbits 018D                       __end_of_USBCBInitEP 1B31  
                           ?_AsicPushWork 0070                               _send32_data 0166  
                 __size_of_USBDeviceTasks 00F1                           ___lwdiv@divisor 005E  
                         ___lwdiv@counter 00A1                                  __ptext10 1628  
                                __ptext11 1754                                  __ptext20 1CCD  
                                __ptext12 1A8C                                  __ptext21 04E1  
                                __ptext13 1A1D                                _T1GCONbits 0019  
                                __ptext30 0B8F                                  __ptext22 1ABF  
                                __ptext14 19F9                                  __ptext31 1103  
                                __ptext23 13F6                                  __ptext15 1A30  
                                __ptext40 1372                                  __ptext32 1F33  
                                __ptext24 19BA                                  __ptext16 1A45  
                                __ptext41 1B51                                  __ptext33 1BE8  
                                __ptext25 0ADB                                  __ptext17 1ADB  
                                __ptext50 1B14                                  __ptext42 147D  
                                __ptext34 0A29                                  __ptext26 1C52  
                                __ptext18 0745                                  __ptext51 1DE2  
                                __ptext43 1E83                                  __ptext35 1D0D  
                                __ptext27 0C80                                  __ptext19 1F99  
                                __ptext60 19B7                                  __ptext52 1BBE  
                                __ptext44 1508                                  __ptext36 1EDA  
                                __ptext28 1B97                                  __ptext61 08C7  
                                __ptext53 1D95                                  __ptext45 1094  
                                __ptext37 0D76                                  __ptext29 1029  
                                __ptext54 0002                                  __ptext46 1B72  
                                __ptext38 1E30                                  __ptext63 0977  
                                __ptext55 07FD                                  __ptext47 1A73  
                                __ptext39 1271                                  __ptext64 1595  
                                __ptext56 1001                                  __ptext48 08AF  
                                __ptext65 19E8                                  __ptext57 1000  
                                __ptext49 1C8E                                  __ptext66 1AF7  
                                __ptext58 19B9                                  __ptext59 19B8  
                    _USBCBWakeFromSuspend 19B8            __end_of_USBCtrlTrfSetupHandler 1D50  
                           __size_of_main 0017                         ?_USBCtrlEPService 0070  
                   __size_of_USBCBSuspend 0001                         ?_InitializeSystem 0070  
                      ??_USBCtrlEPService 00B9                       _USBGenericOutHandle 01BE  
                     _USBCtrlTrfInHandler 1F33                           ?i1_SendCmdReply 0076  
                      ??_InitializeSystem 0062                                  _outPipes 01A0  
                    _USBCtrlTrfOutHandler 1BE8                 _USBCtrlEPAllowStatusStage 1094  
          __size_of_USBCBStdSetDscHandler 0001             __end_of_USBCBStdSetDscHandler 0003  
                  ??_USBTransferOnePacket 00A3                     _USBCheckVendorRequest 1001  
                          ??_AsicPushWork 00B9                 _USBDeferStatusStagePacket 0067  
                              _INTCONbits 000B                        _USBGenericInHandle 01BD  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 0060  
                                memset@p1 00A1                              _USBCBSuspend 19B7  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 00B6  
                   ?_USBCBWakeFromSuspend 0070                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00B0   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1CCD  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F         ??_USER_USB_CALLBACK_EVENT_HANDLER 0062  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 00AC           _USER_USB_CALLBACK_EVENT_HANDLER 1C8E  
                        AsicPreCalc@F3347 01CC                                  next_word 1759  
                       SendCmdReply@count 00A6                             SendCmdReply@n 00AF  
                           ??_AsicPreCalc 00AF                           _ProcessCmd$2059 00C2  
                           ??_DetectAsics 00A5                    ??_USBConfigureEndpoint 00A0  
                   ?_USBCtrlTrfOutHandler 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0A29                               _USBCBInitEP 1B14  
                      _USBWakeFromSuspend 08AF                   _USBStdFeatureReqHandler 0D76  
                     _USBCtrlTrfTxService 1508                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 00A0                     _USBAlternateInterface 006E  
                             _SSPCON1bits 0215                               _SSPCON2bits 0216  
                     USBEnableEndpoint@ep 00A8                               _SSPCON3bits 0217  
                         _endpoint_number 0069                   __size_of_InitTempSensor 0017  
                    ?_USBCtrlTrfRxService 0070                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 016A  
                    ??_USBWakeFromSuspend 00B1                USBTransferOnePacket@handle 00A6  
                        ??_UpdateFanLevel 00D8                                _USB_CD_Ptr 0804  
