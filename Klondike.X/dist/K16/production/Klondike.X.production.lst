

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Thu Oct 31 10:49:06 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBANK6,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	swtext1,local,class=CONST,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,merge=1,delta=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	psect	text51,local,class=CODE,merge=1,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2
    80                           	psect	text54,local,class=CODE,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,merge=1,delta=2
    82                           	psect	text56,local,class=CODE,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,merge=1,delta=2
    87                           	psect	intentry,global,class=CODE,delta=2
    88                           	psect	text62,local,class=CODE,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,merge=1,delta=2
    90                           	psect	text64,local,class=CODE,merge=1,delta=2
    91                           	psect	text65,local,class=CODE,merge=1,delta=2
    92                           	dabs	1,0x620,48
    93                           	dabs	1,0x5A0,80
    94                           	dabs	1,0x53C,52
    95                           	dabs	1,0x20,32,_BDT
    96                           	dabs	1,0x48,8,_CtrlTrfData
    97                           	dabs	1,0x40,8,_SetupPkt
    98                           	dabs	1,0x220,64,_INPacket
    99                           	dabs	1,0x2A0,64,_OUTPacket
   100                           	dabs	1,0x233C,0,_WorkQue
   101                           	dabs	1,0x7E,2
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001C                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011D                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  018E                     	;# 
   161  0191                     	;# 
   162  0191                     	;# 
   163  0192                     	;# 
   164  0193                     	;# 
   165  0193                     	;# 
   166  0194                     	;# 
   167  0195                     	;# 
   168  0196                     	;# 
   169  0199                     	;# 
   170  019A                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  039A                     	;# 
   200  039B                     	;# 
   201  0611                     	;# 
   202  0612                     	;# 
   203  0613                     	;# 
   204  0613                     	;# 
   205  0614                     	;# 
   206  0615                     	;# 
   207  0616                     	;# 
   208  0616                     	;# 
   209  0691                     	;# 
   210  0692                     	;# 
   211  0693                     	;# 
   212  0694                     	;# 
   213  0695                     	;# 
   214  0E8E                     	;# 
   215  0E8F                     	;# 
   216  0E90                     	;# 
   217  0E91                     	;# 
   218  0E92                     	;# 
   219  0E93                     	;# 
   220  0E94                     	;# 
   221  0E94                     	;# 
   222  0E95                     	;# 
   223  0E96                     	;# 
   224  0E97                     	;# 
   225  0E98                     	;# 
   226  0E99                     	;# 
   227  0E9A                     	;# 
   228  0E9B                     	;# 
   229  0E9C                     	;# 
   230  0E9D                     	;# 
   231  0E9E                     	;# 
   232  0E9F                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE9                     	;# 
   239  0FEA                     	;# 
   240  0FEB                     	;# 
   241  0FED                     	;# 
   242  0FEE                     	;# 
   243  0FEF                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011D                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  018E                     	;# 
   303  0191                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020C                     	;# 
   319  020D                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0391                     	;# 
   336  0392                     	;# 
   337  0393                     	;# 
   338  0394                     	;# 
   339  0395                     	;# 
   340  0396                     	;# 
   341  039A                     	;# 
   342  039B                     	;# 
   343  0611                     	;# 
   344  0612                     	;# 
   345  0613                     	;# 
   346  0613                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0616                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  0695                     	;# 
   356  0E8E                     	;# 
   357  0E8F                     	;# 
   358  0E90                     	;# 
   359  0E91                     	;# 
   360  0E92                     	;# 
   361  0E93                     	;# 
   362  0E94                     	;# 
   363  0E94                     	;# 
   364  0E95                     	;# 
   365  0E96                     	;# 
   366  0E97                     	;# 
   367  0E98                     	;# 
   368  0E99                     	;# 
   369  0E9A                     	;# 
   370  0E9B                     	;# 
   371  0E9C                     	;# 
   372  0E9D                     	;# 
   373  0E9E                     	;# 
   374  0E9F                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  0111                     	;# 
   433  0112                     	;# 
   434  0113                     	;# 
   435  0114                     	;# 
   436  0115                     	;# 
   437  0116                     	;# 
   438  0117                     	;# 
   439  0118                     	;# 
   440  0119                     	;# 
   441  011D                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  018E                     	;# 
   445  0191                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0194                     	;# 
   451  0195                     	;# 
   452  0196                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019E                     	;# 
   459  019F                     	;# 
   460  020C                     	;# 
   461  020D                     	;# 
   462  0211                     	;# 
   463  0211                     	;# 
   464  0212                     	;# 
   465  0212                     	;# 
   466  0213                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0216                     	;# 
   474  0216                     	;# 
   475  0217                     	;# 
   476  0217                     	;# 
   477  0391                     	;# 
   478  0392                     	;# 
   479  0393                     	;# 
   480  0394                     	;# 
   481  0395                     	;# 
   482  0396                     	;# 
   483  039A                     	;# 
   484  039B                     	;# 
   485  0611                     	;# 
   486  0612                     	;# 
   487  0613                     	;# 
   488  0613                     	;# 
   489  0614                     	;# 
   490  0615                     	;# 
   491  0616                     	;# 
   492  0616                     	;# 
   493  0691                     	;# 
   494  0692                     	;# 
   495  0693                     	;# 
   496  0694                     	;# 
   497  0695                     	;# 
   498  0E8E                     	;# 
   499  0E8F                     	;# 
   500  0E90                     	;# 
   501  0E91                     	;# 
   502  0E92                     	;# 
   503  0E93                     	;# 
   504  0E94                     	;# 
   505  0E94                     	;# 
   506  0E95                     	;# 
   507  0E96                     	;# 
   508  0E97                     	;# 
   509  0E98                     	;# 
   510  0E99                     	;# 
   511  0E9A                     	;# 
   512  0E9B                     	;# 
   513  0E9C                     	;# 
   514  0E9D                     	;# 
   515  0E9E                     	;# 
   516  0E9F                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  008C                     	;# 
   555  008D                     	;# 
   556  008E                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0111                     	;# 
   575  0112                     	;# 
   576  0113                     	;# 
   577  0114                     	;# 
   578  0115                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  0118                     	;# 
   582  0119                     	;# 
   583  011D                     	;# 
   584  018C                     	;# 
   585  018D                     	;# 
   586  018E                     	;# 
   587  0191                     	;# 
   588  0191                     	;# 
   589  0192                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0194                     	;# 
   593  0195                     	;# 
   594  0196                     	;# 
   595  0199                     	;# 
   596  019A                     	;# 
   597  019B                     	;# 
   598  019C                     	;# 
   599  019D                     	;# 
   600  019E                     	;# 
   601  019F                     	;# 
   602  020C                     	;# 
   603  020D                     	;# 
   604  0211                     	;# 
   605  0211                     	;# 
   606  0212                     	;# 
   607  0212                     	;# 
   608  0213                     	;# 
   609  0213                     	;# 
   610  0214                     	;# 
   611  0214                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0216                     	;# 
   616  0216                     	;# 
   617  0217                     	;# 
   618  0217                     	;# 
   619  0391                     	;# 
   620  0392                     	;# 
   621  0393                     	;# 
   622  0394                     	;# 
   623  0395                     	;# 
   624  0396                     	;# 
   625  039A                     	;# 
   626  039B                     	;# 
   627  0611                     	;# 
   628  0612                     	;# 
   629  0613                     	;# 
   630  0613                     	;# 
   631  0614                     	;# 
   632  0615                     	;# 
   633  0616                     	;# 
   634  0616                     	;# 
   635  0691                     	;# 
   636  0692                     	;# 
   637  0693                     	;# 
   638  0694                     	;# 
   639  0695                     	;# 
   640  0E8E                     	;# 
   641  0E8F                     	;# 
   642  0E90                     	;# 
   643  0E91                     	;# 
   644  0E92                     	;# 
   645  0E93                     	;# 
   646  0E94                     	;# 
   647  0E94                     	;# 
   648  0E95                     	;# 
   649  0E96                     	;# 
   650  0E97                     	;# 
   651  0E98                     	;# 
   652  0E99                     	;# 
   653  0E9A                     	;# 
   654  0E9B                     	;# 
   655  0E9C                     	;# 
   656  0E9D                     	;# 
   657  0E9E                     	;# 
   658  0E9F                     	;# 
   659  0FE4                     	;# 
   660  0FE5                     	;# 
   661  0FE6                     	;# 
   662  0FE7                     	;# 
   663  0FE8                     	;# 
   664  0FE9                     	;# 
   665  0FEA                     	;# 
   666  0FEB                     	;# 
   667  0FED                     	;# 
   668  0FEE                     	;# 
   669  0FEF                     	;# 
   670  0000                     	;# 
   671  0001                     	;# 
   672  0002                     	;# 
   673  0003                     	;# 
   674  0004                     	;# 
   675  0005                     	;# 
   676  0006                     	;# 
   677  0007                     	;# 
   678  0008                     	;# 
   679  0009                     	;# 
   680  000A                     	;# 
   681  000B                     	;# 
   682  000C                     	;# 
   683  000D                     	;# 
   684  000E                     	;# 
   685  0011                     	;# 
   686  0012                     	;# 
   687  0015                     	;# 
   688  0016                     	;# 
   689  0016                     	;# 
   690  0017                     	;# 
   691  0018                     	;# 
   692  0019                     	;# 
   693  001A                     	;# 
   694  001B                     	;# 
   695  001C                     	;# 
   696  008C                     	;# 
   697  008D                     	;# 
   698  008E                     	;# 
   699  0091                     	;# 
   700  0092                     	;# 
   701  0095                     	;# 
   702  0096                     	;# 
   703  0097                     	;# 
   704  0098                     	;# 
   705  0099                     	;# 
   706  009A                     	;# 
   707  009B                     	;# 
   708  009B                     	;# 
   709  009C                     	;# 
   710  009D                     	;# 
   711  009E                     	;# 
   712  009F                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  0111                     	;# 
   717  0112                     	;# 
   718  0113                     	;# 
   719  0114                     	;# 
   720  0115                     	;# 
   721  0116                     	;# 
   722  0117                     	;# 
   723  0118                     	;# 
   724  0119                     	;# 
   725  011D                     	;# 
   726  018C                     	;# 
   727  018D                     	;# 
   728  018E                     	;# 
   729  0191                     	;# 
   730  0191                     	;# 
   731  0192                     	;# 
   732  0193                     	;# 
   733  0193                     	;# 
   734  0194                     	;# 
   735  0195                     	;# 
   736  0196                     	;# 
   737  0199                     	;# 
   738  019A                     	;# 
   739  019B                     	;# 
   740  019C                     	;# 
   741  019D                     	;# 
   742  019E                     	;# 
   743  019F                     	;# 
   744  020C                     	;# 
   745  020D                     	;# 
   746  0211                     	;# 
   747  0211                     	;# 
   748  0212                     	;# 
   749  0212                     	;# 
   750  0213                     	;# 
   751  0213                     	;# 
   752  0214                     	;# 
   753  0214                     	;# 
   754  0215                     	;# 
   755  0215                     	;# 
   756  0215                     	;# 
   757  0216                     	;# 
   758  0216                     	;# 
   759  0217                     	;# 
   760  0217                     	;# 
   761  0391                     	;# 
   762  0392                     	;# 
   763  0393                     	;# 
   764  0394                     	;# 
   765  0395                     	;# 
   766  0396                     	;# 
   767  039A                     	;# 
   768  039B                     	;# 
   769  0611                     	;# 
   770  0612                     	;# 
   771  0613                     	;# 
   772  0613                     	;# 
   773  0614                     	;# 
   774  0615                     	;# 
   775  0616                     	;# 
   776  0616                     	;# 
   777  0691                     	;# 
   778  0692                     	;# 
   779  0693                     	;# 
   780  0694                     	;# 
   781  0695                     	;# 
   782  0E8E                     	;# 
   783  0E8F                     	;# 
   784  0E90                     	;# 
   785  0E91                     	;# 
   786  0E92                     	;# 
   787  0E93                     	;# 
   788  0E94                     	;# 
   789  0E94                     	;# 
   790  0E95                     	;# 
   791  0E96                     	;# 
   792  0E97                     	;# 
   793  0E98                     	;# 
   794  0E99                     	;# 
   795  0E9A                     	;# 
   796  0E9B                     	;# 
   797  0E9C                     	;# 
   798  0E9D                     	;# 
   799  0E9E                     	;# 
   800  0E9F                     	;# 
   801  0FE4                     	;# 
   802  0FE5                     	;# 
   803  0FE6                     	;# 
   804  0FE7                     	;# 
   805  0FE8                     	;# 
   806  0FE9                     	;# 
   807  0FEA                     	;# 
   808  0FEB                     	;# 
   809  0FED                     	;# 
   810  0FEE                     	;# 
   811  0FEF                     	;# 
   812  0000                     	;# 
   813  0001                     	;# 
   814  0002                     	;# 
   815  0003                     	;# 
   816  0004                     	;# 
   817  0005                     	;# 
   818  0006                     	;# 
   819  0007                     	;# 
   820  0008                     	;# 
   821  0009                     	;# 
   822  000A                     	;# 
   823  000B                     	;# 
   824  000C                     	;# 
   825  000D                     	;# 
   826  000E                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  0091                     	;# 
   842  0092                     	;# 
   843  0095                     	;# 
   844  0096                     	;# 
   845  0097                     	;# 
   846  0098                     	;# 
   847  0099                     	;# 
   848  009A                     	;# 
   849  009B                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  010C                     	;# 
   856  010D                     	;# 
   857  010E                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011D                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  0191                     	;# 
   872  0191                     	;# 
   873  0192                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0194                     	;# 
   877  0195                     	;# 
   878  0196                     	;# 
   879  0199                     	;# 
   880  019A                     	;# 
   881  019B                     	;# 
   882  019C                     	;# 
   883  019D                     	;# 
   884  019E                     	;# 
   885  019F                     	;# 
   886  020C                     	;# 
   887  020D                     	;# 
   888  0211                     	;# 
   889  0211                     	;# 
   890  0212                     	;# 
   891  0212                     	;# 
   892  0213                     	;# 
   893  0213                     	;# 
   894  0214                     	;# 
   895  0214                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0216                     	;# 
   900  0216                     	;# 
   901  0217                     	;# 
   902  0217                     	;# 
   903  0391                     	;# 
   904  0392                     	;# 
   905  0393                     	;# 
   906  0394                     	;# 
   907  0395                     	;# 
   908  0396                     	;# 
   909  039A                     	;# 
   910  039B                     	;# 
   911  0611                     	;# 
   912  0612                     	;# 
   913  0613                     	;# 
   914  0613                     	;# 
   915  0614                     	;# 
   916  0615                     	;# 
   917  0616                     	;# 
   918  0616                     	;# 
   919  0691                     	;# 
   920  0692                     	;# 
   921  0693                     	;# 
   922  0694                     	;# 
   923  0695                     	;# 
   924  0E8E                     	;# 
   925  0E8F                     	;# 
   926  0E90                     	;# 
   927  0E91                     	;# 
   928  0E92                     	;# 
   929  0E93                     	;# 
   930  0E94                     	;# 
   931  0E94                     	;# 
   932  0E95                     	;# 
   933  0E96                     	;# 
   934  0E97                     	;# 
   935  0E98                     	;# 
   936  0E99                     	;# 
   937  0E9A                     	;# 
   938  0E9B                     	;# 
   939  0E9C                     	;# 
   940  0E9D                     	;# 
   941  0E9E                     	;# 
   942  0E9F                     	;# 
   943  0FE4                     	;# 
   944  0FE5                     	;# 
   945  0FE6                     	;# 
   946  0FE7                     	;# 
   947  0FE8                     	;# 
   948  0FE9                     	;# 
   949  0FEA                     	;# 
   950  0FEB                     	;# 
   951  0FED                     	;# 
   952  0FEE                     	;# 
   953  0FEF                     	;# 
   954  0000                     	;# 
   955  0001                     	;# 
   956  0002                     	;# 
   957  0003                     	;# 
   958  0004                     	;# 
   959  0005                     	;# 
   960  0006                     	;# 
   961  0007                     	;# 
   962  0008                     	;# 
   963  0009                     	;# 
   964  000A                     	;# 
   965  000B                     	;# 
   966  000C                     	;# 
   967  000D                     	;# 
   968  000E                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0015                     	;# 
   972  0016                     	;# 
   973  0016                     	;# 
   974  0017                     	;# 
   975  0018                     	;# 
   976  0019                     	;# 
   977  001A                     	;# 
   978  001B                     	;# 
   979  001C                     	;# 
   980  008C                     	;# 
   981  008D                     	;# 
   982  008E                     	;# 
   983  0091                     	;# 
   984  0092                     	;# 
   985  0095                     	;# 
   986  0096                     	;# 
   987  0097                     	;# 
   988  0098                     	;# 
   989  0099                     	;# 
   990  009A                     	;# 
   991  009B                     	;# 
   992  009B                     	;# 
   993  009C                     	;# 
   994  009D                     	;# 
   995  009E                     	;# 
   996  009F                     	;# 
   997  010C                     	;# 
   998  010D                     	;# 
   999  010E                     	;# 
  1000  0111                     	;# 
  1001  0112                     	;# 
  1002  0113                     	;# 
  1003  0114                     	;# 
  1004  0115                     	;# 
  1005  0116                     	;# 
  1006  0117                     	;# 
  1007  0118                     	;# 
  1008  0119                     	;# 
  1009  011D                     	;# 
  1010  018C                     	;# 
  1011  018D                     	;# 
  1012  018E                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0194                     	;# 
  1019  0195                     	;# 
  1020  0196                     	;# 
  1021  0199                     	;# 
  1022  019A                     	;# 
  1023  019B                     	;# 
  1024  019C                     	;# 
  1025  019D                     	;# 
  1026  019E                     	;# 
  1027  019F                     	;# 
  1028  020C                     	;# 
  1029  020D                     	;# 
  1030  0211                     	;# 
  1031  0211                     	;# 
  1032  0212                     	;# 
  1033  0212                     	;# 
  1034  0213                     	;# 
  1035  0213                     	;# 
  1036  0214                     	;# 
  1037  0214                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0216                     	;# 
  1042  0216                     	;# 
  1043  0217                     	;# 
  1044  0217                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  039A                     	;# 
  1052  039B                     	;# 
  1053  0611                     	;# 
  1054  0612                     	;# 
  1055  0613                     	;# 
  1056  0613                     	;# 
  1057  0614                     	;# 
  1058  0615                     	;# 
  1059  0616                     	;# 
  1060  0616                     	;# 
  1061  0691                     	;# 
  1062  0692                     	;# 
  1063  0693                     	;# 
  1064  0694                     	;# 
  1065  0695                     	;# 
  1066  0E8E                     	;# 
  1067  0E8F                     	;# 
  1068  0E90                     	;# 
  1069  0E91                     	;# 
  1070  0E92                     	;# 
  1071  0E93                     	;# 
  1072  0E94                     	;# 
  1073  0E94                     	;# 
  1074  0E95                     	;# 
  1075  0E96                     	;# 
  1076  0E97                     	;# 
  1077  0E98                     	;# 
  1078  0E99                     	;# 
  1079  0E9A                     	;# 
  1080  0E9B                     	;# 
  1081  0E9C                     	;# 
  1082  0E9D                     	;# 
  1083  0E9E                     	;# 
  1084  0E9F                     	;# 
  1085  0FE4                     	;# 
  1086  0FE5                     	;# 
  1087  0FE6                     	;# 
  1088  0FE7                     	;# 
  1089  0FE8                     	;# 
  1090  0FE9                     	;# 
  1091  0FEA                     	;# 
  1092  0FEB                     	;# 
  1093  0FED                     	;# 
  1094  0FEE                     	;# 
  1095  0FEF                     	;# 
  1096  0000                     	;# 
  1097  0001                     	;# 
  1098  0002                     	;# 
  1099  0003                     	;# 
  1100  0004                     	;# 
  1101  0005                     	;# 
  1102  0006                     	;# 
  1103  0007                     	;# 
  1104  0008                     	;# 
  1105  0009                     	;# 
  1106  000A                     	;# 
  1107  000B                     	;# 
  1108  000C                     	;# 
  1109  000D                     	;# 
  1110  000E                     	;# 
  1111  0011                     	;# 
  1112  0012                     	;# 
  1113  0015                     	;# 
  1114  0016                     	;# 
  1115  0016                     	;# 
  1116  0017                     	;# 
  1117  0018                     	;# 
  1118  0019                     	;# 
  1119  001A                     	;# 
  1120  001B                     	;# 
  1121  001C                     	;# 
  1122  008C                     	;# 
  1123  008D                     	;# 
  1124  008E                     	;# 
  1125  0091                     	;# 
  1126  0092                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009B                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009E                     	;# 
  1138  009F                     	;# 
  1139  010C                     	;# 
  1140  010D                     	;# 
  1141  010E                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0113                     	;# 
  1145  0114                     	;# 
  1146  0115                     	;# 
  1147  0116                     	;# 
  1148  0117                     	;# 
  1149  0118                     	;# 
  1150  0119                     	;# 
  1151  011D                     	;# 
  1152  018C                     	;# 
  1153  018D                     	;# 
  1154  018E                     	;# 
  1155  0191                     	;# 
  1156  0191                     	;# 
  1157  0192                     	;# 
  1158  0193                     	;# 
  1159  0193                     	;# 
  1160  0194                     	;# 
  1161  0195                     	;# 
  1162  0196                     	;# 
  1163  0199                     	;# 
  1164  019A                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019D                     	;# 
  1168  019E                     	;# 
  1169  019F                     	;# 
  1170  020C                     	;# 
  1171  020D                     	;# 
  1172  0211                     	;# 
  1173  0211                     	;# 
  1174  0212                     	;# 
  1175  0212                     	;# 
  1176  0213                     	;# 
  1177  0213                     	;# 
  1178  0214                     	;# 
  1179  0214                     	;# 
  1180  0215                     	;# 
  1181  0215                     	;# 
  1182  0215                     	;# 
  1183  0216                     	;# 
  1184  0216                     	;# 
  1185  0217                     	;# 
  1186  0217                     	;# 
  1187  0391                     	;# 
  1188  0392                     	;# 
  1189  0393                     	;# 
  1190  0394                     	;# 
  1191  0395                     	;# 
  1192  0396                     	;# 
  1193  039A                     	;# 
  1194  039B                     	;# 
  1195  0611                     	;# 
  1196  0612                     	;# 
  1197  0613                     	;# 
  1198  0613                     	;# 
  1199  0614                     	;# 
  1200  0615                     	;# 
  1201  0616                     	;# 
  1202  0616                     	;# 
  1203  0691                     	;# 
  1204  0692                     	;# 
  1205  0693                     	;# 
  1206  0694                     	;# 
  1207  0695                     	;# 
  1208  0E8E                     	;# 
  1209  0E8F                     	;# 
  1210  0E90                     	;# 
  1211  0E91                     	;# 
  1212  0E92                     	;# 
  1213  0E93                     	;# 
  1214  0E94                     	;# 
  1215  0E94                     	;# 
  1216  0E95                     	;# 
  1217  0E96                     	;# 
  1218  0E97                     	;# 
  1219  0E98                     	;# 
  1220  0E99                     	;# 
  1221  0E9A                     	;# 
  1222  0E9B                     	;# 
  1223  0E9C                     	;# 
  1224  0E9D                     	;# 
  1225  0E9E                     	;# 
  1226  0E9F                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;_WorkQue
  1238                           
  1239                           	psect	idataBANK2
  1240  1C42                     __pidataBANK2:	
  1241                           
  1242                           ;initializer for _HashTime
  1243  1C42  34DC               	retlw	220
  1244                           
  1245                           ;initializer for _Status
  1246  1C43  3449               	retlw	73
  1247  1C44  3400               	retlw	0
  1248  1C45  3400               	retlw	0
  1249  1C46  3400               	retlw	0
  1250  1C47  3400               	retlw	0
  1251  1C48  3400               	retlw	0
  1252  1C49  3400               	retlw	0
  1253  1C4A  3400               	retlw	0
  1254  1C4B  3400               	retlw	0
  1255  1C4C  3400               	retlw	0
  1256  1C4D  3400               	retlw	0
  1257  1C4E  3440               	retlw	64
  1258  1C4F  3400               	retlw	0
  1259                           
  1260                           	psect	idataBANK3
  1261  1CE3                     __pidataBANK3:	
  1262                           
  1263                           ;initializer for AsicPreCalc@F3341
  1264  1CE3  3498               	retlw	152
  1265  1CE4  342F               	retlw	47
  1266  1CE5  348A               	retlw	138
  1267  1CE6  3442               	retlw	66
  1268  1CE7  3491               	retlw	145
  1269  1CE8  3444               	retlw	68
  1270  1CE9  3437               	retlw	55
  1271  1CEA  3471               	retlw	113
  1272  1CEB  34CF               	retlw	207
  1273  1CEC  34FB               	retlw	251
  1274  1CED  34C0               	retlw	192
  1275  1CEE  34B5               	retlw	181
  1276                           
  1277                           ;initializer for _ClockCfg
  1278  1CEF  3407               	retlw	7
  1279  1CF0  3400               	retlw	0
  1280  1CF1  3437               	retlw	55
  1281  1CF2  3405               	retlw	5
  1282  1CF3  3472               	retlw	114
  1283  1CF4  3401               	retlw	1
  1284  1CF5  3400               	retlw	0
  1285  1CF6  3400               	retlw	0
  1286                           
  1287                           ;initializer for _Cfg
  1288  1CF7  344D               	retlw	77
  1289  1CF8  3401               	retlw	1
  1290  1CF9  348F               	retlw	143
  1291  1CFA  3400               	retlw	0
  1292  1CFB  3400               	retlw	0
  1293  1CFC  3400               	retlw	0
  1294                           
  1295                           	psect	idataBANK6
  1296  1DC7                     __pidataBANK6:	
  1297                           
  1298                           ;initializer for _BankRanges
  1299  1DC7  3400               	retlw	0
  1300  1DC8  3400               	retlw	0
  1301  1DC9  3400               	retlw	0
  1302  1DCA  3400               	retlw	0
  1303  1DCB  3400               	retlw	0
  1304  1DCC  3400               	retlw	0
  1305  1DCD  3400               	retlw	0
  1306  1DCE  3440               	retlw	64
  1307  1DCF  34AA               	retlw	170
  1308  1DD0  34AA               	retlw	170
  1309  1DD1  34AA               	retlw	170
  1310  1DD2  342A               	retlw	42
  1311  1DD3  3400               	retlw	0
  1312  1DD4  3400               	retlw	0
  1313  1DD5  3400               	retlw	0
  1314  1DD6  3420               	retlw	32
  1315  1DD7  3499               	retlw	153
  1316  1DD8  3499               	retlw	153
  1317  1DD9  3499               	retlw	153
  1318  1DDA  3419               	retlw	25
  1319  1DDB  3455               	retlw	85
  1320  1DDC  3455               	retlw	85
  1321  1DDD  3455               	retlw	85
  1322  1DDE  3415               	retlw	21
  1323  1DDF  3492               	retlw	146
  1324  1DE0  3424               	retlw	36
  1325  1DE1  3449               	retlw	73
  1326  1DE2  3412               	retlw	18
  1327  1DE3  3400               	retlw	0
  1328  1DE4  3400               	retlw	0
  1329  1DE5  3400               	retlw	0
  1330  1DE6  3410               	retlw	16
  1331                           
  1332                           	psect	strings
  1333  0800                     __pstrings:	
  1334  0800                     __stringtab:	
  1335  0800  3400               	retlw	0
  1336  0801                     __end_of__stringtab:	
  1337  0801                     _USB_SD_Ptr:	
  1338  0801  34AB               	retlw	(_sd000| (0+32768))& (0+255)
  1339  0802  3405               	retlw	(_sd001| (0+32768))& (0+255)
  1340  0803  3439               	retlw	(_sd002| (0+32768))& (0+255)
  1341  0804                     __end_of_USB_SD_Ptr:	
  1342  0804                     _USB_CD_Ptr:	
  1343  0804  346D               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1344  0805                     __end_of_USB_CD_Ptr:	
  1345  0805                     _sd001:	
  1346  0805  3434               	retlw	52
  1347  0806  3403               	retlw	3
  1348  0807  344B               	retlw	75
  1349  0808  3400               	retlw	0
  1350  0809  346C               	retlw	108
  1351  080A  3400               	retlw	0
  1352  080B  346F               	retlw	111
  1353  080C  3400               	retlw	0
  1354  080D  346E               	retlw	110
  1355  080E  3400               	retlw	0
  1356  080F  3464               	retlw	100
  1357  0810  3400               	retlw	0
  1358  0811  3469               	retlw	105
  1359  0812  3400               	retlw	0
  1360  0813  346B               	retlw	107
  1361  0814  3400               	retlw	0
  1362  0815  3465               	retlw	101
  1363  0816  3400               	retlw	0
  1364  0817  3420               	retlw	32
  1365  0818  3400               	retlw	0
  1366  0819  3450               	retlw	80
  1367  081A  3400               	retlw	0
  1368  081B  3472               	retlw	114
  1369  081C  3400               	retlw	0
  1370  081D  346F               	retlw	111
  1371  081E  3400               	retlw	0
  1372  081F  346A               	retlw	106
  1373  0820  3400               	retlw	0
  1374  0821  3465               	retlw	101
  1375  0822  3400               	retlw	0
  1376  0823  3463               	retlw	99
  1377  0824  3400               	retlw	0
  1378  0825  3474               	retlw	116
  1379  0826  3400               	retlw	0
  1380  0827  3400               	retlw	0
  1381  0828  3400               	retlw	0
  1382  0829  3400               	retlw	0
  1383  082A  3400               	retlw	0
  1384  082B  3400               	retlw	0
  1385  082C  3400               	retlw	0
  1386  082D  3400               	retlw	0
  1387  082E  3400               	retlw	0
  1388  082F  3400               	retlw	0
  1389  0830  3400               	retlw	0
  1390  0831  3400               	retlw	0
  1391  0832  3400               	retlw	0
  1392  0833  3400               	retlw	0
  1393  0834  3400               	retlw	0
  1394  0835  3400               	retlw	0
  1395  0836  3400               	retlw	0
  1396  0837  3400               	retlw	0
  1397  0838  3400               	retlw	0
  1398  0839                     __end_of_sd001:	
  1399  0839                     _sd002:	
  1400  0839  3434               	retlw	52
  1401  083A  3403               	retlw	3
  1402  083B  344B               	retlw	75
  1403  083C  3400               	retlw	0
  1404  083D  3431               	retlw	49
  1405  083E  3400               	retlw	0
  1406  083F  3436               	retlw	54
  1407  0840  3400               	retlw	0
  1408  0841  3400               	retlw	0
  1409  0842  3400               	retlw	0
  1410  0843  3400               	retlw	0
  1411  0844  3400               	retlw	0
  1412  0845  3400               	retlw	0
  1413  0846  3400               	retlw	0
  1414  0847  3400               	retlw	0
  1415  0848  3400               	retlw	0
  1416  0849  3400               	retlw	0
  1417  084A  3400               	retlw	0
  1418  084B  3400               	retlw	0
  1419  084C  3400               	retlw	0
  1420  084D  3400               	retlw	0
  1421  084E  3400               	retlw	0
  1422  084F  3400               	retlw	0
  1423  0850  3400               	retlw	0
  1424  0851  3400               	retlw	0
  1425  0852  3400               	retlw	0
  1426  0853  3400               	retlw	0
  1427  0854  3400               	retlw	0
  1428  0855  3400               	retlw	0
  1429  0856  3400               	retlw	0
  1430  0857  3400               	retlw	0
  1431  0858  3400               	retlw	0
  1432  0859  3400               	retlw	0
  1433  085A  3400               	retlw	0
  1434  085B  3400               	retlw	0
  1435  085C  3400               	retlw	0
  1436  085D  3400               	retlw	0
  1437  085E  3400               	retlw	0
  1438  085F  3400               	retlw	0
  1439  0860  3400               	retlw	0
  1440  0861  3400               	retlw	0
  1441  0862  3400               	retlw	0
  1442  0863  3400               	retlw	0
  1443  0864  3400               	retlw	0
  1444  0865  3400               	retlw	0
  1445  0866  3400               	retlw	0
  1446  0867  3400               	retlw	0
  1447  0868  3400               	retlw	0
  1448  0869  3400               	retlw	0
  1449  086A  3400               	retlw	0
  1450  086B  3400               	retlw	0
  1451  086C  3400               	retlw	0
  1452  086D                     __end_of_sd002:	
  1453  086D                     _configDescriptor1:	
  1454  086D  3409               	retlw	9
  1455  086E  3402               	retlw	2
  1456  086F  3420               	retlw	32
  1457  0870  3400               	retlw	0
  1458  0871  3401               	retlw	1
  1459  0872  3401               	retlw	1
  1460  0873  3400               	retlw	0
  1461  0874  34C0               	retlw	192
  1462  0875  3432               	retlw	50
  1463  0876  3409               	retlw	9
  1464  0877  3404               	retlw	4
  1465  0878  3400               	retlw	0
  1466  0879  3400               	retlw	0
  1467  087A  3402               	retlw	2
  1468  087B  34FF               	retlw	255
  1469  087C  34FF               	retlw	255
  1470  087D  34FF               	retlw	255
  1471  087E  3400               	retlw	0
  1472  087F  3407               	retlw	7
  1473  0880  3405               	retlw	5
  1474  0881  3401               	retlw	1
  1475  0882  3402               	retlw	2
  1476  0883  3440               	retlw	64
  1477  0884  3400               	retlw	0
  1478  0885  3401               	retlw	1
  1479  0886  3407               	retlw	7
  1480  0887  3405               	retlw	5
  1481  0888  3481               	retlw	129
  1482  0889  3402               	retlw	2
  1483  088A  3440               	retlw	64
  1484  088B  3400               	retlw	0
  1485  088C  3401               	retlw	1
  1486  088D                     __end_of_configDescriptor1:	
  1487  088D                     _device_dsc:	
  1488  088D  3412               	retlw	18
  1489  088E  3401               	retlw	1
  1490  088F  3400               	retlw	0
  1491  0890  3402               	retlw	2
  1492  0891  3400               	retlw	0
  1493  0892  3400               	retlw	0
  1494  0893  3400               	retlw	0
  1495  0894  3408               	retlw	8
  1496  0895  34D8               	retlw	216
  1497  0896  3404               	retlw	4
  1498  0897  340A               	retlw	10
  1499  0898  34F6               	retlw	246
  1500  0899  3400               	retlw	0
  1501  089A  3400               	retlw	0
  1502  089B  3401               	retlw	1
  1503  089C  3402               	retlw	2
  1504  089D  3400               	retlw	0
  1505  089E  3401               	retlw	1
  1506  089F                     __end_of_device_dsc:	
  1507  089F                     _ID:	
  1508  089F  3410               	retlw	16
  1509  08A0  344B               	retlw	75
  1510  08A1  3431               	retlw	49
  1511  08A2  3436               	retlw	54
  1512  08A3  3400               	retlw	0
  1513  08A4  3400               	retlw	0
  1514  08A5  3400               	retlw	0
  1515  08A6  3400               	retlw	0
  1516  08A7  34EF               	retlw	239
  1517  08A8  34BE               	retlw	190
  1518  08A9  34AD               	retlw	173
  1519  08AA  34DE               	retlw	222
  1520  08AB                     __end_of_ID:	
  1521  08AB                     _sd000:	
  1522  08AB  3404               	retlw	4
  1523  08AC  3403               	retlw	3
  1524  08AD  3409               	retlw	9
  1525  08AE  3404               	retlw	4
  1526  08AF                     __end_of_sd000:	
  1527                           
  1528                           	psect	nvBANK2
  1529  016E                     __pnvBANK2:	
  1530  016E                     _FanLevel:	
  1531  016E                     	ds	1
  1532  016F                     _BankSize:	
  1533  016F                     	ds	1
  1534                           
  1535                           	psect	nvBANK3
  1536  01EA                     __pnvBANK3:	
  1537  01EA                     _TempTarget:	
  1538  01EA                     	ds	1
  1539  000B                     _INTCONbits	set	11
  1540  0012                     _PIR2bits	set	18
  1541  001B                     _PR2	set	27
  1542  001C                     _T2CONbits	set	28
  1543  0015                     _TMR0	set	21
  1544  005F                     _GIE	set	95
  1545  008D                     _RCIF	set	141
  1546  008B                     _SSP1IF	set	139
  1547  005A                     _TMR0IF	set	90
  1548  0089                     _TMR2IF	set	137
  1549  00E2                     _TMR2ON	set	226
  1550  009D                     _ADCON0bits	set	157
  1551  009E                     _ADCON1bits	set	158
  1552  009F                     _ADCON2bits	set	159
  1553  009C                     _ADRESH	set	156
  1554  0095                     _OPTION_REGbits	set	149
  1555  0099                     _OSCCON	set	153
  1556  0098                     _OSCTUNE	set	152
  1557  0092                     _PIE2bits	set	146
  1558  008C                     _TRISAbits	set	140
  1559  008D                     _TRISBbits	set	141
  1560  008E                     _TRISCbits	set	142
  1561  04AD                     _TMR0CS	set	1197
  1562  010C                     _LATAbits	set	268
  1563  010E                     _LATC	set	270
  1564  018C                     _ANSELA	set	396
  1565  018D                     _ANSELB	set	397
  1566  018D                     _ANSELBbits	set	397
  1567  018E                     _ANSELC	set	398
  1568  019F                     _BAUDCONbits	set	415
  1569  0199                     _RCREG	set	409
  1570  019D                     _RCSTAbits	set	413
  1571  019E                     _TXSTAbits	set	414
  1572  0212                     _SSPADD	set	530
  1573  0211                     _SSPBUF	set	529
  1574  0215                     _SSPCON1bits	set	533
  1575  0216                     _SSPCON2bits	set	534
  1576  0217                     _SSPCON3bits	set	535
  1577  0214                     _SSPSTATbits	set	532
  1578  10AD                     _SSP1EN	set	4269
  1579  039B                     _ACTCON	set	923
  1580  0396                     _IOCBF	set	918
  1581  0394                     _IOCBPbits	set	916
  1582  0613                     _PWM1CON	set	1555
  1583  0612                     _PWM1DCH	set	1554
  1584  0611                     _PWM1DCL	set	1553
  1585  309E                     _PWM1OE	set	12446
  1586  0E96                     _UADDR	set	3734
  1587  0E91                     _UCFG	set	3729
  1588  0E8E                     _UCON	set	3726
  1589  0E8E                     _UCONbits	set	3726
  1590  0E97                     _UEIE	set	3735
  1591  0E93                     _UEIR	set	3731
  1592  0E98                     _UEP0bits	set	3736
  1593  0E92                     _UIE	set	3730
  1594  0E92                     _UIEbits	set	3730
  1595  0E90                     _UIR	set	3728
  1596  0E90                     _UIRbits	set	3728
  1597  0E8F                     _USTAT	set	3727
  1598  0E98                     _UEP0	set	3736
  1599  0E99                     _UEP1	set	3737
  1600                           
  1601                           ; #config settings
  1602  0000                     
  1603                           	psect	cinit
  1604  1322                     start_initialization:	
  1605  1322                     __initialization:		;BIGRAM
  1606                           
  1607                           ; Clear objects allocated to BIGRAM
  1608  1322  303C               	movlw	low (0+9020)
  1609  1323  0084               	movwf	4
  1610  1324  3023               	movlw	high (0+9020)
  1611  1325  0085               	movwf	5
  1612  1326  30B4               	movlw	180
  1613  1327  00FE               	movwf	btemp
  1614  1328  3000               	movlw	0
  1615  1329  00FF               	movwf	btemp+1
  1616  132A  319C  2436  3193   	fcall	clear_ram0
  1617                           
  1618                           ; Clear objects allocated to BANK0
  1619  132D  01E8               	clrf	__pbssBANK0& (0+127)
  1620  132E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1621  132F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1622  1330  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1623  1331  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1624  1332  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  1625  1333  01EE               	clrf	(__pbssBANK0+6)& (0+127)
  1626  1334  01EF               	clrf	(__pbssBANK0+7)& (0+127)
  1627                           
  1628                           ; Clear objects allocated to BANK1
  1629  1335  0021               	movlb	1	; select bank1
  1630  1336  01EE               	clrf	__pbssBANK1& (0+127)
  1631  1337  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1632                           
  1633                           ; Clear objects allocated to BANK2
  1634  1338  3020               	movlw	low __pbssBANK2
  1635  1339  0084               	movwf	4
  1636  133A  3001               	movlw	high __pbssBANK2
  1637  133B  0085               	movwf	5
  1638  133C  3038               	movlw	56
  1639  133D  00FE               	movwf	btemp
  1640  133E  3000               	movlw	0
  1641  133F  00FF               	movwf	btemp+1
  1642  1340  319C  2436  3193   	fcall	clear_ram0
  1643                           
  1644                           ; Clear objects allocated to BANK3
  1645  1343  30A0               	movlw	low __pbssBANK3
  1646  1344  0084               	movwf	4
  1647  1345  3001               	movlw	high __pbssBANK3
  1648  1346  0085               	movwf	5
  1649  1347  3030               	movlw	48
  1650  1348  00FE               	movwf	btemp
  1651  1349  3000               	movlw	0
  1652  134A  00FF               	movwf	btemp+1
  1653  134B  319C  2436  3193   	fcall	clear_ram0
  1654                           
  1655                           ; Clear objects allocated to BANK6
  1656  134E  3020               	movlw	low __pbssBANK6
  1657  134F  0084               	movwf	4
  1658  1350  3003               	movlw	high __pbssBANK6
  1659  1351  0085               	movwf	5
  1660  1352  3020               	movlw	32
  1661  1353  00FE               	movwf	btemp
  1662  1354  3000               	movlw	0
  1663  1355  00FF               	movwf	btemp+1
  1664  1356  319C  2436  3193   	fcall	clear_ram0
  1665                           
  1666                           ; Initialize objects allocated to BANK2
  1667  1359  3042               	movlw	low __pidataBANK2
  1668  135A  0084               	movwf	4
  1669  135B  309C               	movlw	(high __pidataBANK2)| (0+128)
  1670  135C  0085               	movwf	5
  1671  135D  3058               	movlw	low __pdataBANK2
  1672  135E  0086               	movwf	6
  1673  135F  3001               	movlw	high __pdataBANK2
  1674  1360  0087               	movwf	7
  1675  1361  3000               	movlw	0
  1676  1362  00FF               	movwf	btemp+1
  1677  1363  300E               	movlw	14
  1678  1364  319C  242A  3193   	fcall	init_ram
  1679                           
  1680                           ; Initialize objects allocated to BANK3
  1681  1367  30E3               	movlw	low __pidataBANK3
  1682  1368  0084               	movwf	4
  1683  1369  309C               	movlw	(high __pidataBANK3)| (0+128)
  1684  136A  0085               	movwf	5
  1685  136B  30D0               	movlw	low __pdataBANK3
  1686  136C  0086               	movwf	6
  1687  136D  3001               	movlw	high __pdataBANK3
  1688  136E  0087               	movwf	7
  1689  136F  3000               	movlw	0
  1690  1370  00FF               	movwf	btemp+1
  1691  1371  301A               	movlw	26
  1692  1372  319C  242A  3193   	fcall	init_ram
  1693                           
  1694                           ; Initialize objects allocated to BANK6
  1695  1375  30C7               	movlw	low __pidataBANK6
  1696  1376  0084               	movwf	4
  1697  1377  309D               	movlw	(high __pidataBANK6)| (0+128)
  1698  1378  0085               	movwf	5
  1699  1379  3040               	movlw	low __pdataBANK6
  1700  137A  0086               	movwf	6
  1701  137B  3003               	movlw	high __pdataBANK6
  1702  137C  0087               	movwf	7
  1703  137D  3000               	movlw	0
  1704  137E  00FF               	movwf	btemp+1
  1705  137F  3020               	movlw	32
  1706  1380  319C  242A         	fcall	init_ram
  1707  1382                     end_of_initialization:	
  1708                           ;End of C runtime variable initialization code
  1709                           
  1710  1382                     __end_of__initialization:	
  1711  1382  0020               	movlb	0
  1712  1383  319C  2CCC         	ljmp	_main	;jump to C main() function
  1713                           
  1714                           	psect	bssBANK0
  1715  0068                     __pbssBANK0:	
  1716  0068                     _pBDTEntryIn:	
  1717  0068                     	ds	2
  1718  006A                     _I2CCmd:	
  1719  006A                     	ds	1
  1720  006B                     _USBDeferStatusStagePacket:	
  1721  006B                     	ds	1
  1722  006C                     _controlTransferState:	
  1723  006C                     	ds	1
  1724  006D                     _pBDTEntryEP0OutCurrent:	
  1725  006D                     	ds	1
  1726  006E                     _pBDTEntryEP0OutNext:	
  1727  006E                     	ds	1
  1728  006F                     _ptr:	
  1729  006F                     	ds	1
  1730                           
  1731                           	psect	bssBANK1
  1732  00EE                     __pbssBANK1:	
  1733  00EE                     _USBDeviceState:	
  1734  00EE                     	ds	1
  1735  00EF                     _USTATcopy:	
  1736  00EF                     	ds	1
  1737                           
  1738                           	psect	bssBANK2
  1739  0120                     __pbssBANK2:	
  1740  0120                     _outPipes:	
  1741  0120                     	ds	6
  1742  0126                     USBCBSendResume@delay_count:	
  1743  0126                     	ds	2
  1744  0128                     _Step:	
  1745  0128                     	ds	2
  1746  012A                     _ep_data_in:	
  1747  012A                     	ds	2
  1748  012C                     _ep_data_out:	
  1749  012C                     	ds	2
  1750  012E                     _pBDTEntryOut:	
  1751  012E                     	ds	2
  1752  0130                     _send32_data:	
  1753  0130                     	ds	2
  1754  0132                     _BothEP0OutUOWNsSet:	
  1755  0132                     	ds	1
  1756  0133                     _I2CAddr:	
  1757  0133                     	ds	1
  1758  0134                     _I2CCount:	
  1759  0134                     	ds	1
  1760  0135                     _I2CInBuf:	
  1761  0135                     	ds	1
  1762  0136                     _I2CState:	
  1763  0136                     	ds	1
  1764  0137                     _LastTemp:	
  1765  0137                     	ds	1
  1766  0138                     _RemoteWakeup:	
  1767  0138                     	ds	1
  1768  0139                     _ResultQC:	
  1769  0139                     	ds	1
  1770  013A                     _SlaveAddress:	
  1771  013A                     	ds	1
  1772  013B                     _SlowTick:	
  1773  013B                     	ds	1
  1774  013C                     _TimeOut:	
  1775  013C                     	ds	1
  1776  013D                     _USBBusIsSuspended:	
  1777  013D                     	ds	1
  1778  013E                     _USBDeferINDataStagePackets:	
  1779  013E                     	ds	1
  1780  013F                     _USBDeferOUTDataStagePackets:	
  1781  013F                     	ds	1
  1782  0140                     _USBGenericInHandle:	
  1783  0140                     	ds	1
  1784  0141                     _USBGenericOutHandle:	
  1785  0141                     	ds	1
  1786  0142                     _USBStatusStageEnabledFlag1:	
  1787  0142                     	ds	1
  1788  0143                     _USBStatusStageEnabledFlag2:	
  1789  0143                     	ds	1
  1790  0144                     _USBStatusStageTimeoutCounter:	
  1791  0144                     	ds	1
  1792  0145                     _VerySlowTick:	
  1793  0145                     	ds	1
  1794  0146                     _WorkNow:	
  1795  0146                     	ds	1
  1796  0147                     _endpoint_number:	
  1797  0147                     	ds	1
  1798  0148                     _last_bit0:	
  1799  0148                     	ds	1
  1800  0149                     _last_bit1:	
  1801  0149                     	ds	1
  1802  014A                     _pDst:	
  1803  014A                     	ds	1
  1804  014B                     _send32_count:	
  1805  014B                     	ds	1
  1806  014C                     _shortPacketStatus:	
  1807  014C                     	ds	1
  1808  014D                     _inPipes:	
  1809  014D                     	ds	5
  1810  0152                     _Error:	
  1811  0152                     	ds	2
  1812  0154                     _USBActiveConfiguration:	
  1813  0154                     	ds	1
  1814  0155                     _USBAlternateInterface:	
  1815  0155                     	ds	1
  1816  0156                     _WQI:	
  1817  0156                     	ds	1
  1818  0157                     _WQX:	
  1819  0157                     	ds	1
  1820                           
  1821                           	psect	dataBANK2
  1822  0158                     __pdataBANK2:	
  1823  0158                     _HashTime:	
  1824  0158                     	ds	1
  1825  0159                     _Status:	
  1826  0159                     	ds	13
  1827                           
  1828                           	psect	bssBANK3
  1829  01A0                     __pbssBANK3:	
  1830  01A0                     _buf:	
  1831  01A0                     	ds	16
  1832  01B0                     _LastError:	
  1833  01B0                     	ds	2
  1834  01B2                     _PrecalcHashes:	
  1835  01B2                     	ds	24
  1836  01CA                     _ResultQue:	
  1837  01CA                     	ds	6
  1838                           
  1839                           	psect	dataBANK3
  1840  01D0                     __pdataBANK3:	
  1841  01D0                     AsicPreCalc@F3341:	
  1842  01D0                     	ds	12
  1843  01DC                     _ClockCfg:	
  1844  01DC                     	ds	8
  1845  01E4                     _Cfg:	
  1846  01E4                     	ds	6
  1847                           
  1848                           	psect	bssBANK6
  1849  0320                     __pbssBANK6:	
  1850  0320                     _NonceRanges:	
  1851  0320                     	ds	32
  1852                           
  1853                           	psect	dataBANK6
  1854  0340                     __pdataBANK6:	
  1855  0340                     _BankRanges:	
  1856  0340                     	ds	32
  1857                           
  1858                           	psect	clrtext
  1859  1C36                     clear_ram0:	
  1860                           ;	Called with FSR0 containing the base address, and
  1861                           ;	btemp/btemp+1 has the size to clear
  1862                           
  1863  1C36  0064               	clrwdt	;clear the watchdog before getting into this loop
  1864  1C37                     clrloop0:	
  1865  1C37  0180               	clrf	0	;clear RAM location pointed to by FSR
  1866  1C38  3101               	addfsr 0,1
  1867  1C39  3001               	movlw	1
  1868  1C3A  02FE               	subwf	126,f
  1869  1C3B  3000               	movlw	0
  1870  1C3C  3BFF               	subwfb	127,f
  1871  1C3D  087F               	movf	127,w
  1872  1C3E  047E               	iorwf	126,w
  1873  1C3F  1903               	btfsc	3,2
  1874  1C40  3400               	retlw	0	;all done for this memory range, return
  1875  1C41  2C37               	goto	clrloop0	;have we reached the end yet?
  1876                           
  1877                           	psect	inittext
  1878  1C2A                     init_ram:	
  1879  1C2A  00FE               	movwf	126
  1880  1C2B                     initloop:	
  1881  1C2B  0012               	moviw fsr0++
  1882  1C2C  001E               	movwi fsr1++
  1883  1C2D  3001               	movlw	1
  1884  1C2E  02FE               	subwf	126,f
  1885  1C2F  3000               	movlw	0
  1886  1C30  3BFF               	subwfb	127,f
  1887  1C31  087F               	movf	127,w
  1888  1C32  047E               	iorwf	126,w
  1889  1C33  1903               	btfsc	3,2
  1890  1C34  3400               	retlw	0
  1891  1C35  2C2B               	goto	initloop
  1892                           
  1893                           	psect	cstackBANK2
  1894  0166                     __pcstackBANK2:	
  1895  0166                     ??_ProcessIO:	
  1896                           
  1897                           ; 0 bytes @ 0x0
  1898  0166                     	ds	4
  1899  016A                     _ProcessIO$2266:	
  1900                           
  1901                           ; 2 bytes @ 0x4
  1902  016A                     	ds	2
  1903  016C                     _ProcessIO$2300:	
  1904                           
  1905                           ; 2 bytes @ 0x6
  1906  016C                     	ds	2
  1907                           
  1908                           	psect	cstackBANK1
  1909  00A0                     __pcstackBANK1:	
  1910  00A0                     ??_SendCmdReply:	
  1911  00A0                     ?_AsicPreCalc:	
  1912                           ; 0 bytes @ 0x0
  1913                           
  1914  00A0                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1915                           ; 0 bytes @ 0x0
  1916                           
  1917  00A0                     ?___ftmul:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920  00A0                     AsicPreCalc@work:	
  1921                           ; 3 bytes @ 0x0
  1922                           
  1923  00A0                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1924                           ; 2 bytes @ 0x0
  1925                           
  1926  00A0                     _DetectAsics$2752:	
  1927                           ; 2 bytes @ 0x0
  1928                           
  1929  00A0                     ___ftmul@f1:	
  1930                           ; 2 bytes @ 0x0
  1931                           
  1932                           
  1933                           ; 3 bytes @ 0x0
  1934  00A0                     	ds	2
  1935  00A2                     ??_AsicPreCalc:	
  1936  00A2                     DetectAsics@x:	
  1937                           ; 0 bytes @ 0x2
  1938                           
  1939  00A2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1940                           ; 1 bytes @ 0x2
  1941                           
  1942                           
  1943                           ; 2 bytes @ 0x2
  1944  00A2                     	ds	1
  1945  00A3                     ___ftmul@f2:	
  1946                           
  1947                           ; 3 bytes @ 0x3
  1948  00A3                     	ds	1
  1949  00A4                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1950                           
  1951                           ; 2 bytes @ 0x4
  1952  00A4                     	ds	2
  1953  00A6                     ??_USBWakeFromSuspend:	
  1954  00A6                     ??_USBSuspend:	
  1955                           ; 0 bytes @ 0x6
  1956                           
  1957  00A6                     ??_USBStdFeatureReqHandler:	
  1958                           ; 0 bytes @ 0x6
  1959                           
  1960  00A6                     ??_USBStdSetCfgHandler:	
  1961                           ; 0 bytes @ 0x6
  1962                           
  1963  00A6                     ??___ftmul:	
  1964                           ; 0 bytes @ 0x6
  1965                           
  1966                           
  1967                           ; 0 bytes @ 0x6
  1968  00A6                     	ds	1
  1969  00A7                     USBStdSetCfgHandler@p:	
  1970                           
  1971                           ; 2 bytes @ 0x7
  1972  00A7                     	ds	1
  1973  00A8                     USBStdFeatureReqHandler@pUEP:	
  1974                           
  1975                           ; 2 bytes @ 0x8
  1976  00A8                     	ds	1
  1977  00A9                     USBStdSetCfgHandler@i_1089:	
  1978                           
  1979                           ; 1 bytes @ 0x9
  1980  00A9                     	ds	1
  1981  00AA                     USBStdSetCfgHandler@i:	
  1982  00AA                     USBStdFeatureReqHandler@current_ep_data:	
  1983                           ; 1 bytes @ 0xA
  1984                           
  1985  00AA                     ___ftmul@exp:	
  1986                           ; 1 bytes @ 0xA
  1987                           
  1988                           
  1989                           ; 1 bytes @ 0xA
  1990  00AA                     	ds	1
  1991  00AB                     USBStdFeatureReqHandler@p:	
  1992  00AB                     ___ftmul@f3_as_product:	
  1993                           ; 1 bytes @ 0xB
  1994                           
  1995                           
  1996                           ; 3 bytes @ 0xB
  1997  00AB                     	ds	1
  1998  00AC                     ??_USBCheckStdRequest:	
  1999  00AC                     AsicPreCalc@K:	
  2000                           ; 0 bytes @ 0xC
  2001                           
  2002                           
  2003                           ; 12 bytes @ 0xC
  2004  00AC                     	ds	1
  2005  00AD                     ??_USBCtrlTrfSetupHandler:	
  2006                           
  2007                           ; 0 bytes @ 0xD
  2008  00AD                     	ds	1
  2009  00AE                     ??_USBCtrlEPService:	
  2010  00AE                     ___ftmul@cntr:	
  2011                           ; 0 bytes @ 0xE
  2012                           
  2013                           
  2014                           ; 1 bytes @ 0xE
  2015  00AE                     	ds	1
  2016  00AF                     ___ftmul@sign:	
  2017                           
  2018                           ; 1 bytes @ 0xF
  2019  00AF                     	ds	1
  2020  00B0                     ?___ftneg:	
  2021  00B0                     ___ftneg@f1:	
  2022                           ; 3 bytes @ 0x10
  2023                           
  2024                           
  2025                           ; 3 bytes @ 0x10
  2026  00B0                     	ds	1
  2027  00B1                     USBCtrlEPService@setup_cnt:	
  2028                           
  2029                           ; 1 bytes @ 0x11
  2030  00B1                     	ds	1
  2031  00B2                     ??_USBDeviceTasks:	
  2032                           
  2033                           ; 0 bytes @ 0x12
  2034  00B2                     	ds	1
  2035  00B3                     ?___ftadd:	
  2036  00B3                     ___ftadd@f1:	
  2037                           ; 3 bytes @ 0x13
  2038                           
  2039                           
  2040                           ; 3 bytes @ 0x13
  2041  00B3                     	ds	1
  2042  00B4                     USBDeviceTasks@i:	
  2043                           
  2044                           ; 1 bytes @ 0x14
  2045  00B4                     	ds	2
  2046  00B6                     ___ftadd@f2:	
  2047                           
  2048                           ; 3 bytes @ 0x16
  2049  00B6                     	ds	2
  2050  00B8                     AsicPreCalc@m:	
  2051                           
  2052                           ; 32 bytes @ 0x18
  2053  00B8                     	ds	1
  2054  00B9                     ??___ftadd:	
  2055                           
  2056                           ; 0 bytes @ 0x19
  2057  00B9                     	ds	4
  2058  00BD                     ___ftadd@sign:	
  2059                           
  2060                           ; 1 bytes @ 0x1D
  2061  00BD                     	ds	1
  2062  00BE                     ___ftadd@exp2:	
  2063                           
  2064                           ; 1 bytes @ 0x1E
  2065  00BE                     	ds	1
  2066  00BF                     ___ftadd@exp1:	
  2067                           
  2068                           ; 1 bytes @ 0x1F
  2069  00BF                     	ds	1
  2070  00C0                     ?___fttol:	
  2071  00C0                     ___fttol@f1:	
  2072                           ; 4 bytes @ 0x20
  2073                           
  2074                           
  2075                           ; 3 bytes @ 0x20
  2076  00C0                     	ds	4
  2077  00C4                     ??___fttol:	
  2078                           
  2079                           ; 0 bytes @ 0x24
  2080  00C4                     	ds	4
  2081  00C8                     ___fttol@sign1:	
  2082                           
  2083                           ; 1 bytes @ 0x28
  2084  00C8                     	ds	1
  2085  00C9                     ___fttol@lval:	
  2086                           
  2087                           ; 4 bytes @ 0x29
  2088  00C9                     	ds	4
  2089  00CD                     ___fttol@exp1:	
  2090                           
  2091                           ; 1 bytes @ 0x2D
  2092  00CD                     	ds	1
  2093  00CE                     ??_UpdateFanLevel:	
  2094                           
  2095                           ; 0 bytes @ 0x2E
  2096  00CE                     	ds	4
  2097  00D2                     _UpdateFanLevel$2753:	
  2098                           
  2099                           ; 3 bytes @ 0x32
  2100  00D2                     	ds	3
  2101  00D5                     ??_WorkTick:	
  2102                           
  2103                           ; 0 bytes @ 0x35
  2104  00D5                     	ds	3
  2105  00D8                     AsicPreCalc@z:	
  2106                           
  2107                           ; 4 bytes @ 0x38
  2108  00D8                     	ds	4
  2109  00DC                     AsicPreCalc@y:	
  2110                           
  2111                           ; 4 bytes @ 0x3C
  2112  00DC                     	ds	4
  2113  00E0                     AsicPreCalc@x:	
  2114                           
  2115                           ; 4 bytes @ 0x40
  2116  00E0                     	ds	4
  2117  00E4                     AsicPreCalc@n:	
  2118                           
  2119                           ; 1 bytes @ 0x44
  2120  00E4                     	ds	1
  2121  00E5                     ??_AsicPushWork:	
  2122                           
  2123                           ; 0 bytes @ 0x45
  2124  00E5                     	ds	5
  2125  00EA                     ??_ProcessCmd:	
  2126                           
  2127                           ; 0 bytes @ 0x4A
  2128  00EA                     	ds	4
  2129                           
  2130                           	psect	cstackCOMMON
  2131  0070                     __pcstackCOMMON:	
  2132  0070                     ?_USBWakeFromSuspend:	
  2133  0070                     ?_USBSuspend:	
  2134                           ; 0 bytes @ 0x0
  2135                           
  2136  0070                     ?_USBCtrlEPAllowStatusStage:	
  2137                           ; 0 bytes @ 0x0
  2138                           
  2139  0070                     ?_USBStallHandler:	
  2140                           ; 0 bytes @ 0x0
  2141                           
  2142  0070                     ?_USBCtrlEPService:	
  2143                           ; 0 bytes @ 0x0
  2144                           
  2145  0070                     ?_USBCtrlTrfTxService:	
  2146                           ; 0 bytes @ 0x0
  2147                           
  2148  0070                     ?_USBCtrlTrfSetupHandler:	
  2149                           ; 0 bytes @ 0x0
  2150                           
  2151  0070                     ?_USBCtrlTrfOutHandler:	
  2152                           ; 0 bytes @ 0x0
  2153                           
  2154  0070                     ?_USBCtrlTrfInHandler:	
  2155                           ; 0 bytes @ 0x0
  2156                           
  2157  0070                     ?_USBCheckStdRequest:	
  2158                           ; 0 bytes @ 0x0
  2159                           
  2160  0070                     ?_USBStdFeatureReqHandler:	
  2161                           ; 0 bytes @ 0x0
  2162                           
  2163  0070                     ?_Send32:	
  2164                           ; 0 bytes @ 0x0
  2165                           
  2166  0070                     ?_AsicPushWork:	
  2167                           ; 0 bytes @ 0x0
  2168                           
  2169  0070                     ?_UpdateFanLevel:	
  2170                           ; 0 bytes @ 0x0
  2171                           
  2172  0070                     ?_InitializeSystem:	
  2173                           ; 0 bytes @ 0x0
  2174                           
  2175  0070                     ?_ProcessIO:	
  2176                           ; 0 bytes @ 0x0
  2177                           
  2178  0070                     ?_UserInit:	
  2179                           ; 0 bytes @ 0x0
  2180                           
  2181  0070                     ?_USBDeviceInit:	
  2182                           ; 0 bytes @ 0x0
  2183                           
  2184  0070                     ?_USBDeviceTasks:	
  2185                           ; 0 bytes @ 0x0
  2186                           
  2187  0070                     ?_USBCtrlEPAllowDataStage:	
  2188                           ; 0 bytes @ 0x0
  2189                           
  2190  0070                     ?_USBCtrlEPServiceComplete:	
  2191                           ; 0 bytes @ 0x0
  2192                           
  2193  0070                     ?_USBCtrlTrfRxService:	
  2194                           ; 0 bytes @ 0x0
  2195                           
  2196  0070                     ?_USBStdSetCfgHandler:	
  2197                           ; 0 bytes @ 0x0
  2198                           
  2199  0070                     ?_USBStdGetDscHandler:	
  2200                           ; 0 bytes @ 0x0
  2201                           
  2202  0070                     ?_USBStdGetStatusHandler:	
  2203                           ; 0 bytes @ 0x0
  2204                           
  2205  0070                     ?_USBCheckVendorRequest:	
  2206                           ; 0 bytes @ 0x0
  2207                           
  2208  0070                     ?_ProcessCmd:	
  2209                           ; 0 bytes @ 0x0
  2210                           
  2211  0070                     ?_DetectAsics:	
  2212                           ; 0 bytes @ 0x0
  2213                           
  2214  0070                     ?_WorkTick:	
  2215                           ; 0 bytes @ 0x0
  2216                           
  2217  0070                     ?_ResultRx:	
  2218                           ; 0 bytes @ 0x0
  2219                           
  2220  0070                     ?_InitFAN:	
  2221                           ; 0 bytes @ 0x0
  2222                           
  2223  0070                     ?_InitTempSensor:	
  2224                           ; 0 bytes @ 0x0
  2225                           
  2226  0070                     ?_InitWorkTick:	
  2227                           ; 0 bytes @ 0x0
  2228                           
  2229  0070                     ?_InitResultRx:	
  2230                           ; 0 bytes @ 0x0
  2231                           
  2232  0070                     ?_ISRCode:	
  2233                           ; 0 bytes @ 0x0
  2234                           
  2235  0070                     ?_USBCBSuspend:	
  2236                           ; 0 bytes @ 0x0
  2237                           
  2238  0070                     ?_USBCBWakeFromSuspend:	
  2239                           ; 0 bytes @ 0x0
  2240                           
  2241  0070                     ?_USBCB_SOF_Handler:	
  2242                           ; 0 bytes @ 0x0
  2243                           
  2244  0070                     ?_USBCBErrorHandler:	
  2245                           ; 0 bytes @ 0x0
  2246                           
  2247  0070                     ?_USBCBCheckOtherReq:	
  2248                           ; 0 bytes @ 0x0
  2249                           
  2250  0070                     ?_USBCBStdSetDscHandler:	
  2251                           ; 0 bytes @ 0x0
  2252                           
  2253  0070                     ?_USBCBInitEP:	
  2254                           ; 0 bytes @ 0x0
  2255                           
  2256  0070                     ?i1___bmul:	
  2257                           ; 0 bytes @ 0x0
  2258                           
  2259  0070                     ?_main:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?i1___wmul:	
  2263                           ; 2 bytes @ 0x0
  2264                           
  2265  0070                     i1___bmul@multiplicand:	
  2266                           ; 2 bytes @ 0x0
  2267                           
  2268  0070                     i1___wmul@multiplier:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271                           
  2272                           ; 2 bytes @ 0x0
  2273  0070                     	ds	1
  2274  0071                     ??i1___bmul:	
  2275                           
  2276                           ; 0 bytes @ 0x1
  2277  0071                     	ds	1
  2278  0072                     i1___bmul@multiplier:	
  2279  0072                     i1___wmul@multiplicand:	
  2280                           ; 1 bytes @ 0x2
  2281                           
  2282                           
  2283                           ; 2 bytes @ 0x2
  2284  0072                     	ds	1
  2285  0073                     i1___bmul@product:	
  2286                           
  2287                           ; 1 bytes @ 0x3
  2288  0073                     	ds	1
  2289  0074                     ??i1___wmul:	
  2290  0074                     i1___wmul@product:	
  2291                           ; 0 bytes @ 0x4
  2292                           
  2293                           
  2294                           ; 2 bytes @ 0x4
  2295  0074                     	ds	2
  2296  0076                     ?i1_SendCmdReply:	
  2297  0076                     i1SendCmdReply@cmd:	
  2298                           ; 0 bytes @ 0x6
  2299                           
  2300                           
  2301                           ; 2 bytes @ 0x6
  2302  0076                     	ds	2
  2303  0078                     i1SendCmdReply@data:	
  2304                           
  2305                           ; 2 bytes @ 0x8
  2306  0078                     	ds	2
  2307  007A                     i1SendCmdReply@count:	
  2308                           
  2309                           ; 1 bytes @ 0xA
  2310  007A                     	ds	1
  2311  007B                     i1SendCmdReply@n:	
  2312                           
  2313                           ; 1 bytes @ 0xB
  2314  007B                     	ds	1
  2315  007C                     ??_ResultRx:	
  2316                           
  2317                           ; 0 bytes @ 0xC
  2318  007C                     	ds	1
  2319  007D                     ??_ISRCode:	
  2320                           
  2321                           ; 0 bytes @ 0xD
  2322  007D                     	ds	1
  2323                           
  2324                           	psect	cstackBANK0
  2325  0050                     __pcstackBANK0:	
  2326  0050                     ??i1_SendCmdReply:	
  2327                           
  2328                           ; 0 bytes @ 0x0
  2329  0050                     	ds	8
  2330  0058                     ??_USBCtrlEPAllowStatusStage:	
  2331  0058                     ??_USBStallHandler:	
  2332                           ; 0 bytes @ 0x8
  2333                           
  2334  0058                     ?_USBConfigureEndpoint:	
  2335                           ; 0 bytes @ 0x8
  2336                           
  2337  0058                     ??_USBCtrlTrfTxService:	
  2338                           ; 0 bytes @ 0x8
  2339                           
  2340  0058                     ??_Send32:	
  2341                           ; 0 bytes @ 0x8
  2342                           
  2343  0058                     ??_USBDeviceInit:	
  2344                           ; 0 bytes @ 0x8
  2345                           
  2346  0058                     ??_USBStdGetDscHandler:	
  2347                           ; 0 bytes @ 0x8
  2348                           
  2349  0058                     ??_USBStdGetStatusHandler:	
  2350                           ; 0 bytes @ 0x8
  2351                           
  2352  0058                     ??_USBCheckVendorRequest:	
  2353                           ; 0 bytes @ 0x8
  2354                           
  2355  0058                     ??_InitFAN:	
  2356                           ; 0 bytes @ 0x8
  2357                           
  2358  0058                     ??_InitTempSensor:	
  2359                           ; 0 bytes @ 0x8
  2360                           
  2361  0058                     ??_InitWorkTick:	
  2362                           ; 0 bytes @ 0x8
  2363                           
  2364  0058                     ??_InitResultRx:	
  2365                           ; 0 bytes @ 0x8
  2366                           
  2367  0058                     ??_USBCBSuspend:	
  2368                           ; 0 bytes @ 0x8
  2369                           
  2370  0058                     ??_USBCBWakeFromSuspend:	
  2371                           ; 0 bytes @ 0x8
  2372                           
  2373  0058                     ??_USBCB_SOF_Handler:	
  2374                           ; 0 bytes @ 0x8
  2375                           
  2376  0058                     ??_USBCBErrorHandler:	
  2377                           ; 0 bytes @ 0x8
  2378                           
  2379  0058                     ??_USBCBCheckOtherReq:	
  2380                           ; 0 bytes @ 0x8
  2381                           
  2382  0058                     ??_USBCBStdSetDscHandler:	
  2383                           ; 0 bytes @ 0x8
  2384                           
  2385  0058                     ?___bmul:	
  2386                           ; 0 bytes @ 0x8
  2387                           
  2388  0058                     ?_memset:	
  2389                           ; 1 bytes @ 0x8
  2390                           
  2391  0058                     ?___awdiv:	
  2392                           ; 2 bytes @ 0x8
  2393                           
  2394  0058                     ?___awmod:	
  2395                           ; 2 bytes @ 0x8
  2396                           
  2397  0058                     ?___lwdiv:	
  2398                           ; 2 bytes @ 0x8
  2399                           
  2400  0058                     ?___wmul:	
  2401                           ; 2 bytes @ 0x8
  2402                           
  2403  0058                     ?___ftpack:	
  2404                           ; 2 bytes @ 0x8
  2405                           
  2406  0058                     ?_rotate:	
  2407                           ; 3 bytes @ 0x8
  2408                           
  2409  0058                     USBConfigureEndpoint@direction:	
  2410                           ; 4 bytes @ 0x8
  2411                           
  2412  0058                     ___bmul@multiplicand:	
  2413                           ; 1 bytes @ 0x8
  2414                           
  2415  0058                     ___awdiv@divisor:	
  2416                           ; 1 bytes @ 0x8
  2417                           
  2418  0058                     ___awmod@divisor:	
  2419                           ; 2 bytes @ 0x8
  2420                           
  2421  0058                     ___lwdiv@divisor:	
  2422                           ; 2 bytes @ 0x8
  2423                           
  2424  0058                     memset@p1:	
  2425                           ; 2 bytes @ 0x8
  2426                           
  2427  0058                     ___wmul@multiplier:	
  2428                           ; 2 bytes @ 0x8
  2429                           
  2430  0058                     ___ftpack@arg:	
  2431                           ; 2 bytes @ 0x8
  2432                           
  2433  0058                     rotate@x:	
  2434                           ; 3 bytes @ 0x8
  2435                           
  2436                           
  2437                           ; 4 bytes @ 0x8
  2438  0058                     	ds	1
  2439  0059                     ??_USBConfigureEndpoint:	
  2440  0059                     ??___bmul:	
  2441                           ; 0 bytes @ 0x9
  2442                           
  2443  0059                     USBStdGetStatusHandler@p:	
  2444                           ; 0 bytes @ 0x9
  2445                           
  2446                           
  2447                           ; 1 bytes @ 0x9
  2448  0059                     	ds	1
  2449  005A                     ??_USBCtrlTrfRxService:	
  2450  005A                     USBCtrlTrfTxService@byteToSend:	
  2451                           ; 0 bytes @ 0xA
  2452                           
  2453  005A                     ___bmul@product:	
  2454                           ; 1 bytes @ 0xA
  2455                           
  2456  005A                     USBDeviceInit@p:	
  2457                           ; 1 bytes @ 0xA
  2458                           
  2459  005A                     ___awdiv@dividend:	
  2460                           ; 2 bytes @ 0xA
  2461                           
  2462  005A                     ___awmod@dividend:	
  2463                           ; 2 bytes @ 0xA
  2464                           
  2465  005A                     ___lwdiv@dividend:	
  2466                           ; 2 bytes @ 0xA
  2467                           
  2468  005A                     memset@c:	
  2469                           ; 2 bytes @ 0xA
  2470                           
  2471  005A                     ___wmul@multiplicand:	
  2472                           ; 2 bytes @ 0xA
  2473                           
  2474                           
  2475                           ; 2 bytes @ 0xA
  2476  005A                     	ds	1
  2477  005B                     ??_USBCtrlTrfInHandler:	
  2478  005B                     ??_USBCtrlEPAllowDataStage:	
  2479                           ; 0 bytes @ 0xB
  2480                           
  2481  005B                     ___bmul@multiplier:	
  2482                           ; 0 bytes @ 0xB
  2483                           
  2484  005B                     ___ftpack@exp:	
  2485                           ; 1 bytes @ 0xB
  2486                           
  2487                           
  2488                           ; 1 bytes @ 0xB
  2489  005B                     	ds	1
  2490  005C                     ??___awdiv:	
  2491  005C                     ??___awmod:	
  2492                           ; 0 bytes @ 0xC
  2493                           
  2494  005C                     ??___lwdiv:	
  2495                           ; 0 bytes @ 0xC
  2496                           
  2497  005C                     ??___wmul:	
  2498                           ; 0 bytes @ 0xC
  2499                           
  2500  005C                     ?_USBTransferOnePacket:	
  2501                           ; 0 bytes @ 0xC
  2502                           
  2503  005C                     USBDeviceInit@i_718:	
  2504                           ; 1 bytes @ 0xC
  2505                           
  2506  005C                     USBTransferOnePacket@dir:	
  2507                           ; 1 bytes @ 0xC
  2508                           
  2509  005C                     USBCtrlTrfRxService@i:	
  2510                           ; 1 bytes @ 0xC
  2511                           
  2512  005C                     rotate@y:	
  2513                           ; 1 bytes @ 0xC
  2514                           
  2515  005C                     ___ftpack@sign:	
  2516                           ; 1 bytes @ 0xC
  2517                           
  2518  005C                     memset@n:	
  2519                           ; 1 bytes @ 0xC
  2520                           
  2521  005C                     ___wmul@product:	
  2522                           ; 2 bytes @ 0xC
  2523                           
  2524                           
  2525                           ; 2 bytes @ 0xC
  2526  005C                     	ds	1
  2527  005D                     ??___ftpack:	
  2528  005D                     ??_USBCtrlEPServiceComplete:	
  2529                           ; 0 bytes @ 0xD
  2530                           
  2531  005D                     ??_rotate:	
  2532                           ; 0 bytes @ 0xD
  2533                           
  2534  005D                     USBDeviceInit@i:	
  2535                           ; 0 bytes @ 0xD
  2536                           
  2537  005D                     USBTransferOnePacket@data:	
  2538                           ; 1 bytes @ 0xD
  2539                           
  2540  005D                     USBConfigureEndpoint@EPNum:	
  2541                           ; 1 bytes @ 0xD
  2542                           
  2543  005D                     USBCtrlTrfRxService@byteToRead:	
  2544                           ; 1 bytes @ 0xD
  2545                           
  2546  005D                     USBCtrlTrfInHandler@lastDTS:	
  2547                           ; 1 bytes @ 0xD
  2548                           
  2549  005D                     ___awdiv@counter:	
  2550                           ; 1 bytes @ 0xD
  2551                           
  2552  005D                     ___awmod@counter:	
  2553                           ; 1 bytes @ 0xD
  2554                           
  2555  005D                     ___lwdiv@counter:	
  2556                           ; 1 bytes @ 0xD
  2557                           
  2558                           
  2559                           ; 1 bytes @ 0xD
  2560  005D                     	ds	1
  2561  005E                     ??_memset:	
  2562  005E                     ??_USBCtrlTrfOutHandler:	
  2563                           ; 0 bytes @ 0xE
  2564                           
  2565  005E                     ?_SendCmdReply:	
  2566                           ; 0 bytes @ 0xE
  2567                           
  2568  005E                     ?_SendAsicData:	
  2569                           ; 0 bytes @ 0xE
  2570                           
  2571  005E                     USBTransferOnePacket@len:	
  2572                           ; 0 bytes @ 0xE
  2573                           
  2574  005E                     USBConfigureEndpoint@handle:	
  2575                           ; 1 bytes @ 0xE
  2576                           
  2577  005E                     ___awdiv@sign:	
  2578                           ; 1 bytes @ 0xE
  2579                           
  2580  005E                     ___awmod@sign:	
  2581                           ; 1 bytes @ 0xE
  2582                           
  2583  005E                     SendAsicData@work:	
  2584                           ; 1 bytes @ 0xE
  2585                           
  2586  005E                     SendCmdReply@cmd:	
  2587                           ; 2 bytes @ 0xE
  2588                           
  2589  005E                     ___lwdiv@quotient:	
  2590                           ; 2 bytes @ 0xE
  2591                           
  2592                           
  2593                           ; 2 bytes @ 0xE
  2594  005E                     	ds	1
  2595  005F                     ?_USBEnableEndpoint:	
  2596  005F                     ??_USBTransferOnePacket:	
  2597                           ; 0 bytes @ 0xF
  2598                           
  2599  005F                     USBEnableEndpoint@options:	
  2600                           ; 0 bytes @ 0xF
  2601                           
  2602  005F                     ___awdiv@quotient:	
  2603                           ; 1 bytes @ 0xF
  2604                           
  2605  005F                     memset@p:	
  2606                           ; 2 bytes @ 0xF
  2607                           
  2608                           
  2609                           ; 2 bytes @ 0xF
  2610  005F                     	ds	1
  2611  0060                     ??_USBEnableEndpoint:	
  2612  0060                     ??_SendAsicData:	
  2613                           ; 0 bytes @ 0x10
  2614                           
  2615  0060                     ?___awtoft:	
  2616                           ; 0 bytes @ 0x10
  2617                           
  2618  0060                     SendCmdReply@data:	
  2619                           ; 3 bytes @ 0x10
  2620                           
  2621  0060                     ___awtoft@c:	
  2622                           ; 2 bytes @ 0x10
  2623                           
  2624                           
  2625                           ; 2 bytes @ 0x10
  2626  0060                     	ds	1
  2627  0061                     ??_DetectAsics:	
  2628  0061                     USBTransferOnePacket@ep:	
  2629                           ; 0 bytes @ 0x11
  2630                           
  2631                           
  2632                           ; 1 bytes @ 0x11
  2633  0061                     	ds	1
  2634  0062                     USBTransferOnePacket@handle:	
  2635  0062                     SendCmdReply@count:	
  2636                           ; 1 bytes @ 0x12
  2637                           
  2638  0062                     USBEnableEndpoint@p:	
  2639                           ; 1 bytes @ 0x12
  2640                           
  2641                           
  2642                           ; 2 bytes @ 0x12
  2643  0062                     	ds	1
  2644  0063                     ??___awtoft:	
  2645  0063                     SendCmdReply@n:	
  2646                           ; 0 bytes @ 0x13
  2647                           
  2648                           
  2649                           ; 1 bytes @ 0x13
  2650  0063                     	ds	1
  2651  0064                     USBEnableEndpoint@ep:	
  2652                           
  2653                           ; 1 bytes @ 0x14
  2654  0064                     	ds	1
  2655  0065                     ??_USBCBInitEP:	
  2656  0065                     ___awtoft@sign:	
  2657                           ; 0 bytes @ 0x15
  2658                           
  2659  0065                     _ProcessCmd$1971:	
  2660                           ; 1 bytes @ 0x15
  2661                           
  2662                           
  2663                           ; 2 bytes @ 0x15
  2664  0065                     	ds	1
  2665  0066                     ??___ftneg:	
  2666                           
  2667                           ; 0 bytes @ 0x16
  2668  0066                     	ds	1
  2669  0067                     ProcessCmd@cmd:	
  2670                           
  2671                           ; 1 bytes @ 0x17
  2672  0067                     	ds	1
  2673  0068                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2674  0068                     ??_InitializeSystem:	
  2675                           ; 0 bytes @ 0x18
  2676                           
  2677  0068                     ??_UserInit:	
  2678                           ; 0 bytes @ 0x18
  2679                           
  2680  0068                     ??_main:	
  2681                           ; 0 bytes @ 0x18
  2682                           
  2683                           
  2684                           	psect	maintext
  2685  1CCC                     __pmaintext:	
  2686                           ; 0 bytes @ 0x18
  2687 ;;
  2688 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2689 ;;
  2690 ;; *************** function _main *****************
  2691 ;; Defined at:
  2692 ;;		line 98 in file "main.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2  821[COMMON] int 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 17F/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels required when called:   13
  2712 ;; This function calls:
  2713 ;;		_USBDeviceTasks
  2714 ;;		_AsicPushWork
  2715 ;;		_WorkTick
  2716 ;;		_InitializeSystem
  2717 ;;		_ProcessIO
  2718 ;; This function is called by:
  2719 ;;		Startup code after reset
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _main
  2725  1CCC                     _main:	
  2726                           
  2727                           ;main.c: 99: InitializeSystem();
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _main: [allreg]
  2731  1CCC  319C  24B5  319C   	fcall	_InitializeSystem
  2732  1CCF                     l822:	
  2733                           ;main.c: 101: while(1)
  2734                           
  2735                           
  2736                           ;main.c: 102: {
  2737                           ;main.c: 119: USBDeviceTasks();
  2738  1CCF  318E  2605  319C   	fcall	_USBDeviceTasks
  2739                           
  2740                           ;main.c: 133: if(TMR0IF)
  2741  1CD2  1D0B               	btfss	11,2	;volatile
  2742  1CD3  2CD7               	goto	l6920
  2743                           
  2744                           ;main.c: 134: WorkTick();
  2745  1CD4  3191  21A3  319C   	fcall	_WorkTick
  2746  1CD7                     l6920:	
  2747                           
  2748                           ;main.c: 136: if(Status.State == 'P'){
  2749  1CD7  0022               	movlb	2	; select bank2
  2750  1CD8  0859               	movf	_Status^(0+256),w	;volatile
  2751  1CD9  3A50               	xorlw	80
  2752  1CDA  1D03               	skipz
  2753  1CDB  2CDF               	goto	l6924
  2754                           
  2755                           ;main.c: 137: AsicPushWork();
  2756  1CDC  3195  25D6  319C   	fcall	_AsicPushWork
  2757  1CDF                     l6924:	
  2758                           
  2759                           ;main.c: 138: }
  2760                           ;main.c: 140: ProcessIO();
  2761  1CDF  3194  2461  319C   	fcall	_ProcessIO
  2762  1CE2  2CCF               	goto	l822
  2763  1CE3                     __end_of_main:	
  2764                           
  2765                           	psect	text1
  2766  1461                     __ptext1:	
  2767 ;; *************** function _ProcessIO *****************
  2768 ;; Defined at:
  2769 ;;		line 182 in file "main.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;Total ram usage:        8 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    8
  2790 ;; This function calls:
  2791 ;;		_USBTransferOnePacket
  2792 ;;		_ProcessCmd
  2793 ;;		___bmul
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _ProcessIO
  2801  1461                     _ProcessIO:	
  2802                           
  2803                           ;main.c: 184: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _ProcessIO: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2807  1461  3020               	movlw	32
  2808  1462  0021               	movlb	1	; select bank1
  2809  1463  026E               	subwf	_USBDeviceState^(0+128),w
  2810  1464  1C03               	skipc
  2811  1465  0008               	return
  2812  1466  003D               	movlb	29	; select bank29
  2813  1467  188E               	btfsc	14,1	;volatile
  2814  1468  0008               	return
  2815                           
  2816                           ;main.c: 193: if(!(USBGenericOutHandle==0?0:((volatile BDT_ENTRY*)USBGenericOutHandle)->
      +                          STAT.UOWN)) {
  2817  1469  0022               	movlb	2	; select bank2
  2818  146A  0841               	movf	_USBGenericOutHandle^(0+256),w
  2819  146B  1903               	btfsc	3,2
  2820  146C  2C7A               	goto	l6950
  2821  146D  0841               	movf	_USBGenericOutHandle^(0+256),w
  2822  146E  0086               	movwf	6
  2823  146F  0187               	clrf	7
  2824  1470  0D01               	rlf	1,w
  2825  1471  0D01               	rlf	1,w
  2826  1472  3901               	andlw	1
  2827  1473  00E6               	movwf	??_ProcessIO^(0+256)
  2828  1474  01E7               	clrf	(??_ProcessIO^(0+256)+1)
  2829  1475  0866               	movf	??_ProcessIO^(0+256),w
  2830  1476  00EA               	movwf	_ProcessIO$2266^(0+256)
  2831  1477  0867               	movf	(??_ProcessIO+1)^(0+256),w
  2832  1478  00EB               	movwf	(_ProcessIO$2266+1)^(0+256)
  2833  1479  2C7C               	goto	l6952
  2834  147A                     l6950:	
  2835  147A  01EA               	clrf	_ProcessIO$2266^(0+256)
  2836  147B  01EB               	clrf	(_ProcessIO$2266+1)^(0+256)
  2837  147C                     l6952:	
  2838  147C  086B               	movf	(_ProcessIO$2266+1)^(0+256),w
  2839  147D  046A               	iorwf	_ProcessIO$2266^(0+256),w
  2840  147E  1D03               	skipz
  2841  147F  2C9A               	goto	l6958
  2842                           
  2843                           ;main.c: 197: ProcessCmd(OUTPacket);
  2844  1480  30A0               	movlw	160
  2845  1481  3184  2414  3194   	fcall	_ProcessCmd
  2846                           
  2847                           ;main.c: 198: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
  2848  1484  0020               	movlb	0	; select bank0
  2849  1485  01DC               	clrf	?_USBTransferOnePacket
  2850  1486  30A0               	movlw	160
  2851  1487  0022               	movlb	2	; select bank2
  2852  1488  00E6               	movwf	??_ProcessIO^(0+256)
  2853  1489  0866               	movf	??_ProcessIO^(0+256),w
  2854  148A  0020               	movlb	0	; select bank0
  2855  148B  00DD               	movwf	?_USBTransferOnePacket+1
  2856  148C  3040               	movlw	64
  2857  148D  0022               	movlb	2	; select bank2
  2858  148E  00E7               	movwf	(??_ProcessIO+1)^(0+256)
  2859  148F  0867               	movf	(??_ProcessIO+1)^(0+256),w
  2860  1490  0020               	movlb	0	; select bank0
  2861  1491  00DE               	movwf	?_USBTransferOnePacket+2
  2862  1492  3001               	movlw	1
  2863  1493  319F  27B2  3194   	fcall	_USBTransferOnePacket
  2864  1496  0022               	movlb	2	; select bank2
  2865  1497  00E8               	movwf	(??_ProcessIO+2)^(0+256)
  2866  1498  0868               	movf	(??_ProcessIO+2)^(0+256),w
  2867  1499  00C1               	movwf	_USBGenericOutHandle^(0+256)
  2868  149A                     l6958:	
  2869                           
  2870                           ;main.c: 199: }
  2871                           ;main.c: 201: if(WQI != WQX && !(USBGenericInHandle==0?0:((volatile BDT_ENTRY*)USBGeneri
      +                          cInHandle)->STAT.UOWN)) {
  2872  149A  0856               	movf	_WQI^(0+256),w
  2873  149B  0657               	xorwf	_WQX^(0+256),w
  2874  149C  1903               	skipnz
  2875  149D  0008               	return
  2876  149E  0840               	movf	_USBGenericInHandle^(0+256),w
  2877  149F  1903               	btfsc	3,2
  2878  14A0  2CAE               	goto	l6964
  2879  14A1  0840               	movf	_USBGenericInHandle^(0+256),w
  2880  14A2  0086               	movwf	6
  2881  14A3  0187               	clrf	7
  2882  14A4  0D01               	rlf	1,w
  2883  14A5  0D01               	rlf	1,w
  2884  14A6  3901               	andlw	1
  2885  14A7  00E6               	movwf	??_ProcessIO^(0+256)
  2886  14A8  01E7               	clrf	(??_ProcessIO^(0+256)+1)
  2887  14A9  0866               	movf	??_ProcessIO^(0+256),w
  2888  14AA  00EC               	movwf	_ProcessIO$2300^(0+256)
  2889  14AB  0867               	movf	(??_ProcessIO+1)^(0+256),w
  2890  14AC  00ED               	movwf	(_ProcessIO$2300+1)^(0+256)
  2891  14AD  2CB0               	goto	l6966
  2892  14AE                     l6964:	
  2893  14AE  01EC               	clrf	_ProcessIO$2300^(0+256)
  2894  14AF  01ED               	clrf	(_ProcessIO$2300+1)^(0+256)
  2895  14B0                     l6966:	
  2896  14B0  086D               	movf	(_ProcessIO$2300+1)^(0+256),w
  2897  14B1  046C               	iorwf	_ProcessIO$2300^(0+256),w
  2898  14B2  1D03               	skipz
  2899  14B3  0008               	return
  2900                           
  2901                           ;main.c: 202: USBGenericInHandle = USBTransferOnePacket(1,1,(BYTE*)&INPacket[WQX*15],15);
  2902  14B4  0020               	movlb	0	; select bank0
  2903  14B5  01DC               	clrf	?_USBTransferOnePacket
  2904  14B6  0ADC               	incf	?_USBTransferOnePacket,f
  2905  14B7  300F               	movlw	15
  2906  14B8  0022               	movlb	2	; select bank2
  2907  14B9  00E6               	movwf	??_ProcessIO^(0+256)
  2908  14BA  0866               	movf	??_ProcessIO^(0+256),w
  2909  14BB  0020               	movlb	0	; select bank0
  2910  14BC  00D8               	movwf	?___bmul
  2911  14BD  0022               	movlb	2	; select bank2
  2912  14BE  0857               	movf	_WQX^(0+256),w
  2913  14BF  319C  2450  3194   	fcall	___bmul
  2914  14C2  3E20               	addlw	32
  2915  14C3  0022               	movlb	2	; select bank2
  2916  14C4  00E7               	movwf	(??_ProcessIO+1)^(0+256)
  2917  14C5  0867               	movf	(??_ProcessIO+1)^(0+256),w
  2918  14C6  0020               	movlb	0	; select bank0
  2919  14C7  00DD               	movwf	?_USBTransferOnePacket+1
  2920  14C8  300F               	movlw	15
  2921  14C9  0022               	movlb	2	; select bank2
  2922  14CA  00E8               	movwf	(??_ProcessIO+2)^(0+256)
  2923  14CB  0868               	movf	(??_ProcessIO+2)^(0+256),w
  2924  14CC  0020               	movlb	0	; select bank0
  2925  14CD  00DE               	movwf	?_USBTransferOnePacket+2
  2926  14CE  3001               	movlw	1
  2927  14CF  319F  27B2         	fcall	_USBTransferOnePacket
  2928  14D1  0022               	movlb	2	; select bank2
  2929  14D2  00E9               	movwf	(??_ProcessIO+3)^(0+256)
  2930  14D3  0869               	movf	(??_ProcessIO+3)^(0+256),w
  2931  14D4  00C0               	movwf	_USBGenericInHandle^(0+256)
  2932                           
  2933                           ;main.c: 203: WQX = (WQX+1) & 3;
  2934  14D5  0A57               	incf	_WQX^(0+256),w
  2935  14D6  3903               	andlw	3
  2936  14D7  00E6               	movwf	??_ProcessIO^(0+256)
  2937  14D8  0866               	movf	??_ProcessIO^(0+256),w
  2938  14D9  00D7               	movwf	_WQX^(0+256)
  2939  14DA  0008               	return
  2940  14DB                     __end_of_ProcessIO:	
  2941                           
  2942                           	psect	text2
  2943  0414                     __ptext2:	
  2944 ;; *************** function _ProcessCmd *****************
  2945 ;; Defined at:
  2946 ;;		line 45 in file "klondike.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  cmd             1    wreg     PTR unsigned char 
  2949 ;;		 -> OUTPacket(64), 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  cmd             1   23[BANK0 ] PTR unsigned char 
  2952 ;;		 -> OUTPacket(64), 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;		None               void
  2955 ;; Registers used:
  2956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;Total ram usage:        7 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    7
  2969 ;; This function calls:
  2970 ;;		_AsicPushWork
  2971 ;;		_SendCmdReply
  2972 ;;		___lwdiv
  2973 ;;		___wmul
  2974 ;; This function is called by:
  2975 ;;		_ProcessIO
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _ProcessCmd
  2981  0414                     _ProcessCmd:	
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _ProcessCmd: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2985                           ;ProcessCmd@cmd stored from wreg
  2986  0414  0020               	movlb	0	; select bank0
  2987  0415  00E7               	movwf	ProcessCmd@cmd
  2988                           
  2989                           ;klondike.c: 48: switch(cmd[0]) {
  2990  0416  2D78               	goto	l6860
  2991  0417                     l6792:	
  2992                           ;klondike.c: 49: case 'W':
  2993                           
  2994                           
  2995                           ;klondike.c: 50: if( Status.WorkQC < 4-1 ) {
  2996  0417  3003               	movlw	3
  2997  0418  0022               	movlb	2	; select bank2
  2998  0419  025C               	subwf	(_Status^(0+256)+3),w	;volatile
  2999  041A  1803               	skipnc
  3000  041B  2D62               	goto	L4
  3001                           
  3002                           ;klondike.c: 51: WorkQue[ (WorkNow + Status.WorkQC++) & 4-1 ] = *(WORKTASK *)(cmd+2);
  3003  041C  0020               	movlb	0	; select bank0
  3004  041D  0867               	movf	ProcessCmd@cmd,w
  3005  041E  3E02               	addlw	2
  3006  041F  0086               	movwf	6
  3007  0420  3002               	movlw	2	; select bank4/5
  3008  0421  0087               	movwf	7
  3009  0422  0022               	movlb	2	; select bank2
  3010  0423  0846               	movf	_WorkNow^(0+256),w
  3011  0424  075C               	addwf	(_Status^(0+256)+3),w	;volatile
  3012  0425  0021               	movlb	1	; select bank1
  3013  0426  00EA               	movwf	??_ProcessCmd^(0+128)
  3014  0427  01EB               	clrf	(??_ProcessCmd^(0+128)+1)
  3015  0428  0DEB               	rlf	(??_ProcessCmd+1)^(0+128),f
  3016  0429  3003               	movlw	3
  3017  042A  056A               	andwf	??_ProcessCmd^(0+128),w
  3018  042B  0020               	movlb	0	; select bank0
  3019  042C  00D8               	movwf	?___wmul
  3020  042D  3000               	movlw	0
  3021  042E  0021               	movlb	1	; select bank1
  3022  042F  056B               	andwf	(??_ProcessCmd+1)^(0+128),w
  3023  0430  0020               	movlb	0	; select bank0
  3024  0431  00D9               	movwf	?___wmul+1
  3025  0432  302D               	movlw	45
  3026  0433  00DA               	movwf	?___wmul+2
  3027  0434  3000               	movlw	0
  3028  0435  00DB               	movwf	?___wmul+3
  3029  0436  319D  2589  3184   	fcall	___wmul
  3030  0439  303C               	movlw	60
  3031  043A  0021               	movlb	1	; select bank1
  3032  043B  00EC               	movwf	(??_ProcessCmd+2)^(0+128)
  3033  043C  3023               	movlw	35
  3034  043D  00ED               	movwf	((??_ProcessCmd+2)^(0+128)+1)
  3035  043E  0020               	movlb	0	; select bank0
  3036  043F  0858               	movf	?___wmul,w
  3037  0440  0021               	movlb	1	; select bank1
  3038  0441  076C               	addwf	(??_ProcessCmd+2)^(0+128),w
  3039  0442  0084               	movwf	4
  3040  0443  0020               	movlb	0	; select bank0
  3041  0444  0859               	movf	?___wmul+1,w
  3042  0445  0021               	movlb	1	; select bank1
  3043  0446  3D6D               	addwfc	(??_ProcessCmd+3)^(0+128),w
  3044  0447  0085               	movwf	5
  3045  0448  302D               	movlw	45
  3046  0449  00FF               	movwf	127
  3047  044A                     u7730:	
  3048  044A  0016               	moviw fsr1++
  3049  044B  001A               	movwi fsr0++
  3050  044C  0BFF               	decfsz	127,f
  3051  044D  2C4A               	goto	u7730
  3052  044E  3001               	movlw	1
  3053  044F  00EA               	movwf	??_ProcessCmd^(0+128)
  3054  0450  086A               	movf	??_ProcessCmd^(0+128),w
  3055  0451  0022               	movlb	2	; select bank2
  3056  0452  07DC               	addwf	(_Status^(0+256)+3),f	;volatile
  3057                           
  3058                           ;klondike.c: 52: if(Status.State == 'R') {
  3059  0453  0859               	movf	_Status^(0+256),w	;volatile
  3060  0454  3A52               	xorlw	82
  3061  0455  1D03               	skipz
  3062  0456  2D62               	goto	L4
  3063                           
  3064                           ;klondike.c: 53: AsicPushWork();
  3065  0457  3195  25D6  3184   	fcall	_AsicPushWork
  3066  045A  2D62               	goto	L4
  3067  045B                     l6804:	
  3068                           ;klondike.c: 59: case 'A':
  3069                           
  3070                           ;klondike.c: 58: break;
  3071                           
  3072                           ;klondike.c: 57: Status.Noise = Status.ErrorCount = 0;
  3073                           
  3074                           ;klondike.c: 54: }
  3075                           ;klondike.c: 55: }
  3076                           ;klondike.c: 56: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3077                           
  3078                           
  3079                           ;klondike.c: 60: Status.WorkQC = WorkNow = 0;
  3080  045B  0022               	movlb	2	; select bank2
  3081  045C  01C6               	clrf	_WorkNow^(0+256)
  3082  045D  01DC               	clrf	(_Status^(0+256)+3)	;volatile
  3083                           
  3084                           ;klondike.c: 61: Status.State = 'R';
  3085  045E  3052               	movlw	82
  3086  045F  2D5D               	goto	L3
  3087  0460                     l6812:	
  3088                           ;klondike.c: 65: case 'I':
  3089                           
  3090                           ;klondike.c: 64: break;
  3091                           
  3092                           ;klondike.c: 63: Status.Noise = Status.ErrorCount = 0;
  3093                           
  3094                           ;klondike.c: 62: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3095                           
  3096                           
  3097                           ;klondike.c: 66: SendCmdReply(cmd, (char *)&ID, sizeof(ID));
  3098  0460  0020               	movlb	0	; select bank0
  3099  0461  0867               	movf	ProcessCmd@cmd,w
  3100  0462  00DE               	movwf	?_SendCmdReply
  3101  0463  3002               	movlw	2
  3102  0464  00DF               	movwf	?_SendCmdReply+1
  3103  0465  309F               	movlw	low (_ID| (0+32768))
  3104  0466  00E0               	movwf	?_SendCmdReply+2
  3105  0467  3088               	movlw	high (_ID| (0+32768))
  3106  0468  00E1               	movwf	?_SendCmdReply+3
  3107  0469  300C               	movlw	12
  3108  046A  0021               	movlb	1	; select bank1
  3109  046B  00EA               	movwf	??_ProcessCmd^(0+128)
  3110  046C  086A               	movf	??_ProcessCmd^(0+128),w
  3111  046D  0020               	movlb	0	; select bank0
  3112  046E  00E2               	movwf	?_SendCmdReply+4
  3113  046F  318B  2337  3184   	fcall	_SendCmdReply
  3114                           
  3115                           ;klondike.c: 67: break;
  3116  0472  2D91               	goto	l669
  3117  0473                     l6814:	
  3118                           ;klondike.c: 68: case 'S':
  3119                           
  3120  0473  2D62               	goto	L4
  3121  0474                     l6818:	
  3122                           ;klondike.c: 72: case 'C':
  3123                           
  3124                           ;klondike.c: 71: break;
  3125                           
  3126                           ;klondike.c: 70: Status.Noise = Status.ErrorCount = 0;
  3127                           
  3128                           ;klondike.c: 69: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3129                           
  3130                           
  3131                           ;klondike.c: 73: if( *(WORD *)&cmd[2] != 0 ) {
  3132  0474  0020               	movlb	0	; select bank0
  3133  0475  0867               	movf	ProcessCmd@cmd,w
  3134  0476  3E02               	addlw	2
  3135  0477  0086               	movwf	6
  3136  0478  3002               	movlw	2	; select bank4/5
  3137  0479  0087               	movwf	7
  3138  047A  0016               	moviw fsr1++
  3139  047B  0401               	iorwf	1,w
  3140  047C  1903               	skipnz
  3141  047D  2D23               	goto	l6844
  3142                           
  3143                           ;klondike.c: 74: Cfg = *(WORKCFG *)(cmd+2);
  3144  047E  0867               	movf	ProcessCmd@cmd,w
  3145  047F  3E02               	addlw	2
  3146  0480  0086               	movwf	6
  3147  0481  3002               	movlw	2	; select bank4/5
  3148  0482  0087               	movwf	7
  3149  0483  30E4               	movlw	low _Cfg
  3150  0484  0084               	movwf	4
  3151  0485  3001               	movlw	high _Cfg
  3152  0486  0085               	movwf	5
  3153  0487  3006               	movlw	6
  3154  0488  00FF               	movwf	127
  3155  0489                     u7760:	
  3156  0489  0016               	moviw fsr1++
  3157  048A  001A               	movwi fsr0++
  3158  048B  0BFF               	decfsz	127,f
  3159  048C  2C89               	goto	u7760
  3160                           
  3161                           ;klondike.c: 75: if(Cfg.HashClock < 128)
  3162  048D  3000               	movlw	0
  3163  048E  0023               	movlb	3	; select bank3
  3164  048F  0265               	subwf	(_Cfg+1)^(0+384),w
  3165  0490  3080               	movlw	128
  3166  0491  1903               	skipnz
  3167  0492  0264               	subwf	_Cfg^(0+384),w
  3168  0493  1803               	skipnc
  3169  0494  2C99               	goto	l675
  3170                           
  3171                           ;klondike.c: 76: Cfg.HashClock = 128;
  3172  0495  3080               	movlw	128
  3173  0496  00E4               	movwf	_Cfg^(0+384)
  3174  0497  3000               	movlw	0
  3175  0498  00E5               	movwf	(_Cfg^(0+384)+1)
  3176  0499                     l675:	
  3177                           
  3178                           ;klondike.c: 77: if(Cfg.HashClock <= 250 && Cfg.HashClock >= 450/2)
  3179  0499  3000               	movlw	0
  3180  049A  0265               	subwf	(_Cfg+1)^(0+384),w
  3181  049B  30FB               	movlw	251
  3182  049C  1903               	skipnz
  3183  049D  0264               	subwf	_Cfg^(0+384),w
  3184  049E  1803               	skipnc
  3185  049F  2CAB               	goto	l676
  3186  04A0  3000               	movlw	0
  3187  04A1  0265               	subwf	(_Cfg+1)^(0+384),w
  3188  04A2  30E1               	movlw	225
  3189  04A3  1903               	skipnz
  3190  04A4  0264               	subwf	_Cfg^(0+384),w
  3191  04A5  1C03               	skipc
  3192  04A6  2CAB               	goto	l676
  3193                           
  3194                           ;klondike.c: 78: Cfg.HashClock = 450/2-1;
  3195  04A7  30E0               	movlw	224
  3196  04A8  00E4               	movwf	_Cfg^(0+384)
  3197  04A9  3000               	movlw	0
  3198  04AA  00E5               	movwf	(_Cfg^(0+384)+1)
  3199  04AB                     l676:	
  3200                           
  3201                           ;klondike.c: 79: if(Cfg.HashClock >= 450)
  3202  04AB  3001               	movlw	1
  3203  04AC  0265               	subwf	(_Cfg+1)^(0+384),w
  3204  04AD  30C2               	movlw	194
  3205  04AE  1903               	skipnz
  3206  04AF  0264               	subwf	_Cfg^(0+384),w
  3207  04B0  1C03               	skipc
  3208  04B1  2CB6               	goto	l677
  3209                           
  3210                           ;klondike.c: 80: Cfg.HashClock = 450-1;
  3211  04B2  30C1               	movlw	193
  3212  04B3  00E4               	movwf	_Cfg^(0+384)
  3213  04B4  3001               	movlw	1
  3214  04B5  00E5               	movwf	(_Cfg^(0+384)+1)
  3215  04B6                     l677:	
  3216                           
  3217                           ;klondike.c: 81: if(Cfg.HashClock <= 250)
  3218  04B6  3000               	movlw	0
  3219  04B7  0265               	subwf	(_Cfg+1)^(0+384),w
  3220  04B8  30FB               	movlw	251
  3221  04B9  1903               	skipnz
  3222  04BA  0264               	subwf	_Cfg^(0+384),w
  3223  04BB  1803               	skipnc
  3224  04BC  2CD6               	goto	l6834
  3225                           
  3226                           ;klondike.c: 82: ClockCfg[0] = (((DWORD)Cfg.HashClock*2) << 18) | 0x00030017;
  3227  04BD  0864               	movf	_Cfg^(0+384),w
  3228  04BE  0021               	movlb	1	; select bank1
  3229  04BF  00EA               	movwf	??_ProcessCmd^(0+128)
  3230  04C0  0023               	movlb	3	; select bank3
  3231  04C1  0865               	movf	(_Cfg+1)^(0+384),w
  3232  04C2  0021               	movlb	1	; select bank1
  3233  04C3  00EB               	movwf	(??_ProcessCmd^(0+128)+1)
  3234  04C4  01EC               	clrf	(??_ProcessCmd^(0+128)+2)
  3235  04C5  01ED               	clrf	(??_ProcessCmd^(0+128)+3)
  3236  04C6  3001               	movlw	1
  3237  04C7                     u7825:	
  3238  04C7  35EA               	lslf	??_ProcessCmd^(0+128),f
  3239  04C8  0DEB               	rlf	(??_ProcessCmd^(0+128)+1),f
  3240  04C9  0DEC               	rlf	(??_ProcessCmd^(0+128)+2),f
  3241  04CA  0DED               	rlf	(??_ProcessCmd^(0+128)+3),f
  3242  04CB  0B89               	decfsz	9,f
  3243  04CC  2CC7               	goto	u7825
  3244  04CD  3012               	movlw	18
  3245  04CE                     u7835:	
  3246  04CE  35EA               	lslf	??_ProcessCmd^(0+128),f
  3247  04CF  0DEB               	rlf	(??_ProcessCmd^(0+128)+1),f
  3248  04D0  0DEC               	rlf	(??_ProcessCmd^(0+128)+2),f
  3249  04D1  0DED               	rlf	(??_ProcessCmd^(0+128)+3),f
  3250  04D2  0B89               	decfsz	9,f
  3251  04D3  2CCE               	goto	u7835
  3252  04D4  3017               	movlw	23
  3253  04D5  2CE7               	goto	L1
  3254  04D6                     l6834:	
  3255                           
  3256                           ;klondike.c: 83: else
  3257                           ;klondike.c: 84: ClockCfg[0] = ((DWORD)Cfg.HashClock << 18) | 0x00030007;
  3258  04D6  0864               	movf	_Cfg^(0+384),w
  3259  04D7  0021               	movlb	1	; select bank1
  3260  04D8  00EA               	movwf	??_ProcessCmd^(0+128)
  3261  04D9  0023               	movlb	3	; select bank3
  3262  04DA  0865               	movf	(_Cfg+1)^(0+384),w
  3263  04DB  0021               	movlb	1	; select bank1
  3264  04DC  00EB               	movwf	(??_ProcessCmd^(0+128)+1)
  3265  04DD  01EC               	clrf	(??_ProcessCmd^(0+128)+2)
  3266  04DE  01ED               	clrf	(??_ProcessCmd^(0+128)+3)
  3267  04DF  3012               	movlw	18
  3268  04E0                     u7845:	
  3269  04E0  35EA               	lslf	??_ProcessCmd^(0+128),f
  3270  04E1  0DEB               	rlf	(??_ProcessCmd^(0+128)+1),f
  3271  04E2  0DEC               	rlf	(??_ProcessCmd^(0+128)+2),f
  3272  04E3  0DED               	rlf	(??_ProcessCmd^(0+128)+3),f
  3273  04E4  0B89               	decfsz	9,f
  3274  04E5  2CE0               	goto	u7845
  3275  04E6  3007               	movlw	7
  3276  04E7                     L1:	
  3277  04E7  046A               	iorwf	??_ProcessCmd^(0+128),w
  3278  04E8  0023               	movlb	3	; select bank3
  3279  04E9  00DC               	movwf	_ClockCfg^(0+384)
  3280  04EA  3000               	movlw	0
  3281  04EB  0021               	movlb	1	; select bank1
  3282  04EC  046B               	iorwf	(??_ProcessCmd+1)^(0+128),w
  3283  04ED  0023               	movlb	3	; select bank3
  3284  04EE  00DD               	movwf	(_ClockCfg+1)^(0+384)
  3285  04EF  3003               	movlw	3
  3286  04F0  0021               	movlb	1	; select bank1
  3287  04F1  046C               	iorwf	(??_ProcessCmd+2)^(0+128),w
  3288  04F2  0023               	movlb	3	; select bank3
  3289  04F3  00DE               	movwf	(_ClockCfg+2)^(0+384)
  3290  04F4  3000               	movlw	0
  3291  04F5  0021               	movlb	1	; select bank1
  3292  04F6  046D               	iorwf	(??_ProcessCmd+3)^(0+128),w
  3293  04F7  0023               	movlb	3	; select bank3
  3294  04F8  00DF               	movwf	(_ClockCfg+3)^(0+384)
  3295                           
  3296                           ;klondike.c: 85: HashTime = 256 - ((WORD)12284/Cfg.HashClock);
  3297  04F9  0865               	movf	(_Cfg+1)^(0+384),w
  3298  04FA  0020               	movlb	0	; select bank0
  3299  04FB  01D9               	clrf	?___lwdiv+1
  3300  04FC  07D9               	addwf	?___lwdiv+1,f
  3301  04FD  0023               	movlb	3	; select bank3
  3302  04FE  0864               	movf	_Cfg^(0+384),w
  3303  04FF  0020               	movlb	0	; select bank0
  3304  0500  01D8               	clrf	?___lwdiv
  3305  0501  07D8               	addwf	?___lwdiv,f
  3306  0502  30FC               	movlw	252
  3307  0503  00DA               	movwf	?___lwdiv+2
  3308  0504  302F               	movlw	47
  3309  0505  00DB               	movwf	?___lwdiv+3
  3310  0506  319E  26B4  3184   	fcall	___lwdiv
  3311  0509  0020               	movlb	0	; select bank0
  3312  050A  0858               	movf	?___lwdiv,w
  3313  050B  3AFF               	xorlw	255
  3314  050C  3E01               	addlw	1
  3315  050D  0021               	movlb	1	; select bank1
  3316  050E  00EA               	movwf	??_ProcessCmd^(0+128)
  3317  050F  086A               	movf	??_ProcessCmd^(0+128),w
  3318  0510  0022               	movlb	2	; select bank2
  3319  0511  00D8               	movwf	_HashTime^(0+256)
  3320                           
  3321                           ;klondike.c: 86: if(Cfg.TempTarget != 0)
  3322  0512  0023               	movlb	3	; select bank3
  3323  0513  0866               	movf	(_Cfg^(0+384)+2),w
  3324  0514  1903               	btfsc	3,2
  3325  0515  2D1D               	goto	l6842
  3326                           
  3327                           ;klondike.c: 87: TempTarget = Cfg.TempTarget;
  3328  0516  0866               	movf	(_Cfg^(0+384)+2),w
  3329  0517  0021               	movlb	1	; select bank1
  3330  0518  00EA               	movwf	??_ProcessCmd^(0+128)
  3331  0519  086A               	movf	??_ProcessCmd^(0+128),w
  3332  051A  0023               	movlb	3	; select bank3
  3333  051B  00EA               	movwf	_TempTarget^(0+384)
  3334  051C  2D23               	goto	l6844
  3335  051D                     l6842:	
  3336                           
  3337                           ;klondike.c: 88: else
  3338                           ;klondike.c: 89: Cfg.TempTarget = 143;
  3339  051D  308F               	movlw	143
  3340  051E  0021               	movlb	1	; select bank1
  3341  051F  00EA               	movwf	??_ProcessCmd^(0+128)
  3342  0520  086A               	movf	??_ProcessCmd^(0+128),w
  3343  0521  0023               	movlb	3	; select bank3
  3344  0522  00E6               	movwf	(_Cfg^(0+384)+2)
  3345  0523                     l6844:	
  3346                           
  3347                           ;klondike.c: 90: }
  3348                           ;klondike.c: 91: SendCmdReply(cmd, (char *)&Cfg, sizeof(Cfg));
  3349  0523  0020               	movlb	0	; select bank0
  3350  0524  0867               	movf	ProcessCmd@cmd,w
  3351  0525  00DE               	movwf	?_SendCmdReply
  3352  0526  3002               	movlw	2
  3353  0527  00DF               	movwf	?_SendCmdReply+1
  3354  0528  30E4               	movlw	low _Cfg
  3355  0529  00E0               	movwf	?_SendCmdReply+2
  3356  052A  3001               	movlw	high _Cfg
  3357  052B  00E1               	movwf	?_SendCmdReply+3
  3358  052C  3006               	movlw	6
  3359  052D  0021               	movlb	1	; select bank1
  3360  052E  00EA               	movwf	??_ProcessCmd^(0+128)
  3361  052F  086A               	movf	??_ProcessCmd^(0+128),w
  3362  0530  0020               	movlb	0	; select bank0
  3363  0531  00E2               	movwf	?_SendCmdReply+4
  3364  0532  318B  2337  3184   	fcall	_SendCmdReply
  3365                           
  3366                           ;klondike.c: 92: break;
  3367  0535  2D91               	goto	l669
  3368  0536                     l6846:	
  3369                           ;klondike.c: 93: case 'E':
  3370                           
  3371                           
  3372                           ;klondike.c: 94: LATAbits.LATA4 = (cmd[2] == '1');
  3373  0536  0020               	movlb	0	; select bank0
  3374  0537  0867               	movf	ProcessCmd@cmd,w
  3375  0538  3E02               	addlw	2
  3376  0539  0086               	movwf	6
  3377  053A  3002               	movlw	2	; select bank4/5
  3378  053B  0087               	movwf	7
  3379  053C  0801               	movf	1,w
  3380  053D  3A31               	xorlw	49
  3381  053E  3000               	movlw	0
  3382  053F  1903               	skipnz
  3383  0540  3001               	movlw	1
  3384  0541  0021               	movlb	1	; select bank1
  3385  0542  00EA               	movwf	??_ProcessCmd^(0+128)
  3386  0543  0EEA               	swapf	??_ProcessCmd^(0+128),f
  3387  0544  0022               	movlb	2	; select bank2
  3388  0545  080C               	movf	12,w	;volatile
  3389  0546  0021               	movlb	1	; select bank1
  3390  0547  066A               	xorwf	??_ProcessCmd^(0+128),w
  3391  0548  39EF               	andlw	-17
  3392  0549  066A               	xorwf	??_ProcessCmd^(0+128),w
  3393  054A  0022               	movlb	2	; select bank2
  3394  054B  008C               	movwf	12	;volatile
  3395                           
  3396                           ;klondike.c: 95: Status.State = (cmd[2] == '1') ? 'R' : 'D';
  3397  054C  0020               	movlb	0	; select bank0
  3398  054D  0867               	movf	ProcessCmd@cmd,w
  3399  054E  3E02               	addlw	2
  3400  054F  0086               	movwf	6
  3401  0550  3002               	movlw	2	; select bank4/5
  3402  0551  0087               	movwf	7
  3403  0552  0801               	movf	1,w
  3404  0553  3A31               	xorlw	49
  3405  0554  1903               	skipnz
  3406  0555  2D58               	goto	l6852
  3407  0556  3044               	movlw	68
  3408  0557  2D59               	goto	L2
  3409  0558                     l6852:	
  3410  0558  3052               	movlw	82
  3411  0559                     L2:	
  3412  0559  00E5               	movwf	_ProcessCmd$1971
  3413  055A  3000               	movlw	0
  3414  055B  00E6               	movwf	_ProcessCmd$1971+1
  3415  055C  0865               	movf	_ProcessCmd$1971,w
  3416  055D                     L3:	
  3417  055D  0021               	movlb	1	; select bank1
  3418  055E  00EA               	movwf	??_ProcessCmd^(0+128)
  3419  055F  086A               	movf	??_ProcessCmd^(0+128),w
  3420  0560  0022               	movlb	2	; select bank2
  3421  0561  00D9               	movwf	_Status^(0+256)	;volatile
  3422  0562                     L4:	
  3423                           
  3424                           ;klondike.c: 96: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3425  0562  0020               	movlb	0	; select bank0
  3426  0563  0867               	movf	ProcessCmd@cmd,w
  3427  0564  00DE               	movwf	?_SendCmdReply
  3428  0565  3002               	movlw	2
  3429  0566  00DF               	movwf	?_SendCmdReply+1
  3430  0567  3059               	movlw	low _Status
  3431  0568  00E0               	movwf	?_SendCmdReply+2
  3432  0569  3001               	movlw	high _Status
  3433  056A  00E1               	movwf	?_SendCmdReply+3
  3434  056B  300D               	movlw	13
  3435  056C  0021               	movlb	1	; select bank1
  3436  056D  00EA               	movwf	??_ProcessCmd^(0+128)
  3437  056E  086A               	movf	??_ProcessCmd^(0+128),w
  3438  056F  0020               	movlb	0	; select bank0
  3439  0570  00E2               	movwf	?_SendCmdReply+4
  3440  0571  318B  2337  3184   	fcall	_SendCmdReply
  3441                           
  3442                           ;klondike.c: 97: Status.Noise = Status.ErrorCount = 0;
  3443  0574  0022               	movlb	2	; select bank2
  3444  0575  01E0               	clrf	(_Status^(0+256)+7)	;volatile
  3445  0576  01E5               	clrf	(_Status^(0+256)+12)	;volatile
  3446                           
  3447                           ;klondike.c: 107: }
  3448                           
  3449                           ;klondike.c: 106: break;
  3450                           
  3451                           ;klondike.c: 105: default:
  3452                           
  3453                           ;klondike.c: 98: break;
  3454  0577  2D91               	goto	l669
  3455  0578                     l6860:	
  3456  0578  0020               	movlb	0	; select bank0
  3457  0579  0867               	movf	ProcessCmd@cmd,w
  3458  057A  0086               	movwf	6
  3459  057B  3002               	movlw	2	; select bank4/5
  3460  057C  0087               	movwf	7
  3461  057D  0801               	movf	1,w
  3462                           
  3463                           ; Switch size 1, requested type "space"
  3464                           ; Number of cases is 6, Range of values is 65 to 87
  3465                           ; switch strategies available:
  3466                           ; Name         Instructions Cycles
  3467                           ; simple_byte           19    10 (average)
  3468                           ; direct_byte           55     9 (fixed)
  3469                           ; jumptable            263     9 (fixed)
  3470                           ;	Chosen strategy is simple_byte
  3471  057E  3A41               	xorlw	65	; case 65
  3472  057F  1903               	skipnz
  3473  0580  2C5B               	goto	l6804
  3474  0581  3A02               	xorlw	2	; case 67
  3475  0582  1903               	skipnz
  3476  0583  2C74               	goto	l6818
  3477  0584  3A06               	xorlw	6	; case 69
  3478  0585  1903               	skipnz
  3479  0586  2D36               	goto	l6846
  3480  0587  3A0C               	xorlw	12	; case 73
  3481  0588  1903               	skipnz
  3482  0589  2C60               	goto	l6812
  3483  058A  3A1A               	xorlw	26	; case 83
  3484  058B  1903               	skipnz
  3485  058C  2C73               	goto	l6814
  3486  058D  3A04               	xorlw	4	; case 87
  3487  058E  1903               	skipnz
  3488  058F  2C17               	goto	l6792
  3489  0590  2D91               	goto	l669
  3490  0591                     l669:	
  3491                           
  3492                           ;klondike.c: 108: LATAbits.LATA5 = 1;;
  3493  0591  0022               	movlb	2	; select bank2
  3494  0592  168C               	bsf	12,5	;volatile
  3495  0593  0008               	return
  3496  0594                     __end_of_ProcessCmd:	
  3497                           
  3498                           	psect	text3
  3499  1EB4                     __ptext3:	
  3500 ;; *************** function ___lwdiv *****************
  3501 ;; Defined at:
  3502 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwdiv.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  divisor         2    8[BANK0 ] unsigned int 
  3505 ;;  dividend        2   10[BANK0 ] unsigned int 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  quotient        2   14[BANK0 ] unsigned int 
  3508 ;;  counter         1   13[BANK0 ] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  2    8[BANK0 ] unsigned int 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;Total ram usage:        8 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    4
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_ProcessCmd
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function ___lwdiv
  3534  1EB4                     ___lwdiv:	
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3538  1EB4  0020               	movlb	0	; select bank0
  3539  1EB5  01DE               	clrf	___lwdiv@quotient
  3540  1EB6  01DF               	clrf	___lwdiv@quotient+1
  3541  1EB7  0859               	movf	___lwdiv@divisor+1,w
  3542  1EB8  0458               	iorwf	___lwdiv@divisor,w
  3543  1EB9  1903               	skipnz
  3544  1EBA  2EE4               	goto	l7062
  3545  1EBB  01DD               	clrf	___lwdiv@counter
  3546  1EBC  0ADD               	incf	___lwdiv@counter,f
  3547  1EBD                     l7050:	
  3548  1EBD  1BD9               	btfsc	___lwdiv@divisor+1,7
  3549  1EBE  2EC9               	goto	l7052
  3550  1EBF  3001               	movlw	1
  3551  1EC0                     u8155:	
  3552  1EC0  35D8               	lslf	___lwdiv@divisor,f
  3553  1EC1  0DD9               	rlf	___lwdiv@divisor+1,f
  3554  1EC2  0B89               	decfsz	9,f
  3555  1EC3  2EC0               	goto	u8155
  3556  1EC4  3001               	movlw	1
  3557  1EC5  00DC               	movwf	??___lwdiv
  3558  1EC6  085C               	movf	??___lwdiv,w
  3559  1EC7  07DD               	addwf	___lwdiv@counter,f
  3560  1EC8  2EBD               	goto	l7050
  3561  1EC9                     l7052:	
  3562  1EC9  3001               	movlw	1
  3563  1ECA                     u8175:	
  3564  1ECA  35DE               	lslf	___lwdiv@quotient,f
  3565  1ECB  0DDF               	rlf	___lwdiv@quotient+1,f
  3566  1ECC  0B89               	decfsz	9,f
  3567  1ECD  2ECA               	goto	u8175
  3568  1ECE  0859               	movf	___lwdiv@divisor+1,w
  3569  1ECF  025B               	subwf	___lwdiv@dividend+1,w
  3570  1ED0  1D03               	skipz
  3571  1ED1  2ED4               	goto	u8185
  3572  1ED2  0858               	movf	___lwdiv@divisor,w
  3573  1ED3  025A               	subwf	___lwdiv@dividend,w
  3574  1ED4                     u8185:	
  3575  1ED4  1C03               	skipc
  3576  1ED5  2EDB               	goto	l7058
  3577  1ED6  0858               	movf	___lwdiv@divisor,w
  3578  1ED7  02DA               	subwf	___lwdiv@dividend,f
  3579  1ED8  0859               	movf	___lwdiv@divisor+1,w
  3580  1ED9  3BDB               	subwfb	___lwdiv@dividend+1,f
  3581  1EDA  145E               	bsf	___lwdiv@quotient,0
  3582  1EDB                     l7058:	
  3583  1EDB  3001               	movlw	1
  3584  1EDC                     u8195:	
  3585  1EDC  36D9               	lsrf	___lwdiv@divisor+1,f
  3586  1EDD  0CD8               	rrf	___lwdiv@divisor,f
  3587  1EDE  0B89               	decfsz	9,f
  3588  1EDF  2EDC               	goto	u8195
  3589  1EE0  3001               	movlw	1
  3590  1EE1  02DD               	subwf	___lwdiv@counter,f
  3591  1EE2  1D03               	btfss	3,2
  3592  1EE3  2EC9               	goto	l7052
  3593  1EE4                     l7062:	
  3594  1EE4  085F               	movf	___lwdiv@quotient+1,w
  3595  1EE5  01D9               	clrf	?___lwdiv+1
  3596  1EE6  07D9               	addwf	?___lwdiv+1,f
  3597  1EE7  085E               	movf	___lwdiv@quotient,w
  3598  1EE8  01D8               	clrf	?___lwdiv
  3599  1EE9  07D8               	addwf	?___lwdiv,f
  3600  1EEA  0008               	return
  3601  1EEB                     __end_of___lwdiv:	
  3602                           
  3603                           	psect	text4
  3604  0B37                     __ptext4:	
  3605 ;; *************** function _SendCmdReply *****************
  3606 ;; Defined at:
  3607 ;;		line 208 in file "main.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  cmd             2   14[BANK0 ] PTR unsigned char 
  3610 ;;		 -> ResultQue(6), OUTPacket(64), 
  3611 ;;  data            2   16[BANK0 ] PTR unsigned char 
  3612 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
  3613 ;;  count           1   18[BANK0 ] unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  n               1   19[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;		None               void
  3618 ;; Registers used:
  3619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3625 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;Total ram usage:       14 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    5
  3632 ;; This function calls:
  3633 ;;		___bmul
  3634 ;;		___wmul
  3635 ;; This function is called by:
  3636 ;;		_ProcessCmd
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _SendCmdReply
  3642  0B37                     _SendCmdReply:	
  3643                           
  3644                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3648  0B37  0020               	movlb	0	; select bank0
  3649  0B38  0862               	movf	SendCmdReply@count,w
  3650  0B39  0021               	movlb	1	; select bank1
  3651  0B3A  00A0               	movwf	??_SendCmdReply^(0+128)
  3652  0B3B  01A1               	clrf	(??_SendCmdReply^(0+128)+1)
  3653  0B3C  0022               	movlb	2	; select bank2
  3654  0B3D  0856               	movf	_WQI^(0+256),w
  3655  0B3E  0021               	movlb	1	; select bank1
  3656  0B3F  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3657  0B40  01A3               	clrf	((??_SendCmdReply+2)^(0+128)+1)
  3658  0B41  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3659  0B42  0020               	movlb	0	; select bank0
  3660  0B43  00D8               	movwf	?___wmul
  3661  0B44  0021               	movlb	1	; select bank1
  3662  0B45  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3663  0B46  0020               	movlb	0	; select bank0
  3664  0B47  00D9               	movwf	?___wmul+1
  3665  0B48  300F               	movlw	15
  3666  0B49  00DA               	movwf	?___wmul+2
  3667  0B4A  3000               	movlw	0
  3668  0B4B  00DB               	movwf	?___wmul+3
  3669  0B4C  319D  2589  318B   	fcall	___wmul
  3670  0B4F  0021               	movlb	1	; select bank1
  3671  0B50  0820               	movf	??_SendCmdReply^(0+128),w
  3672  0B51  0020               	movlb	0	; select bank0
  3673  0B52  0758               	addwf	?___wmul,w
  3674  0B53  0021               	movlb	1	; select bank1
  3675  0B54  00A4               	movwf	(??_SendCmdReply+4)^(0+128)
  3676  0B55  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3677  0B56  0020               	movlb	0	; select bank0
  3678  0B57  3D59               	addwfc	?___wmul+1,w
  3679  0B58  0021               	movlb	1	; select bank1
  3680  0B59  00A5               	movwf	(??_SendCmdReply+5)^(0+128)
  3681  0B5A  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3682  0B5B  3E02               	addlw	2
  3683  0B5C  00A6               	movwf	(??_SendCmdReply+6)^(0+128)
  3684  0B5D  3000               	movlw	0
  3685  0B5E  3D25               	addwfc	(??_SendCmdReply+5)^(0+128),w
  3686  0B5F  00A7               	movwf	(??_SendCmdReply+7)^(0+128)
  3687  0B60  0827               	movf	(??_SendCmdReply+7)^(0+128),w
  3688  0B61  3A80               	xorlw	128
  3689  0B62  00FF               	movwf	127
  3690  0B63  3080               	movlw	128
  3691  0B64  027F               	subwf	127,w
  3692  0B65  1D03               	skipz
  3693  0B66  2B69               	goto	u7875
  3694  0B67  3040               	movlw	64
  3695  0B68  0226               	subwf	(??_SendCmdReply+6)^(0+128),w
  3696  0B69                     u7875:	
  3697  0B69  1803               	skipnc
  3698  0B6A  0008               	return
  3699                           
  3700                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
  3701  0B6B  0020               	movlb	0	; select bank0
  3702  0B6C  085E               	movf	SendCmdReply@cmd,w
  3703  0B6D  0086               	movwf	6
  3704  0B6E  085F               	movf	SendCmdReply@cmd+1,w
  3705  0B6F  0087               	movwf	7
  3706  0B70  0801               	movf	1,w
  3707  0B71  0021               	movlb	1	; select bank1
  3708  0B72  00A0               	movwf	??_SendCmdReply^(0+128)
  3709  0B73  300F               	movlw	15
  3710  0B74  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3711  0B75  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3712  0B76  0020               	movlb	0	; select bank0
  3713  0B77  00D8               	movwf	?___bmul
  3714  0B78  0022               	movlb	2	; select bank2
  3715  0B79  0856               	movf	_WQI^(0+256),w
  3716  0B7A  319C  2450  318B   	fcall	___bmul
  3717  0B7D  3E20               	addlw	32
  3718  0B7E  0086               	movwf	6
  3719  0B7F  3002               	movlw	2	; select bank4/5
  3720  0B80  0087               	movwf	7
  3721  0B81  0021               	movlb	1	; select bank1
  3722  0B82  0820               	movf	??_SendCmdReply^(0+128),w
  3723  0B83  0081               	movwf	1
  3724                           
  3725                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
  3726  0B84  0022               	movlb	2	; select bank2
  3727  0B85  083A               	movf	_SlaveAddress^(0+256),w
  3728  0B86  0021               	movlb	1	; select bank1
  3729  0B87  00A0               	movwf	??_SendCmdReply^(0+128)
  3730  0B88  300F               	movlw	15
  3731  0B89  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3732  0B8A  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3733  0B8B  0020               	movlb	0	; select bank0
  3734  0B8C  00D8               	movwf	?___bmul
  3735  0B8D  0022               	movlb	2	; select bank2
  3736  0B8E  0856               	movf	_WQI^(0+256),w
  3737  0B8F  319C  2450  318B   	fcall	___bmul
  3738  0B92  0021               	movlb	1	; select bank1
  3739  0B93  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3740  0B94  0A22               	incf	(??_SendCmdReply+2)^(0+128),w
  3741  0B95  3E20               	addlw	32
  3742  0B96  0086               	movwf	6
  3743  0B97  3002               	movlw	2	; select bank4/5
  3744  0B98  0087               	movwf	7
  3745  0B99  0820               	movf	??_SendCmdReply^(0+128),w
  3746  0B9A  0081               	movwf	1
  3747                           
  3748                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
  3749  0B9B  0020               	movlb	0	; select bank0
  3750  0B9C  01E3               	clrf	SendCmdReply@n
  3751  0B9D                     l6888:	
  3752  0B9D  0862               	movf	SendCmdReply@count,w
  3753  0B9E  0263               	subwf	SendCmdReply@n,w
  3754  0B9F  1803               	btfsc	3,0
  3755  0BA0  2BD7               	goto	l6890
  3756                           
  3757                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
  3758  0BA1  0861               	movf	SendCmdReply@data+1,w
  3759  0BA2  0021               	movlb	1	; select bank1
  3760  0BA3  00A1               	movwf	(??_SendCmdReply^(0+128)+1)
  3761  0BA4  0020               	movlb	0	; select bank0
  3762  0BA5  0860               	movf	SendCmdReply@data,w
  3763  0BA6  0021               	movlb	1	; select bank1
  3764  0BA7  00A0               	movwf	??_SendCmdReply^(0+128)
  3765  0BA8  0020               	movlb	0	; select bank0
  3766  0BA9  0863               	movf	SendCmdReply@n,w
  3767  0BAA  0021               	movlb	1	; select bank1
  3768  0BAB  0720               	addwf	??_SendCmdReply^(0+128),w
  3769  0BAC  0084               	movwf	4
  3770  0BAD  0821               	movf	(??_SendCmdReply^(0+128)+1),w
  3771  0BAE  1803               	skipnc
  3772  0BAF  0A21               	incf	(??_SendCmdReply^(0+128)+1),w
  3773  0BB0  0085               	movwf	5
  3774  0BB1  0800               	movf	0,w	;code access
  3775  0BB2  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3776  0BB3  0022               	movlb	2	; select bank2
  3777  0BB4  0856               	movf	_WQI^(0+256),w
  3778  0BB5  0021               	movlb	1	; select bank1
  3779  0BB6  00A3               	movwf	(??_SendCmdReply+3)^(0+128)
  3780  0BB7  01A4               	clrf	((??_SendCmdReply+3)^(0+128)+1)
  3781  0BB8  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3782  0BB9  0020               	movlb	0	; select bank0
  3783  0BBA  00D8               	movwf	?___wmul
  3784  0BBB  0021               	movlb	1	; select bank1
  3785  0BBC  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3786  0BBD  0020               	movlb	0	; select bank0
  3787  0BBE  00D9               	movwf	?___wmul+1
  3788  0BBF  300F               	movlw	15
  3789  0BC0  00DA               	movwf	?___wmul+2
  3790  0BC1  3000               	movlw	0
  3791  0BC2  00DB               	movwf	?___wmul+3
  3792  0BC3  319D  2589  318B   	fcall	___wmul
  3793  0BC6  0020               	movlb	0	; select bank0
  3794  0BC7  0858               	movf	?___wmul,w
  3795  0BC8  0763               	addwf	SendCmdReply@n,w
  3796  0BC9  3E02               	addlw	2
  3797  0BCA  3E20               	addlw	32
  3798  0BCB  0086               	movwf	6
  3799  0BCC  3002               	movlw	2	; select bank4/5
  3800  0BCD  0087               	movwf	7
  3801  0BCE  0021               	movlb	1	; select bank1
  3802  0BCF  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3803  0BD0  0081               	movwf	1
  3804  0BD1  3001               	movlw	1
  3805  0BD2  00A0               	movwf	??_SendCmdReply^(0+128)
  3806  0BD3  0820               	movf	??_SendCmdReply^(0+128),w
  3807  0BD4  0020               	movlb	0	; select bank0
  3808  0BD5  07E3               	addwf	SendCmdReply@n,f
  3809  0BD6  2B9D               	goto	l6888
  3810  0BD7                     l6890:	
  3811                           
  3812                           ;main.c: 214: WQI = (WQI+1) & 3;
  3813  0BD7  0022               	movlb	2	; select bank2
  3814  0BD8  0A56               	incf	_WQI^(0+256),w
  3815  0BD9  3903               	andlw	3
  3816  0BDA  0021               	movlb	1	; select bank1
  3817  0BDB  00A0               	movwf	??_SendCmdReply^(0+128)
  3818  0BDC  0820               	movf	??_SendCmdReply^(0+128),w
  3819  0BDD  0022               	movlb	2	; select bank2
  3820  0BDE  00D6               	movwf	_WQI^(0+256)
  3821  0BDF  0008               	return
  3822  0BE0                     __end_of_SendCmdReply:	
  3823                           
  3824                           	psect	text5
  3825  1C50                     __ptext5:	
  3826 ;; *************** function ___bmul *****************
  3827 ;; Defined at:
  3828 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  multiplier      1    wreg     unsigned char 
  3831 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  multiplier      1   11[BANK0 ] unsigned char 
  3834 ;;  product         1   10[BANK0 ] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      unsigned char 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3844 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;Total ram usage:        4 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    4
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_ProcessIO
  3855 ;;		_SendCmdReply
  3856 ;;		i1_SendCmdReply
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function ___bmul
  3862  1C50                     ___bmul:	
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3866                           ;___bmul@multiplier stored from wreg
  3867  1C50  0020               	movlb	0	; select bank0
  3868  1C51  00DB               	movwf	___bmul@multiplier
  3869  1C52  01DA               	clrf	___bmul@product
  3870  1C53                     l7026:	
  3871  1C53  1C5B               	btfss	___bmul@multiplier,0
  3872  1C54  2C59               	goto	l7030
  3873  1C55  0858               	movf	___bmul@multiplicand,w
  3874  1C56  00D9               	movwf	??___bmul
  3875  1C57  0859               	movf	??___bmul,w
  3876  1C58  07DA               	addwf	___bmul@product,f
  3877  1C59                     l7030:	
  3878  1C59  1003               	clrc
  3879  1C5A  0DD8               	rlf	___bmul@multiplicand,f
  3880  1C5B  1003               	clrc
  3881  1C5C  0CDB               	rrf	___bmul@multiplier,f
  3882  1C5D  08DB               	movf	___bmul@multiplier,f
  3883  1C5E  1D03               	skipz
  3884  1C5F  2C53               	goto	l7026
  3885  1C60  085A               	movf	___bmul@product,w
  3886  1C61  0008               	return
  3887  1C62                     __end_of___bmul:	
  3888                           
  3889                           	psect	text6
  3890  15D6                     __ptext6:	
  3891 ;; *************** function _AsicPushWork *****************
  3892 ;; Defined at:
  3893 ;;		line 112 in file "klondike.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;		None               void
  3900 ;; Registers used:
  3901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;Total ram usage:        5 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    6
  3914 ;; This function calls:
  3915 ;;		_SendAsicData
  3916 ;;		_AsicPreCalc
  3917 ;;		___wmul
  3918 ;; This function is called by:
  3919 ;;		_ProcessCmd
  3920 ;;		_main
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           
  3925                           ;psect for function _AsicPushWork
  3926  15D6                     _AsicPushWork:	
  3927                           
  3928                           ;klondike.c: 113: AsicPreCalc(&WorkQue[WorkNow]);
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _AsicPushWork: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3932  15D6  0022               	movlb	2	; select bank2
  3933  15D7  0846               	movf	_WorkNow^(0+256),w
  3934  15D8  0021               	movlb	1	; select bank1
  3935  15D9  00E5               	movwf	??_AsicPushWork^(0+128)
  3936  15DA  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3937  15DB  0865               	movf	??_AsicPushWork^(0+128),w
  3938  15DC  0020               	movlb	0	; select bank0
  3939  15DD  00D8               	movwf	?___wmul
  3940  15DE  0021               	movlb	1	; select bank1
  3941  15DF  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3942  15E0  0020               	movlb	0	; select bank0
  3943  15E1  00D9               	movwf	?___wmul+1
  3944  15E2  302D               	movlw	45
  3945  15E3  00DA               	movwf	?___wmul+2
  3946  15E4  3000               	movlw	0
  3947  15E5  00DB               	movwf	?___wmul+3
  3948  15E6  319D  2589  3195   	fcall	___wmul
  3949  15E9  303C               	movlw	60
  3950  15EA  0021               	movlb	1	; select bank1
  3951  15EB  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3952  15EC  3023               	movlw	35
  3953  15ED  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3954  15EE  0020               	movlb	0	; select bank0
  3955  15EF  0858               	movf	?___wmul,w
  3956  15F0  0021               	movlb	1	; select bank1
  3957  15F1  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3958  15F2  00A0               	movwf	?_AsicPreCalc^(0+128)
  3959  15F3  0020               	movlb	0	; select bank0
  3960  15F4  0859               	movf	?___wmul+1,w
  3961  15F5  0021               	movlb	1	; select bank1
  3962  15F6  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3963  15F7  00A1               	movwf	(?_AsicPreCalc+1)^(0+128)
  3964  15F8  3180  2014  3195   	fcall	_AsicPreCalc
  3965                           
  3966                           ;klondike.c: 114: Status.WorkID = WorkQue[WorkNow].WorkID;
  3967  15FB  0022               	movlb	2	; select bank2
  3968  15FC  0846               	movf	_WorkNow^(0+256),w
  3969  15FD  0021               	movlb	1	; select bank1
  3970  15FE  00E5               	movwf	??_AsicPushWork^(0+128)
  3971  15FF  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3972  1600  0865               	movf	??_AsicPushWork^(0+128),w
  3973  1601  0020               	movlb	0	; select bank0
  3974  1602  00D8               	movwf	?___wmul
  3975  1603  0021               	movlb	1	; select bank1
  3976  1604  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3977  1605  0020               	movlb	0	; select bank0
  3978  1606  00D9               	movwf	?___wmul+1
  3979  1607  302D               	movlw	45
  3980  1608  00DA               	movwf	?___wmul+2
  3981  1609  3000               	movlw	0
  3982  160A  00DB               	movwf	?___wmul+3
  3983  160B  319D  2589  3195   	fcall	___wmul
  3984  160E  303C               	movlw	60
  3985  160F  0021               	movlb	1	; select bank1
  3986  1610  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3987  1611  3023               	movlw	35
  3988  1612  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3989  1613  0020               	movlb	0	; select bank0
  3990  1614  0858               	movf	?___wmul,w
  3991  1615  0021               	movlb	1	; select bank1
  3992  1616  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3993  1617  0086               	movwf	6
  3994  1618  0020               	movlb	0	; select bank0
  3995  1619  0859               	movf	?___wmul+1,w
  3996  161A  0021               	movlb	1	; select bank1
  3997  161B  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3998  161C  0087               	movwf	7
  3999  161D  0801               	movf	1,w
  4000  161E  00E9               	movwf	(??_AsicPushWork+4)^(0+128)
  4001  161F  0869               	movf	(??_AsicPushWork+4)^(0+128),w
  4002  1620  0022               	movlb	2	; select bank2
  4003  1621  00DD               	movwf	(_Status^(0+256)+4)	;volatile
  4004                           
  4005                           ;klondike.c: 115: SendAsicData(&WorkQue[WorkNow]);
  4006  1622  0846               	movf	_WorkNow^(0+256),w
  4007  1623  0021               	movlb	1	; select bank1
  4008  1624  00E5               	movwf	??_AsicPushWork^(0+128)
  4009  1625  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  4010  1626  0865               	movf	??_AsicPushWork^(0+128),w
  4011  1627  0020               	movlb	0	; select bank0
  4012  1628  00D8               	movwf	?___wmul
  4013  1629  0021               	movlb	1	; select bank1
  4014  162A  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  4015  162B  0020               	movlb	0	; select bank0
  4016  162C  00D9               	movwf	?___wmul+1
  4017  162D  302D               	movlw	45
  4018  162E  00DA               	movwf	?___wmul+2
  4019  162F  3000               	movlw	0
  4020  1630  00DB               	movwf	?___wmul+3
  4021  1631  319D  2589  3195   	fcall	___wmul
  4022  1634  303C               	movlw	60
  4023  1635  0021               	movlb	1	; select bank1
  4024  1636  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  4025  1637  3023               	movlw	35
  4026  1638  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  4027  1639  0020               	movlb	0	; select bank0
  4028  163A  0858               	movf	?___wmul,w
  4029  163B  0021               	movlb	1	; select bank1
  4030  163C  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  4031  163D  0020               	movlb	0	; select bank0
  4032  163E  00DE               	movwf	?_SendAsicData
  4033  163F  0859               	movf	?___wmul+1,w
  4034  1640  0021               	movlb	1	; select bank1
  4035  1641  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  4036  1642  0020               	movlb	0	; select bank0
  4037  1643  00DF               	movwf	?_SendAsicData+1
  4038  1644  3189  2153         	fcall	_SendAsicData
  4039                           
  4040                           ;klondike.c: 116: WorkNow = (WorkNow+1) & 4-1;
  4041  1646  0022               	movlb	2	; select bank2
  4042  1647  0A46               	incf	_WorkNow^(0+256),w
  4043  1648  3903               	andlw	3
  4044  1649  0021               	movlb	1	; select bank1
  4045  164A  00E5               	movwf	??_AsicPushWork^(0+128)
  4046  164B  0865               	movf	??_AsicPushWork^(0+128),w
  4047  164C  0022               	movlb	2	; select bank2
  4048  164D  00C6               	movwf	_WorkNow^(0+256)
  4049                           
  4050                           ;klondike.c: 117: Status.HashCount = 0;
  4051  164E  01E1               	clrf	(_Status^(0+256)+8)	;volatile
  4052  164F  01E2               	clrf	((_Status+1)^(0+256)+8)	;volatile
  4053                           
  4054                           ;klondike.c: 118: TMR0 = HashTime;
  4055  1650  0858               	movf	_HashTime^(0+256),w
  4056  1651  0020               	movlb	0	; select bank0
  4057  1652  0095               	movwf	21	;volatile
  4058                           
  4059                           ;klondike.c: 119: Status.State = 'W';
  4060  1653  3057               	movlw	87
  4061  1654  0021               	movlb	1	; select bank1
  4062  1655  00E5               	movwf	??_AsicPushWork^(0+128)
  4063  1656  0865               	movf	??_AsicPushWork^(0+128),w
  4064  1657  0022               	movlb	2	; select bank2
  4065  1658  00D9               	movwf	_Status^(0+256)	;volatile
  4066                           
  4067                           ;klondike.c: 120: Status.WorkQC--;
  4068  1659  3001               	movlw	1
  4069  165A  02DC               	subwf	(_Status^(0+256)+3),f	;volatile
  4070  165B  0008               	return
  4071  165C                     __end_of_AsicPushWork:	
  4072                           
  4073                           	psect	text7
  4074  1D89                     __ptext7:	
  4075 ;; *************** function ___wmul *****************
  4076 ;; Defined at:
  4077 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  multiplier      2    8[BANK0 ] unsigned int 
  4080 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  product         2   12[BANK0 ] unsigned int 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2    8[BANK0 ] unsigned int 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4092 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4093 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;Total ram usage:        6 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    4
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_ProcessCmd
  4103 ;;		_AsicPushWork
  4104 ;;		_SendCmdReply
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function ___wmul
  4110  1D89                     ___wmul:	
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4114  1D89  0020               	movlb	0	; select bank0
  4115  1D8A  01DC               	clrf	___wmul@product
  4116  1D8B  01DD               	clrf	___wmul@product+1
  4117  1D8C                     l7068:	
  4118  1D8C  1C58               	btfss	___wmul@multiplier,0
  4119  1D8D  2D92               	goto	l1262
  4120  1D8E  085A               	movf	___wmul@multiplicand,w
  4121  1D8F  07DC               	addwf	___wmul@product,f
  4122  1D90  085B               	movf	___wmul@multiplicand+1,w
  4123  1D91  3DDD               	addwfc	___wmul@product+1,f
  4124  1D92                     l1262:	
  4125  1D92  3001               	movlw	1
  4126  1D93                     u8225:	
  4127  1D93  35DA               	lslf	___wmul@multiplicand,f
  4128  1D94  0DDB               	rlf	___wmul@multiplicand+1,f
  4129  1D95  0B89               	decfsz	9,f
  4130  1D96  2D93               	goto	u8225
  4131  1D97  3001               	movlw	1
  4132  1D98                     u8235:	
  4133  1D98  36D9               	lsrf	___wmul@multiplier+1,f
  4134  1D99  0CD8               	rrf	___wmul@multiplier,f
  4135  1D9A  0B89               	decfsz	9,f
  4136  1D9B  2D98               	goto	u8235
  4137  1D9C  0859               	movf	___wmul@multiplier+1,w
  4138  1D9D  0458               	iorwf	___wmul@multiplier,w
  4139  1D9E  1D03               	skipz
  4140  1D9F  2D8C               	goto	l7068
  4141  1DA0  085D               	movf	___wmul@product+1,w
  4142  1DA1  01D9               	clrf	?___wmul+1
  4143  1DA2  07D9               	addwf	?___wmul+1,f
  4144  1DA3  085C               	movf	___wmul@product,w
  4145  1DA4  01D8               	clrf	?___wmul
  4146  1DA5  07D8               	addwf	?___wmul,f
  4147  1DA6  0008               	return
  4148  1DA7                     __end_of___wmul:	
  4149                           
  4150                           	psect	text8
  4151  0014                     __ptext8:	
  4152 ;; *************** function _AsicPreCalc *****************
  4153 ;; Defined at:
  4154 ;;		line 318 in file "asic.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  work            2    0[BANK1 ] PTR struct _worktask
  4157 ;;		 -> WorkQue(180), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  m              32   24[BANK1 ] unsigned long [8]
  4160 ;;  K              12   12[BANK1 ] unsigned long [3]
  4161 ;;  x               4   64[BANK1 ] unsigned long 
  4162 ;;  y               4   60[BANK1 ] unsigned long 
  4163 ;;  z               4   56[BANK1 ] unsigned long 
  4164 ;;  n               1   68[BANK1 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4174 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0
  4178 ;;Total ram usage:       69 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    5
  4181 ;; This function calls:
  4182 ;;		_rotate
  4183 ;; This function is called by:
  4184 ;;		_AsicPushWork
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           
  4189                           ;psect for function _AsicPreCalc
  4190  0014                     _AsicPreCalc:	
  4191                           
  4192                           ;asic.c: 319: DWORD K[3] = { 0x428a2f98, 0x71374491, 0xb5c0fbcf };
  4193                           
  4194                           ;incstack = 0
  4195                           ; Regs used in _AsicPreCalc: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  4196  0014  30D0               	movlw	low AsicPreCalc@F3341
  4197  0015  0086               	movwf	6
  4198  0016  3001               	movlw	high AsicPreCalc@F3341
  4199  0017  0087               	movwf	7
  4200  0018  30AC               	movlw	low AsicPreCalc@K
  4201  0019  0084               	movwf	4
  4202  001A  3000               	movlw	high AsicPreCalc@K
  4203  001B  0085               	movwf	5
  4204  001C  300C               	movlw	12
  4205  001D  00FF               	movwf	127
  4206  001E                     u7210:	
  4207  001E  0016               	moviw fsr1++
  4208  001F  001A               	movwi fsr0++
  4209  0020  0BFF               	decfsz	127,f
  4210  0021  281E               	goto	u7210
  4211                           
  4212                           ;asic.c: 320: DWORD x, y, z;
  4213                           ;asic.c: 321: DWORD m[8];
  4214                           ;asic.c: 322: BYTE n;
  4215                           ;asic.c: 324: for(n = 0; n < 8; n++)
  4216  0022  0021               	movlb	1	; select bank1
  4217  0023  01E4               	clrf	AsicPreCalc@n^(0+128)
  4218  0024  3008               	movlw	8
  4219  0025  0264               	subwf	AsicPreCalc@n^(0+128),w
  4220  0026  1803               	btfsc	3,0
  4221  0027  285E               	goto	l6506
  4222  0028                     l6500:	
  4223                           
  4224                           ;asic.c: 325: m[n] = work->MidState[n];
  4225  0028  0864               	movf	AsicPreCalc@n^(0+128),w
  4226  0029  00A2               	movwf	??_AsicPreCalc^(0+128)
  4227  002A  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4228  002B  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4229  002C  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4230  002D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4231  002E  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4232  002F  0822               	movf	??_AsicPreCalc^(0+128),w
  4233  0030  3E01               	addlw	1
  4234  0031  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4235  0032  3000               	movlw	0
  4236  0033  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4237  0034  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4238  0035  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4239  0036  0720               	addwf	AsicPreCalc@work^(0+128),w
  4240  0037  0086               	movwf	6
  4241  0038  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4242  0039  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4243  003A  0087               	movwf	7
  4244  003B  3F40               	moviw [0]fsr1
  4245  003C  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4246  003D  3F41               	moviw [1]fsr1
  4247  003E  00A7               	movwf	((??_AsicPreCalc+4)^(0+128)+1)
  4248  003F  3F42               	moviw [2]fsr1
  4249  0040  00A8               	movwf	((??_AsicPreCalc+4)^(0+128)+2)
  4250  0041  3F43               	moviw [3]fsr1
  4251  0042  00A9               	movwf	((??_AsicPreCalc+4)^(0+128)+3)
  4252  0043  0864               	movf	AsicPreCalc@n^(0+128),w
  4253  0044  00AA               	movwf	(??_AsicPreCalc+8)^(0+128)
  4254  0045  3001               	movlw	1
  4255  0046                     u7235:	
  4256  0046  35AA               	lslf	(??_AsicPreCalc+8)^(0+128),f
  4257  0047  3EFF               	addlw	-1
  4258  0048  1D03               	skipz
  4259  0049  2846               	goto	u7235
  4260  004A  352A               	lslf	(??_AsicPreCalc+8)^(0+128),w
  4261  004B  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4262  004C  0086               	movwf	6
  4263  004D  0187               	clrf	7
  4264  004E  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4265  004F  3FC0               	movwi [0]fsr1
  4266  0050  0827               	movf	(??_AsicPreCalc+5)^(0+128),w
  4267  0051  3FC1               	movwi [1]fsr1
  4268  0052  0828               	movf	(??_AsicPreCalc+6)^(0+128),w
  4269  0053  3FC2               	movwi [2]fsr1
  4270  0054  0829               	movf	(??_AsicPreCalc+7)^(0+128),w
  4271  0055  3FC3               	movwi [3]fsr1
  4272  0056  3001               	movlw	1
  4273  0057  00A2               	movwf	??_AsicPreCalc^(0+128)
  4274  0058  0822               	movf	??_AsicPreCalc^(0+128),w
  4275  0059  07E4               	addwf	AsicPreCalc@n^(0+128),f
  4276  005A  3008               	movlw	8
  4277  005B  0264               	subwf	AsicPreCalc@n^(0+128),w
  4278  005C  1C03               	skipc
  4279  005D  2828               	goto	l6500
  4280  005E                     l6506:	
  4281                           
  4282                           ;asic.c: 327: for(n = 0; n < 3; n++) {
  4283  005E  01E4               	clrf	AsicPreCalc@n^(0+128)
  4284  005F                     L5:	
  4285  005F  3003               	movlw	3
  4286  0060  0264               	subwf	AsicPreCalc@n^(0+128),w
  4287  0061  1803               	btfsc	3,0
  4288  0062  0008               	return
  4289                           
  4290                           ;asic.c: 329: x = m[5-n] ^ m[6-n];
  4291  0063  0364               	decf	AsicPreCalc@n^(0+128),w
  4292  0064  3AFF               	xorlw	255
  4293  0065  00A2               	movwf	??_AsicPreCalc^(0+128)
  4294  0066  3001               	movlw	1
  4295  0067                     u7265:	
  4296  0067  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4297  0068  3EFF               	addlw	-1
  4298  0069  1D03               	skipz
  4299  006A  2867               	goto	u7265
  4300  006B  3522               	lslf	??_AsicPreCalc^(0+128),w
  4301  006C  3E18               	addlw	24
  4302  006D  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4303  006E  0086               	movwf	6
  4304  006F  0187               	clrf	7
  4305  0070  3F40               	moviw [0]fsr1
  4306  0071  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4307  0072  3F41               	moviw [1]fsr1
  4308  0073  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4309  0074  3F42               	moviw [2]fsr1
  4310  0075  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4311  0076  3F43               	moviw [3]fsr1
  4312  0077  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4313  0078  0364               	decf	AsicPreCalc@n^(0+128),w
  4314  0079  3AFF               	xorlw	255
  4315  007A  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4316  007B  3001               	movlw	1
  4317  007C                     u7275:	
  4318  007C  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4319  007D  3EFF               	addlw	-1
  4320  007E  1D03               	skipz
  4321  007F  287C               	goto	u7275
  4322  0080  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4323  0081  3E14               	addlw	20
  4324  0082  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4325  0083  0086               	movwf	6
  4326  0084  0187               	clrf	7
  4327  0085  3F40               	moviw [0]fsr1
  4328  0086  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4329  0087  3F41               	moviw [1]fsr1
  4330  0088  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4331  0089  3F42               	moviw [2]fsr1
  4332  008A  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4333  008B  3F43               	moviw [3]fsr1
  4334  008C  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4335  008D  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4336  008E  0628               	xorwf	(??_AsicPreCalc+6)^(0+128),w
  4337  008F  00E0               	movwf	AsicPreCalc@x^(0+128)
  4338  0090  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4339  0091  0629               	xorwf	(??_AsicPreCalc+7)^(0+128),w
  4340  0092  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4341  0093  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4342  0094  062A               	xorwf	(??_AsicPreCalc+8)^(0+128),w
  4343  0095  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4344  0096  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4345  0097  062B               	xorwf	(??_AsicPreCalc+9)^(0+128),w
  4346  0098  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4347                           
  4348                           ;asic.c: 330: x = x & m[4-n];
  4349  0099  0364               	decf	AsicPreCalc@n^(0+128),w
  4350  009A  3AFF               	xorlw	255
  4351  009B  00A2               	movwf	??_AsicPreCalc^(0+128)
  4352  009C  3001               	movlw	1
  4353  009D                     u7285:	
  4354  009D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4355  009E  3EFF               	addlw	-1
  4356  009F  1D03               	skipz
  4357  00A0  289D               	goto	u7285
  4358  00A1  3522               	lslf	??_AsicPreCalc^(0+128),w
  4359  00A2  3E10               	addlw	16
  4360  00A3  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4361  00A4  0086               	movwf	6
  4362  00A5  0187               	clrf	7
  4363  00A6  0860               	movf	AsicPreCalc@x^(0+128),w
  4364  00A7  0501               	andwf	1,w
  4365  00A8  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4366  00A9  3141               	addfsr 1,1
  4367  00AA  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4368  00AB  0501               	andwf	1,w
  4369  00AC  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4370  00AD  3141               	addfsr 1,1
  4371  00AE  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4372  00AF  0501               	andwf	1,w
  4373  00B0  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4374  00B1  3141               	addfsr 1,1
  4375  00B2  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4376  00B3  0501               	andwf	1,w
  4377  00B4  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4378  00B5  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4379  00B6  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4380  00B7  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4381  00B8  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4382  00B9  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4383  00BA  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4384  00BB  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4385  00BC  00E0               	movwf	AsicPreCalc@x^(0+128)
  4386                           
  4387                           ;asic.c: 331: x = m[6-n] ^ x;
  4388  00BD  0364               	decf	AsicPreCalc@n^(0+128),w
  4389  00BE  3AFF               	xorlw	255
  4390  00BF  00A2               	movwf	??_AsicPreCalc^(0+128)
  4391  00C0  3001               	movlw	1
  4392  00C1                     u7295:	
  4393  00C1  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4394  00C2  3EFF               	addlw	-1
  4395  00C3  1D03               	skipz
  4396  00C4  28C1               	goto	u7295
  4397  00C5  3522               	lslf	??_AsicPreCalc^(0+128),w
  4398  00C6  3E18               	addlw	24
  4399  00C7  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4400  00C8  0086               	movwf	6
  4401  00C9  0187               	clrf	7
  4402  00CA  0860               	movf	AsicPreCalc@x^(0+128),w
  4403  00CB  0601               	xorwf	1,w
  4404  00CC  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4405  00CD  3141               	addfsr 1,1
  4406  00CE  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4407  00CF  0601               	xorwf	1,w
  4408  00D0  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4409  00D1  3141               	addfsr 1,1
  4410  00D2  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4411  00D3  0601               	xorwf	1,w
  4412  00D4  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4413  00D5  3141               	addfsr 1,1
  4414  00D6  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4415  00D7  0601               	xorwf	1,w
  4416  00D8  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4417  00D9  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4418  00DA  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4419  00DB  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4420  00DC  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4421  00DD  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4422  00DE  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4423  00DF  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4424  00E0  00E0               	movwf	AsicPreCalc@x^(0+128)
  4425                           
  4426                           ;asic.c: 332: x += K[n];
  4427  00E1  0864               	movf	AsicPreCalc@n^(0+128),w
  4428  00E2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4429  00E3  3001               	movlw	1
  4430  00E4                     u7305:	
  4431  00E4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4432  00E5  3EFF               	addlw	-1
  4433  00E6  1D03               	skipz
  4434  00E7  28E4               	goto	u7305
  4435  00E8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4436  00E9  3EAC               	addlw	AsicPreCalc@K& (0+255)
  4437  00EA  0086               	movwf	6
  4438  00EB  0187               	clrf	7
  4439  00EC  3F40               	moviw [0]fsr1
  4440  00ED  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4441  00EE  3F41               	moviw [1]fsr1
  4442  00EF  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4443  00F0  3F42               	moviw [2]fsr1
  4444  00F1  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4445  00F2  3F43               	moviw [3]fsr1
  4446  00F3  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4447                           
  4448                           ;asic.c: 333: x += work->Merkle[n];
  4449  00F4  0864               	movf	AsicPreCalc@n^(0+128),w
  4450  00F5  00A2               	movwf	??_AsicPreCalc^(0+128)
  4451  00F6  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4452  00F7  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4453  00F8  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4454  00F9  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4455  00FA  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4456  00FB  0822               	movf	??_AsicPreCalc^(0+128),w
  4457  00FC  3E21               	addlw	33
  4458  00FD  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4459  00FE  3000               	movlw	0
  4460  00FF  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4461  0100  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4462  0101  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4463  0102  0720               	addwf	AsicPreCalc@work^(0+128),w
  4464  0103  0086               	movwf	6
  4465  0104  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4466  0105  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4467  0106  0087               	movwf	7
  4468  0107  3F40               	moviw [0]fsr1
  4469  0108  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4470  0109  3F41               	moviw [1]fsr1
  4471  010A  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4472  010B  3F42               	moviw [2]fsr1
  4473  010C  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4474  010D  3F43               	moviw [3]fsr1
  4475  010E  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4476                           
  4477                           ;asic.c: 334: x += m[7-n];
  4478  010F  0364               	decf	AsicPreCalc@n^(0+128),w
  4479  0110  3AFF               	xorlw	255
  4480  0111  00A2               	movwf	??_AsicPreCalc^(0+128)
  4481  0112  3001               	movlw	1
  4482  0113                     u7315:	
  4483  0113  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4484  0114  3EFF               	addlw	-1
  4485  0115  1D03               	skipz
  4486  0116  2913               	goto	u7315
  4487  0117  3522               	lslf	??_AsicPreCalc^(0+128),w
  4488  0118  3E1C               	addlw	28
  4489  0119  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4490  011A  0086               	movwf	6
  4491  011B  0187               	clrf	7
  4492  011C  3F40               	moviw [0]fsr1
  4493  011D  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4494  011E  3F41               	moviw [1]fsr1
  4495  011F  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4496  0120  3F42               	moviw [2]fsr1
  4497  0121  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4498  0122  3F43               	moviw [3]fsr1
  4499  0123  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4500                           
  4501                           ;asic.c: 335: y = rotate(m[4-n], 26);
  4502  0124  0364               	decf	AsicPreCalc@n^(0+128),w
  4503  0125  3AFF               	xorlw	255
  4504  0126  00A2               	movwf	??_AsicPreCalc^(0+128)
  4505  0127  3001               	movlw	1
  4506  0128                     u7325:	
  4507  0128  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4508  0129  3EFF               	addlw	-1
  4509  012A  1D03               	skipz
  4510  012B  2928               	goto	u7325
  4511  012C  3522               	lslf	??_AsicPreCalc^(0+128),w
  4512  012D  3E10               	addlw	16
  4513  012E  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4514  012F  0086               	movwf	6
  4515  0130  0187               	clrf	7
  4516  0131  3F40               	moviw [0]fsr1
  4517  0132  0020               	movlb	0	; select bank0
  4518  0133  00D8               	movwf	?_rotate
  4519  0134  3F41               	moviw [1]fsr1
  4520  0135  00D9               	movwf	?_rotate+1
  4521  0136  3F42               	moviw [2]fsr1
  4522  0137  00DA               	movwf	?_rotate+2
  4523  0138  3F43               	moviw [3]fsr1
  4524  0139  00DB               	movwf	?_rotate+3
  4525  013A  301A               	movlw	26
  4526  013B  0021               	movlb	1	; select bank1
  4527  013C  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4528  013D  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4529  013E  0020               	movlb	0	; select bank0
  4530  013F  00DC               	movwf	?_rotate+4
  4531  0140  319E  267D  3180   	fcall	_rotate
  4532  0143  0020               	movlb	0	; select bank0
  4533  0144  085B               	movf	?_rotate+3,w
  4534  0145  0021               	movlb	1	; select bank1
  4535  0146  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4536  0147  0020               	movlb	0	; select bank0
  4537  0148  085A               	movf	?_rotate+2,w
  4538  0149  0021               	movlb	1	; select bank1
  4539  014A  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4540  014B  0020               	movlb	0	; select bank0
  4541  014C  0859               	movf	?_rotate+1,w
  4542  014D  0021               	movlb	1	; select bank1
  4543  014E  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4544  014F  0020               	movlb	0	; select bank0
  4545  0150  0858               	movf	?_rotate,w
  4546  0151  0021               	movlb	1	; select bank1
  4547  0152  00DC               	movwf	AsicPreCalc@y^(0+128)
  4548                           
  4549                           ;asic.c: 336: z = rotate(m[4-n], 21);
  4550  0153  0364               	decf	AsicPreCalc@n^(0+128),w
  4551  0154  3AFF               	xorlw	255
  4552  0155  00A2               	movwf	??_AsicPreCalc^(0+128)
  4553  0156  3001               	movlw	1
  4554  0157                     u7335:	
  4555  0157  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4556  0158  3EFF               	addlw	-1
  4557  0159  1D03               	skipz
  4558  015A  2957               	goto	u7335
  4559  015B  3522               	lslf	??_AsicPreCalc^(0+128),w
  4560  015C  3E10               	addlw	16
  4561  015D  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4562  015E  0086               	movwf	6
  4563  015F  0187               	clrf	7
  4564  0160  3F40               	moviw [0]fsr1
  4565  0161  0020               	movlb	0	; select bank0
  4566  0162  00D8               	movwf	?_rotate
  4567  0163  3F41               	moviw [1]fsr1
  4568  0164  00D9               	movwf	?_rotate+1
  4569  0165  3F42               	moviw [2]fsr1
  4570  0166  00DA               	movwf	?_rotate+2
  4571  0167  3F43               	moviw [3]fsr1
  4572  0168  00DB               	movwf	?_rotate+3
  4573  0169  3015               	movlw	21
  4574  016A  0021               	movlb	1	; select bank1
  4575  016B  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4576  016C  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4577  016D  0020               	movlb	0	; select bank0
  4578  016E  00DC               	movwf	?_rotate+4
  4579  016F  319E  267D  3180   	fcall	_rotate
  4580  0172  0020               	movlb	0	; select bank0
  4581  0173  085B               	movf	?_rotate+3,w
  4582  0174  0021               	movlb	1	; select bank1
  4583  0175  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4584  0176  0020               	movlb	0	; select bank0
  4585  0177  085A               	movf	?_rotate+2,w
  4586  0178  0021               	movlb	1	; select bank1
  4587  0179  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4588  017A  0020               	movlb	0	; select bank0
  4589  017B  0859               	movf	?_rotate+1,w
  4590  017C  0021               	movlb	1	; select bank1
  4591  017D  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4592  017E  0020               	movlb	0	; select bank0
  4593  017F  0858               	movf	?_rotate,w
  4594  0180  0021               	movlb	1	; select bank1
  4595  0181  00D8               	movwf	AsicPreCalc@z^(0+128)
  4596                           
  4597                           ;asic.c: 337: z = y^z;
  4598  0182  085C               	movf	AsicPreCalc@y^(0+128),w
  4599  0183  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4600  0184  00A2               	movwf	??_AsicPreCalc^(0+128)
  4601  0185  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4602  0186  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4603  0187  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4604  0188  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4605  0189  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4606  018A  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4607  018B  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4608  018C  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4609  018D  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4610  018E  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4611  018F  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4612  0190  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4613  0191  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4614  0192  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4615  0193  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4616  0194  0822               	movf	??_AsicPreCalc^(0+128),w
  4617  0195  00D8               	movwf	AsicPreCalc@z^(0+128)
  4618                           
  4619                           ;asic.c: 338: y = rotate(m[4-n], 7);
  4620  0196  0364               	decf	AsicPreCalc@n^(0+128),w
  4621  0197  3AFF               	xorlw	255
  4622  0198  00A2               	movwf	??_AsicPreCalc^(0+128)
  4623  0199  3001               	movlw	1
  4624  019A                     u7345:	
  4625  019A  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4626  019B  3EFF               	addlw	-1
  4627  019C  1D03               	skipz
  4628  019D  299A               	goto	u7345
  4629  019E  3522               	lslf	??_AsicPreCalc^(0+128),w
  4630  019F  3E10               	addlw	16
  4631  01A0  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4632  01A1  0086               	movwf	6
  4633  01A2  0187               	clrf	7
  4634  01A3  3F40               	moviw [0]fsr1
  4635  01A4  0020               	movlb	0	; select bank0
  4636  01A5  00D8               	movwf	?_rotate
  4637  01A6  3F41               	moviw [1]fsr1
  4638  01A7  00D9               	movwf	?_rotate+1
  4639  01A8  3F42               	moviw [2]fsr1
  4640  01A9  00DA               	movwf	?_rotate+2
  4641  01AA  3F43               	moviw [3]fsr1
  4642  01AB  00DB               	movwf	?_rotate+3
  4643  01AC  3007               	movlw	7
  4644  01AD  0021               	movlb	1	; select bank1
  4645  01AE  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4646  01AF  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4647  01B0  0020               	movlb	0	; select bank0
  4648  01B1  00DC               	movwf	?_rotate+4
  4649  01B2  319E  267D  3180   	fcall	_rotate
  4650  01B5  0020               	movlb	0	; select bank0
  4651  01B6  085B               	movf	?_rotate+3,w
  4652  01B7  0021               	movlb	1	; select bank1
  4653  01B8  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4654  01B9  0020               	movlb	0	; select bank0
  4655  01BA  085A               	movf	?_rotate+2,w
  4656  01BB  0021               	movlb	1	; select bank1
  4657  01BC  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4658  01BD  0020               	movlb	0	; select bank0
  4659  01BE  0859               	movf	?_rotate+1,w
  4660  01BF  0021               	movlb	1	; select bank1
  4661  01C0  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4662  01C1  0020               	movlb	0	; select bank0
  4663  01C2  0858               	movf	?_rotate,w
  4664  01C3  0021               	movlb	1	; select bank1
  4665  01C4  00DC               	movwf	AsicPreCalc@y^(0+128)
  4666                           
  4667                           ;asic.c: 339: z = y^z;
  4668  01C5  085C               	movf	AsicPreCalc@y^(0+128),w
  4669  01C6  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4670  01C7  00A2               	movwf	??_AsicPreCalc^(0+128)
  4671  01C8  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4672  01C9  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4673  01CA  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4674  01CB  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4675  01CC  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4676  01CD  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4677  01CE  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4678  01CF  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4679  01D0  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4680  01D1  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4681  01D2  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4682  01D3  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4683  01D4  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4684  01D5  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4685  01D6  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4686  01D7  0822               	movf	??_AsicPreCalc^(0+128),w
  4687  01D8  00D8               	movwf	AsicPreCalc@z^(0+128)
  4688                           
  4689                           ;asic.c: 340: m[7-n] = z+x;
  4690  01D9  0858               	movf	AsicPreCalc@z^(0+128),w
  4691  01DA  0760               	addwf	AsicPreCalc@x^(0+128),w
  4692  01DB  00A2               	movwf	??_AsicPreCalc^(0+128)
  4693  01DC  0859               	movf	(AsicPreCalc@z+1)^(0+128),w
  4694  01DD  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  4695  01DE  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4696  01DF  085A               	movf	(AsicPreCalc@z+2)^(0+128),w
  4697  01E0  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  4698  01E1  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4699  01E2  085B               	movf	(AsicPreCalc@z+3)^(0+128),w
  4700  01E3  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  4701  01E4  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4702  01E5  0364               	decf	AsicPreCalc@n^(0+128),w
  4703  01E6  3AFF               	xorlw	255
  4704  01E7  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4705  01E8  3001               	movlw	1
  4706  01E9                     u7355:	
  4707  01E9  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  4708  01EA  3EFF               	addlw	-1
  4709  01EB  1D03               	skipz
  4710  01EC  29E9               	goto	u7355
  4711  01ED  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  4712  01EE  3E1C               	addlw	28
  4713  01EF  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4714  01F0  0086               	movwf	6
  4715  01F1  0187               	clrf	7
  4716  01F2  0822               	movf	??_AsicPreCalc^(0+128),w
  4717  01F3  3FC0               	movwi [0]fsr1
  4718  01F4  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4719  01F5  3FC1               	movwi [1]fsr1
  4720  01F6  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4721  01F7  3FC2               	movwi [2]fsr1
  4722  01F8  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4723  01F9  3FC3               	movwi [3]fsr1
  4724                           
  4725                           ;asic.c: 341: m[3-n] = m[3-n] + m[7-n];
  4726  01FA  0364               	decf	AsicPreCalc@n^(0+128),w
  4727  01FB  3AFF               	xorlw	255
  4728  01FC  00A2               	movwf	??_AsicPreCalc^(0+128)
  4729  01FD  3001               	movlw	1
  4730  01FE                     u7365:	
  4731  01FE  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4732  01FF  3EFF               	addlw	-1
  4733  0200  1D03               	skipz
  4734  0201  29FE               	goto	u7365
  4735  0202  3522               	lslf	??_AsicPreCalc^(0+128),w
  4736  0203  3E1C               	addlw	28
  4737  0204  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4738  0205  0086               	movwf	6
  4739  0206  0187               	clrf	7
  4740  0207  3F40               	moviw [0]fsr1
  4741  0208  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4742  0209  3F41               	moviw [1]fsr1
  4743  020A  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4744  020B  3F42               	moviw [2]fsr1
  4745  020C  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4746  020D  3F43               	moviw [3]fsr1
  4747  020E  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4748  020F  0364               	decf	AsicPreCalc@n^(0+128),w
  4749  0210  3AFF               	xorlw	255
  4750  0211  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4751  0212  3001               	movlw	1
  4752  0213                     u7375:	
  4753  0213  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4754  0214  3EFF               	addlw	-1
  4755  0215  1D03               	skipz
  4756  0216  2A13               	goto	u7375
  4757  0217  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4758  0218  3E0C               	addlw	12
  4759  0219  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4760  021A  0086               	movwf	6
  4761  021B  0187               	clrf	7
  4762  021C  3F40               	moviw [0]fsr1
  4763  021D  07A3               	addwf	(??_AsicPreCalc+1)^(0+128),f
  4764  021E  3F41               	moviw [1]fsr1
  4765  021F  3DA4               	addwfc	((??_AsicPreCalc+1)^(0+128)+1),f
  4766  0220  3F42               	moviw [2]fsr1
  4767  0221  3DA5               	addwfc	((??_AsicPreCalc+1)^(0+128)+2),f
  4768  0222  3F43               	moviw [3]fsr1
  4769  0223  3DA6               	addwfc	((??_AsicPreCalc+1)^(0+128)+3),f
  4770  0224  0364               	decf	AsicPreCalc@n^(0+128),w
  4771  0225  3AFF               	xorlw	255
  4772  0226  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4773  0227  3001               	movlw	1
  4774  0228                     u7385:	
  4775  0228  35A8               	lslf	(??_AsicPreCalc+6)^(0+128),f
  4776  0229  3EFF               	addlw	-1
  4777  022A  1D03               	skipz
  4778  022B  2A28               	goto	u7385
  4779  022C  3528               	lslf	(??_AsicPreCalc+6)^(0+128),w
  4780  022D  3E0C               	addlw	12
  4781  022E  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4782  022F  0086               	movwf	6
  4783  0230  0187               	clrf	7
  4784  0231  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4785  0232  3FC0               	movwi [0]fsr1
  4786  0233  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4787  0234  3FC1               	movwi [1]fsr1
  4788  0235  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4789  0236  3FC2               	movwi [2]fsr1
  4790  0237  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4791  0238  3FC3               	movwi [3]fsr1
  4792                           
  4793                           ;asic.c: 342: x = rotate(m[((0-n)&7)], 30);
  4794  0239  0364               	decf	AsicPreCalc@n^(0+128),w
  4795  023A  3AFF               	xorlw	255
  4796  023B  3907               	andlw	7
  4797  023C  00A2               	movwf	??_AsicPreCalc^(0+128)
  4798  023D  3001               	movlw	1
  4799  023E                     u7395:	
  4800  023E  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4801  023F  3EFF               	addlw	-1
  4802  0240  1D03               	skipz
  4803  0241  2A3E               	goto	u7395
  4804  0242  3522               	lslf	??_AsicPreCalc^(0+128),w
  4805  0243  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4806  0244  0086               	movwf	6
  4807  0245  0187               	clrf	7
  4808  0246  3F40               	moviw [0]fsr1
  4809  0247  0020               	movlb	0	; select bank0
  4810  0248  00D8               	movwf	?_rotate
  4811  0249  3F41               	moviw [1]fsr1
  4812  024A  00D9               	movwf	?_rotate+1
  4813  024B  3F42               	moviw [2]fsr1
  4814  024C  00DA               	movwf	?_rotate+2
  4815  024D  3F43               	moviw [3]fsr1
  4816  024E  00DB               	movwf	?_rotate+3
  4817  024F  301E               	movlw	30
  4818  0250  0021               	movlb	1	; select bank1
  4819  0251  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4820  0252  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4821  0253  0020               	movlb	0	; select bank0
  4822  0254  00DC               	movwf	?_rotate+4
  4823  0255  319E  267D  3180   	fcall	_rotate
  4824  0258  0020               	movlb	0	; select bank0
  4825  0259  085B               	movf	?_rotate+3,w
  4826  025A  0021               	movlb	1	; select bank1
  4827  025B  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4828  025C  0020               	movlb	0	; select bank0
  4829  025D  085A               	movf	?_rotate+2,w
  4830  025E  0021               	movlb	1	; select bank1
  4831  025F  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4832  0260  0020               	movlb	0	; select bank0
  4833  0261  0859               	movf	?_rotate+1,w
  4834  0262  0021               	movlb	1	; select bank1
  4835  0263  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4836  0264  0020               	movlb	0	; select bank0
  4837  0265  0858               	movf	?_rotate,w
  4838  0266  0021               	movlb	1	; select bank1
  4839  0267  00E0               	movwf	AsicPreCalc@x^(0+128)
  4840                           
  4841                           ;asic.c: 343: y = rotate(m[((0-n)&7)], 19);
  4842  0268  0364               	decf	AsicPreCalc@n^(0+128),w
  4843  0269  3AFF               	xorlw	255
  4844  026A  3907               	andlw	7
  4845  026B  00A2               	movwf	??_AsicPreCalc^(0+128)
  4846  026C  3001               	movlw	1
  4847  026D                     u7405:	
  4848  026D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4849  026E  3EFF               	addlw	-1
  4850  026F  1D03               	skipz
  4851  0270  2A6D               	goto	u7405
  4852  0271  3522               	lslf	??_AsicPreCalc^(0+128),w
  4853  0272  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4854  0273  0086               	movwf	6
  4855  0274  0187               	clrf	7
  4856  0275  3F40               	moviw [0]fsr1
  4857  0276  0020               	movlb	0	; select bank0
  4858  0277  00D8               	movwf	?_rotate
  4859  0278  3F41               	moviw [1]fsr1
  4860  0279  00D9               	movwf	?_rotate+1
  4861  027A  3F42               	moviw [2]fsr1
  4862  027B  00DA               	movwf	?_rotate+2
  4863  027C  3F43               	moviw [3]fsr1
  4864  027D  00DB               	movwf	?_rotate+3
  4865  027E  3013               	movlw	19
  4866  027F  0021               	movlb	1	; select bank1
  4867  0280  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4868  0281  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4869  0282  0020               	movlb	0	; select bank0
  4870  0283  00DC               	movwf	?_rotate+4
  4871  0284  319E  267D  3180   	fcall	_rotate
  4872  0287  0020               	movlb	0	; select bank0
  4873  0288  085B               	movf	?_rotate+3,w
  4874  0289  0021               	movlb	1	; select bank1
  4875  028A  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4876  028B  0020               	movlb	0	; select bank0
  4877  028C  085A               	movf	?_rotate+2,w
  4878  028D  0021               	movlb	1	; select bank1
  4879  028E  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4880  028F  0020               	movlb	0	; select bank0
  4881  0290  0859               	movf	?_rotate+1,w
  4882  0291  0021               	movlb	1	; select bank1
  4883  0292  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4884  0293  0020               	movlb	0	; select bank0
  4885  0294  0858               	movf	?_rotate,w
  4886  0295  0021               	movlb	1	; select bank1
  4887  0296  00DC               	movwf	AsicPreCalc@y^(0+128)
  4888                           
  4889                           ;asic.c: 344: y = y^x;
  4890  0297  085C               	movf	AsicPreCalc@y^(0+128),w
  4891  0298  0660               	xorwf	AsicPreCalc@x^(0+128),w
  4892  0299  00A2               	movwf	??_AsicPreCalc^(0+128)
  4893  029A  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4894  029B  0661               	xorwf	(AsicPreCalc@x+1)^(0+128),w
  4895  029C  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4896  029D  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4897  029E  0662               	xorwf	(AsicPreCalc@x+2)^(0+128),w
  4898  029F  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4899  02A0  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4900  02A1  0663               	xorwf	(AsicPreCalc@x+3)^(0+128),w
  4901  02A2  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4902  02A3  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4903  02A4  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4904  02A5  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4905  02A6  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4906  02A7  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4907  02A8  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4908  02A9  0822               	movf	??_AsicPreCalc^(0+128),w
  4909  02AA  00DC               	movwf	AsicPreCalc@y^(0+128)
  4910                           
  4911                           ;asic.c: 345: x = rotate(m[((0-n)&7)], 10);
  4912  02AB  0364               	decf	AsicPreCalc@n^(0+128),w
  4913  02AC  3AFF               	xorlw	255
  4914  02AD  3907               	andlw	7
  4915  02AE  00A2               	movwf	??_AsicPreCalc^(0+128)
  4916  02AF  3001               	movlw	1
  4917  02B0                     u7415:	
  4918  02B0  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4919  02B1  3EFF               	addlw	-1
  4920  02B2  1D03               	skipz
  4921  02B3  2AB0               	goto	u7415
  4922  02B4  3522               	lslf	??_AsicPreCalc^(0+128),w
  4923  02B5  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4924  02B6  0086               	movwf	6
  4925  02B7  0187               	clrf	7
  4926  02B8  3F40               	moviw [0]fsr1
  4927  02B9  0020               	movlb	0	; select bank0
  4928  02BA  00D8               	movwf	?_rotate
  4929  02BB  3F41               	moviw [1]fsr1
  4930  02BC  00D9               	movwf	?_rotate+1
  4931  02BD  3F42               	moviw [2]fsr1
  4932  02BE  00DA               	movwf	?_rotate+2
  4933  02BF  3F43               	moviw [3]fsr1
  4934  02C0  00DB               	movwf	?_rotate+3
  4935  02C1  300A               	movlw	10
  4936  02C2  0021               	movlb	1	; select bank1
  4937  02C3  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4938  02C4  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4939  02C5  0020               	movlb	0	; select bank0
  4940  02C6  00DC               	movwf	?_rotate+4
  4941  02C7  319E  267D  3180   	fcall	_rotate
  4942  02CA  0020               	movlb	0	; select bank0
  4943  02CB  085B               	movf	?_rotate+3,w
  4944  02CC  0021               	movlb	1	; select bank1
  4945  02CD  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4946  02CE  0020               	movlb	0	; select bank0
  4947  02CF  085A               	movf	?_rotate+2,w
  4948  02D0  0021               	movlb	1	; select bank1
  4949  02D1  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4950  02D2  0020               	movlb	0	; select bank0
  4951  02D3  0859               	movf	?_rotate+1,w
  4952  02D4  0021               	movlb	1	; select bank1
  4953  02D5  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4954  02D6  0020               	movlb	0	; select bank0
  4955  02D7  0858               	movf	?_rotate,w
  4956  02D8  0021               	movlb	1	; select bank1
  4957  02D9  00E0               	movwf	AsicPreCalc@x^(0+128)
  4958                           
  4959                           ;asic.c: 346: y = x^y;
  4960  02DA  0860               	movf	AsicPreCalc@x^(0+128),w
  4961  02DB  065C               	xorwf	AsicPreCalc@y^(0+128),w
  4962  02DC  00A2               	movwf	??_AsicPreCalc^(0+128)
  4963  02DD  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4964  02DE  065D               	xorwf	(AsicPreCalc@y+1)^(0+128),w
  4965  02DF  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4966  02E0  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4967  02E1  065E               	xorwf	(AsicPreCalc@y+2)^(0+128),w
  4968  02E2  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4969  02E3  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4970  02E4  065F               	xorwf	(AsicPreCalc@y+3)^(0+128),w
  4971  02E5  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4972  02E6  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4973  02E7  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4974  02E8  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4975  02E9  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4976  02EA  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4977  02EB  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4978  02EC  0822               	movf	??_AsicPreCalc^(0+128),w
  4979  02ED  00DC               	movwf	AsicPreCalc@y^(0+128)
  4980                           
  4981                           ;asic.c: 347: x = m[((0-n)&7)] | m[((1-n)&7)];
  4982  02EE  0364               	decf	AsicPreCalc@n^(0+128),w
  4983  02EF  3AFF               	xorlw	255
  4984  02F0  3E01               	addlw	1
  4985  02F1  3907               	andlw	7
  4986  02F2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4987  02F3  3001               	movlw	1
  4988  02F4                     u7425:	
  4989  02F4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4990  02F5  3EFF               	addlw	-1
  4991  02F6  1D03               	skipz
  4992  02F7  2AF4               	goto	u7425
  4993  02F8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4994  02F9  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4995  02FA  0086               	movwf	6
  4996  02FB  0187               	clrf	7
  4997  02FC  3F40               	moviw [0]fsr1
  4998  02FD  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4999  02FE  3F41               	moviw [1]fsr1
  5000  02FF  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5001  0300  3F42               	moviw [2]fsr1
  5002  0301  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5003  0302  3F43               	moviw [3]fsr1
  5004  0303  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5005  0304  0364               	decf	AsicPreCalc@n^(0+128),w
  5006  0305  3AFF               	xorlw	255
  5007  0306  3907               	andlw	7
  5008  0307  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5009  0308  3001               	movlw	1
  5010  0309                     u7435:	
  5011  0309  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5012  030A  3EFF               	addlw	-1
  5013  030B  1D03               	skipz
  5014  030C  2B09               	goto	u7435
  5015  030D  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5016  030E  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5017  030F  0086               	movwf	6
  5018  0310  0187               	clrf	7
  5019  0311  3F40               	moviw [0]fsr1
  5020  0312  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  5021  0313  3F41               	moviw [1]fsr1
  5022  0314  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5023  0315  3F42               	moviw [2]fsr1
  5024  0316  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5025  0317  3F43               	moviw [3]fsr1
  5026  0318  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5027  0319  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5028  031A  0428               	iorwf	(??_AsicPreCalc+6)^(0+128),w
  5029  031B  00E0               	movwf	AsicPreCalc@x^(0+128)
  5030  031C  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5031  031D  0429               	iorwf	(??_AsicPreCalc+7)^(0+128),w
  5032  031E  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  5033  031F  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5034  0320  042A               	iorwf	(??_AsicPreCalc+8)^(0+128),w
  5035  0321  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  5036  0322  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5037  0323  042B               	iorwf	(??_AsicPreCalc+9)^(0+128),w
  5038  0324  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  5039                           
  5040                           ;asic.c: 348: x = m[((2-n)&7)] & x;
  5041  0325  0364               	decf	AsicPreCalc@n^(0+128),w
  5042  0326  3AFF               	xorlw	255
  5043  0327  3E02               	addlw	2
  5044  0328  3907               	andlw	7
  5045  0329  00A2               	movwf	??_AsicPreCalc^(0+128)
  5046  032A  3001               	movlw	1
  5047  032B                     u7445:	
  5048  032B  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5049  032C  3EFF               	addlw	-1
  5050  032D  1D03               	skipz
  5051  032E  2B2B               	goto	u7445
  5052  032F  3522               	lslf	??_AsicPreCalc^(0+128),w
  5053  0330  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5054  0331  0086               	movwf	6
  5055  0332  0187               	clrf	7
  5056  0333  0860               	movf	AsicPreCalc@x^(0+128),w
  5057  0334  0501               	andwf	1,w
  5058  0335  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5059  0336  3141               	addfsr 1,1
  5060  0337  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  5061  0338  0501               	andwf	1,w
  5062  0339  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5063  033A  3141               	addfsr 1,1
  5064  033B  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  5065  033C  0501               	andwf	1,w
  5066  033D  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5067  033E  3141               	addfsr 1,1
  5068  033F  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  5069  0340  0501               	andwf	1,w
  5070  0341  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5071  0342  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5072  0343  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  5073  0344  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5074  0345  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  5075  0346  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5076  0347  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  5077  0348  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5078  0349  00E0               	movwf	AsicPreCalc@x^(0+128)
  5079                           
  5080                           ;asic.c: 349: z = m[((0-n)&7)] & m[((1-n)&7)];
  5081  034A  0364               	decf	AsicPreCalc@n^(0+128),w
  5082  034B  3AFF               	xorlw	255
  5083  034C  3E01               	addlw	1
  5084  034D  3907               	andlw	7
  5085  034E  00A2               	movwf	??_AsicPreCalc^(0+128)
  5086  034F  3001               	movlw	1
  5087  0350                     u7455:	
  5088  0350  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5089  0351  3EFF               	addlw	-1
  5090  0352  1D03               	skipz
  5091  0353  2B50               	goto	u7455
  5092  0354  3522               	lslf	??_AsicPreCalc^(0+128),w
  5093  0355  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5094  0356  0086               	movwf	6
  5095  0357  0187               	clrf	7
  5096  0358  3F40               	moviw [0]fsr1
  5097  0359  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5098  035A  3F41               	moviw [1]fsr1
  5099  035B  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5100  035C  3F42               	moviw [2]fsr1
  5101  035D  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5102  035E  3F43               	moviw [3]fsr1
  5103  035F  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5104  0360  0364               	decf	AsicPreCalc@n^(0+128),w
  5105  0361  3AFF               	xorlw	255
  5106  0362  3907               	andlw	7
  5107  0363  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5108  0364  3001               	movlw	1
  5109  0365                     u7465:	
  5110  0365  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5111  0366  3EFF               	addlw	-1
  5112  0367  1D03               	skipz
  5113  0368  2B65               	goto	u7465
  5114  0369  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5115  036A  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5116  036B  0086               	movwf	6
  5117  036C  0187               	clrf	7
  5118  036D  3F40               	moviw [0]fsr1
  5119  036E  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  5120  036F  3F41               	moviw [1]fsr1
  5121  0370  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5122  0371  3F42               	moviw [2]fsr1
  5123  0372  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5124  0373  3F43               	moviw [3]fsr1
  5125  0374  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5126  0375  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5127  0376  0528               	andwf	(??_AsicPreCalc+6)^(0+128),w
  5128  0377  00D8               	movwf	AsicPreCalc@z^(0+128)
  5129  0378  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5130  0379  0529               	andwf	(??_AsicPreCalc+7)^(0+128),w
  5131  037A  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  5132  037B  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5133  037C  052A               	andwf	(??_AsicPreCalc+8)^(0+128),w
  5134  037D  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  5135  037E  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5136  037F  052B               	andwf	(??_AsicPreCalc+9)^(0+128),w
  5137  0380  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  5138                           
  5139                           ;asic.c: 350: x = x | z;
  5140  0381  0860               	movf	AsicPreCalc@x^(0+128),w
  5141  0382  0458               	iorwf	AsicPreCalc@z^(0+128),w
  5142  0383  00A2               	movwf	??_AsicPreCalc^(0+128)
  5143  0384  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  5144  0385  0459               	iorwf	(AsicPreCalc@z+1)^(0+128),w
  5145  0386  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  5146  0387  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  5147  0388  045A               	iorwf	(AsicPreCalc@z+2)^(0+128),w
  5148  0389  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5149  038A  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  5150  038B  045B               	iorwf	(AsicPreCalc@z+3)^(0+128),w
  5151  038C  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5152  038D  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5153  038E  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  5154  038F  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5155  0390  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  5156  0391  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5157  0392  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  5158  0393  0822               	movf	??_AsicPreCalc^(0+128),w
  5159  0394  00E0               	movwf	AsicPreCalc@x^(0+128)
  5160                           
  5161                           ;asic.c: 351: m[7-n] += y + x;
  5162  0395  085C               	movf	AsicPreCalc@y^(0+128),w
  5163  0396  0760               	addwf	AsicPreCalc@x^(0+128),w
  5164  0397  00A2               	movwf	??_AsicPreCalc^(0+128)
  5165  0398  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  5166  0399  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  5167  039A  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  5168  039B  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  5169  039C  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  5170  039D  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5171  039E  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  5172  039F  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  5173  03A0  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5174  03A1  0364               	decf	AsicPreCalc@n^(0+128),w
  5175  03A2  3AFF               	xorlw	255
  5176  03A3  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  5177  03A4  3001               	movlw	1
  5178  03A5                     u7475:	
  5179  03A5  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  5180  03A6  3EFF               	addlw	-1
  5181  03A7  1D03               	skipz
  5182  03A8  2BA5               	goto	u7475
  5183  03A9  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  5184  03AA  3E1C               	addlw	28
  5185  03AB  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5186  03AC  0086               	movwf	6
  5187  03AD  0187               	clrf	7
  5188  03AE  0822               	movf	??_AsicPreCalc^(0+128),w
  5189  03AF  0781               	addwf	1,f
  5190  03B0  3141               	addfsr 1,1
  5191  03B1  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5192  03B2  3D81               	addwfc	1,f
  5193  03B3  3141               	addfsr 1,1
  5194  03B4  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5195  03B5  3D81               	addwfc	1,f
  5196  03B6  3141               	addfsr 1,1
  5197  03B7  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5198  03B8  3D81               	addwfc	1,f
  5199                           
  5200                           ;asic.c: 353: PrecalcHashes[2-n] = m[7-n];
  5201  03B9  0364               	decf	AsicPreCalc@n^(0+128),w
  5202  03BA  3AFF               	xorlw	255
  5203  03BB  00A2               	movwf	??_AsicPreCalc^(0+128)
  5204  03BC  3001               	movlw	1
  5205  03BD                     u7485:	
  5206  03BD  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5207  03BE  3EFF               	addlw	-1
  5208  03BF  1D03               	skipz
  5209  03C0  2BBD               	goto	u7485
  5210  03C1  3522               	lslf	??_AsicPreCalc^(0+128),w
  5211  03C2  3E1C               	addlw	28
  5212  03C3  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5213  03C4  0086               	movwf	6
  5214  03C5  0187               	clrf	7
  5215  03C6  3F40               	moviw [0]fsr1
  5216  03C7  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5217  03C8  3F41               	moviw [1]fsr1
  5218  03C9  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5219  03CA  3F42               	moviw [2]fsr1
  5220  03CB  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5221  03CC  3F43               	moviw [3]fsr1
  5222  03CD  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5223  03CE  0364               	decf	AsicPreCalc@n^(0+128),w
  5224  03CF  3AFF               	xorlw	255
  5225  03D0  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5226  03D1  3001               	movlw	1
  5227  03D2                     u7495:	
  5228  03D2  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5229  03D3  3EFF               	addlw	-1
  5230  03D4  1D03               	skipz
  5231  03D5  2BD2               	goto	u7495
  5232  03D6  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5233  03D7  3E08               	addlw	8
  5234  03D8  3EB2               	addlw	_PrecalcHashes& (0+255)
  5235  03D9  0086               	movwf	6
  5236  03DA  3001               	movlw	1	; select bank3/4
  5237  03DB  0087               	movwf	7
  5238  03DC  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5239  03DD  3FC0               	movwi [0]fsr1
  5240  03DE  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5241  03DF  3FC1               	movwi [1]fsr1
  5242  03E0  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5243  03E1  3FC2               	movwi [2]fsr1
  5244  03E2  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5245  03E3  3FC3               	movwi [3]fsr1
  5246                           
  5247                           ;asic.c: 354: PrecalcHashes[5-n] = m[3-n];
  5248  03E4  0364               	decf	AsicPreCalc@n^(0+128),w
  5249  03E5  3AFF               	xorlw	255
  5250  03E6  00A2               	movwf	??_AsicPreCalc^(0+128)
  5251  03E7  3001               	movlw	1
  5252  03E8                     u7505:	
  5253  03E8  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5254  03E9  3EFF               	addlw	-1
  5255  03EA  1D03               	skipz
  5256  03EB  2BE8               	goto	u7505
  5257  03EC  3522               	lslf	??_AsicPreCalc^(0+128),w
  5258  03ED  3E0C               	addlw	12
  5259  03EE  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5260  03EF  0086               	movwf	6
  5261  03F0  0187               	clrf	7
  5262  03F1  3F40               	moviw [0]fsr1
  5263  03F2  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5264  03F3  3F41               	moviw [1]fsr1
  5265  03F4  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5266  03F5  3F42               	moviw [2]fsr1
  5267  03F6  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5268  03F7  3F43               	moviw [3]fsr1
  5269  03F8  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5270  03F9  0364               	decf	AsicPreCalc@n^(0+128),w
  5271  03FA  3AFF               	xorlw	255
  5272  03FB  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5273  03FC  3001               	movlw	1
  5274  03FD                     u7515:	
  5275  03FD  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5276  03FE  3EFF               	addlw	-1
  5277  03FF  1D03               	skipz
  5278  0400  2BFD               	goto	u7515
  5279  0401  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5280  0402  3E14               	addlw	20
  5281  0403  3EB2               	addlw	_PrecalcHashes& (0+255)
  5282  0404  0086               	movwf	6
  5283  0405  3001               	movlw	1	; select bank3/4
  5284  0406  0087               	movwf	7
  5285  0407  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5286  0408  3FC0               	movwi [0]fsr1
  5287  0409  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5288  040A  3FC1               	movwi [1]fsr1
  5289  040B  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5290  040C  3FC2               	movwi [2]fsr1
  5291  040D  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5292  040E  3FC3               	movwi [3]fsr1
  5293  040F  3001               	movlw	1
  5294  0410  00A2               	movwf	??_AsicPreCalc^(0+128)
  5295  0411  0822               	movf	??_AsicPreCalc^(0+128),w
  5296  0412  07E4               	addwf	AsicPreCalc@n^(0+128),f
  5297  0413  285F               	goto	L5
  5298  0414                     __end_of_AsicPreCalc:	
  5299                           
  5300                           	psect	text9
  5301  1E7D                     __ptext9:	
  5302 ;; *************** function _rotate *****************
  5303 ;; Defined at:
  5304 ;;		line 313 in file "asic.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  x               4    8[BANK0 ] unsigned long 
  5307 ;;  y               1   12[BANK0 ] unsigned char 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  4    8[BANK0 ] unsigned long 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5319 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;Total ram usage:       13 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    4
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_AsicPreCalc
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           
  5334                           ;psect for function _rotate
  5335  1E7D                     _rotate:	
  5336                           
  5337                           ;asic.c: 314: return ((x<<y) | (x>>(32-y)));
  5338                           
  5339                           ;incstack = 0
  5340                           ; Regs used in _rotate: [wreg+status,2+status,0]
  5341  1E7D  0020               	movlb	0	; select bank0
  5342  1E7E  0858               	movf	rotate@x,w
  5343  1E7F  00DD               	movwf	??_rotate
  5344  1E80  0859               	movf	rotate@x+1,w
  5345  1E81  00DE               	movwf	??_rotate+1
  5346  1E82  085A               	movf	rotate@x+2,w
  5347  1E83  00DF               	movwf	??_rotate+2
  5348  1E84  085B               	movf	rotate@x+3,w
  5349  1E85  00E0               	movwf	??_rotate+3
  5350  1E86  035C               	decf	rotate@y,w
  5351  1E87  3AFF               	xorlw	255
  5352  1E88  3E20               	addlw	32
  5353  1E89  0A89               	incf	9,f
  5354  1E8A  2E90               	goto	u7190
  5355  1E8B                     u7195:	
  5356  1E8B  1003               	clrc
  5357  1E8C  0CE0               	rrf	??_rotate+3,f
  5358  1E8D  0CDF               	rrf	??_rotate+2,f
  5359  1E8E  0CDE               	rrf	??_rotate+1,f
  5360  1E8F  0CDD               	rrf	??_rotate,f
  5361  1E90                     u7190:	
  5362  1E90  3EFF               	addlw	-1
  5363  1E91  1D03               	skipz
  5364  1E92  2E8B               	goto	u7195
  5365  1E93  0858               	movf	rotate@x,w
  5366  1E94  00E1               	movwf	??_rotate+4
  5367  1E95  0859               	movf	rotate@x+1,w
  5368  1E96  00E2               	movwf	??_rotate+5
  5369  1E97  085A               	movf	rotate@x+2,w
  5370  1E98  00E3               	movwf	??_rotate+6
  5371  1E99  085B               	movf	rotate@x+3,w
  5372  1E9A  00E4               	movwf	??_rotate+7
  5373  1E9B  0A5C               	incf	rotate@y,w
  5374  1E9C  2EA1               	goto	u7200
  5375  1E9D                     u7205:	
  5376  1E9D  35E1               	lslf	??_rotate+4,f
  5377  1E9E  0DE2               	rlf	??_rotate+5,f
  5378  1E9F  0DE3               	rlf	??_rotate+6,f
  5379  1EA0  0DE4               	rlf	??_rotate+7,f
  5380  1EA1                     u7200:	
  5381  1EA1  0B89               	decfsz	9,f
  5382  1EA2  2E9D               	goto	u7205
  5383  1EA3  0861               	movf	??_rotate+4,w
  5384  1EA4  04DD               	iorwf	??_rotate,f
  5385  1EA5  0862               	movf	??_rotate+5,w
  5386  1EA6  04DE               	iorwf	??_rotate+1,f
  5387  1EA7  0863               	movf	??_rotate+6,w
  5388  1EA8  04DF               	iorwf	??_rotate+2,f
  5389  1EA9  0864               	movf	??_rotate+7,w
  5390  1EAA  04E0               	iorwf	??_rotate+3,f
  5391  1EAB  0860               	movf	??_rotate+3,w
  5392  1EAC  00DB               	movwf	?_rotate+3
  5393  1EAD  085F               	movf	??_rotate+2,w
  5394  1EAE  00DA               	movwf	?_rotate+2
  5395  1EAF  085E               	movf	??_rotate+1,w
  5396  1EB0  00D9               	movwf	?_rotate+1
  5397  1EB1  085D               	movf	??_rotate,w
  5398  1EB2  00D8               	movwf	?_rotate
  5399  1EB3  0008               	return
  5400  1EB4                     __end_of_rotate:	
  5401                           
  5402                           	psect	text10
  5403  0953                     __ptext10:	
  5404 ;; *************** function _SendAsicData *****************
  5405 ;; Defined at:
  5406 ;;		line 36 in file "asic.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  work            2   14[BANK0 ] PTR struct _worktask
  5409 ;;		 -> WorkQue(180), 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;		None               void
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5425 ;;Total ram usage:        6 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    5
  5428 ;; This function calls:
  5429 ;;		_Send32
  5430 ;; This function is called by:
  5431 ;;		_AsicPushWork
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function _SendAsicData
  5437  0953                     _SendAsicData:	
  5438                           
  5439                           ;asic.c: 37: GIE = 0;
  5440                           
  5441                           ;incstack = 0
  5442                           ; Regs used in _SendAsicData: [wreg+status,2+status,0+pclath+cstack]
  5443  0953  138B               	bcf	11,7	;volatile
  5444                           
  5445                           ;asic.c: 38: last_bit0 = 0x48; last_bit1 = 0x90;
  5446  0954  3048               	movlw	72
  5447  0955  0020               	movlb	0	; select bank0
  5448  0956  00E0               	movwf	??_SendAsicData
  5449  0957  0860               	movf	??_SendAsicData,w
  5450  0958  0022               	movlb	2	; select bank2
  5451  0959  00C8               	movwf	_last_bit0^(0+256)
  5452  095A  3090               	movlw	144
  5453  095B  0020               	movlb	0	; select bank0
  5454  095C  00E0               	movwf	??_SendAsicData
  5455  095D  0860               	movf	??_SendAsicData,w
  5456  095E  0022               	movlb	2	; select bank2
  5457  095F  00C9               	movwf	_last_bit1^(0+256)
  5458                           
  5459                           ;asic.c: 39: send32_data = (WORD)&ClockCfg; send32_count = 2;
  5460  0960  30DC               	movlw	low _ClockCfg
  5461  0961  00B0               	movwf	_send32_data^(0+256)
  5462  0962  3001               	movlw	high _ClockCfg
  5463  0963  00B1               	movwf	(_send32_data+1)^(0+256)
  5464  0964  3002               	movlw	2
  5465  0965  0020               	movlb	0	; select bank0
  5466  0966  00E0               	movwf	??_SendAsicData
  5467  0967  0860               	movf	??_SendAsicData,w
  5468  0968  0022               	movlb	2	; select bank2
  5469  0969  00CB               	movwf	_send32_count^(0+256)
  5470                           
  5471                           ;asic.c: 40: Send32();
  5472  096A  318B  23E0  3189   	fcall	_Send32
  5473                           
  5474                           ;asic.c: 41: send32_data = (WORD)&work->Merkle; send32_count = 3;
  5475  096D  0020               	movlb	0	; select bank0
  5476  096E  085E               	movf	SendAsicData@work,w
  5477  096F  3E21               	addlw	33
  5478  0970  0022               	movlb	2	; select bank2
  5479  0971  00B0               	movwf	_send32_data^(0+256)
  5480  0972  3000               	movlw	0
  5481  0973  0020               	movlb	0	; select bank0
  5482  0974  3D5F               	addwfc	SendAsicData@work+1,w
  5483  0975  0022               	movlb	2	; select bank2
  5484  0976  00B1               	movwf	(_send32_data+1)^(0+256)
  5485  0977  3003               	movlw	3
  5486  0978  0020               	movlb	0	; select bank0
  5487  0979  00E0               	movwf	??_SendAsicData
  5488  097A  0860               	movf	??_SendAsicData,w
  5489  097B  0022               	movlb	2	; select bank2
  5490  097C  00CB               	movwf	_send32_count^(0+256)
  5491                           
  5492                           ;asic.c: 42: Send32();
  5493  097D  318B  23E0  3189   	fcall	_Send32
  5494                           
  5495                           ;asic.c: 43: send32_data = (WORD)&PrecalcHashes[1]; send32_count = 5;
  5496  0980  30B6               	movlw	low (_PrecalcHashes+4)
  5497  0981  0022               	movlb	2	; select bank2
  5498  0982  00B0               	movwf	_send32_data^(0+256)
  5499  0983  3001               	movlw	high (_PrecalcHashes+4)
  5500  0984  00B1               	movwf	(_send32_data+1)^(0+256)
  5501  0985  3005               	movlw	5
  5502  0986  0020               	movlb	0	; select bank0
  5503  0987  00E0               	movwf	??_SendAsicData
  5504  0988  0860               	movf	??_SendAsicData,w
  5505  0989  0022               	movlb	2	; select bank2
  5506  098A  00CB               	movwf	_send32_count^(0+256)
  5507                           
  5508                           ;asic.c: 44: Send32();
  5509  098B  318B  23E0  3189   	fcall	_Send32
  5510                           
  5511                           ;asic.c: 45: send32_data = (WORD)&work->MidState; send32_count = 8;
  5512  098E  0020               	movlb	0	; select bank0
  5513  098F  085E               	movf	SendAsicData@work,w
  5514  0990  3E01               	addlw	1
  5515  0991  0022               	movlb	2	; select bank2
  5516  0992  00B0               	movwf	_send32_data^(0+256)
  5517  0993  3000               	movlw	0
  5518  0994  0020               	movlb	0	; select bank0
  5519  0995  3D5F               	addwfc	SendAsicData@work+1,w
  5520  0996  0022               	movlb	2	; select bank2
  5521  0997  00B1               	movwf	(_send32_data+1)^(0+256)
  5522  0998  3008               	movlw	8
  5523  0999  0020               	movlb	0	; select bank0
  5524  099A  00E0               	movwf	??_SendAsicData
  5525  099B  0860               	movf	??_SendAsicData,w
  5526  099C  0022               	movlb	2	; select bank2
  5527  099D  00CB               	movwf	_send32_count^(0+256)
  5528                           
  5529                           ;asic.c: 46: Send32();
  5530  099E  318B  23E0  3189   	fcall	_Send32
  5531                           
  5532                           ;asic.c: 47: send32_data = (WORD)&PrecalcHashes; send32_count = 1;
  5533  09A1  30B2               	movlw	low _PrecalcHashes
  5534  09A2  0022               	movlb	2	; select bank2
  5535  09A3  00B0               	movwf	_send32_data^(0+256)
  5536  09A4  3001               	movlw	high _PrecalcHashes
  5537  09A5  00B1               	movwf	(_send32_data+1)^(0+256)
  5538  09A6  01CB               	clrf	_send32_count^(0+256)
  5539  09A7  0ACB               	incf	_send32_count^(0+256),f
  5540                           
  5541                           ;asic.c: 48: Send32();
  5542  09A8  318B  23E0  3189   	fcall	_Send32
  5543                           
  5544                           ;asic.c: 49: last_bit0 = last_bit1 = 0x50;
  5545  09AB  3050               	movlw	80
  5546  09AC  0022               	movlb	2	; select bank2
  5547  09AD  00C9               	movwf	_last_bit1^(0+256)
  5548  09AE  0020               	movlb	0	; select bank0
  5549  09AF  00E0               	movwf	??_SendAsicData
  5550  09B0  0860               	movf	??_SendAsicData,w
  5551  09B1  0022               	movlb	2	; select bank2
  5552  09B2  00C8               	movwf	_last_bit0^(0+256)
  5553                           
  5554                           ;asic.c: 50: send32_data = (WORD)&NonceRanges; send32_count = BankSize;
  5555  09B3  3020               	movlw	low _NonceRanges
  5556  09B4  00B0               	movwf	_send32_data^(0+256)
  5557  09B5  3003               	movlw	high _NonceRanges
  5558  09B6  00B1               	movwf	(_send32_data+1)^(0+256)
  5559  09B7  086F               	movf	_BankSize^(0+256),w
  5560  09B8  0020               	movlb	0	; select bank0
  5561  09B9  00E0               	movwf	??_SendAsicData
  5562  09BA  0860               	movf	??_SendAsicData,w
  5563  09BB  0022               	movlb	2	; select bank2
  5564  09BC  00CB               	movwf	_send32_count^(0+256)
  5565                           
  5566                           ;asic.c: 51: Send32();
  5567  09BD  318B  23E0         	fcall	_Send32
  5568                           
  5569                           ;asic.c: 52: LATC = 0xD8;;
  5570  09BF  30D8               	movlw	216
  5571  09C0  0022               	movlb	2	; select bank2
  5572  09C1  008E               	movwf	14	;volatile
  5573                           
  5574                           ;asic.c: 53: GIE = 1;
  5575  09C2  178B               	bsf	11,7	;volatile
  5576                           
  5577                           ;asic.c: 54: ClockCfg[0] = ClockCfg[0] & ~0x00000002;
  5578  09C3  30FD               	movlw	253
  5579  09C4  0023               	movlb	3	; select bank3
  5580  09C5  055C               	andwf	_ClockCfg^(0+384),w
  5581  09C6  0020               	movlb	0	; select bank0
  5582  09C7  00E0               	movwf	??_SendAsicData
  5583  09C8  30FF               	movlw	255
  5584  09C9  0023               	movlb	3	; select bank3
  5585  09CA  055D               	andwf	(_ClockCfg+1)^(0+384),w
  5586  09CB  0020               	movlb	0	; select bank0
  5587  09CC  00E1               	movwf	??_SendAsicData+1
  5588  09CD  30FF               	movlw	255
  5589  09CE  0023               	movlb	3	; select bank3
  5590  09CF  055E               	andwf	(_ClockCfg+2)^(0+384),w
  5591  09D0  0020               	movlb	0	; select bank0
  5592  09D1  00E2               	movwf	??_SendAsicData+2
  5593  09D2  30FF               	movlw	255
  5594  09D3  0023               	movlb	3	; select bank3
  5595  09D4  055F               	andwf	(_ClockCfg+3)^(0+384),w
  5596  09D5  0020               	movlb	0	; select bank0
  5597  09D6  00E3               	movwf	??_SendAsicData+3
  5598  09D7  0863               	movf	??_SendAsicData+3,w
  5599  09D8  0023               	movlb	3	; select bank3
  5600  09D9  00DF               	movwf	(_ClockCfg+3)^(0+384)
  5601  09DA  0020               	movlb	0	; select bank0
  5602  09DB  0862               	movf	??_SendAsicData+2,w
  5603  09DC  0023               	movlb	3	; select bank3
  5604  09DD  00DE               	movwf	(_ClockCfg+2)^(0+384)
  5605  09DE  0020               	movlb	0	; select bank0
  5606  09DF  0861               	movf	??_SendAsicData+1,w
  5607  09E0  0023               	movlb	3	; select bank3
  5608  09E1  00DD               	movwf	(_ClockCfg+1)^(0+384)
  5609  09E2  0020               	movlb	0	; select bank0
  5610  09E3  0860               	movf	??_SendAsicData,w
  5611  09E4  0023               	movlb	3	; select bank3
  5612  09E5  00DC               	movwf	_ClockCfg^(0+384)
  5613  09E6  0008               	return
  5614  09E7                     __end_of_SendAsicData:	
  5615                           
  5616                           	psect	text11
  5617  0BE0                     __ptext11:	
  5618 ;; *************** function _Send32 *****************
  5619 ;; Defined at:
  5620 ;;		line 58 in file "asic.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;		None               void
  5627 ;; Registers used:
  5628 ;;		None
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    4
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_SendAsicData
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function _Send32
  5650  0BE0                     _Send32:	
  5651                           
  5652                           ;incstack = 0
  5653                           ; Regs used in _Send32: []
  5654  0BE0  0022               	banksel	270	;# 
  5655  0BE1  0830               	movf	_send32_data& (0+127),w	;# 
  5656  0BE2  0086               	movwf	6	;# 
  5657  0BE3  0831               	movf	(_send32_data+1)& (0+127),w	;# 
  5658  0BE4  0087               	movwf	7	;# 
  5659  0BE5                     next_word:	
  5660                           
  5661                           ;# 
  5662  0BE5  3048               	movlw	72	;# 
  5663  0BE6  018E               	clrf	14	;# 
  5664  0BE7  1801               	btfsc	1,0	;# 
  5665  0BE8  3090               	movlw	144	;# 
  5666  0BE9  008E               	movwf	14	;# 
  5667  0BEA  3048               	movlw	72	;# 
  5668  0BEB  018E               	clrf	14	;# 
  5669  0BEC  1881               	btfsc	1,1	;# 
  5670  0BED  3090               	movlw	144	;# 
  5671  0BEE  008E               	movwf	14	;# 
  5672  0BEF  3048               	movlw	72	;# 
  5673  0BF0  018E               	clrf	14	;# 
  5674  0BF1  1901               	btfsc	1,2	;# 
  5675  0BF2  3090               	movlw	144	;# 
  5676  0BF3  008E               	movwf	14	;# 
  5677  0BF4  3048               	movlw	72	;# 
  5678  0BF5  018E               	clrf	14	;# 
  5679  0BF6  1981               	btfsc	1,3	;# 
  5680  0BF7  3090               	movlw	144	;# 
  5681  0BF8  008E               	movwf	14	;# 
  5682  0BF9  3048               	movlw	72	;# 
  5683  0BFA  018E               	clrf	14	;# 
  5684  0BFB  1A01               	btfsc	1,4	;# 
  5685  0BFC  3090               	movlw	144	;# 
  5686  0BFD  008E               	movwf	14	;# 
  5687  0BFE  3048               	movlw	72	;# 
  5688  0BFF  018E               	clrf	14	;# 
  5689  0C00  1A81               	btfsc	1,5	;# 
  5690  0C01  3090               	movlw	144	;# 
  5691  0C02  008E               	movwf	14	;# 
  5692  0C03  3048               	movlw	72	;# 
  5693  0C04  018E               	clrf	14	;# 
  5694  0C05  1B01               	btfsc	1,6	;# 
  5695  0C06  3090               	movlw	144	;# 
  5696  0C07  008E               	movwf	14	;# 
  5697  0C08  3048               	movlw	72	;# 
  5698  0C09  018E               	clrf	14	;# 
  5699  0C0A  1B81               	btfsc	1,7	;# 
  5700  0C0B  3090               	movlw	144	;# 
  5701  0C0C  008E               	movwf	14	;# 
  5702  0C0D  3141               	addfsr 1,1	;# 
  5703  0C0E  3048               	movlw	72	;# 
  5704  0C0F  018E               	clrf	14	;# 
  5705  0C10  1801               	btfsc	1,0	;# 
  5706  0C11  3090               	movlw	144	;# 
  5707  0C12  008E               	movwf	14	;# 
  5708  0C13  3048               	movlw	72	;# 
  5709  0C14  018E               	clrf	14	;# 
  5710  0C15  1881               	btfsc	1,1	;# 
  5711  0C16  3090               	movlw	144	;# 
  5712  0C17  008E               	movwf	14	;# 
  5713  0C18  3048               	movlw	72	;# 
  5714  0C19  018E               	clrf	14	;# 
  5715  0C1A  1901               	btfsc	1,2	;# 
  5716  0C1B  3090               	movlw	144	;# 
  5717  0C1C  008E               	movwf	14	;# 
  5718  0C1D  3048               	movlw	72	;# 
  5719  0C1E  018E               	clrf	14	;# 
  5720  0C1F  1981               	btfsc	1,3	;# 
  5721  0C20  3090               	movlw	144	;# 
  5722  0C21  008E               	movwf	14	;# 
  5723  0C22  3048               	movlw	72	;# 
  5724  0C23  018E               	clrf	14	;# 
  5725  0C24  1A01               	btfsc	1,4	;# 
  5726  0C25  3090               	movlw	144	;# 
  5727  0C26  008E               	movwf	14	;# 
  5728  0C27  3048               	movlw	72	;# 
  5729  0C28  018E               	clrf	14	;# 
  5730  0C29  1A81               	btfsc	1,5	;# 
  5731  0C2A  3090               	movlw	144	;# 
  5732  0C2B  008E               	movwf	14	;# 
  5733  0C2C  3048               	movlw	72	;# 
  5734  0C2D  018E               	clrf	14	;# 
  5735  0C2E  1B01               	btfsc	1,6	;# 
  5736  0C2F  3090               	movlw	144	;# 
  5737  0C30  008E               	movwf	14	;# 
  5738  0C31  3048               	movlw	72	;# 
  5739  0C32  018E               	clrf	14	;# 
  5740  0C33  1B81               	btfsc	1,7	;# 
  5741  0C34  3090               	movlw	144	;# 
  5742  0C35  008E               	movwf	14	;# 
  5743  0C36  3141               	addfsr 1,1	;# 
  5744  0C37  3048               	movlw	72	;# 
  5745  0C38  018E               	clrf	14	;# 
  5746  0C39  1801               	btfsc	1,0	;# 
  5747  0C3A  3090               	movlw	144	;# 
  5748  0C3B  008E               	movwf	14	;# 
  5749  0C3C  3048               	movlw	72	;# 
  5750  0C3D  018E               	clrf	14	;# 
  5751  0C3E  1881               	btfsc	1,1	;# 
  5752  0C3F  3090               	movlw	144	;# 
  5753  0C40  008E               	movwf	14	;# 
  5754  0C41  3048               	movlw	72	;# 
  5755  0C42  018E               	clrf	14	;# 
  5756  0C43  1901               	btfsc	1,2	;# 
  5757  0C44  3090               	movlw	144	;# 
  5758  0C45  008E               	movwf	14	;# 
  5759  0C46  3048               	movlw	72	;# 
  5760  0C47  018E               	clrf	14	;# 
  5761  0C48  1981               	btfsc	1,3	;# 
  5762  0C49  3090               	movlw	144	;# 
  5763  0C4A  008E               	movwf	14	;# 
  5764  0C4B  3048               	movlw	72	;# 
  5765  0C4C  018E               	clrf	14	;# 
  5766  0C4D  1A01               	btfsc	1,4	;# 
  5767  0C4E  3090               	movlw	144	;# 
  5768  0C4F  008E               	movwf	14	;# 
  5769  0C50  3048               	movlw	72	;# 
  5770  0C51  018E               	clrf	14	;# 
  5771  0C52  1A81               	btfsc	1,5	;# 
  5772  0C53  3090               	movlw	144	;# 
  5773  0C54  008E               	movwf	14	;# 
  5774  0C55  3048               	movlw	72	;# 
  5775  0C56  018E               	clrf	14	;# 
  5776  0C57  1B01               	btfsc	1,6	;# 
  5777  0C58  3090               	movlw	144	;# 
  5778  0C59  008E               	movwf	14	;# 
  5779  0C5A  3048               	movlw	72	;# 
  5780  0C5B  018E               	clrf	14	;# 
  5781  0C5C  1B81               	btfsc	1,7	;# 
  5782  0C5D  3090               	movlw	144	;# 
  5783  0C5E  008E               	movwf	14	;# 
  5784  0C5F  3141               	addfsr 1,1	;# 
  5785  0C60  3048               	movlw	72	;# 
  5786  0C61  018E               	clrf	14	;# 
  5787  0C62  1801               	btfsc	1,0	;# 
  5788  0C63  3090               	movlw	144	;# 
  5789  0C64  008E               	movwf	14	;# 
  5790  0C65  3048               	movlw	72	;# 
  5791  0C66  018E               	clrf	14	;# 
  5792  0C67  1881               	btfsc	1,1	;# 
  5793  0C68  3090               	movlw	144	;# 
  5794  0C69  008E               	movwf	14	;# 
  5795  0C6A  3048               	movlw	72	;# 
  5796  0C6B  018E               	clrf	14	;# 
  5797  0C6C  1901               	btfsc	1,2	;# 
  5798  0C6D  3090               	movlw	144	;# 
  5799  0C6E  008E               	movwf	14	;# 
  5800  0C6F  3048               	movlw	72	;# 
  5801  0C70  018E               	clrf	14	;# 
  5802  0C71  1981               	btfsc	1,3	;# 
  5803  0C72  3090               	movlw	144	;# 
  5804  0C73  008E               	movwf	14	;# 
  5805  0C74  3048               	movlw	72	;# 
  5806  0C75  018E               	clrf	14	;# 
  5807  0C76  1A01               	btfsc	1,4	;# 
  5808  0C77  3090               	movlw	144	;# 
  5809  0C78  008E               	movwf	14	;# 
  5810  0C79  3048               	movlw	72	;# 
  5811  0C7A  018E               	clrf	14	;# 
  5812  0C7B  1A81               	btfsc	1,5	;# 
  5813  0C7C  3090               	movlw	144	;# 
  5814  0C7D  008E               	movwf	14	;# 
  5815  0C7E  3048               	movlw	72	;# 
  5816  0C7F  018E               	clrf	14	;# 
  5817  0C80  1B01               	btfsc	1,6	;# 
  5818  0C81  3090               	movlw	144	;# 
  5819  0C82  008E               	movwf	14	;# 
  5820  0C83  0848               	movf	_last_bit0& (0+127),w	;# 
  5821  0C84  018E               	clrf	14	;# 
  5822  0C85  1B81               	btfsc	1,7	;# 
  5823  0C86  0849               	movf	_last_bit1& (0+127),w	;# 
  5824  0C87  008E               	movwf	14	;# 
  5825  0C88  3141               	addfsr 1,1	;# 
  5826  0C89  0BCB               	decfsz	_send32_count& (0+127),f	;# 
  5827  0C8A  2BE5               	goto	next_word	;# 
  5828  0C8B  0008               	return
  5829  0C8C                     __end_of_Send32:	
  5830                           
  5831                           	psect	text12
  5832  1CB5                     __ptext12:	
  5833 ;; *************** function _InitializeSystem *****************
  5834 ;; Defined at:
  5835 ;;		line 146 in file "main.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;		None               void
  5842 ;; Registers used:
  5843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    7
  5856 ;; This function calls:
  5857 ;;		_USBDeviceInit
  5858 ;;		_UserInit
  5859 ;; This function is called by:
  5860 ;;		_main
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _InitializeSystem
  5866  1CB5                     _InitializeSystem:	
  5867                           
  5868                           ;main.c: 148: ANSELA = 0x00;
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in _InitializeSystem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5872  1CB5  0023               	movlb	3	; select bank3
  5873  1CB6  018C               	clrf	12	;volatile
  5874                           
  5875                           ;main.c: 149: ANSELB = 0x00;
  5876  1CB7  018D               	clrf	13	;volatile
  5877                           
  5878                           ;main.c: 150: ANSELC = 0x04;
  5879  1CB8  3004               	movlw	4
  5880  1CB9  008E               	movwf	14	;volatile
  5881                           
  5882                           ;main.c: 153: OSCTUNE = 0;
  5883  1CBA  0021               	movlb	1	; select bank1
  5884  1CBB  0198               	clrf	24	;volatile
  5885                           
  5886                           ;main.c: 154: OSCCON = 0xFC;
  5887  1CBC  30FC               	movlw	252
  5888  1CBD  0099               	movwf	25	;volatile
  5889                           
  5890                           ;main.c: 155: ACTCON = 0x90;
  5891  1CBE  3090               	movlw	144
  5892  1CBF  0027               	movlb	7	; select bank7
  5893  1CC0  009B               	movwf	27	;volatile
  5894                           
  5895                           ;main.c: 158: USBGenericOutHandle = 0;
  5896  1CC1  0022               	movlb	2	; select bank2
  5897  1CC2  01C1               	clrf	_USBGenericOutHandle^(0+256)
  5898                           
  5899                           ;main.c: 159: USBGenericInHandle = 0;
  5900  1CC3  01C0               	clrf	_USBGenericInHandle^(0+256)
  5901                           
  5902                           ;main.c: 160: WQI = WQX = 0;
  5903  1CC4  01D7               	clrf	_WQX^(0+256)
  5904  1CC5  01D6               	clrf	_WQI^(0+256)
  5905                           
  5906                           ;main.c: 162: UserInit();
  5907  1CC6  319C  2475  319C   	fcall	_UserInit
  5908                           
  5909                           ;main.c: 164: USBDeviceInit();
  5910  1CC9  3189  21E7         	fcall	_USBDeviceInit
  5911  1CCB  0008               	return
  5912  1CCC                     __end_of_InitializeSystem:	
  5913                           
  5914                           	psect	text13
  5915  1C75                     __ptext13:	
  5916 ;; *************** function _UserInit *****************
  5917 ;; Defined at:
  5918 ;;		line 170 in file "main.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;		None               void
  5925 ;; Registers used:
  5926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    6
  5939 ;; This function calls:
  5940 ;;		_DetectAsics
  5941 ;;		_InitFAN
  5942 ;;		_InitTempSensor
  5943 ;;		_InitWorkTick
  5944 ;;		_InitResultRx
  5945 ;; This function is called by:
  5946 ;;		_InitializeSystem
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _UserInit
  5952  1C75                     _UserInit:	
  5953                           
  5954                           ;main.c: 171: TRISAbits.TRISA5 = 0; LATAbits.LATA5 = 1;;
  5955                           
  5956                           ;incstack = 0
  5957                           ; Regs used in _UserInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5958  1C75  0021               	movlb	1	; select bank1
  5959  1C76  128C               	bcf	12,5	;volatile
  5960  1C77  0022               	movlb	2	; select bank2
  5961  1C78  168C               	bsf	12,5	;volatile
  5962                           
  5963                           ;main.c: 172: InitTempSensor();
  5964  1C79  319C  249E  319C   	fcall	_InitTempSensor
  5965                           
  5966                           ;main.c: 173: InitFAN();
  5967  1C7C  319D  2550  319C   	fcall	_InitFAN
  5968                           
  5969                           ;main.c: 174: InitWorkTick();
  5970  1C7F  319C  2488  319C   	fcall	_InitWorkTick
  5971                           
  5972                           ;main.c: 176: InitResultRx();
  5973  1C82  319C  2462  319C   	fcall	_InitResultRx
  5974                           
  5975                           ;main.c: 177: DetectAsics();
  5976  1C85  318C  248C         	fcall	_DetectAsics
  5977  1C87  0008               	return
  5978  1C88                     __end_of_UserInit:	
  5979                           
  5980                           	psect	text14
  5981  1C62                     __ptext14:	
  5982 ;; *************** function _InitResultRx *****************
  5983 ;; Defined at:
  5984 ;;		line 275 in file "klondike.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;		None
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;		None
  5989 ;; Return value:  Size  Location     Type
  5990 ;;		None               void
  5991 ;; Registers used:
  5992 ;;		wreg, status,2
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;Total ram usage:        0 bytes
  6003 ;; Hardware stack levels used:    1
  6004 ;; Hardware stack levels required when called:    4
  6005 ;; This function calls:
  6006 ;;		Nothing
  6007 ;; This function is called by:
  6008 ;;		_UserInit
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function _InitResultRx
  6014  1C62                     _InitResultRx:	
  6015                           
  6016                           ;klondike.c: 276: ResultQC = 0;
  6017                           
  6018                           ;incstack = 0
  6019                           ; Regs used in _InitResultRx: [wreg+status,2]
  6020  1C62  0022               	movlb	2	; select bank2
  6021  1C63  01B9               	clrf	_ResultQC^(0+256)
  6022                           
  6023                           ;klondike.c: 277: TXSTAbits.SYNC = 1;
  6024  1C64  0023               	movlb	3	; select bank3
  6025  1C65  161E               	bsf	30,4	;volatile
  6026                           
  6027                           ;klondike.c: 278: RCSTAbits.SPEN = 1;
  6028  1C66  179D               	bsf	29,7	;volatile
  6029                           
  6030                           ;klondike.c: 279: TXSTAbits.CSRC = 0;
  6031  1C67  139E               	bcf	30,7	;volatile
  6032                           
  6033                           ;klondike.c: 280: BAUDCONbits.SCKP = 0;
  6034  1C68  121F               	bcf	31,4	;volatile
  6035                           
  6036                           ;klondike.c: 281: BAUDCONbits.BRG16 = 1;
  6037  1C69  159F               	bsf	31,3	;volatile
  6038                           
  6039                           ;klondike.c: 282: ANSELBbits.ANSB5 = 0;
  6040  1C6A  128D               	bcf	13,5	;volatile
  6041                           
  6042                           ;klondike.c: 283: IOCBPbits.IOCBP7 = 1;
  6043  1C6B  0027               	movlb	7	; select bank7
  6044  1C6C  1794               	bsf	20,7	;volatile
  6045                           
  6046                           ;klondike.c: 284: INTCONbits.IOCIE = 1;
  6047  1C6D  158B               	bsf	11,3	;volatile
  6048                           
  6049                           ;klondike.c: 285: IOCBF = 0;
  6050  1C6E  0196               	clrf	22	;volatile
  6051                           
  6052                           ;klondike.c: 286: INTCONbits.GIE = 1;
  6053  1C6F  178B               	bsf	11,7	;volatile
  6054                           
  6055                           ;klondike.c: 287: RCSTAbits.CREN = 1;
  6056  1C70  0023               	movlb	3	; select bank3
  6057  1C71  161D               	bsf	29,4	;volatile
  6058                           
  6059                           ;klondike.c: 288: RCREG = 0xFF;
  6060  1C72  30FF               	movlw	255
  6061  1C73  0099               	movwf	25	;volatile
  6062  1C74  0008               	return
  6063  1C75                     __end_of_InitResultRx:	
  6064                           
  6065                           	psect	text15
  6066  1C88                     __ptext15:	
  6067 ;; *************** function _InitWorkTick *****************
  6068 ;; Defined at:
  6069 ;;		line 259 in file "klondike.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;		None               void
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;Total ram usage:        0 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    4
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_UserInit
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           
  6098                           ;psect for function _InitWorkTick
  6099  1C88                     _InitWorkTick:	
  6100                           
  6101                           ;klondike.c: 260: TMR0CS = 0;
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in _InitWorkTick: [wreg+status,2+status,0]
  6105  1C88  0021               	movlb	1	; select bank1
  6106  1C89  1295               	bcf	21,5	;volatile
  6107                           
  6108                           ;klondike.c: 261: OPTION_REGbits.PSA = 0;
  6109  1C8A  1195               	bcf	21,3	;volatile
  6110                           
  6111                           ;klondike.c: 262: OPTION_REGbits.PS = 7;
  6112  1C8B  3007               	movlw	7
  6113  1C8C  0495               	iorwf	21,f	;volatile
  6114                           
  6115                           ;klondike.c: 263: TMR0 = HashTime;
  6116  1C8D  0022               	movlb	2	; select bank2
  6117  1C8E  0858               	movf	_HashTime^(0+256),w
  6118  1C8F  0020               	movlb	0	; select bank0
  6119  1C90  0095               	movwf	21	;volatile
  6120                           
  6121                           ;klondike.c: 265: TRISCbits.TRISC7 = 0;
  6122  1C91  0021               	movlb	1	; select bank1
  6123  1C92  138E               	bcf	14,7	;volatile
  6124                           
  6125                           ;klondike.c: 266: TRISCbits.TRISC6 = 0;
  6126  1C93  130E               	bcf	14,6	;volatile
  6127                           
  6128                           ;klondike.c: 267: TRISCbits.TRISC4 = 0;
  6129  1C94  120E               	bcf	14,4	;volatile
  6130                           
  6131                           ;klondike.c: 268: TRISCbits.TRISC3 = 0;
  6132  1C95  118E               	bcf	14,3	;volatile
  6133                           
  6134                           ;klondike.c: 269: LATC = 0xD8;;
  6135  1C96  30D8               	movlw	216
  6136  1C97  0022               	movlb	2	; select bank2
  6137  1C98  008E               	movwf	14	;volatile
  6138                           
  6139                           ;klondike.c: 270: TRISAbits.TRISA4 = 0;
  6140  1C99  0021               	movlb	1	; select bank1
  6141  1C9A  120C               	bcf	12,4	;volatile
  6142                           
  6143                           ;klondike.c: 271: LATAbits.LATA4 = 0;
  6144  1C9B  0022               	movlb	2	; select bank2
  6145  1C9C  120C               	bcf	12,4	;volatile
  6146  1C9D  0008               	return
  6147  1C9E                     __end_of_InitWorkTick:	
  6148                           
  6149                           	psect	text16
  6150  1C9E                     __ptext16:	
  6151 ;; *************** function _InitTempSensor *****************
  6152 ;; Defined at:
  6153 ;;		line 245 in file "klondike.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;		None               void
  6160 ;; Registers used:
  6161 ;;		wreg, status,2, status,0
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;Total ram usage:        1 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    4
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		_UserInit
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           
  6182                           ;psect for function _InitTempSensor
  6183  1C9E                     _InitTempSensor:	
  6184                           
  6185                           ;klondike.c: 246: TRISCbits.TRISC2=1;
  6186                           
  6187                           ;incstack = 0
  6188                           ; Regs used in _InitTempSensor: [wreg+status,2+status,0]
  6189  1C9E  0021               	movlb	1	; select bank1
  6190  1C9F  150E               	bsf	14,2	;volatile
  6191                           
  6192                           ;klondike.c: 249: ADCON0bits.CHS = 6;
  6193  1CA0  081D               	movf	29,w	;volatile
  6194  1CA1  3983               	andlw	-125
  6195  1CA2  3818               	iorlw	24
  6196  1CA3  009D               	movwf	29	;volatile
  6197                           
  6198                           ;klondike.c: 250: ADCON0bits.ADON = 1;
  6199  1CA4  141D               	bsf	29,0	;volatile
  6200                           
  6201                           ;klondike.c: 251: ADCON1bits.ADFM = 0;
  6202  1CA5  139E               	bcf	30,7	;volatile
  6203                           
  6204                           ;klondike.c: 252: ADCON1bits.ADCS = 6;
  6205  1CA6  081E               	movf	30,w	;volatile
  6206  1CA7  398F               	andlw	-113
  6207  1CA8  3860               	iorlw	96
  6208  1CA9  009E               	movwf	30	;volatile
  6209                           
  6210                           ;klondike.c: 253: ADCON1bits.ADPREF = 0;
  6211  1CAA  30FC               	movlw	-4
  6212  1CAB  059E               	andwf	30,f	;volatile
  6213                           
  6214                           ;klondike.c: 254: ADCON2bits.TRIGSEL = 0;
  6215  1CAC  308F               	movlw	-113
  6216  1CAD  059F               	andwf	31,f	;volatile
  6217                           
  6218                           ;klondike.c: 255: TempTarget = 143;
  6219  1CAE  308F               	movlw	143
  6220  1CAF  0020               	movlb	0	; select bank0
  6221  1CB0  00D8               	movwf	??_InitTempSensor
  6222  1CB1  0858               	movf	??_InitTempSensor,w
  6223  1CB2  0023               	movlb	3	; select bank3
  6224  1CB3  00EA               	movwf	_TempTarget^(0+384)
  6225  1CB4  0008               	return
  6226  1CB5                     __end_of_InitTempSensor:	
  6227                           
  6228                           	psect	text17
  6229  1D50                     __ptext17:	
  6230 ;; *************** function _InitFAN *****************
  6231 ;; Defined at:
  6232 ;;		line 225 in file "klondike.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;		None               void
  6239 ;; Registers used:
  6240 ;;		wreg, status,2, status,0
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;Total ram usage:        0 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    4
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_UserInit
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function _InitFAN
  6262  1D50                     _InitFAN:	
  6263                           
  6264                           ;klondike.c: 226: TRISCbits.TRISC5 = 1;
  6265                           
  6266                           ;incstack = 0
  6267                           ; Regs used in _InitFAN: [wreg+status,2+status,0]
  6268  1D50  0021               	movlb	1	; select bank1
  6269  1D51  168E               	bsf	14,5	;volatile
  6270                           
  6271                           ;klondike.c: 227: PWM1CON = 0;
  6272  1D52  002C               	movlb	12	; select bank12
  6273  1D53  0193               	clrf	19	;volatile
  6274                           
  6275                           ;klondike.c: 228: PR2 = 0xFF;
  6276  1D54  30FF               	movlw	255
  6277  1D55  0020               	movlb	0	; select bank0
  6278  1D56  009B               	movwf	27	;volatile
  6279                           
  6280                           ;klondike.c: 229: PWM1CON = 0xC0;
  6281  1D57  30C0               	movlw	192
  6282  1D58  002C               	movlb	12	; select bank12
  6283  1D59  0093               	movwf	19	;volatile
  6284                           
  6285                           ;klondike.c: 230: PWM1DCH = FanLevel = 230;
  6286  1D5A  30E6               	movlw	230
  6287  1D5B  0022               	movlb	2	; select bank2
  6288  1D5C  00EE               	movwf	_FanLevel^(0+256)
  6289  1D5D  002C               	movlb	12	; select bank12
  6290  1D5E  0092               	movwf	18	;volatile
  6291                           
  6292                           ;klondike.c: 231: PWM1DCL = 0;
  6293  1D5F  0191               	clrf	17	;volatile
  6294                           
  6295                           ;klondike.c: 232: TMR2IF = 0;
  6296  1D60  0020               	movlb	0	; select bank0
  6297  1D61  1091               	bcf	17,1	;volatile
  6298                           
  6299                           ;klondike.c: 233: T2CONbits.T2CKPS = 1;
  6300  1D62  081C               	movf	28,w	;volatile
  6301  1D63  39FC               	andlw	-4
  6302  1D64  3801               	iorlw	1
  6303  1D65  009C               	movwf	28	;volatile
  6304                           
  6305                           ;klondike.c: 234: TMR2ON = 1;
  6306  1D66  151C               	bsf	28,2	;volatile
  6307                           
  6308                           ;klondike.c: 235: TRISCbits.TRISC5 = 0;
  6309  1D67  0021               	movlb	1	; select bank1
  6310  1D68  128E               	bcf	14,5	;volatile
  6311                           
  6312                           ;klondike.c: 236: PWM1OE=1;
  6313  1D69  002C               	movlb	12	; select bank12
  6314  1D6A  1713               	bsf	19,6	;volatile
  6315  1D6B  0008               	return
  6316  1D6C                     __end_of_InitFAN:	
  6317                           
  6318                           	psect	text18
  6319  0C8C                     __ptext18:	
  6320 ;; *************** function _DetectAsics *****************
  6321 ;; Defined at:
  6322 ;;		line 124 in file "klondike.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;		None
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  x               1    2[BANK1 ] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;		None               void
  6329 ;; Registers used:
  6330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Totals:         0       7       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;Total ram usage:       10 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:    5
  6343 ;; This function calls:
  6344 ;;		___awdiv
  6345 ;; This function is called by:
  6346 ;;		_UserInit
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           
  6351                           ;psect for function _DetectAsics
  6352  0C8C                     _DetectAsics:	
  6353                           
  6354                           ;klondike.c: 125: Status.ChipCount = 16;
  6355                           
  6356                           ;incstack = 0
  6357                           ; Regs used in _DetectAsics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6358  0C8C  3010               	movlw	16
  6359  0C8D  0020               	movlb	0	; select bank0
  6360  0C8E  00E1               	movwf	??_DetectAsics
  6361  0C8F  0861               	movf	??_DetectAsics,w
  6362  0C90  0022               	movlb	2	; select bank2
  6363  0C91  00DA               	movwf	(_Status^(0+256)+1)	;volatile
  6364                           
  6365                           ;klondike.c: 128: BankSize = (Status.ChipCount)/2;
  6366  0C92  3002               	movlw	2
  6367  0C93  0020               	movlb	0	; select bank0
  6368  0C94  00D8               	movwf	?___awdiv
  6369  0C95  3000               	movlw	0
  6370  0C96  00D9               	movwf	?___awdiv+1
  6371  0C97  0022               	movlb	2	; select bank2
  6372  0C98  085A               	movf	(_Status^(0+256)+1),w	;volatile
  6373  0C99  0020               	movlb	0	; select bank0
  6374  0C9A  00E1               	movwf	??_DetectAsics
  6375  0C9B  01E2               	clrf	??_DetectAsics+1
  6376  0C9C  0861               	movf	??_DetectAsics,w
  6377  0C9D  00DA               	movwf	?___awdiv+2
  6378  0C9E  0862               	movf	??_DetectAsics+1,w
  6379  0C9F  00DB               	movwf	?___awdiv+3
  6380  0CA0  3190  20F4  318C   	fcall	___awdiv
  6381  0CA3  0020               	movlb	0	; select bank0
  6382  0CA4  0858               	movf	?___awdiv,w
  6383  0CA5  00E3               	movwf	??_DetectAsics+2
  6384  0CA6  0863               	movf	??_DetectAsics+2,w
  6385  0CA7  0022               	movlb	2	; select bank2
  6386  0CA8  00EF               	movwf	_BankSize^(0+256)
  6387                           
  6388                           ;klondike.c: 129: Status.MaxCount = 16384 / BankSize / 2;
  6389  0CA9  086F               	movf	_BankSize^(0+256),w
  6390  0CAA  0020               	movlb	0	; select bank0
  6391  0CAB  00E1               	movwf	??_DetectAsics
  6392  0CAC  01E2               	clrf	??_DetectAsics+1
  6393  0CAD  0861               	movf	??_DetectAsics,w
  6394  0CAE  00D8               	movwf	?___awdiv
  6395  0CAF  0862               	movf	??_DetectAsics+1,w
  6396  0CB0  00D9               	movwf	?___awdiv+1
  6397  0CB1  3000               	movlw	0
  6398  0CB2  00DA               	movwf	?___awdiv+2
  6399  0CB3  3040               	movlw	64
  6400  0CB4  00DB               	movwf	?___awdiv+3
  6401  0CB5  3190  20F4  318C   	fcall	___awdiv
  6402  0CB8  0020               	movlb	0	; select bank0
  6403  0CB9  0859               	movf	?___awdiv+1,w
  6404  0CBA  0021               	movlb	1	; select bank1
  6405  0CBB  01A1               	clrf	(_DetectAsics$2752+1)^(0+128)
  6406  0CBC  07A1               	addwf	(_DetectAsics$2752+1)^(0+128),f
  6407  0CBD  0020               	movlb	0	; select bank0
  6408  0CBE  0858               	movf	?___awdiv,w
  6409  0CBF  0021               	movlb	1	; select bank1
  6410  0CC0  01A0               	clrf	_DetectAsics$2752^(0+128)
  6411  0CC1  07A0               	addwf	_DetectAsics$2752^(0+128),f
  6412                           
  6413                           ;klondike.c: 129: Status.MaxCount = 16384 / BankSize / 2;
  6414  0CC2  3002               	movlw	2
  6415  0CC3  0020               	movlb	0	; select bank0
  6416  0CC4  00D8               	movwf	?___awdiv
  6417  0CC5  3000               	movlw	0
  6418  0CC6  00D9               	movwf	?___awdiv+1
  6419  0CC7  0021               	movlb	1	; select bank1
  6420  0CC8  0821               	movf	(_DetectAsics$2752+1)^(0+128),w
  6421  0CC9  0020               	movlb	0	; select bank0
  6422  0CCA  01DB               	clrf	?___awdiv+3
  6423  0CCB  07DB               	addwf	?___awdiv+3,f
  6424  0CCC  0021               	movlb	1	; select bank1
  6425  0CCD  0820               	movf	_DetectAsics$2752^(0+128),w
  6426  0CCE  0020               	movlb	0	; select bank0
  6427  0CCF  01DA               	clrf	?___awdiv+2
  6428  0CD0  07DA               	addwf	?___awdiv+2,f
  6429  0CD1  3190  20F4  318C   	fcall	___awdiv
  6430  0CD4  0020               	movlb	0	; select bank0
  6431  0CD5  0859               	movf	?___awdiv+1,w
  6432  0CD6  0022               	movlb	2	; select bank2
  6433  0CD7  01E4               	clrf	((_Status+1)^(0+256)+10)	;volatile
  6434  0CD8  07E4               	addwf	((_Status+1)^(0+256)+10),f	;volatile
  6435  0CD9  0020               	movlb	0	; select bank0
  6436  0CDA  0858               	movf	?___awdiv,w
  6437  0CDB  0022               	movlb	2	; select bank2
  6438  0CDC  01E3               	clrf	(_Status^(0+256)+10)	;volatile
  6439  0CDD  07E3               	addwf	(_Status^(0+256)+10),f	;volatile
  6440                           
  6441                           ;klondike.c: 131: NonceRanges[0] = 0;
  6442  0CDE  3000               	movlw	0
  6443  0CDF  0026               	movlb	6	; select bank6
  6444  0CE0  00A3               	movwf	(_NonceRanges+3)^(0+768)
  6445  0CE1  3000               	movlw	0
  6446  0CE2  00A2               	movwf	(_NonceRanges+2)^(0+768)
  6447  0CE3  3000               	movlw	0
  6448  0CE4  00A1               	movwf	(_NonceRanges+1)^(0+768)
  6449  0CE5  3000               	movlw	0
  6450  0CE6  00A0               	movwf	_NonceRanges^(0+768)
  6451                           
  6452                           ;klondike.c: 132: for(BYTE x = 1; x < BankSize; x++)
  6453  0CE7  0021               	movlb	1	; select bank1
  6454  0CE8  01A2               	clrf	DetectAsics@x^(0+128)
  6455  0CE9  0AA2               	incf	DetectAsics@x^(0+128),f
  6456  0CEA                     l6908:	
  6457  0CEA  0022               	movlb	2	; select bank2
  6458  0CEB  086F               	movf	_BankSize^(0+256),w
  6459  0CEC  0021               	movlb	1	; select bank1
  6460  0CED  0222               	subwf	DetectAsics@x^(0+128),w
  6461  0CEE  1803               	btfsc	3,0
  6462  0CEF  2D3A               	goto	l6910
  6463                           
  6464                           ;klondike.c: 133: NonceRanges[x] = NonceRanges[x-1] + BankRanges[BankSize-1];
  6465  0CF0  0022               	movlb	2	; select bank2
  6466  0CF1  086F               	movf	_BankSize^(0+256),w
  6467  0CF2  0020               	movlb	0	; select bank0
  6468  0CF3  00E1               	movwf	??_DetectAsics
  6469  0CF4  3001               	movlw	1
  6470  0CF5                     u7895:	
  6471  0CF5  35E1               	lslf	??_DetectAsics,f
  6472  0CF6  3EFF               	addlw	-1
  6473  0CF7  1D03               	skipz
  6474  0CF8  2CF5               	goto	u7895
  6475  0CF9  3561               	lslf	??_DetectAsics,w
  6476  0CFA  3EFC               	addlw	252
  6477  0CFB  3E40               	addlw	_BankRanges& (0+255)
  6478  0CFC  0086               	movwf	6
  6479  0CFD  3003               	movlw	3	; select bank6/7
  6480  0CFE  0087               	movwf	7
  6481  0CFF  3F40               	moviw [0]fsr1
  6482  0D00  00E2               	movwf	??_DetectAsics+1
  6483  0D01  3F41               	moviw [1]fsr1
  6484  0D02  00E3               	movwf	??_DetectAsics+2
  6485  0D03  3F42               	moviw [2]fsr1
  6486  0D04  00E4               	movwf	??_DetectAsics+3
  6487  0D05  3F43               	moviw [3]fsr1
  6488  0D06  00E5               	movwf	??_DetectAsics+4
  6489  0D07  0021               	movlb	1	; select bank1
  6490  0D08  0822               	movf	DetectAsics@x^(0+128),w
  6491  0D09  0020               	movlb	0	; select bank0
  6492  0D0A  00E6               	movwf	??_DetectAsics+5
  6493  0D0B  3001               	movlw	1
  6494  0D0C                     u7905:	
  6495  0D0C  35E6               	lslf	??_DetectAsics+5,f
  6496  0D0D  3EFF               	addlw	-1
  6497  0D0E  1D03               	skipz
  6498  0D0F  2D0C               	goto	u7905
  6499  0D10  3566               	lslf	??_DetectAsics+5,w
  6500  0D11  3EFC               	addlw	252
  6501  0D12  3E20               	addlw	_NonceRanges& (0+255)
  6502  0D13  0086               	movwf	6
  6503  0D14  3003               	movlw	3	; select bank6/7
  6504  0D15  0087               	movwf	7
  6505  0D16  3F40               	moviw [0]fsr1
  6506  0D17  07E2               	addwf	??_DetectAsics+1,f
  6507  0D18  3F41               	moviw [1]fsr1
  6508  0D19  3DE3               	addwfc	??_DetectAsics+2,f
  6509  0D1A  3F42               	moviw [2]fsr1
  6510  0D1B  3DE4               	addwfc	??_DetectAsics+3,f
  6511  0D1C  3F43               	moviw [3]fsr1
  6512  0D1D  3DE5               	addwfc	??_DetectAsics+4,f
  6513  0D1E  0021               	movlb	1	; select bank1
  6514  0D1F  0822               	movf	DetectAsics@x^(0+128),w
  6515  0D20  0020               	movlb	0	; select bank0
  6516  0D21  00E7               	movwf	??_DetectAsics+6
  6517  0D22  3001               	movlw	1
  6518  0D23                     u7915:	
  6519  0D23  35E7               	lslf	??_DetectAsics+6,f
  6520  0D24  3EFF               	addlw	-1
  6521  0D25  1D03               	skipz
  6522  0D26  2D23               	goto	u7915
  6523  0D27  3567               	lslf	??_DetectAsics+6,w
  6524  0D28  3E20               	addlw	_NonceRanges& (0+255)
  6525  0D29  0086               	movwf	6
  6526  0D2A  3003               	movlw	3	; select bank6/7
  6527  0D2B  0087               	movwf	7
  6528  0D2C  0862               	movf	??_DetectAsics+1,w
  6529  0D2D  3FC0               	movwi [0]fsr1
  6530  0D2E  0863               	movf	??_DetectAsics+2,w
  6531  0D2F  3FC1               	movwi [1]fsr1
  6532  0D30  0864               	movf	??_DetectAsics+3,w
  6533  0D31  3FC2               	movwi [2]fsr1
  6534  0D32  0865               	movf	??_DetectAsics+4,w
  6535  0D33  3FC3               	movwi [3]fsr1
  6536  0D34  3001               	movlw	1
  6537  0D35  00E1               	movwf	??_DetectAsics
  6538  0D36  0861               	movf	??_DetectAsics,w
  6539  0D37  0021               	movlb	1	; select bank1
  6540  0D38  07A2               	addwf	DetectAsics@x^(0+128),f
  6541  0D39  2CEA               	goto	l6908
  6542  0D3A                     l6910:	
  6543                           
  6544                           ;klondike.c: 135: Status.State = 'R';
  6545  0D3A  3052               	movlw	82
  6546  0D3B  0020               	movlb	0	; select bank0
  6547  0D3C  00E1               	movwf	??_DetectAsics
  6548  0D3D  0861               	movf	??_DetectAsics,w
  6549  0D3E  0022               	movlb	2	; select bank2
  6550  0D3F  00D9               	movwf	_Status^(0+256)	;volatile
  6551                           
  6552                           ;klondike.c: 136: Status.HashCount = 0;
  6553  0D40  01E1               	clrf	(_Status^(0+256)+8)	;volatile
  6554  0D41  01E2               	clrf	((_Status+1)^(0+256)+8)	;volatile
  6555  0D42  0008               	return
  6556  0D43                     __end_of_DetectAsics:	
  6557                           
  6558                           	psect	text19
  6559  10F4                     __ptext19:	
  6560 ;; *************** function ___awdiv *****************
  6561 ;; Defined at:
  6562 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  divisor         2    8[BANK0 ] int 
  6565 ;;  dividend        2   10[BANK0 ] int 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  quotient        2   15[BANK0 ] int 
  6568 ;;  sign            1   14[BANK0 ] unsigned char 
  6569 ;;  counter         1   13[BANK0 ] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  2    8[BANK0 ] int 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;Total ram usage:        9 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    4
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_DetectAsics
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           
  6594                           ;psect for function ___awdiv
  6595  10F4                     ___awdiv:	
  6596                           
  6597                           ;incstack = 0
  6598                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6599  10F4  0020               	movlb	0	; select bank0
  6600  10F5  01DE               	clrf	___awdiv@sign
  6601  10F6  1FD9               	btfss	___awdiv@divisor+1,7
  6602  10F7  28FF               	goto	l6988
  6603  10F8  09D8               	comf	___awdiv@divisor,f
  6604  10F9  09D9               	comf	___awdiv@divisor+1,f
  6605  10FA  0AD8               	incf	___awdiv@divisor,f
  6606  10FB  1903               	skipnz
  6607  10FC  0AD9               	incf	___awdiv@divisor+1,f
  6608  10FD  01DE               	clrf	___awdiv@sign
  6609  10FE  0ADE               	incf	___awdiv@sign,f
  6610  10FF                     l6988:	
  6611  10FF  1FDB               	btfss	___awdiv@dividend+1,7
  6612  1100  290A               	goto	l6994
  6613  1101  09DA               	comf	___awdiv@dividend,f
  6614  1102  09DB               	comf	___awdiv@dividend+1,f
  6615  1103  0ADA               	incf	___awdiv@dividend,f
  6616  1104  1903               	skipnz
  6617  1105  0ADB               	incf	___awdiv@dividend+1,f
  6618  1106  3001               	movlw	1
  6619  1107  00DC               	movwf	??___awdiv
  6620  1108  085C               	movf	??___awdiv,w
  6621  1109  06DE               	xorwf	___awdiv@sign,f
  6622  110A                     l6994:	
  6623  110A  01DF               	clrf	___awdiv@quotient
  6624  110B  01E0               	clrf	___awdiv@quotient+1
  6625  110C  0859               	movf	___awdiv@divisor+1,w
  6626  110D  0458               	iorwf	___awdiv@divisor,w
  6627  110E  1903               	skipnz
  6628  110F  2939               	goto	l7016
  6629  1110  01DD               	clrf	___awdiv@counter
  6630  1111  0ADD               	incf	___awdiv@counter,f
  6631  1112                     l7004:	
  6632  1112  1BD9               	btfsc	___awdiv@divisor+1,7
  6633  1113  291E               	goto	l7006
  6634  1114  3001               	movlw	1
  6635  1115                     u8055:	
  6636  1115  35D8               	lslf	___awdiv@divisor,f
  6637  1116  0DD9               	rlf	___awdiv@divisor+1,f
  6638  1117  0B89               	decfsz	9,f
  6639  1118  2915               	goto	u8055
  6640  1119  3001               	movlw	1
  6641  111A  00DC               	movwf	??___awdiv
  6642  111B  085C               	movf	??___awdiv,w
  6643  111C  07DD               	addwf	___awdiv@counter,f
  6644  111D  2912               	goto	l7004
  6645  111E                     l7006:	
  6646  111E  3001               	movlw	1
  6647  111F                     u8075:	
  6648  111F  35DF               	lslf	___awdiv@quotient,f
  6649  1120  0DE0               	rlf	___awdiv@quotient+1,f
  6650  1121  0B89               	decfsz	9,f
  6651  1122  291F               	goto	u8075
  6652  1123  0859               	movf	___awdiv@divisor+1,w
  6653  1124  025B               	subwf	___awdiv@dividend+1,w
  6654  1125  1D03               	skipz
  6655  1126  2929               	goto	u8085
  6656  1127  0858               	movf	___awdiv@divisor,w
  6657  1128  025A               	subwf	___awdiv@dividend,w
  6658  1129                     u8085:	
  6659  1129  1C03               	skipc
  6660  112A  2930               	goto	l7012
  6661  112B  0858               	movf	___awdiv@divisor,w
  6662  112C  02DA               	subwf	___awdiv@dividend,f
  6663  112D  0859               	movf	___awdiv@divisor+1,w
  6664  112E  3BDB               	subwfb	___awdiv@dividend+1,f
  6665  112F  145F               	bsf	___awdiv@quotient,0
  6666  1130                     l7012:	
  6667  1130  3001               	movlw	1
  6668  1131                     u8095:	
  6669  1131  36D9               	lsrf	___awdiv@divisor+1,f
  6670  1132  0CD8               	rrf	___awdiv@divisor,f
  6671  1133  0B89               	decfsz	9,f
  6672  1134  2931               	goto	u8095
  6673  1135  3001               	movlw	1
  6674  1136  02DD               	subwf	___awdiv@counter,f
  6675  1137  1D03               	btfss	3,2
  6676  1138  291E               	goto	l7006
  6677  1139                     l7016:	
  6678  1139  085E               	movf	___awdiv@sign,w
  6679  113A  1903               	btfsc	3,2
  6680  113B  2941               	goto	l7020
  6681  113C  09DF               	comf	___awdiv@quotient,f
  6682  113D  09E0               	comf	___awdiv@quotient+1,f
  6683  113E  0ADF               	incf	___awdiv@quotient,f
  6684  113F  1903               	skipnz
  6685  1140  0AE0               	incf	___awdiv@quotient+1,f
  6686  1141                     l7020:	
  6687  1141  0860               	movf	___awdiv@quotient+1,w
  6688  1142  01D9               	clrf	?___awdiv+1
  6689  1143  07D9               	addwf	?___awdiv+1,f
  6690  1144  085F               	movf	___awdiv@quotient,w
  6691  1145  01D8               	clrf	?___awdiv
  6692  1146  07D8               	addwf	?___awdiv,f
  6693  1147  0008               	return
  6694  1148                     __end_of___awdiv:	
  6695                           
  6696                           	psect	text20
  6697  11A3                     __ptext20:	
  6698 ;; *************** function _WorkTick *****************
  6699 ;; Defined at:
  6700 ;;		line 141 in file "klondike.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;		None               void
  6707 ;; Registers used:
  6708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;Total ram usage:        3 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    7
  6721 ;; This function calls:
  6722 ;;		_UpdateFanLevel
  6723 ;;		___awmod
  6724 ;; This function is called by:
  6725 ;;		_main
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           
  6730                           ;psect for function _WorkTick
  6731  11A3                     _WorkTick:	
  6732                           
  6733                           ;klondike.c: 142: TMR0 += HashTime;
  6734                           
  6735                           ;incstack = 0
  6736                           ; Regs used in _WorkTick: [allreg]
  6737  11A3  0022               	movlb	2	; select bank2
  6738  11A4  0858               	movf	_HashTime^(0+256),w
  6739  11A5  0021               	movlb	1	; select bank1
  6740  11A6  00D5               	movwf	??_WorkTick^(0+128)
  6741  11A7  0855               	movf	??_WorkTick^(0+128),w
  6742  11A8  0020               	movlb	0	; select bank0
  6743  11A9  0795               	addwf	21,f	;volatile
  6744                           
  6745                           ;klondike.c: 143: TMR0IF = 0;
  6746  11AA  110B               	bcf	11,2	;volatile
  6747                           
  6748                           ;klondike.c: 145: if((Status.State == 'W') && (++Status.HashCount == Status.MaxCount)) {
  6749  11AB  0022               	movlb	2	; select bank2
  6750  11AC  0859               	movf	_Status^(0+256),w	;volatile
  6751  11AD  3A57               	xorlw	87
  6752  11AE  1D03               	skipz
  6753  11AF  29CE               	goto	l5320
  6754  11B0  3008               	movlw	8
  6755  11B1  3E59               	addlw	_Status& (0+255)
  6756  11B2  0086               	movwf	6
  6757  11B3  3001               	movlw	1	; select bank2/3
  6758  11B4  0087               	movwf	7
  6759  11B5  3001               	movlw	1
  6760  11B6  0781               	addwf	1,f
  6761  11B7  3141               	addfsr 1,1
  6762  11B8  1803               	skipnc
  6763  11B9  0A81               	incf	1,f
  6764  11BA  317F               	addfsr 1,-1
  6765  11BB  3F40               	moviw [0]fsr1
  6766  11BC  0663               	xorwf	(_Status^(0+256)+10),w	;volatile
  6767  11BD  1D03               	skipz
  6768  11BE  29C1               	goto	u5375
  6769  11BF  3F41               	moviw [1]fsr1
  6770  11C0  0664               	xorwf	((_Status+1)^(0+256)+10),w	;volatile
  6771  11C1                     u5375:	
  6772  11C1  1D03               	skipz
  6773  11C2  29CE               	goto	l5320
  6774                           
  6775                           ;klondike.c: 146: if(Status.WorkQC > 0) {
  6776  11C3  085C               	movf	(_Status^(0+256)+3),w	;volatile
  6777  11C4  1903               	btfsc	3,2
  6778  11C5  29C8               	goto	l5318
  6779                           
  6780                           ;klondike.c: 147: Status.State = 'P';
  6781  11C6  3050               	movlw	80
  6782  11C7  29C9               	goto	L6
  6783  11C8                     l5318:	
  6784                           ;klondike.c: 148: }
  6785                           
  6786                           
  6787                           ;klondike.c: 149: else {
  6788                           ;klondike.c: 150: Status.State = 'R';
  6789  11C8  3052               	movlw	82
  6790  11C9                     L6:	
  6791  11C9  0021               	movlb	1	; select bank1
  6792  11CA  00D5               	movwf	??_WorkTick^(0+128)
  6793  11CB  0855               	movf	??_WorkTick^(0+128),w
  6794  11CC  0022               	movlb	2	; select bank2
  6795  11CD  00D9               	movwf	_Status^(0+256)	;volatile
  6796  11CE                     l5320:	
  6797                           
  6798                           ;klondike.c: 151: }
  6799                           ;klondike.c: 152: }
  6800                           ;klondike.c: 154: if(++SlowTick == 0) {
  6801  11CE  3001               	movlw	1
  6802  11CF  0021               	movlb	1	; select bank1
  6803  11D0  00D5               	movwf	??_WorkTick^(0+128)
  6804  11D1  0855               	movf	??_WorkTick^(0+128),w
  6805  11D2  0022               	movlb	2	; select bank2
  6806  11D3  07BB               	addwf	_SlowTick^(0+256),f
  6807  11D4  1D03               	btfss	3,2
  6808  11D5  0008               	return
  6809                           
  6810                           ;klondike.c: 155: LATAbits.LATA5 = 0;;
  6811  11D6  128C               	bcf	12,5	;volatile
  6812                           
  6813                           ;klondike.c: 156: Status.Temp = ADRESH;
  6814  11D7  0021               	movlb	1	; select bank1
  6815  11D8  081C               	movf	28,w	;volatile
  6816  11D9  00D5               	movwf	??_WorkTick^(0+128)
  6817  11DA  0855               	movf	??_WorkTick^(0+128),w
  6818  11DB  0022               	movlb	2	; select bank2
  6819  11DC  00DE               	movwf	(_Status^(0+256)+5)	;volatile
  6820                           
  6821                           ;klondike.c: 157: ADCON0bits.GO_nDONE = 1;
  6822  11DD  0021               	movlb	1	; select bank1
  6823  11DE  149D               	bsf	29,1	;volatile
  6824                           
  6825                           ;klondike.c: 158: if((++VerySlowTick % 15) == 0) {
  6826  11DF  300F               	movlw	15
  6827  11E0  0020               	movlb	0	; select bank0
  6828  11E1  00D8               	movwf	?___awmod
  6829  11E2  3000               	movlw	0
  6830  11E3  00D9               	movwf	?___awmod+1
  6831  11E4  3001               	movlw	1
  6832  11E5  0021               	movlb	1	; select bank1
  6833  11E6  00D5               	movwf	??_WorkTick^(0+128)
  6834  11E7  0855               	movf	??_WorkTick^(0+128),w
  6835  11E8  0022               	movlb	2	; select bank2
  6836  11E9  07C5               	addwf	_VerySlowTick^(0+256),f
  6837  11EA  0845               	movf	_VerySlowTick^(0+256),w
  6838  11EB  0021               	movlb	1	; select bank1
  6839  11EC  00D6               	movwf	(??_WorkTick+1)^(0+128)
  6840  11ED  01D7               	clrf	((??_WorkTick+1)^(0+128)+1)
  6841  11EE  0856               	movf	(??_WorkTick+1)^(0+128),w
  6842  11EF  0020               	movlb	0	; select bank0
  6843  11F0  00DA               	movwf	?___awmod+2
  6844  11F1  0021               	movlb	1	; select bank1
  6845  11F2  0857               	movf	(??_WorkTick+2)^(0+128),w
  6846  11F3  0020               	movlb	0	; select bank0
  6847  11F4  00DB               	movwf	?___awmod+3
  6848  11F5  319F  276A  3191   	fcall	___awmod
  6849  11F8  0020               	movlb	0	; select bank0
  6850  11F9  0859               	movf	?___awmod+1,w
  6851  11FA  0458               	iorwf	?___awmod,w
  6852  11FB  1D03               	skipz
  6853  11FC  0008               	return
  6854                           
  6855                           ;klondike.c: 159: UpdateFanLevel();
  6856  11FD  3185  2594         	fcall	_UpdateFanLevel
  6857  11FF  0008               	return
  6858  1200                     __end_of_WorkTick:	
  6859                           
  6860                           	psect	text21
  6861  1F6A                     __ptext21:	
  6862 ;; *************** function ___awmod *****************
  6863 ;; Defined at:
  6864 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awmod.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  divisor         2    8[BANK0 ] int 
  6867 ;;  dividend        2   10[BANK0 ] int 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  sign            1   14[BANK0 ] unsigned char 
  6870 ;;  counter         1   13[BANK0 ] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  2    8[BANK0 ] int 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;Total ram usage:        7 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    4
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_WorkTick
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function ___awmod
  6896  1F6A                     ___awmod:	
  6897                           
  6898                           ;incstack = 0
  6899                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6900  1F6A  0020               	movlb	0	; select bank0
  6901  1F6B  01DE               	clrf	___awmod@sign
  6902  1F6C  1FDB               	btfss	___awmod@dividend+1,7
  6903  1F6D  2F75               	goto	l5602
  6904  1F6E  09DA               	comf	___awmod@dividend,f
  6905  1F6F  09DB               	comf	___awmod@dividend+1,f
  6906  1F70  0ADA               	incf	___awmod@dividend,f
  6907  1F71  1903               	skipnz
  6908  1F72  0ADB               	incf	___awmod@dividend+1,f
  6909  1F73  01DE               	clrf	___awmod@sign
  6910  1F74  0ADE               	incf	___awmod@sign,f
  6911  1F75                     l5602:	
  6912  1F75  1FD9               	btfss	___awmod@divisor+1,7
  6913  1F76  2F7C               	goto	l5606
  6914  1F77  09D8               	comf	___awmod@divisor,f
  6915  1F78  09D9               	comf	___awmod@divisor+1,f
  6916  1F79  0AD8               	incf	___awmod@divisor,f
  6917  1F7A  1903               	skipnz
  6918  1F7B  0AD9               	incf	___awmod@divisor+1,f
  6919  1F7C                     l5606:	
  6920  1F7C  0859               	movf	___awmod@divisor+1,w
  6921  1F7D  0458               	iorwf	___awmod@divisor,w
  6922  1F7E  1903               	skipnz
  6923  1F7F  2FA3               	goto	l5624
  6924  1F80  01DD               	clrf	___awmod@counter
  6925  1F81  0ADD               	incf	___awmod@counter,f
  6926  1F82                     l5614:	
  6927  1F82  1BD9               	btfsc	___awmod@divisor+1,7
  6928  1F83  2F8E               	goto	l5616
  6929  1F84  3001               	movlw	1
  6930  1F85                     u5825:	
  6931  1F85  35D8               	lslf	___awmod@divisor,f
  6932  1F86  0DD9               	rlf	___awmod@divisor+1,f
  6933  1F87  0B89               	decfsz	9,f
  6934  1F88  2F85               	goto	u5825
  6935  1F89  3001               	movlw	1
  6936  1F8A  00DC               	movwf	??___awmod
  6937  1F8B  085C               	movf	??___awmod,w
  6938  1F8C  07DD               	addwf	___awmod@counter,f
  6939  1F8D  2F82               	goto	l5614
  6940  1F8E                     l5616:	
  6941  1F8E  0859               	movf	___awmod@divisor+1,w
  6942  1F8F  025B               	subwf	___awmod@dividend+1,w
  6943  1F90  1D03               	skipz
  6944  1F91  2F94               	goto	u5845
  6945  1F92  0858               	movf	___awmod@divisor,w
  6946  1F93  025A               	subwf	___awmod@dividend,w
  6947  1F94                     u5845:	
  6948  1F94  1C03               	skipc
  6949  1F95  2F9A               	goto	l5620
  6950  1F96  0858               	movf	___awmod@divisor,w
  6951  1F97  02DA               	subwf	___awmod@dividend,f
  6952  1F98  0859               	movf	___awmod@divisor+1,w
  6953  1F99  3BDB               	subwfb	___awmod@dividend+1,f
  6954  1F9A                     l5620:	
  6955  1F9A  3001               	movlw	1
  6956  1F9B                     u5855:	
  6957  1F9B  36D9               	lsrf	___awmod@divisor+1,f
  6958  1F9C  0CD8               	rrf	___awmod@divisor,f
  6959  1F9D  0B89               	decfsz	9,f
  6960  1F9E  2F9B               	goto	u5855
  6961  1F9F  3001               	movlw	1
  6962  1FA0  02DD               	subwf	___awmod@counter,f
  6963  1FA1  1D03               	btfss	3,2
  6964  1FA2  2F8E               	goto	l5616
  6965  1FA3                     l5624:	
  6966  1FA3  085E               	movf	___awmod@sign,w
  6967  1FA4  1903               	btfsc	3,2
  6968  1FA5  2FAB               	goto	l5628
  6969  1FA6  09DA               	comf	___awmod@dividend,f
  6970  1FA7  09DB               	comf	___awmod@dividend+1,f
  6971  1FA8  0ADA               	incf	___awmod@dividend,f
  6972  1FA9  1903               	skipnz
  6973  1FAA  0ADB               	incf	___awmod@dividend+1,f
  6974  1FAB                     l5628:	
  6975  1FAB  085B               	movf	___awmod@dividend+1,w
  6976  1FAC  01D9               	clrf	?___awmod+1
  6977  1FAD  07D9               	addwf	?___awmod+1,f
  6978  1FAE  085A               	movf	___awmod@dividend,w
  6979  1FAF  01D8               	clrf	?___awmod
  6980  1FB0  07D8               	addwf	?___awmod,f
  6981  1FB1  0008               	return
  6982  1FB2                     __end_of___awmod:	
  6983                           
  6984                           	psect	text22
  6985  0594                     __ptext22:	
  6986 ;; *************** function _UpdateFanLevel *****************
  6987 ;; Defined at:
  6988 ;;		line 203 in file "klondike.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;		None               void
  6995 ;; Registers used:
  6996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;Total ram usage:        7 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    6
  7009 ;; This function calls:
  7010 ;;		___awtoft
  7011 ;;		___ftadd
  7012 ;;		___ftmul
  7013 ;;		___ftneg
  7014 ;;		___fttol
  7015 ;; This function is called by:
  7016 ;;		_WorkTick
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           
  7021                           ;psect for function _UpdateFanLevel
  7022  0594                     _UpdateFanLevel:	
  7023                           
  7024                           ;klondike.c: 204: Error = Status.Temp - TempTarget;
  7025                           
  7026                           ;incstack = 0
  7027                           ; Regs used in _UpdateFanLevel: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  7028  0594  0023               	movlb	3	; select bank3
  7029  0595  086A               	movf	_TempTarget^(0+384),w
  7030  0596  0021               	movlb	1	; select bank1
  7031  0597  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7032  0598  01CF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7033  0599  09CE               	comf	??_UpdateFanLevel^(0+128),f
  7034  059A  09CF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7035  059B  0ACE               	incf	??_UpdateFanLevel^(0+128),f
  7036  059C  1903               	skipnz
  7037  059D  0ACF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7038  059E  0022               	movlb	2	; select bank2
  7039  059F  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7040  05A0  0021               	movlb	1	; select bank1
  7041  05A1  074E               	addwf	??_UpdateFanLevel^(0+128),w
  7042  05A2  00D0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7043  05A3  084F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7044  05A4  1803               	skipnc
  7045  05A5  0A4F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7046  05A6  00D1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7047  05A7  0850               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7048  05A8  0022               	movlb	2	; select bank2
  7049  05A9  00D2               	movwf	_Error^(0+256)
  7050  05AA  0021               	movlb	1	; select bank1
  7051  05AB  0851               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7052  05AC  0022               	movlb	2	; select bank2
  7053  05AD  00D3               	movwf	(_Error+1)^(0+256)
  7054                           
  7055                           ;klondike.c: 205: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  7056  05AE  0853               	movf	(_Error+1)^(0+256),w
  7057  05AF  0020               	movlb	0	; select bank0
  7058  05B0  01E1               	clrf	?___awtoft+1
  7059  05B1  07E1               	addwf	?___awtoft+1,f
  7060  05B2  0022               	movlb	2	; select bank2
  7061  05B3  0852               	movf	_Error^(0+256),w
  7062  05B4  0020               	movlb	0	; select bank0
  7063  05B5  01E0               	clrf	?___awtoft
  7064  05B6  07E0               	addwf	?___awtoft,f
  7065  05B7  319E  2609  3185   	fcall	___awtoft
  7066  05BA  0020               	movlb	0	; select bank0
  7067  05BB  0860               	movf	?___awtoft,w
  7068  05BC  0021               	movlb	1	; select bank1
  7069  05BD  00B6               	movwf	(?___ftadd^(0+128)+3)
  7070  05BE  0020               	movlb	0	; select bank0
  7071  05BF  0861               	movf	?___awtoft+1,w
  7072  05C0  0021               	movlb	1	; select bank1
  7073  05C1  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  7074  05C2  0020               	movlb	0	; select bank0
  7075  05C3  0862               	movf	?___awtoft+2,w
  7076  05C4  0021               	movlb	1	; select bank1
  7077  05C5  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  7078  05C6  0022               	movlb	2	; select bank2
  7079  05C7  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7080  05C8  0021               	movlb	1	; select bank1
  7081  05C9  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7082  05CA  01CF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  7083  05CB  09CE               	comf	??_UpdateFanLevel^(0+128),f
  7084  05CC  09CF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  7085  05CD  0ACE               	incf	??_UpdateFanLevel^(0+128),f
  7086  05CE  1903               	skipnz
  7087  05CF  0ACF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  7088  05D0  0022               	movlb	2	; select bank2
  7089  05D1  0837               	movf	_LastTemp^(0+256),w
  7090  05D2  0021               	movlb	1	; select bank1
  7091  05D3  074E               	addwf	??_UpdateFanLevel^(0+128),w
  7092  05D4  00D0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  7093  05D5  084F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7094  05D6  1803               	skipnc
  7095  05D7  0A4F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  7096  05D8  00D1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  7097  05D9  35D0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7098  05DA  0DD1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7099  05DB  35D0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7100  05DC  0DD1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7101  05DD  35D0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  7102  05DE  0DD1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  7103  05DF  0850               	movf	(??_UpdateFanLevel+2)^(0+128),w
  7104  05E0  0020               	movlb	0	; select bank0
  7105  05E1  00E0               	movwf	?___awtoft
  7106  05E2  0021               	movlb	1	; select bank1
  7107  05E3  0851               	movf	(??_UpdateFanLevel+3)^(0+128),w
  7108  05E4  0020               	movlb	0	; select bank0
  7109  05E5  00E1               	movwf	?___awtoft+1
  7110  05E6  319E  2609  3185   	fcall	___awtoft
  7111  05E9  0020               	movlb	0	; select bank0
  7112  05EA  0860               	movf	?___awtoft,w
  7113  05EB  0021               	movlb	1	; select bank1
  7114  05EC  00B0               	movwf	?___ftneg^(0+128)
  7115  05ED  0020               	movlb	0	; select bank0
  7116  05EE  0861               	movf	?___awtoft+1,w
  7117  05EF  0021               	movlb	1	; select bank1
  7118  05F0  00B1               	movwf	(?___ftneg+1)^(0+128)
  7119  05F1  0020               	movlb	0	; select bank0
  7120  05F2  0862               	movf	?___awtoft+2,w
  7121  05F3  0021               	movlb	1	; select bank1
  7122  05F4  00B2               	movwf	(?___ftneg+2)^(0+128)
  7123  05F5  3187  27F6  3185   	fcall	___ftneg
  7124  05F8  0021               	movlb	1	; select bank1
  7125  05F9  0830               	movf	?___ftneg^(0+128),w
  7126  05FA  00B3               	movwf	?___ftadd^(0+128)
  7127  05FB  0831               	movf	(?___ftneg+1)^(0+128),w
  7128  05FC  00B4               	movwf	(?___ftadd+1)^(0+128)
  7129  05FD  0832               	movf	(?___ftneg+2)^(0+128),w
  7130  05FE  00B5               	movwf	(?___ftadd+2)^(0+128)
  7131  05FF  318E  26FC  3185   	fcall	___ftadd
  7132  0602  0021               	movlb	1	; select bank1
  7133  0603  0833               	movf	?___ftadd^(0+128),w
  7134  0604  00D2               	movwf	_UpdateFanLevel$2753^(0+128)
  7135  0605  0834               	movf	(?___ftadd+1)^(0+128),w
  7136  0606  00D3               	movwf	(_UpdateFanLevel$2753+1)^(0+128)
  7137  0607  0835               	movf	(?___ftadd+2)^(0+128),w
  7138  0608  00D4               	movwf	(_UpdateFanLevel$2753+2)^(0+128)
  7139                           
  7140                           ;klondike.c: 205: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  7141  0609  0852               	movf	_UpdateFanLevel$2753^(0+128),w
  7142  060A  00B6               	movwf	(?___ftadd^(0+128)+3)
  7143  060B  0853               	movf	(_UpdateFanLevel$2753+1)^(0+128),w
  7144  060C  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  7145  060D  0854               	movf	(_UpdateFanLevel$2753+2)^(0+128),w
  7146  060E  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  7147  060F  0023               	movlb	3	; select bank3
  7148  0610  0831               	movf	(_LastError+1)^(0+384),w
  7149  0611  0020               	movlb	0	; select bank0
  7150  0612  01E1               	clrf	?___awtoft+1
  7151  0613  07E1               	addwf	?___awtoft+1,f
  7152  0614  0023               	movlb	3	; select bank3
  7153  0615  0830               	movf	_LastError^(0+384),w
  7154  0616  0020               	movlb	0	; select bank0
  7155  0617  01E0               	clrf	?___awtoft
  7156  0618  07E0               	addwf	?___awtoft,f
  7157  0619  319E  2609  3185   	fcall	___awtoft
  7158  061C  0020               	movlb	0	; select bank0
  7159  061D  0860               	movf	?___awtoft,w
  7160  061E  0021               	movlb	1	; select bank1
  7161  061F  00A3               	movwf	(?___ftmul^(0+128)+3)
  7162  0620  0020               	movlb	0	; select bank0
  7163  0621  0861               	movf	?___awtoft+1,w
  7164  0622  0021               	movlb	1	; select bank1
  7165  0623  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  7166  0624  0020               	movlb	0	; select bank0
  7167  0625  0862               	movf	?___awtoft+2,w
  7168  0626  0021               	movlb	1	; select bank1
  7169  0627  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  7170  0628  3000               	movlw	0
  7171  0629  00A0               	movwf	?___ftmul^(0+128)
  7172  062A  3000               	movlw	0
  7173  062B  00A1               	movwf	(?___ftmul+1)^(0+128)
  7174  062C  303F               	movlw	63
  7175  062D  00A2               	movwf	(?___ftmul+2)^(0+128)
  7176  062E  318D  2543  3185   	fcall	___ftmul
  7177  0631  0021               	movlb	1	; select bank1
  7178  0632  0820               	movf	?___ftmul^(0+128),w
  7179  0633  00B0               	movwf	?___ftneg^(0+128)
  7180  0634  0821               	movf	(?___ftmul+1)^(0+128),w
  7181  0635  00B1               	movwf	(?___ftneg+1)^(0+128)
  7182  0636  0822               	movf	(?___ftmul+2)^(0+128),w
  7183  0637  00B2               	movwf	(?___ftneg+2)^(0+128)
  7184  0638  3187  27F6  3185   	fcall	___ftneg
  7185  063B  0021               	movlb	1	; select bank1
  7186  063C  0830               	movf	?___ftneg^(0+128),w
  7187  063D  00B3               	movwf	?___ftadd^(0+128)
  7188  063E  0831               	movf	(?___ftneg+1)^(0+128),w
  7189  063F  00B4               	movwf	(?___ftadd+1)^(0+128)
  7190  0640  0832               	movf	(?___ftneg+2)^(0+128),w
  7191  0641  00B5               	movwf	(?___ftadd+2)^(0+128)
  7192  0642  318E  26FC  3185   	fcall	___ftadd
  7193  0645  0021               	movlb	1	; select bank1
  7194  0646  0833               	movf	?___ftadd^(0+128),w
  7195  0647  00C0               	movwf	?___fttol^(0+128)
  7196  0648  0834               	movf	(?___ftadd+1)^(0+128),w
  7197  0649  00C1               	movwf	(?___fttol+1)^(0+128)
  7198  064A  0835               	movf	(?___ftadd+2)^(0+128),w
  7199  064B  00C2               	movwf	(?___fttol+2)^(0+128)
  7200  064C  3196  265C  3185   	fcall	___fttol
  7201  064F  0021               	movlb	1	; select bank1
  7202  0650  0841               	movf	(?___fttol^(0+128)+1),w
  7203  0651  0022               	movlb	2	; select bank2
  7204  0652  01A9               	clrf	(_Step+1)^(0+256)
  7205  0653  07A9               	addwf	(_Step+1)^(0+256),f
  7206  0654  0021               	movlb	1	; select bank1
  7207  0655  0840               	movf	?___fttol^(0+128),w
  7208  0656  0022               	movlb	2	; select bank2
  7209  0657  01A8               	clrf	_Step^(0+256)
  7210  0658  07A8               	addwf	_Step^(0+256),f
  7211                           
  7212                           ;klondike.c: 207: if(FanLevel + Step > 75 && FanLevel + Step <= 255) {
  7213  0659  086E               	movf	_FanLevel^(0+256),w
  7214  065A  0728               	addwf	_Step^(0+256),w
  7215  065B  0021               	movlb	1	; select bank1
  7216  065C  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7217  065D  0022               	movlb	2	; select bank2
  7218  065E  0829               	movf	(_Step+1)^(0+256),w
  7219  065F  1803               	skipnc
  7220  0660  0A29               	incf	(_Step+1)^(0+256),w
  7221  0661  0021               	movlb	1	; select bank1
  7222  0662  00CF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7223  0663  084F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7224  0664  3A80               	xorlw	128
  7225  0665  00FF               	movwf	127
  7226  0666  3080               	movlw	128
  7227  0667  027F               	subwf	127,w
  7228  0668  1D03               	skipz
  7229  0669  2E6C               	goto	u5415
  7230  066A  304C               	movlw	76
  7231  066B  024E               	subwf	??_UpdateFanLevel^(0+128),w
  7232  066C                     u5415:	
  7233  066C  1C03               	skipc
  7234  066D  2E8C               	goto	l5344
  7235  066E  0022               	movlb	2	; select bank2
  7236  066F  086E               	movf	_FanLevel^(0+256),w
  7237  0670  0728               	addwf	_Step^(0+256),w
  7238  0671  0021               	movlb	1	; select bank1
  7239  0672  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7240  0673  0022               	movlb	2	; select bank2
  7241  0674  0829               	movf	(_Step+1)^(0+256),w
  7242  0675  1803               	skipnc
  7243  0676  0A29               	incf	(_Step+1)^(0+256),w
  7244  0677  0021               	movlb	1	; select bank1
  7245  0678  00CF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7246  0679  084F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7247  067A  3A80               	xorlw	128
  7248  067B  00FF               	movwf	127
  7249  067C  3081               	movlw	129
  7250  067D  027F               	subwf	127,w
  7251  067E  1D03               	skipz
  7252  067F  2E82               	goto	u5425
  7253  0680  3000               	movlw	0
  7254  0681  024E               	subwf	??_UpdateFanLevel^(0+128),w
  7255  0682                     u5425:	
  7256  0682  1803               	skipnc
  7257  0683  2E8C               	goto	l5344
  7258                           
  7259                           ;klondike.c: 208: FanLevel += Step;
  7260  0684  0022               	movlb	2	; select bank2
  7261  0685  0828               	movf	_Step^(0+256),w
  7262  0686  0021               	movlb	1	; select bank1
  7263  0687  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7264  0688  084E               	movf	??_UpdateFanLevel^(0+128),w
  7265  0689  0022               	movlb	2	; select bank2
  7266  068A  07EE               	addwf	_FanLevel^(0+256),f
  7267                           
  7268                           ;klondike.c: 209: }
  7269  068B  2EC0               	goto	l721
  7270  068C                     l5344:	
  7271                           
  7272                           ;klondike.c: 210: else if(FanLevel + Step > 255) {
  7273  068C  0022               	movlb	2	; select bank2
  7274  068D  086E               	movf	_FanLevel^(0+256),w
  7275  068E  0728               	addwf	_Step^(0+256),w
  7276  068F  0021               	movlb	1	; select bank1
  7277  0690  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7278  0691  0022               	movlb	2	; select bank2
  7279  0692  0829               	movf	(_Step+1)^(0+256),w
  7280  0693  1803               	skipnc
  7281  0694  0A29               	incf	(_Step+1)^(0+256),w
  7282  0695  0021               	movlb	1	; select bank1
  7283  0696  00CF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7284  0697  084F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7285  0698  3A80               	xorlw	128
  7286  0699  00FF               	movwf	127
  7287  069A  3081               	movlw	129
  7288  069B  027F               	subwf	127,w
  7289  069C  1D03               	skipz
  7290  069D  2EA0               	goto	u5435
  7291  069E  3000               	movlw	0
  7292  069F  024E               	subwf	??_UpdateFanLevel^(0+128),w
  7293  06A0                     u5435:	
  7294  06A0  1C03               	skipc
  7295  06A1  2EA4               	goto	l5348
  7296                           
  7297                           ;klondike.c: 211: FanLevel = 255;
  7298  06A2  30FF               	movlw	255
  7299  06A3  2EBB               	goto	L7
  7300  06A4                     l5348:	
  7301                           ;klondike.c: 212: }
  7302                           
  7303                           
  7304                           ;klondike.c: 213: else if(FanLevel + Step < 75) {
  7305  06A4  0022               	movlb	2	; select bank2
  7306  06A5  086E               	movf	_FanLevel^(0+256),w
  7307  06A6  0728               	addwf	_Step^(0+256),w
  7308  06A7  0021               	movlb	1	; select bank1
  7309  06A8  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7310  06A9  0022               	movlb	2	; select bank2
  7311  06AA  0829               	movf	(_Step+1)^(0+256),w
  7312  06AB  1803               	skipnc
  7313  06AC  0A29               	incf	(_Step+1)^(0+256),w
  7314  06AD  0021               	movlb	1	; select bank1
  7315  06AE  00CF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  7316  06AF  084F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  7317  06B0  3A80               	xorlw	128
  7318  06B1  00FF               	movwf	127
  7319  06B2  3080               	movlw	128
  7320  06B3  027F               	subwf	127,w
  7321  06B4  1D03               	skipz
  7322  06B5  2EB8               	goto	u5445
  7323  06B6  304B               	movlw	75
  7324  06B7  024E               	subwf	??_UpdateFanLevel^(0+128),w
  7325  06B8                     u5445:	
  7326  06B8  1803               	skipnc
  7327  06B9  2EC0               	goto	l721
  7328                           
  7329                           ;klondike.c: 214: FanLevel = 75;
  7330  06BA  304B               	movlw	75
  7331  06BB                     L7:	
  7332  06BB  0021               	movlb	1	; select bank1
  7333  06BC  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7334  06BD  084E               	movf	??_UpdateFanLevel^(0+128),w
  7335  06BE  0022               	movlb	2	; select bank2
  7336  06BF  00EE               	movwf	_FanLevel^(0+256)
  7337  06C0                     l721:	
  7338                           
  7339                           ;klondike.c: 215: }
  7340                           ;klondike.c: 217: LastTemp = Status.Temp;
  7341  06C0  0022               	movlb	2	; select bank2
  7342  06C1  085E               	movf	(_Status^(0+256)+5),w	;volatile
  7343  06C2  0021               	movlb	1	; select bank1
  7344  06C3  00CE               	movwf	??_UpdateFanLevel^(0+128)
  7345  06C4  084E               	movf	??_UpdateFanLevel^(0+128),w
  7346  06C5  0022               	movlb	2	; select bank2
  7347  06C6  00B7               	movwf	_LastTemp^(0+256)
  7348                           
  7349                           ;klondike.c: 218: LastError = Error;
  7350  06C7  0853               	movf	(_Error+1)^(0+256),w
  7351  06C8  0023               	movlb	3	; select bank3
  7352  06C9  01B1               	clrf	(_LastError+1)^(0+384)
  7353  06CA  07B1               	addwf	(_LastError+1)^(0+384),f
  7354  06CB  0022               	movlb	2	; select bank2
  7355  06CC  0852               	movf	_Error^(0+256),w
  7356  06CD  0023               	movlb	3	; select bank3
  7357  06CE  01B0               	clrf	_LastError^(0+384)
  7358  06CF  07B0               	addwf	_LastError^(0+384),f
  7359                           
  7360                           ;klondike.c: 220: PWM1DCH = Status.FanSpeed = FanLevel;
  7361  06D0  3006               	movlw	6
  7362  06D1  3E59               	addlw	_Status& (0+255)
  7363  06D2  0086               	movwf	6
  7364  06D3  3001               	movlw	1	; select bank2/3
  7365  06D4  0087               	movwf	7
  7366  06D5  0022               	movlb	2	; select bank2
  7367  06D6  086E               	movf	_FanLevel^(0+256),w
  7368  06D7  3FC0               	movwi [0]fsr1
  7369  06D8  002C               	movlb	12	; select bank12
  7370  06D9  0092               	movwf	18	;volatile
  7371  06DA  0008               	return
  7372  06DB                     __end_of_UpdateFanLevel:	
  7373                           
  7374                           	psect	text23
  7375  165C                     __ptext23:	
  7376 ;; *************** function ___fttol *****************
  7377 ;; Defined at:
  7378 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  f1              3   32[BANK1 ] float 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  lval            4   41[BANK1 ] unsigned long 
  7383 ;;  exp1            1   45[BANK1 ] unsigned char 
  7384 ;;  sign1           1   40[BANK1 ] unsigned char 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  4   32[BANK1 ] long 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7394 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;Total ram usage:       14 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    4
  7401 ;; This function calls:
  7402 ;;		Nothing
  7403 ;; This function is called by:
  7404 ;;		_UpdateFanLevel
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           
  7409                           ;psect for function ___fttol
  7410  165C                     ___fttol:	
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7414  165C  0021               	movlb	1	; select bank1
  7415  165D  0840               	movf	___fttol@f1^(0+128),w
  7416  165E  00C4               	movwf	??___fttol^(0+128)
  7417  165F  0841               	movf	(___fttol@f1+1)^(0+128),w
  7418  1660  00C5               	movwf	(??___fttol^(0+128)+1)
  7419  1661  0842               	movf	(___fttol@f1+2)^(0+128),w
  7420  1662  00C6               	movwf	(??___fttol^(0+128)+2)
  7421  1663  1003               	clrc
  7422  1664  0D45               	rlf	(??___fttol^(0+128)+1),w
  7423  1665  0D46               	rlf	(??___fttol^(0+128)+2),w
  7424  1666  00C7               	movwf	(??___fttol+3)^(0+128)
  7425  1667  0847               	movf	(??___fttol+3)^(0+128),w
  7426  1668  00CD               	movwf	___fttol@exp1^(0+128)
  7427  1669  08CD               	movf	___fttol@exp1^(0+128),f
  7428  166A  1D03               	skipz
  7429  166B  2E75               	goto	l5796
  7430  166C  3000               	movlw	0
  7431  166D  00C3               	movwf	(?___fttol+3)^(0+128)
  7432  166E  3000               	movlw	0
  7433  166F  00C2               	movwf	(?___fttol+2)^(0+128)
  7434  1670  3000               	movlw	0
  7435  1671  00C1               	movwf	(?___fttol+1)^(0+128)
  7436  1672  3000               	movlw	0
  7437  1673  00C0               	movwf	?___fttol^(0+128)
  7438  1674  0008               	return
  7439  1675                     l5796:	
  7440  1675  0840               	movf	___fttol@f1^(0+128),w
  7441  1676  00C4               	movwf	??___fttol^(0+128)
  7442  1677  0841               	movf	(___fttol@f1+1)^(0+128),w
  7443  1678  00C5               	movwf	(??___fttol^(0+128)+1)
  7444  1679  0842               	movf	(___fttol@f1+2)^(0+128),w
  7445  167A  00C6               	movwf	(??___fttol^(0+128)+2)
  7446  167B  3017               	movlw	23
  7447  167C                     u6285:	
  7448  167C  36C6               	lsrf	(??___fttol^(0+128)+2),f
  7449  167D  0CC5               	rrf	(??___fttol^(0+128)+1),f
  7450  167E  0CC4               	rrf	??___fttol^(0+128),f
  7451  167F  0B89               	decfsz	9,f
  7452  1680  2E7C               	goto	u6285
  7453  1681  0844               	movf	??___fttol^(0+128),w
  7454  1682  00C7               	movwf	(??___fttol+3)^(0+128)
  7455  1683  0847               	movf	(??___fttol+3)^(0+128),w
  7456  1684  00C8               	movwf	___fttol@sign1^(0+128)
  7457  1685  17C1               	bsf	(___fttol@f1^(0+128)+1),7
  7458  1686  30FF               	movlw	255
  7459  1687  05C0               	andwf	___fttol@f1^(0+128),f
  7460  1688  30FF               	movlw	255
  7461  1689  05C1               	andwf	(___fttol@f1+1)^(0+128),f
  7462  168A  3000               	movlw	0
  7463  168B  05C2               	andwf	(___fttol@f1+2)^(0+128),f
  7464  168C  0840               	movf	___fttol@f1^(0+128),w
  7465  168D  00C9               	movwf	___fttol@lval^(0+128)
  7466  168E  0841               	movf	(___fttol@f1+1)^(0+128),w
  7467  168F  00CA               	movwf	(___fttol@lval^(0+128)+1)
  7468  1690  0842               	movf	(___fttol@f1+2)^(0+128),w
  7469  1691  00CB               	movwf	(___fttol@lval^(0+128)+2)
  7470  1692  01CC               	clrf	(___fttol@lval^(0+128)+3)
  7471  1693  308E               	movlw	142
  7472  1694  02CD               	subwf	___fttol@exp1^(0+128),f
  7473  1695  1FCD               	btfss	___fttol@exp1^(0+128),7
  7474  1696  2EB3               	goto	l5816
  7475  1697  084D               	movf	___fttol@exp1^(0+128),w
  7476  1698  3A80               	xorlw	128
  7477  1699  3E8F               	addlw	143
  7478  169A  1803               	skipnc
  7479  169B  2EA5               	goto	l5814
  7480  169C  3000               	movlw	0
  7481  169D  00C3               	movwf	(?___fttol+3)^(0+128)
  7482  169E  3000               	movlw	0
  7483  169F  00C2               	movwf	(?___fttol+2)^(0+128)
  7484  16A0  3000               	movlw	0
  7485  16A1  00C1               	movwf	(?___fttol+1)^(0+128)
  7486  16A2  3000               	movlw	0
  7487  16A3  00C0               	movwf	?___fttol^(0+128)
  7488  16A4  0008               	return
  7489  16A5                     l5814:	
  7490  16A5  3001               	movlw	1
  7491  16A6                     u6315:	
  7492  16A6  36CC               	lsrf	(___fttol@lval+3)^(0+128),f
  7493  16A7  0CCB               	rrf	(___fttol@lval+2)^(0+128),f
  7494  16A8  0CCA               	rrf	(___fttol@lval+1)^(0+128),f
  7495  16A9  0CC9               	rrf	___fttol@lval^(0+128),f
  7496  16AA  0B89               	decfsz	9,f
  7497  16AB  2EA6               	goto	u6315
  7498  16AC  3001               	movlw	1
  7499  16AD  00C4               	movwf	??___fttol^(0+128)
  7500  16AE  0844               	movf	??___fttol^(0+128),w
  7501  16AF  07CD               	addwf	___fttol@exp1^(0+128),f
  7502  16B0  1903               	btfsc	3,2
  7503  16B1  2ECC               	goto	l5826
  7504  16B2  2EA5               	goto	l5814
  7505  16B3                     l5816:	
  7506  16B3  3018               	movlw	24
  7507  16B4  024D               	subwf	___fttol@exp1^(0+128),w
  7508  16B5  1C03               	skipc
  7509  16B6  2EC9               	goto	l5824
  7510  16B7  3000               	movlw	0
  7511  16B8  00C3               	movwf	(?___fttol+3)^(0+128)
  7512  16B9  3000               	movlw	0
  7513  16BA  00C2               	movwf	(?___fttol+2)^(0+128)
  7514  16BB  3000               	movlw	0
  7515  16BC  00C1               	movwf	(?___fttol+1)^(0+128)
  7516  16BD  3000               	movlw	0
  7517  16BE  00C0               	movwf	?___fttol^(0+128)
  7518  16BF  0008               	return
  7519  16C0                     l5822:	
  7520  16C0  3001               	movlw	1
  7521  16C1                     u6345:	
  7522  16C1  35C9               	lslf	___fttol@lval^(0+128),f
  7523  16C2  0DCA               	rlf	(___fttol@lval+1)^(0+128),f
  7524  16C3  0DCB               	rlf	(___fttol@lval+2)^(0+128),f
  7525  16C4  0DCC               	rlf	(___fttol@lval+3)^(0+128),f
  7526  16C5  0B89               	decfsz	9,f
  7527  16C6  2EC1               	goto	u6345
  7528  16C7  3001               	movlw	1
  7529  16C8  02CD               	subwf	___fttol@exp1^(0+128),f
  7530  16C9                     l5824:	
  7531  16C9  08CD               	movf	___fttol@exp1^(0+128),f
  7532  16CA  1D03               	skipz
  7533  16CB  2EC0               	goto	l5822
  7534  16CC                     l5826:	
  7535  16CC  0848               	movf	___fttol@sign1^(0+128),w
  7536  16CD  1903               	btfsc	3,2
  7537  16CE  2EDA               	goto	l5830
  7538  16CF  09C9               	comf	___fttol@lval^(0+128),f
  7539  16D0  09CA               	comf	(___fttol@lval+1)^(0+128),f
  7540  16D1  09CB               	comf	(___fttol@lval+2)^(0+128),f
  7541  16D2  09CC               	comf	(___fttol@lval+3)^(0+128),f
  7542  16D3  0AC9               	incf	___fttol@lval^(0+128),f
  7543  16D4  1903               	skipnz
  7544  16D5  0ACA               	incf	(___fttol@lval+1)^(0+128),f
  7545  16D6  1903               	skipnz
  7546  16D7  0ACB               	incf	(___fttol@lval+2)^(0+128),f
  7547  16D8  1903               	skipnz
  7548  16D9  0ACC               	incf	(___fttol@lval+3)^(0+128),f
  7549  16DA                     l5830:	
  7550  16DA  084C               	movf	(___fttol@lval+3)^(0+128),w
  7551  16DB  00C3               	movwf	(?___fttol+3)^(0+128)
  7552  16DC  084B               	movf	(___fttol@lval+2)^(0+128),w
  7553  16DD  00C2               	movwf	(?___fttol+2)^(0+128)
  7554  16DE  084A               	movf	(___fttol@lval+1)^(0+128),w
  7555  16DF  00C1               	movwf	(?___fttol+1)^(0+128)
  7556  16E0  0849               	movf	___fttol@lval^(0+128),w
  7557  16E1  00C0               	movwf	?___fttol^(0+128)
  7558  16E2  0008               	return
  7559  16E3                     __end_of___fttol:	
  7560                           
  7561                           	psect	text24
  7562  07F6                     __ptext24:	
  7563 ;; *************** function ___ftneg *****************
  7564 ;; Defined at:
  7565 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  f1              3   16[BANK1 ] float 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  3   16[BANK1 ] float 
  7572 ;; Registers used:
  7573 ;;		wreg
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7579 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;Total ram usage:        3 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    4
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_UpdateFanLevel
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           
  7594                           ;psect for function ___ftneg
  7595  07F6                     ___ftneg:	
  7596                           
  7597                           ;incstack = 0
  7598                           ; Regs used in ___ftneg: [wreg]
  7599  07F6  0021               	movlb	1	; select bank1
  7600  07F7  0832               	movf	(___ftneg@f1+2)^(0+128),w
  7601  07F8  0431               	iorwf	(___ftneg@f1+1)^(0+128),w
  7602  07F9  0430               	iorwf	___ftneg@f1^(0+128),w
  7603  07FA  1903               	skipnz
  7604  07FB  0008               	return
  7605  07FC  3080               	movlw	128
  7606  07FD  06B2               	xorwf	(___ftneg@f1+2)^(0+128),f
  7607  07FE  0008               	return
  7608  07FF                     __end_of___ftneg:	
  7609                           
  7610                           	psect	text25
  7611  0D43                     __ptext25:	
  7612 ;; *************** function ___ftmul *****************
  7613 ;; Defined at:
  7614 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  f1              3    0[BANK1 ] float 
  7617 ;;  f2              3    3[BANK1 ] float 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  f3_as_produc    3   11[BANK1 ] unsigned um
  7620 ;;  sign            1   15[BANK1 ] unsigned char 
  7621 ;;  cntr            1   14[BANK1 ] unsigned char 
  7622 ;;  exp             1   10[BANK1 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  3    0[BANK1 ] float 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, pclath, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7632 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;Total ram usage:       16 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    5
  7639 ;; This function calls:
  7640 ;;		___ftpack
  7641 ;; This function is called by:
  7642 ;;		_UpdateFanLevel
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function ___ftmul
  7648  0D43                     ___ftmul:	
  7649                           
  7650                           ;incstack = 0
  7651                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7652  0D43  0021               	movlb	1	; select bank1
  7653  0D44  0820               	movf	___ftmul@f1^(0+128),w
  7654  0D45  00A6               	movwf	??___ftmul^(0+128)
  7655  0D46  0821               	movf	(___ftmul@f1+1)^(0+128),w
  7656  0D47  00A7               	movwf	(??___ftmul^(0+128)+1)
  7657  0D48  0822               	movf	(___ftmul@f1+2)^(0+128),w
  7658  0D49  00A8               	movwf	(??___ftmul^(0+128)+2)
  7659  0D4A  1003               	clrc
  7660  0D4B  0D27               	rlf	(??___ftmul^(0+128)+1),w
  7661  0D4C  0D28               	rlf	(??___ftmul^(0+128)+2),w
  7662  0D4D  00A9               	movwf	(??___ftmul+3)^(0+128)
  7663  0D4E  0829               	movf	(??___ftmul+3)^(0+128),w
  7664  0D4F  00AA               	movwf	___ftmul@exp^(0+128)
  7665  0D50  08AA               	movf	___ftmul@exp^(0+128),f
  7666  0D51  1D03               	skipz
  7667  0D52  2D5A               	goto	l5738
  7668  0D53  3000               	movlw	0
  7669  0D54  00A0               	movwf	?___ftmul^(0+128)
  7670  0D55  3000               	movlw	0
  7671  0D56  00A1               	movwf	(?___ftmul+1)^(0+128)
  7672  0D57  3000               	movlw	0
  7673  0D58  00A2               	movwf	(?___ftmul+2)^(0+128)
  7674  0D59  0008               	return
  7675  0D5A                     l5738:	
  7676  0D5A  0823               	movf	___ftmul@f2^(0+128),w
  7677  0D5B  00A6               	movwf	??___ftmul^(0+128)
  7678  0D5C  0824               	movf	(___ftmul@f2+1)^(0+128),w
  7679  0D5D  00A7               	movwf	(??___ftmul^(0+128)+1)
  7680  0D5E  0825               	movf	(___ftmul@f2+2)^(0+128),w
  7681  0D5F  00A8               	movwf	(??___ftmul^(0+128)+2)
  7682  0D60  1003               	clrc
  7683  0D61  0D27               	rlf	(??___ftmul^(0+128)+1),w
  7684  0D62  0D28               	rlf	(??___ftmul^(0+128)+2),w
  7685  0D63  00A9               	movwf	(??___ftmul+3)^(0+128)
  7686  0D64  0829               	movf	(??___ftmul+3)^(0+128),w
  7687  0D65  00AF               	movwf	___ftmul@sign^(0+128)
  7688  0D66  08AF               	movf	___ftmul@sign^(0+128),f
  7689  0D67  1D03               	skipz
  7690  0D68  2D70               	goto	l5744
  7691  0D69  3000               	movlw	0
  7692  0D6A  00A0               	movwf	?___ftmul^(0+128)
  7693  0D6B  3000               	movlw	0
  7694  0D6C  00A1               	movwf	(?___ftmul+1)^(0+128)
  7695  0D6D  3000               	movlw	0
  7696  0D6E  00A2               	movwf	(?___ftmul+2)^(0+128)
  7697  0D6F  0008               	return
  7698  0D70                     l5744:	
  7699  0D70  082F               	movf	___ftmul@sign^(0+128),w
  7700  0D71  3E7B               	addlw	123
  7701  0D72  00A6               	movwf	??___ftmul^(0+128)
  7702  0D73  0826               	movf	??___ftmul^(0+128),w
  7703  0D74  07AA               	addwf	___ftmul@exp^(0+128),f
  7704  0D75  0820               	movf	___ftmul@f1^(0+128),w
  7705  0D76  00A6               	movwf	??___ftmul^(0+128)
  7706  0D77  0821               	movf	(___ftmul@f1+1)^(0+128),w
  7707  0D78  00A7               	movwf	(??___ftmul^(0+128)+1)
  7708  0D79  0822               	movf	(___ftmul@f1+2)^(0+128),w
  7709  0D7A  00A8               	movwf	(??___ftmul^(0+128)+2)
  7710  0D7B  3010               	movlw	16
  7711  0D7C                     u6165:	
  7712  0D7C  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  7713  0D7D  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  7714  0D7E  0CA6               	rrf	??___ftmul^(0+128),f
  7715  0D7F  0B89               	decfsz	9,f
  7716  0D80  2D7C               	goto	u6165
  7717  0D81  0826               	movf	??___ftmul^(0+128),w
  7718  0D82  00A9               	movwf	(??___ftmul+3)^(0+128)
  7719  0D83  0829               	movf	(??___ftmul+3)^(0+128),w
  7720  0D84  00AF               	movwf	___ftmul@sign^(0+128)
  7721  0D85  0823               	movf	___ftmul@f2^(0+128),w
  7722  0D86  00A6               	movwf	??___ftmul^(0+128)
  7723  0D87  0824               	movf	(___ftmul@f2+1)^(0+128),w
  7724  0D88  00A7               	movwf	(??___ftmul^(0+128)+1)
  7725  0D89  0825               	movf	(___ftmul@f2+2)^(0+128),w
  7726  0D8A  00A8               	movwf	(??___ftmul^(0+128)+2)
  7727  0D8B  3010               	movlw	16
  7728  0D8C                     u6175:	
  7729  0D8C  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  7730  0D8D  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  7731  0D8E  0CA6               	rrf	??___ftmul^(0+128),f
  7732  0D8F  0B89               	decfsz	9,f
  7733  0D90  2D8C               	goto	u6175
  7734  0D91  0826               	movf	??___ftmul^(0+128),w
  7735  0D92  00A9               	movwf	(??___ftmul+3)^(0+128)
  7736  0D93  0829               	movf	(??___ftmul+3)^(0+128),w
  7737  0D94  06AF               	xorwf	___ftmul@sign^(0+128),f
  7738  0D95  3080               	movlw	128
  7739  0D96  00A6               	movwf	??___ftmul^(0+128)
  7740  0D97  0826               	movf	??___ftmul^(0+128),w
  7741  0D98  05AF               	andwf	___ftmul@sign^(0+128),f
  7742  0D99  17A1               	bsf	(___ftmul@f1^(0+128)+1),7
  7743  0D9A  17A4               	bsf	(___ftmul@f2^(0+128)+1),7
  7744  0D9B  30FF               	movlw	255
  7745  0D9C  05A3               	andwf	___ftmul@f2^(0+128),f
  7746  0D9D  30FF               	movlw	255
  7747  0D9E  05A4               	andwf	(___ftmul@f2+1)^(0+128),f
  7748  0D9F  3000               	movlw	0
  7749  0DA0  05A5               	andwf	(___ftmul@f2+2)^(0+128),f
  7750  0DA1  3000               	movlw	0
  7751  0DA2  00AB               	movwf	___ftmul@f3_as_product^(0+128)
  7752  0DA3  3000               	movlw	0
  7753  0DA4  00AC               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  7754  0DA5  3000               	movlw	0
  7755  0DA6  00AD               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  7756  0DA7  3007               	movlw	7
  7757  0DA8  00A6               	movwf	??___ftmul^(0+128)
  7758  0DA9  0826               	movf	??___ftmul^(0+128),w
  7759  0DAA  00AE               	movwf	___ftmul@cntr^(0+128)
  7760  0DAB                     l5756:	
  7761  0DAB  1C20               	btfss	___ftmul@f1^(0+128),0
  7762  0DAC  2DB3               	goto	l5760
  7763  0DAD  0823               	movf	___ftmul@f2^(0+128),w
  7764  0DAE  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  7765  0DAF  0824               	movf	(___ftmul@f2+1)^(0+128),w
  7766  0DB0  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  7767  0DB1  0825               	movf	(___ftmul@f2+2)^(0+128),w
  7768  0DB2  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  7769  0DB3                     l5760:	
  7770  0DB3  3001               	movlw	1
  7771  0DB4                     u6195:	
  7772  0DB4  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  7773  0DB5  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  7774  0DB6  0CA0               	rrf	___ftmul@f1^(0+128),f
  7775  0DB7  0B89               	decfsz	9,f
  7776  0DB8  2DB4               	goto	u6195
  7777  0DB9  3001               	movlw	1
  7778  0DBA                     u6205:	
  7779  0DBA  35A3               	lslf	___ftmul@f2^(0+128),f
  7780  0DBB  0DA4               	rlf	(___ftmul@f2+1)^(0+128),f
  7781  0DBC  0DA5               	rlf	(___ftmul@f2+2)^(0+128),f
  7782  0DBD  0B89               	decfsz	9,f
  7783  0DBE  2DBA               	goto	u6205
  7784  0DBF  3001               	movlw	1
  7785  0DC0  02AE               	subwf	___ftmul@cntr^(0+128),f
  7786  0DC1  1D03               	btfss	3,2
  7787  0DC2  2DAB               	goto	l5756
  7788  0DC3  3009               	movlw	9
  7789  0DC4  00A6               	movwf	??___ftmul^(0+128)
  7790  0DC5  0826               	movf	??___ftmul^(0+128),w
  7791  0DC6  00AE               	movwf	___ftmul@cntr^(0+128)
  7792  0DC7                     l5768:	
  7793  0DC7  1C20               	btfss	___ftmul@f1^(0+128),0
  7794  0DC8  2DCF               	goto	l5772
  7795  0DC9  0823               	movf	___ftmul@f2^(0+128),w
  7796  0DCA  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  7797  0DCB  0824               	movf	(___ftmul@f2+1)^(0+128),w
  7798  0DCC  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  7799  0DCD  0825               	movf	(___ftmul@f2+2)^(0+128),w
  7800  0DCE  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  7801  0DCF                     l5772:	
  7802  0DCF  3001               	movlw	1
  7803  0DD0                     u6235:	
  7804  0DD0  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  7805  0DD1  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  7806  0DD2  0CA0               	rrf	___ftmul@f1^(0+128),f
  7807  0DD3  0B89               	decfsz	9,f
  7808  0DD4  2DD0               	goto	u6235
  7809  0DD5  3001               	movlw	1
  7810  0DD6                     u6245:	
  7811  0DD6  36AD               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  7812  0DD7  0CAC               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  7813  0DD8  0CAB               	rrf	___ftmul@f3_as_product^(0+128),f
  7814  0DD9  0B89               	decfsz	9,f
  7815  0DDA  2DD6               	goto	u6245
  7816  0DDB  3001               	movlw	1
  7817  0DDC  02AE               	subwf	___ftmul@cntr^(0+128),f
  7818  0DDD  1D03               	btfss	3,2
  7819  0DDE  2DC7               	goto	l5768
  7820  0DDF  082B               	movf	___ftmul@f3_as_product^(0+128),w
  7821  0DE0  0020               	movlb	0	; select bank0
  7822  0DE1  00D8               	movwf	?___ftpack
  7823  0DE2  0021               	movlb	1	; select bank1
  7824  0DE3  082C               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  7825  0DE4  0020               	movlb	0	; select bank0
  7826  0DE5  00D9               	movwf	?___ftpack+1
  7827  0DE6  0021               	movlb	1	; select bank1
  7828  0DE7  082D               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  7829  0DE8  0020               	movlb	0	; select bank0
  7830  0DE9  00DA               	movwf	?___ftpack+2
  7831  0DEA  0021               	movlb	1	; select bank1
  7832  0DEB  082A               	movf	___ftmul@exp^(0+128),w
  7833  0DEC  00A6               	movwf	??___ftmul^(0+128)
  7834  0DED  0826               	movf	??___ftmul^(0+128),w
  7835  0DEE  0020               	movlb	0	; select bank0
  7836  0DEF  00DB               	movwf	?___ftpack+3
  7837  0DF0  0021               	movlb	1	; select bank1
  7838  0DF1  082F               	movf	___ftmul@sign^(0+128),w
  7839  0DF2  00A7               	movwf	(??___ftmul+1)^(0+128)
  7840  0DF3  0827               	movf	(??___ftmul+1)^(0+128),w
  7841  0DF4  0020               	movlb	0	; select bank0
  7842  0DF5  00DC               	movwf	?___ftpack+4
  7843  0DF6  3192  225E         	fcall	___ftpack
  7844  0DF8  0020               	movlb	0	; select bank0
  7845  0DF9  0858               	movf	?___ftpack,w
  7846  0DFA  0021               	movlb	1	; select bank1
  7847  0DFB  00A0               	movwf	?___ftmul^(0+128)
  7848  0DFC  0020               	movlb	0	; select bank0
  7849  0DFD  0859               	movf	?___ftpack+1,w
  7850  0DFE  0021               	movlb	1	; select bank1
  7851  0DFF  00A1               	movwf	(?___ftmul+1)^(0+128)
  7852  0E00  0020               	movlb	0	; select bank0
  7853  0E01  085A               	movf	?___ftpack+2,w
  7854  0E02  0021               	movlb	1	; select bank1
  7855  0E03  00A2               	movwf	(?___ftmul+2)^(0+128)
  7856  0E04  0008               	return
  7857  0E05                     __end_of___ftmul:	
  7858                           
  7859                           	psect	text26
  7860  0EFC                     __ptext26:	
  7861 ;; *************** function ___ftadd *****************
  7862 ;; Defined at:
  7863 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;  f1              3   19[BANK1 ] float 
  7866 ;;  f2              3   22[BANK1 ] float 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  exp1            1   31[BANK1 ] unsigned char 
  7869 ;;  exp2            1   30[BANK1 ] unsigned char 
  7870 ;;  sign            1   29[BANK1 ] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  3   19[BANK1 ] float 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, pclath, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7880 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;Total ram usage:       13 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    5
  7887 ;; This function calls:
  7888 ;;		___ftpack
  7889 ;; This function is called by:
  7890 ;;		_UpdateFanLevel
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           
  7895                           ;psect for function ___ftadd
  7896  0EFC                     ___ftadd:	
  7897                           
  7898                           ;incstack = 0
  7899                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7900  0EFC  0021               	movlb	1	; select bank1
  7901  0EFD  0833               	movf	___ftadd@f1^(0+128),w
  7902  0EFE  00B9               	movwf	??___ftadd^(0+128)
  7903  0EFF  0834               	movf	(___ftadd@f1+1)^(0+128),w
  7904  0F00  00BA               	movwf	(??___ftadd^(0+128)+1)
  7905  0F01  0835               	movf	(___ftadd@f1+2)^(0+128),w
  7906  0F02  00BB               	movwf	(??___ftadd^(0+128)+2)
  7907  0F03  1003               	clrc
  7908  0F04  0D3A               	rlf	(??___ftadd^(0+128)+1),w
  7909  0F05  0D3B               	rlf	(??___ftadd^(0+128)+2),w
  7910  0F06  00BC               	movwf	(??___ftadd+3)^(0+128)
  7911  0F07  083C               	movf	(??___ftadd+3)^(0+128),w
  7912  0F08  00BF               	movwf	___ftadd@exp1^(0+128)
  7913  0F09  0836               	movf	___ftadd@f2^(0+128),w
  7914  0F0A  00B9               	movwf	??___ftadd^(0+128)
  7915  0F0B  0837               	movf	(___ftadd@f2+1)^(0+128),w
  7916  0F0C  00BA               	movwf	(??___ftadd^(0+128)+1)
  7917  0F0D  0838               	movf	(___ftadd@f2+2)^(0+128),w
  7918  0F0E  00BB               	movwf	(??___ftadd^(0+128)+2)
  7919  0F0F  1003               	clrc
  7920  0F10  0D3A               	rlf	(??___ftadd^(0+128)+1),w
  7921  0F11  0D3B               	rlf	(??___ftadd^(0+128)+2),w
  7922  0F12  00BC               	movwf	(??___ftadd+3)^(0+128)
  7923  0F13  083C               	movf	(??___ftadd+3)^(0+128),w
  7924  0F14  00BE               	movwf	___ftadd@exp2^(0+128)
  7925  0F15  083F               	movf	___ftadd@exp1^(0+128),w
  7926  0F16  1903               	btfsc	3,2
  7927  0F17  2F24               	goto	l5668
  7928  0F18  083E               	movf	___ftadd@exp2^(0+128),w
  7929  0F19  023F               	subwf	___ftadd@exp1^(0+128),w
  7930  0F1A  1803               	skipnc
  7931  0F1B  2F2B               	goto	l5672
  7932  0F1C  033F               	decf	___ftadd@exp1^(0+128),w
  7933  0F1D  3AFF               	xorlw	255
  7934  0F1E  073E               	addwf	___ftadd@exp2^(0+128),w
  7935  0F1F  00B9               	movwf	??___ftadd^(0+128)
  7936  0F20  3019               	movlw	25
  7937  0F21  0239               	subwf	??___ftadd^(0+128),w
  7938  0F22  1C03               	skipc
  7939  0F23  2F2B               	goto	l5672
  7940  0F24                     l5668:	
  7941  0F24  0836               	movf	___ftadd@f2^(0+128),w
  7942  0F25  00B3               	movwf	?___ftadd^(0+128)
  7943  0F26  0837               	movf	(___ftadd@f2+1)^(0+128),w
  7944  0F27  00B4               	movwf	(?___ftadd+1)^(0+128)
  7945  0F28  0838               	movf	(___ftadd@f2+2)^(0+128),w
  7946  0F29  00B5               	movwf	(?___ftadd+2)^(0+128)
  7947  0F2A  0008               	return
  7948  0F2B                     l5672:	
  7949  0F2B  083E               	movf	___ftadd@exp2^(0+128),w
  7950  0F2C  1903               	btfsc	3,2
  7951  0F2D  0008               	return
  7952  0F2E  083F               	movf	___ftadd@exp1^(0+128),w
  7953  0F2F  023E               	subwf	___ftadd@exp2^(0+128),w
  7954  0F30  1803               	skipnc
  7955  0F31  2F3A               	goto	l5678
  7956  0F32  033E               	decf	___ftadd@exp2^(0+128),w
  7957  0F33  3AFF               	xorlw	255
  7958  0F34  073F               	addwf	___ftadd@exp1^(0+128),w
  7959  0F35  00B9               	movwf	??___ftadd^(0+128)
  7960  0F36  3019               	movlw	25
  7961  0F37  0239               	subwf	??___ftadd^(0+128),w
  7962  0F38  1803               	btfsc	3,0
  7963  0F39  0008               	return
  7964  0F3A                     l5678:	
  7965  0F3A  3006               	movlw	6
  7966  0F3B  00B9               	movwf	??___ftadd^(0+128)
  7967  0F3C  0839               	movf	??___ftadd^(0+128),w
  7968  0F3D  00BD               	movwf	___ftadd@sign^(0+128)
  7969  0F3E  1BB5               	btfsc	(___ftadd@f1+2)^(0+128),7
  7970  0F3F  17BD               	bsf	___ftadd@sign^(0+128),7
  7971  0F40  1BB8               	btfsc	(___ftadd@f2+2)^(0+128),7
  7972  0F41  173D               	bsf	___ftadd@sign^(0+128),6
  7973  0F42  17B4               	bsf	(___ftadd@f1^(0+128)+1),7
  7974  0F43  30FF               	movlw	255
  7975  0F44  05B3               	andwf	___ftadd@f1^(0+128),f
  7976  0F45  30FF               	movlw	255
  7977  0F46  05B4               	andwf	(___ftadd@f1+1)^(0+128),f
  7978  0F47  3000               	movlw	0
  7979  0F48  05B5               	andwf	(___ftadd@f1+2)^(0+128),f
  7980  0F49  17B7               	bsf	(___ftadd@f2^(0+128)+1),7
  7981  0F4A  30FF               	movlw	255
  7982  0F4B  05B6               	andwf	___ftadd@f2^(0+128),f
  7983  0F4C  30FF               	movlw	255
  7984  0F4D  05B7               	andwf	(___ftadd@f2+1)^(0+128),f
  7985  0F4E  3000               	movlw	0
  7986  0F4F  05B8               	andwf	(___ftadd@f2+2)^(0+128),f
  7987  0F50  083E               	movf	___ftadd@exp2^(0+128),w
  7988  0F51  023F               	subwf	___ftadd@exp1^(0+128),w
  7989  0F52  1803               	skipnc
  7990  0F53  2F76               	goto	l5700
  7991  0F54                     l5690:	
  7992  0F54  3001               	movlw	1
  7993  0F55                     u6005:	
  7994  0F55  35B6               	lslf	___ftadd@f2^(0+128),f
  7995  0F56  0DB7               	rlf	(___ftadd@f2+1)^(0+128),f
  7996  0F57  0DB8               	rlf	(___ftadd@f2+2)^(0+128),f
  7997  0F58  0B89               	decfsz	9,f
  7998  0F59  2F55               	goto	u6005
  7999  0F5A  3001               	movlw	1
  8000  0F5B  02BE               	subwf	___ftadd@exp2^(0+128),f
  8001  0F5C  083E               	movf	___ftadd@exp2^(0+128),w
  8002  0F5D  063F               	xorwf	___ftadd@exp1^(0+128),w
  8003  0F5E  1903               	skipnz
  8004  0F5F  2F71               	goto	l5698
  8005  0F60  3001               	movlw	1
  8006  0F61  02BD               	subwf	___ftadd@sign^(0+128),f
  8007  0F62  083D               	movf	___ftadd@sign^(0+128),w
  8008  0F63  3907               	andlw	7
  8009  0F64  1903               	btfsc	3,2
  8010  0F65  2F71               	goto	l5698
  8011  0F66  2F54               	goto	l5690
  8012  0F67                     l5696:	
  8013  0F67  3001               	movlw	1
  8014  0F68                     u6035:	
  8015  0F68  36B5               	lsrf	(___ftadd@f1+2)^(0+128),f
  8016  0F69  0CB4               	rrf	(___ftadd@f1+1)^(0+128),f
  8017  0F6A  0CB3               	rrf	___ftadd@f1^(0+128),f
  8018  0F6B  0B89               	decfsz	9,f
  8019  0F6C  2F68               	goto	u6035
  8020  0F6D  3001               	movlw	1
  8021  0F6E  00B9               	movwf	??___ftadd^(0+128)
  8022  0F6F  0839               	movf	??___ftadd^(0+128),w
  8023  0F70  07BF               	addwf	___ftadd@exp1^(0+128),f
  8024  0F71                     l5698:	
  8025  0F71  083F               	movf	___ftadd@exp1^(0+128),w
  8026  0F72  063E               	xorwf	___ftadd@exp2^(0+128),w
  8027  0F73  1903               	btfsc	3,2
  8028  0F74  2F9B               	goto	l1079
  8029  0F75  2F67               	goto	l5696
  8030  0F76                     l5700:	
  8031  0F76  083F               	movf	___ftadd@exp1^(0+128),w
  8032  0F77  023E               	subwf	___ftadd@exp2^(0+128),w
  8033  0F78  1803               	skipnc
  8034  0F79  2F9B               	goto	l1079
  8035  0F7A                     l5702:	
  8036  0F7A  3001               	movlw	1
  8037  0F7B                     u6065:	
  8038  0F7B  35B3               	lslf	___ftadd@f1^(0+128),f
  8039  0F7C  0DB4               	rlf	(___ftadd@f1+1)^(0+128),f
  8040  0F7D  0DB5               	rlf	(___ftadd@f1+2)^(0+128),f
  8041  0F7E  0B89               	decfsz	9,f
  8042  0F7F  2F7B               	goto	u6065
  8043  0F80  3001               	movlw	1
  8044  0F81  02BF               	subwf	___ftadd@exp1^(0+128),f
  8045  0F82  083E               	movf	___ftadd@exp2^(0+128),w
  8046  0F83  063F               	xorwf	___ftadd@exp1^(0+128),w
  8047  0F84  1903               	skipnz
  8048  0F85  2F97               	goto	l5710
  8049  0F86  3001               	movlw	1
  8050  0F87  02BD               	subwf	___ftadd@sign^(0+128),f
  8051  0F88  083D               	movf	___ftadd@sign^(0+128),w
  8052  0F89  3907               	andlw	7
  8053  0F8A  1903               	btfsc	3,2
  8054  0F8B  2F97               	goto	l5710
  8055  0F8C  2F7A               	goto	l5702
  8056  0F8D                     l5708:	
  8057  0F8D  3001               	movlw	1
  8058  0F8E                     u6095:	
  8059  0F8E  36B8               	lsrf	(___ftadd@f2+2)^(0+128),f
  8060  0F8F  0CB7               	rrf	(___ftadd@f2+1)^(0+128),f
  8061  0F90  0CB6               	rrf	___ftadd@f2^(0+128),f
  8062  0F91  0B89               	decfsz	9,f
  8063  0F92  2F8E               	goto	u6095
  8064  0F93  3001               	movlw	1
  8065  0F94  00B9               	movwf	??___ftadd^(0+128)
  8066  0F95  0839               	movf	??___ftadd^(0+128),w
  8067  0F96  07BE               	addwf	___ftadd@exp2^(0+128),f
  8068  0F97                     l5710:	
  8069  0F97  083F               	movf	___ftadd@exp1^(0+128),w
  8070  0F98  063E               	xorwf	___ftadd@exp2^(0+128),w
  8071  0F99  1D03               	skipz
  8072  0F9A  2F8D               	goto	l5708
  8073  0F9B                     l1079:	
  8074  0F9B  1FBD               	btfss	___ftadd@sign^(0+128),7
  8075  0F9C  2FAD               	goto	l5714
  8076  0F9D  30FF               	movlw	255
  8077  0F9E  06B3               	xorwf	___ftadd@f1^(0+128),f
  8078  0F9F  30FF               	movlw	255
  8079  0FA0  06B4               	xorwf	(___ftadd@f1+1)^(0+128),f
  8080  0FA1  30FF               	movlw	255
  8081  0FA2  06B5               	xorwf	(___ftadd@f1+2)^(0+128),f
  8082  0FA3  3001               	movlw	1
  8083  0FA4  07B3               	addwf	___ftadd@f1^(0+128),f
  8084  0FA5  3000               	movlw	0
  8085  0FA6  1803               	skipnc
  8086  0FA7  3001               	movlw	1
  8087  0FA8  07B4               	addwf	(___ftadd@f1+1)^(0+128),f
  8088  0FA9  3000               	movlw	0
  8089  0FAA  1803               	skipnc
  8090  0FAB  3001               	movlw	1
  8091  0FAC  07B5               	addwf	(___ftadd@f1+2)^(0+128),f
  8092  0FAD                     l5714:	
  8093  0FAD  1F3D               	btfss	___ftadd@sign^(0+128),6
  8094  0FAE  2FBF               	goto	l5718
  8095  0FAF  30FF               	movlw	255
  8096  0FB0  06B6               	xorwf	___ftadd@f2^(0+128),f
  8097  0FB1  30FF               	movlw	255
  8098  0FB2  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
  8099  0FB3  30FF               	movlw	255
  8100  0FB4  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
  8101  0FB5  3001               	movlw	1
  8102  0FB6  07B6               	addwf	___ftadd@f2^(0+128),f
  8103  0FB7  3000               	movlw	0
  8104  0FB8  1803               	skipnc
  8105  0FB9  3001               	movlw	1
  8106  0FBA  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
  8107  0FBB  3000               	movlw	0
  8108  0FBC  1803               	skipnc
  8109  0FBD  3001               	movlw	1
  8110  0FBE  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
  8111  0FBF                     l5718:	
  8112  0FBF  01BD               	clrf	___ftadd@sign^(0+128)
  8113  0FC0  0833               	movf	___ftadd@f1^(0+128),w
  8114  0FC1  07B6               	addwf	___ftadd@f2^(0+128),f
  8115  0FC2  0834               	movf	(___ftadd@f1+1)^(0+128),w
  8116  0FC3  3DB7               	addwfc	(___ftadd@f2+1)^(0+128),f
  8117  0FC4  0835               	movf	(___ftadd@f1+2)^(0+128),w
  8118  0FC5  3DB8               	addwfc	(___ftadd@f2+2)^(0+128),f
  8119  0FC6  1FB8               	btfss	(___ftadd@f2+2)^(0+128),7
  8120  0FC7  2FDA               	goto	l5728
  8121  0FC8  30FF               	movlw	255
  8122  0FC9  06B6               	xorwf	___ftadd@f2^(0+128),f
  8123  0FCA  30FF               	movlw	255
  8124  0FCB  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
  8125  0FCC  30FF               	movlw	255
  8126  0FCD  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
  8127  0FCE  3001               	movlw	1
  8128  0FCF  07B6               	addwf	___ftadd@f2^(0+128),f
  8129  0FD0  3000               	movlw	0
  8130  0FD1  1803               	skipnc
  8131  0FD2  3001               	movlw	1
  8132  0FD3  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
  8133  0FD4  3000               	movlw	0
  8134  0FD5  1803               	skipnc
  8135  0FD6  3001               	movlw	1
  8136  0FD7  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
  8137  0FD8  01BD               	clrf	___ftadd@sign^(0+128)
  8138  0FD9  0ABD               	incf	___ftadd@sign^(0+128),f
  8139  0FDA                     l5728:	
  8140  0FDA  0836               	movf	___ftadd@f2^(0+128),w
  8141  0FDB  0020               	movlb	0	; select bank0
  8142  0FDC  00D8               	movwf	?___ftpack
  8143  0FDD  0021               	movlb	1	; select bank1
  8144  0FDE  0837               	movf	(___ftadd@f2+1)^(0+128),w
  8145  0FDF  0020               	movlb	0	; select bank0
  8146  0FE0  00D9               	movwf	?___ftpack+1
  8147  0FE1  0021               	movlb	1	; select bank1
  8148  0FE2  0838               	movf	(___ftadd@f2+2)^(0+128),w
  8149  0FE3  0020               	movlb	0	; select bank0
  8150  0FE4  00DA               	movwf	?___ftpack+2
  8151  0FE5  0021               	movlb	1	; select bank1
  8152  0FE6  083F               	movf	___ftadd@exp1^(0+128),w
  8153  0FE7  00B9               	movwf	??___ftadd^(0+128)
  8154  0FE8  0839               	movf	??___ftadd^(0+128),w
  8155  0FE9  0020               	movlb	0	; select bank0
  8156  0FEA  00DB               	movwf	?___ftpack+3
  8157  0FEB  0021               	movlb	1	; select bank1
  8158  0FEC  083D               	movf	___ftadd@sign^(0+128),w
  8159  0FED  00BA               	movwf	(??___ftadd+1)^(0+128)
  8160  0FEE  083A               	movf	(??___ftadd+1)^(0+128),w
  8161  0FEF  0020               	movlb	0	; select bank0
  8162  0FF0  00DC               	movwf	?___ftpack+4
  8163  0FF1  3192  225E         	fcall	___ftpack
  8164  0FF3  0020               	movlb	0	; select bank0
  8165  0FF4  0858               	movf	?___ftpack,w
  8166  0FF5  0021               	movlb	1	; select bank1
  8167  0FF6  00B3               	movwf	?___ftadd^(0+128)
  8168  0FF7  0020               	movlb	0	; select bank0
  8169  0FF8  0859               	movf	?___ftpack+1,w
  8170  0FF9  0021               	movlb	1	; select bank1
  8171  0FFA  00B4               	movwf	(?___ftadd+1)^(0+128)
  8172  0FFB  0020               	movlb	0	; select bank0
  8173  0FFC  085A               	movf	?___ftpack+2,w
  8174  0FFD  0021               	movlb	1	; select bank1
  8175  0FFE  00B5               	movwf	(?___ftadd+2)^(0+128)
  8176  0FFF  0008               	return
  8177  1000                     __end_of___ftadd:	
  8178                           
  8179                           	psect	text27
  8180  1E09                     __ptext27:	
  8181 ;; *************** function ___awtoft *****************
  8182 ;; Defined at:
  8183 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awtoft.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  c               2   16[BANK0 ] int 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  sign            1   21[BANK0 ] unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  3   16[BANK0 ] float 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0, pclath, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8197 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;Total ram usage:        6 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:    5
  8204 ;; This function calls:
  8205 ;;		___ftpack
  8206 ;; This function is called by:
  8207 ;;		_UpdateFanLevel
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           
  8212                           ;psect for function ___awtoft
  8213  1E09                     ___awtoft:	
  8214                           
  8215                           ;incstack = 0
  8216                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8217  1E09  0020               	movlb	0	; select bank0
  8218  1E0A  01E5               	clrf	___awtoft@sign
  8219  1E0B  1FE1               	btfss	___awtoft@c+1,7
  8220  1E0C  2E14               	goto	l5640
  8221  1E0D  09E0               	comf	___awtoft@c,f
  8222  1E0E  09E1               	comf	___awtoft@c+1,f
  8223  1E0F  0AE0               	incf	___awtoft@c,f
  8224  1E10  1903               	skipnz
  8225  1E11  0AE1               	incf	___awtoft@c+1,f
  8226  1E12  01E5               	clrf	___awtoft@sign
  8227  1E13  0AE5               	incf	___awtoft@sign,f
  8228  1E14                     l5640:	
  8229  1E14  0860               	movf	___awtoft@c,w
  8230  1E15  00D8               	movwf	?___ftpack
  8231  1E16  0861               	movf	___awtoft@c+1,w
  8232  1E17  00D9               	movwf	?___ftpack+1
  8233  1E18  01DA               	clrf	?___ftpack+2
  8234  1E19  308E               	movlw	142
  8235  1E1A  00E3               	movwf	??___awtoft
  8236  1E1B  0863               	movf	??___awtoft,w
  8237  1E1C  00DB               	movwf	?___ftpack+3
  8238  1E1D  0865               	movf	___awtoft@sign,w
  8239  1E1E  00E4               	movwf	??___awtoft+1
  8240  1E1F  0864               	movf	??___awtoft+1,w
  8241  1E20  00DC               	movwf	?___ftpack+4
  8242  1E21  3192  225E         	fcall	___ftpack
  8243  1E23  0020               	movlb	0	; select bank0
  8244  1E24  0858               	movf	?___ftpack,w
  8245  1E25  00E0               	movwf	?___awtoft
  8246  1E26  0859               	movf	?___ftpack+1,w
  8247  1E27  00E1               	movwf	?___awtoft+1
  8248  1E28  085A               	movf	?___ftpack+2,w
  8249  1E29  00E2               	movwf	?___awtoft+2
  8250  1E2A  0008               	return
  8251  1E2B                     __end_of___awtoft:	
  8252                           
  8253                           	psect	text28
  8254  125E                     __ptext28:	
  8255 ;; *************** function ___ftpack *****************
  8256 ;; Defined at:
  8257 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  arg             3    8[BANK0 ] unsigned um
  8260 ;;  exp             1   11[BANK0 ] unsigned char 
  8261 ;;  sign            1   12[BANK0 ] unsigned char 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  3    8[BANK0 ] float 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8273 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;Total ram usage:        8 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    4
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		___awtoft
  8284 ;;		___ftadd
  8285 ;;		___ftmul
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           
  8290                           ;psect for function ___ftpack
  8291  125E                     ___ftpack:	
  8292                           
  8293                           ;incstack = 0
  8294                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8295  125E  0020               	movlb	0	; select bank0
  8296  125F  085B               	movf	___ftpack@exp,w
  8297  1260  1903               	btfsc	3,2
  8298  1261  2A67               	goto	l5524
  8299  1262  085A               	movf	___ftpack@arg+2,w
  8300  1263  0459               	iorwf	___ftpack@arg+1,w
  8301  1264  0458               	iorwf	___ftpack@arg,w
  8302  1265  1D03               	skipz
  8303  1266  2A78               	goto	l5530
  8304  1267                     l5524:	
  8305  1267  3000               	movlw	0
  8306  1268  00D8               	movwf	?___ftpack
  8307  1269  3000               	movlw	0
  8308  126A  00D9               	movwf	?___ftpack+1
  8309  126B  3000               	movlw	0
  8310  126C  00DA               	movwf	?___ftpack+2
  8311  126D  0008               	return
  8312  126E                     l5528:	
  8313  126E  3001               	movlw	1
  8314  126F  00DD               	movwf	??___ftpack
  8315  1270  085D               	movf	??___ftpack,w
  8316  1271  07DB               	addwf	___ftpack@exp,f
  8317  1272  3001               	movlw	1
  8318  1273                     u5605:	
  8319  1273  36DA               	lsrf	___ftpack@arg+2,f
  8320  1274  0CD9               	rrf	___ftpack@arg+1,f
  8321  1275  0CD8               	rrf	___ftpack@arg,f
  8322  1276  0B89               	decfsz	9,f
  8323  1277  2A73               	goto	u5605
  8324  1278                     l5530:	
  8325  1278  30FE               	movlw	254
  8326  1279  055A               	andwf	___ftpack@arg+2,w
  8327  127A  1903               	btfsc	3,2
  8328  127B  2A91               	goto	l1050
  8329  127C  2A6E               	goto	l5528
  8330  127D                     l5532:	
  8331  127D  3001               	movlw	1
  8332  127E  00DD               	movwf	??___ftpack
  8333  127F  085D               	movf	??___ftpack,w
  8334  1280  07DB               	addwf	___ftpack@exp,f
  8335  1281  3001               	movlw	1
  8336  1282  07D8               	addwf	___ftpack@arg,f
  8337  1283  3000               	movlw	0
  8338  1284  1803               	skipnc
  8339  1285  3001               	movlw	1
  8340  1286  07D9               	addwf	___ftpack@arg+1,f
  8341  1287  3000               	movlw	0
  8342  1288  1803               	skipnc
  8343  1289  3001               	movlw	1
  8344  128A  07DA               	addwf	___ftpack@arg+2,f
  8345  128B  3001               	movlw	1
  8346  128C                     u5625:	
  8347  128C  36DA               	lsrf	___ftpack@arg+2,f
  8348  128D  0CD9               	rrf	___ftpack@arg+1,f
  8349  128E  0CD8               	rrf	___ftpack@arg,f
  8350  128F  0B89               	decfsz	9,f
  8351  1290  2A8C               	goto	u5625
  8352  1291                     l1050:	
  8353  1291  30FF               	movlw	255
  8354  1292  055A               	andwf	___ftpack@arg+2,w
  8355  1293  1903               	btfsc	3,2
  8356  1294  2A9E               	goto	l5540
  8357  1295  2A7D               	goto	l5532
  8358  1296                     l5538:	
  8359  1296  3001               	movlw	1
  8360  1297  02DB               	subwf	___ftpack@exp,f
  8361  1298  3001               	movlw	1
  8362  1299                     u5645:	
  8363  1299  35D8               	lslf	___ftpack@arg,f
  8364  129A  0DD9               	rlf	___ftpack@arg+1,f
  8365  129B  0DDA               	rlf	___ftpack@arg+2,f
  8366  129C  0B89               	decfsz	9,f
  8367  129D  2A99               	goto	u5645
  8368  129E                     l5540:	
  8369  129E  1FD9               	btfss	___ftpack@arg+1,7
  8370  129F  2A96               	goto	l5538
  8371  12A0  185B               	btfsc	___ftpack@exp,0
  8372  12A1  2AA8               	goto	l1056
  8373  12A2  30FF               	movlw	255
  8374  12A3  05D8               	andwf	___ftpack@arg,f
  8375  12A4  307F               	movlw	127
  8376  12A5  05D9               	andwf	___ftpack@arg+1,f
  8377  12A6  30FF               	movlw	255
  8378  12A7  05DA               	andwf	___ftpack@arg+2,f
  8379  12A8                     l1056:	
  8380  12A8  1003               	clrc
  8381  12A9  0CDB               	rrf	___ftpack@exp,f
  8382  12AA  085B               	movf	___ftpack@exp,w
  8383  12AB  00DD               	movwf	??___ftpack
  8384  12AC  01DE               	clrf	??___ftpack+1
  8385  12AD  01DF               	clrf	??___ftpack+2
  8386  12AE  3010               	movlw	16
  8387  12AF                     u5675:	
  8388  12AF  35DD               	lslf	??___ftpack,f
  8389  12B0  0DDE               	rlf	??___ftpack+1,f
  8390  12B1  0DDF               	rlf	??___ftpack+2,f
  8391  12B2  0B89               	decfsz	9,f
  8392  12B3  2AAF               	goto	u5675
  8393  12B4  085D               	movf	??___ftpack,w
  8394  12B5  04D8               	iorwf	___ftpack@arg,f
  8395  12B6  085E               	movf	??___ftpack+1,w
  8396  12B7  04D9               	iorwf	___ftpack@arg+1,f
  8397  12B8  085F               	movf	??___ftpack+2,w
  8398  12B9  04DA               	iorwf	___ftpack@arg+2,f
  8399  12BA  085C               	movf	___ftpack@sign,w
  8400  12BB  1903               	btfsc	3,2
  8401  12BC  0008               	return
  8402  12BD  17DA               	bsf	___ftpack@arg+2,7
  8403  12BE  0008               	return
  8404  12BF                     __end_of___ftpack:	
  8405                           
  8406                           	psect	text29
  8407  0E05                     __ptext29:	
  8408 ;; *************** function _USBDeviceTasks *****************
  8409 ;; Defined at:
  8410 ;;		line 669 in file "../USB/usb_device.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  i               1   20[BANK1 ] unsigned char 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;		None               void
  8417 ;; Registers used:
  8418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;Total ram usage:        3 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:   12
  8431 ;; This function calls:
  8432 ;;		_USBDeviceInit
  8433 ;;		_USBWakeFromSuspend
  8434 ;;		_USBSuspend
  8435 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8436 ;;		_USBCtrlEPAllowStatusStage
  8437 ;;		_USBStallHandler
  8438 ;;		_USBCtrlEPService
  8439 ;; This function is called by:
  8440 ;;		_main
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           
  8445                           ;psect for function _USBDeviceTasks
  8446  0E05                     _USBDeviceTasks:	
  8447                           
  8448                           ;usb_device.c: 735: }
  8449                           ;usb_device.c: 757: if(USBDeviceState == DETACHED_STATE)
  8450                           
  8451                           ;usb_device.c: 734: return;
  8452                           
  8453                           ;usb_device.c: 733: PIR2bits.USBIF = 0;;
  8454                           
  8455                           ;usb_device.c: 705: USBDeviceState = DETACHED_STATE;
  8456                           
  8457                           ;usb_device.c: 702: UIE = 0;
  8458                           
  8459                           ;usb_device.c: 697: {
  8460                           ;usb_device.c: 699: UCON = 0;
  8461                           
  8462                           ;usb_device.c: 670: BYTE i;
  8463                           ;usb_device.c: 696: if (1 != 1)
  8464                           
  8465                           ;incstack = 0
  8466                           ; Regs used in _USBDeviceTasks: [allreg]
  8467  0E05  0021               	movlb	1	; select bank1
  8468  0E06  08EE               	movf	_USBDeviceState^(0+128),f
  8469  0E07  1D03               	skipz
  8470  0E08  2E19               	goto	l6062
  8471                           
  8472                           ;usb_device.c: 758: {
  8473                           ;usb_device.c: 760: UCON = 0;
  8474  0E09  003D               	movlb	29	; select bank29
  8475  0E0A  018E               	clrf	14	;volatile
  8476                           
  8477                           ;usb_device.c: 763: UIE = 0;
  8478  0E0B  0192               	clrf	18	;volatile
  8479                           
  8480                           ;usb_device.c: 767: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8481  0E0C  3016               	movlw	22
  8482  0E0D  0091               	movwf	17	;volatile
  8483  0E0E  309F               	movlw	159
  8484  0E0F  0097               	movwf	23	;volatile
  8485  0E10  307B               	movlw	123
  8486  0E11  0092               	movwf	18	;volatile
  8487  0E12                     l140:	
  8488                           ;usb_device.c: 770: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8489                           
  8490  0E12  198E               	btfsc	14,3	;volatile
  8491  0E13  2E16               	goto	l142
  8492  0E14  158E               	bsf	14,3	;volatile
  8493  0E15  2E12               	goto	l140
  8494  0E16                     l142:	
  8495                           
  8496                           ;usb_device.c: 773: USBDeviceState = ATTACHED_STATE;
  8497  0E16  0021               	movlb	1	; select bank1
  8498  0E17  01EE               	clrf	_USBDeviceState^(0+128)
  8499  0E18  0AEE               	incf	_USBDeviceState^(0+128),f
  8500  0E19                     l6062:	
  8501                           
  8502                           ;usb_device.c: 778: }
  8503                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  8504  0E19  086E               	movf	_USBDeviceState^(0+128),w
  8505  0E1A  3A01               	xorlw	1
  8506  0E1B  1D03               	skipz
  8507  0E1C  2E29               	goto	l6074
  8508                           
  8509                           ;usb_device.c: 782: {
  8510                           ;usb_device.c: 792: if(!UCONbits.SE0)
  8511  0E1D  003D               	movlb	29	; select bank29
  8512  0E1E  1A8E               	btfsc	14,5	;volatile
  8513  0E1F  2E29               	goto	l6074
  8514                           
  8515                           ;usb_device.c: 793: {
  8516                           ;usb_device.c: 794: UIR = 0;;
  8517  0E20  0190               	clrf	16	;volatile
  8518                           
  8519                           ;usb_device.c: 796: UIE=0;
  8520  0E21  0192               	clrf	18	;volatile
  8521                           
  8522                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  8523  0E22  1412               	bsf	18,0	;volatile
  8524                           
  8525                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  8526  0E23  1612               	bsf	18,4	;volatile
  8527                           
  8528                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  8529  0E24  3002               	movlw	2
  8530  0E25  0021               	movlb	1	; select bank1
  8531  0E26  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8532  0E27  0832               	movf	??_USBDeviceTasks^(0+128),w
  8533  0E28  00EE               	movwf	_USBDeviceState^(0+128)
  8534  0E29                     l6074:	
  8535                           
  8536                           ;usb_device.c: 801: }
  8537                           ;usb_device.c: 802: }
  8538                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  8539  0E29  003D               	movlb	29	; select bank29
  8540  0E2A  1910               	btfsc	16,2	;volatile
  8541  0E2B  1D12               	btfss	18,2	;volatile
  8542  0E2C  2E36               	goto	l6082
  8543                           
  8544                           ;usb_device.c: 819: {
  8545                           ;usb_device.c: 820: (UIR &= 0xFB);
  8546  0E2D  30FB               	movlw	251
  8547  0E2E  0021               	movlb	1	; select bank1
  8548  0E2F  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8549  0E30  0832               	movf	??_USBDeviceTasks^(0+128),w
  8550  0E31  003D               	movlb	29	; select bank29
  8551  0E32  0590               	andwf	16,f	;volatile
  8552                           
  8553                           ;usb_device.c: 824: USBWakeFromSuspend();
  8554  0E33  319C  24FD  318E   	fcall	_USBWakeFromSuspend
  8555  0E36                     l6082:	
  8556                           
  8557                           ;usb_device.c: 826: }
  8558                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  8559  0E36  003D               	movlb	29	; select bank29
  8560  0E37  1C8E               	btfss	14,1	;volatile
  8561  0E38  2E3C               	goto	l146
  8562                           
  8563                           ;usb_device.c: 832: {
  8564                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  8565  0E39  0020               	movlb	0	; select bank0
  8566  0E3A  1112               	bcf	18,2	;volatile
  8567                           
  8568                           ;usb_device.c: 834: return;
  8569  0E3B  0008               	return
  8570  0E3C                     l146:	
  8571                           
  8572                           ;usb_device.c: 835: }
  8573                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8574  0E3C  1810               	btfsc	16,0	;volatile
  8575  0E3D  1C12               	btfss	18,0	;volatile
  8576  0E3E  2E4C               	goto	l6094
  8577                           
  8578                           ;usb_device.c: 848: {
  8579                           ;usb_device.c: 849: USBDeviceInit();
  8580  0E3F  3189  21E7  318E   	fcall	_USBDeviceInit
  8581                           
  8582                           ;usb_device.c: 853: ;
  8583                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  8584  0E42  3004               	movlw	4
  8585  0E43  0021               	movlb	1	; select bank1
  8586  0E44  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8587  0E45  0832               	movf	??_USBDeviceTasks^(0+128),w
  8588  0E46  00EE               	movwf	_USBDeviceState^(0+128)
  8589                           
  8590                           ;usb_device.c: 865: (UIR &= 0xFE);
  8591  0E47  30FE               	movlw	254
  8592  0E48  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8593  0E49  0832               	movf	??_USBDeviceTasks^(0+128),w
  8594  0E4A  003D               	movlb	29	; select bank29
  8595  0E4B  0590               	andwf	16,f	;volatile
  8596  0E4C                     l6094:	
  8597                           
  8598                           ;usb_device.c: 866: }
  8599                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8600  0E4C  1A10               	btfsc	16,4	;volatile
  8601  0E4D  1E12               	btfss	18,4	;volatile
  8602  0E4E  2E58               	goto	l6102
  8603                           
  8604                           ;usb_device.c: 872: {
  8605                           ;usb_device.c: 877: USBSuspend();
  8606  0E4F  319D  2534  318E   	fcall	_USBSuspend
  8607                           
  8608                           ;usb_device.c: 880: (UIR &= 0xEF);
  8609  0E52  30EF               	movlw	239
  8610  0E53  0021               	movlb	1	; select bank1
  8611  0E54  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8612  0E55  0832               	movf	??_USBDeviceTasks^(0+128),w
  8613  0E56  003D               	movlb	29	; select bank29
  8614  0E57  0590               	andwf	16,f	;volatile
  8615  0E58                     l6102:	
  8616                           
  8617                           ;usb_device.c: 881: }
  8618                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  8619  0E58  1F10               	btfss	16,6	;volatile
  8620  0E59  2E7E               	goto	l6118
  8621                           
  8622                           ;usb_device.c: 884: {
  8623                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  8624  0E5A  1F12               	btfss	18,6	;volatile
  8625  0E5B  2E6C               	goto	l6108
  8626                           
  8627                           ;usb_device.c: 886: {
  8628                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8629  0E5C  3073               	movlw	115
  8630  0E5D  0021               	movlb	1	; select bank1
  8631  0E5E  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8632  0E5F  3000               	movlw	0
  8633  0E60  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8634  0E61  3000               	movlw	0
  8635  0E62  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  8636  0E63  3000               	movlw	0
  8637  0E64  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  8638  0E65  3001               	movlw	1
  8639  0E66  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  8640  0E67  3000               	movlw	0
  8641  0E68  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  8642  0E69  319E  26EB  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8643  0E6C                     l6108:	
  8644                           
  8645                           ;usb_device.c: 888: }
  8646                           ;usb_device.c: 889: (UIR &= 0xBF);
  8647  0E6C  30BF               	movlw	191
  8648  0E6D  0021               	movlb	1	; select bank1
  8649  0E6E  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8650  0E6F  0832               	movf	??_USBDeviceTasks^(0+128),w
  8651  0E70  003D               	movlb	29	; select bank29
  8652  0E71  0590               	andwf	16,f	;volatile
  8653                           
  8654                           ;usb_device.c: 914: if(USBStatusStageTimeoutCounter != 0u)
  8655  0E72  0022               	movlb	2	; select bank2
  8656  0E73  0844               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  8657  0E74  1903               	btfsc	3,2
  8658  0E75  2E78               	goto	l6114
  8659                           
  8660                           ;usb_device.c: 915: {
  8661                           ;usb_device.c: 916: USBStatusStageTimeoutCounter--;
  8662  0E76  3001               	movlw	1
  8663  0E77  02C4               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  8664  0E78                     l6114:	
  8665                           
  8666                           ;usb_device.c: 917: }
  8667                           ;usb_device.c: 923: if(USBStatusStageTimeoutCounter == 0)
  8668  0E78  08C4               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  8669  0E79  1D03               	skipz
  8670  0E7A  2E7E               	goto	l6118
  8671                           
  8672                           ;usb_device.c: 924: {
  8673                           ;usb_device.c: 925: USBCtrlEPAllowStatusStage();
  8674  0E7B  3193  2385  318E   	fcall	_USBCtrlEPAllowStatusStage
  8675  0E7E                     l6118:	
  8676                           
  8677                           ;usb_device.c: 926: }
  8678                           ;usb_device.c: 928: }
  8679                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8680  0E7E  003D               	movlb	29	; select bank29
  8681  0E7F  1A90               	btfsc	16,5	;volatile
  8682  0E80  1E92               	btfss	18,5	;volatile
  8683  0E81  2E85               	goto	l6124
  8684                           
  8685                           ;usb_device.c: 931: {
  8686                           ;usb_device.c: 932: USBStallHandler();
  8687  0E82  319D  25E7  318E   	fcall	_USBStallHandler
  8688  0E85                     l6124:	
  8689                           
  8690                           ;usb_device.c: 933: }
  8691                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8692  0E85  003D               	movlb	29	; select bank29
  8693  0E86  1890               	btfsc	16,1	;volatile
  8694  0E87  1C92               	btfss	18,1	;volatile
  8695  0E88  2E9B               	goto	l6132
  8696                           
  8697                           ;usb_device.c: 936: {
  8698                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8699  0E89  30FF               	movlw	255
  8700  0E8A  0021               	movlb	1	; select bank1
  8701  0E8B  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8702  0E8C  307F               	movlw	127
  8703  0E8D  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8704  0E8E  3000               	movlw	0
  8705  0E8F  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  8706  0E90  3000               	movlw	0
  8707  0E91  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  8708  0E92  3001               	movlw	1
  8709  0E93  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  8710  0E94  3000               	movlw	0
  8711  0E95  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  8712  0E96  319E  26EB  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8713                           
  8714                           ;usb_device.c: 938: UEIR = 0;;
  8715  0E99  003D               	movlb	29	; select bank29
  8716  0E9A  0193               	clrf	19	;volatile
  8717  0E9B                     l6132:	
  8718                           
  8719                           ;usb_device.c: 946: }
  8720                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  8721  0E9B  3004               	movlw	4
  8722  0E9C  0021               	movlb	1	; select bank1
  8723  0E9D  026E               	subwf	_USBDeviceState^(0+128),w
  8724  0E9E  1803               	skipnc
  8725  0E9F  2EA3               	goto	l155
  8726                           
  8727                           ;usb_device.c: 954: {
  8728                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  8729  0EA0  0020               	movlb	0	; select bank0
  8730  0EA1  1112               	bcf	18,2	;volatile
  8731                           
  8732                           ;usb_device.c: 956: return;
  8733  0EA2  0008               	return
  8734  0EA3                     l155:	
  8735                           
  8736                           ;usb_device.c: 957: }
  8737                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  8738  0EA3  003D               	movlb	29	; select bank29
  8739  0EA4  1D92               	btfss	18,3	;volatile
  8740  0EA5  2EF9               	goto	l156
  8741                           
  8742                           ;usb_device.c: 963: {
  8743                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  8744  0EA6  0021               	movlb	1	; select bank1
  8745  0EA7  01B4               	clrf	USBDeviceTasks@i^(0+128)
  8746  0EA8  2EF2               	goto	L9
  8747  0EA9                     l6142:	
  8748                           
  8749                           ;usb_device.c: 967: {
  8750                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  8751  0EA9  080F               	movf	15,w	;volatile
  8752  0EAA  0021               	movlb	1	; select bank1
  8753  0EAB  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8754  0EAC  0832               	movf	??_USBDeviceTasks^(0+128),w
  8755  0EAD  00EF               	movwf	_USTATcopy^(0+128)
  8756                           
  8757                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  8758  0EAE  0C6F               	rrf	_USTATcopy^(0+128),w
  8759  0EAF  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8760  0EB0  0CB2               	rrf	??_USBDeviceTasks^(0+128),f
  8761  0EB1  0C32               	rrf	??_USBDeviceTasks^(0+128),w
  8762  0EB2  390F               	andlw	15
  8763  0EB3  00B3               	movwf	(??_USBDeviceTasks+1)^(0+128)
  8764  0EB4  0833               	movf	(??_USBDeviceTasks+1)^(0+128),w
  8765  0EB5  0022               	movlb	2	; select bank2
  8766  0EB6  00C7               	movwf	_endpoint_number^(0+256)
  8767                           
  8768                           ;usb_device.c: 972: (UIR &= 0xF7);
  8769  0EB7  30F7               	movlw	247
  8770  0EB8  0021               	movlb	1	; select bank1
  8771  0EB9  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8772  0EBA  0832               	movf	??_USBDeviceTasks^(0+128),w
  8773  0EBB  003D               	movlb	29	; select bank29
  8774  0EBC  0590               	andwf	16,f	;volatile
  8775                           
  8776                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  8777  0EBD  0021               	movlb	1	; select bank1
  8778  0EBE  196F               	btfsc	_USTATcopy^(0+128),2
  8779  0EBF  2EC4               	goto	l6152
  8780                           
  8781                           ;usb_device.c: 978: {
  8782                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8783  0EC0  0022               	movlb	2	; select bank2
  8784  0EC1  0847               	movf	_endpoint_number^(0+256),w
  8785  0EC2  3E2C               	addlw	_ep_data_out& (0+255)
  8786  0EC3  2EC7               	goto	L8
  8787  0EC4                     l6152:	
  8788                           ;usb_device.c: 980: }
  8789                           
  8790                           
  8791                           ;usb_device.c: 981: else
  8792                           ;usb_device.c: 982: {
  8793                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8794  0EC4  0022               	movlb	2	; select bank2
  8795  0EC5  0847               	movf	_endpoint_number^(0+256),w
  8796  0EC6  3E2A               	addlw	_ep_data_in& (0+255)
  8797  0EC7                     L8:	
  8798  0EC7  0086               	movwf	6
  8799  0EC8  3001               	movlw	1	; select bank2/3
  8800  0EC9  0087               	movwf	7
  8801  0ECA  0801               	movf	1,w
  8802  0ECB  3901               	andlw	1
  8803  0ECC  0021               	movlb	1	; select bank1
  8804  0ECD  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8805  0ECE  3001               	movlw	1
  8806  0ECF  06B2               	xorwf	??_USBDeviceTasks^(0+128),f
  8807  0ED0  0801               	movf	1,w
  8808  0ED1  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  8809  0ED2  39FE               	andlw	-2
  8810  0ED3  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  8811  0ED4  0081               	movwf	1
  8812                           
  8813                           ;usb_device.c: 984: }
  8814                           ;usb_device.c: 989: if(endpoint_number == 0)
  8815  0ED5  0022               	movlb	2	; select bank2
  8816  0ED6  08C7               	movf	_endpoint_number^(0+256),f
  8817  0ED7  1D03               	skipz
  8818  0ED8  2EDD               	goto	l6158
  8819                           
  8820                           ;usb_device.c: 990: {
  8821                           ;usb_device.c: 991: USBCtrlEPService();
  8822  0ED9  3194  24DB  318E   	fcall	_USBCtrlEPService
  8823                           
  8824                           ;usb_device.c: 992: }
  8825  0EDC  2EED               	goto	l6160
  8826  0EDD                     l6158:	
  8827                           
  8828                           ;usb_device.c: 993: else
  8829                           ;usb_device.c: 994: {
  8830                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  8831  0EDD  3072               	movlw	114
  8832  0EDE  0021               	movlb	1	; select bank1
  8833  0EDF  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  8834  0EE0  3000               	movlw	0
  8835  0EE1  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  8836  0EE2  30EF               	movlw	low _USTATcopy
  8837  0EE3  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  8838  0EE4  3000               	movlw	high _USTATcopy
  8839  0EE5  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  8840  0EE6  3000               	movlw	0
  8841  0EE7  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  8842  0EE8  3000               	movlw	0
  8843  0EE9  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  8844  0EEA  319E  26EB  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8845  0EED                     l6160:	
  8846                           ;usb_device.c: 998: else
  8847                           ;usb_device.c: 999: break;
  8848                           
  8849                           ;usb_device.c: 996: }
  8850                           ;usb_device.c: 997: }
  8851                           
  8852  0EED  3001               	movlw	1
  8853  0EEE  0021               	movlb	1	; select bank1
  8854  0EEF  00B2               	movwf	??_USBDeviceTasks^(0+128)
  8855  0EF0  0832               	movf	??_USBDeviceTasks^(0+128),w
  8856  0EF1  07B4               	addwf	USBDeviceTasks@i^(0+128),f
  8857  0EF2                     L9:	
  8858  0EF2  3004               	movlw	4
  8859  0EF3  0234               	subwf	USBDeviceTasks@i^(0+128),w
  8860  0EF4  1803               	btfsc	3,0
  8861  0EF5  2EF9               	goto	l156
  8862                           
  8863                           ;usb_device.c: 965: {
  8864                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  8865  0EF6  003D               	movlb	29	; select bank29
  8866  0EF7  1990               	btfsc	16,3	;volatile
  8867  0EF8  2EA9               	goto	l6142
  8868  0EF9                     l156:	
  8869                           
  8870                           ;usb_device.c: 1000: }
  8871                           ;usb_device.c: 1001: }
  8872                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  8873  0EF9  0020               	movlb	0	; select bank0
  8874  0EFA  1112               	bcf	18,2	;volatile
  8875  0EFB  0008               	return
  8876  0EFC                     __end_of_USBDeviceTasks:	
  8877                           
  8878                           	psect	text30
  8879  14DB                     __ptext30:	
  8880 ;; *************** function _USBCtrlEPService *****************
  8881 ;; Defined at:
  8882 ;;		line 2523 in file "../USB/usb_device.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;		None
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  setup_cnt       1   17[BANK1 ] unsigned char 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;		None               void
  8889 ;; Registers used:
  8890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;Total ram usage:        4 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:   11
  8903 ;; This function calls:
  8904 ;;		_USBCtrlTrfSetupHandler
  8905 ;;		_USBCtrlTrfOutHandler
  8906 ;;		_USBCtrlTrfInHandler
  8907 ;; This function is called by:
  8908 ;;		_USBDeviceTasks
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function _USBCtrlEPService
  8914  14DB                     _USBCtrlEPService:	
  8915                           
  8916                           ;usb_device.c: 2528: USBStatusStageTimeoutCounter = (BYTE)40;
  8917                           
  8918                           ;incstack = 0
  8919                           ; Regs used in _USBCtrlEPService: [allreg]
  8920  14DB  3028               	movlw	40
  8921  14DC  0021               	movlb	1	; select bank1
  8922  14DD  00AE               	movwf	??_USBCtrlEPService^(0+128)
  8923  14DE  082E               	movf	??_USBCtrlEPService^(0+128),w
  8924  14DF  0022               	movlb	2	; select bank2
  8925  14E0  00C4               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  8926                           
  8927                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  8928  14E1  0021               	movlb	1	; select bank1
  8929  14E2  086F               	movf	_USTATcopy^(0+128),w
  8930  14E3  39FD               	andlw	253
  8931  14E4  1D03               	btfss	3,2
  8932  14E5  2D4C               	goto	l6242
  8933                           
  8934                           ;usb_device.c: 2533: {
  8935                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8936  14E6  366F               	lsrf	_USTATcopy^(0+128),w
  8937  14E7  393F               	andlw	63
  8938  14E8  00AE               	movwf	??_USBCtrlEPService^(0+128)
  8939  14E9  3001               	movlw	1
  8940  14EA                     u6905:	
  8941  14EA  35AE               	lslf	??_USBCtrlEPService^(0+128),f
  8942  14EB  3EFF               	addlw	-1
  8943  14EC  1D03               	skipz
  8944  14ED  2CEA               	goto	u6905
  8945  14EE  352E               	lslf	??_USBCtrlEPService^(0+128),w
  8946  14EF  3E20               	addlw	32
  8947  14F0  00AF               	movwf	(??_USBCtrlEPService+1)^(0+128)
  8948  14F1  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  8949  14F2  0020               	movlb	0	; select bank0
  8950  14F3  00ED               	movwf	_pBDTEntryEP0OutCurrent
  8951                           
  8952                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8953  14F4  086D               	movf	_pBDTEntryEP0OutCurrent,w
  8954  14F5  0021               	movlb	1	; select bank1
  8955  14F6  00AE               	movwf	??_USBCtrlEPService^(0+128)
  8956  14F7  082E               	movf	??_USBCtrlEPService^(0+128),w
  8957  14F8  0020               	movlb	0	; select bank0
  8958  14F9  00EE               	movwf	_pBDTEntryEP0OutNext
  8959                           
  8960                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8961  14FA  3004               	movlw	4
  8962  14FB  0021               	movlb	1	; select bank1
  8963  14FC  00AE               	movwf	??_USBCtrlEPService^(0+128)
  8964  14FD  082E               	movf	??_USBCtrlEPService^(0+128),w
  8965  14FE  0020               	movlb	0	; select bank0
  8966  14FF  06EE               	xorwf	_pBDTEntryEP0OutNext,f
  8967                           
  8968                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8969  1500  086D               	movf	_pBDTEntryEP0OutCurrent,w
  8970  1501  0086               	movwf	6
  8971  1502  0187               	clrf	7
  8972  1503  0C01               	rrf	1,w
  8973  1504  0C89               	rrf	9,f
  8974  1505  390F               	andlw	15
  8975  1506  3A0D               	xorlw	13
  8976  1507  1D03               	skipz
  8977  1508  2D49               	goto	l6240
  8978                           
  8979                           ;usb_device.c: 2550: {
  8980                           ;usb_device.c: 2551: unsigned char setup_cnt;
  8981                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  8982  1509  0021               	movlb	1	; select bank1
  8983  150A  01B1               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  8984  150B  3008               	movlw	8
  8985  150C  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  8986  150D  1803               	btfsc	3,0
  8987  150E  2D38               	goto	l6236
  8988  150F                     l6230:	
  8989                           
  8990                           ;usb_device.c: 2558: {
  8991                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  8992  150F  0020               	movlb	0	; select bank0
  8993  1510  086D               	movf	_pBDTEntryEP0OutCurrent,w
  8994  1511  3E02               	addlw	2
  8995  1512  0086               	movwf	6
  8996  1513  0187               	clrf	7
  8997  1514  3F40               	moviw [0]fsr1
  8998  1515  0021               	movlb	1	; select bank1
  8999  1516  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9000  1517  3F41               	moviw [1]fsr1
  9001  1518  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9002  1519  082E               	movf	??_USBCtrlEPService^(0+128),w
  9003  151A  0086               	movwf	6
  9004  151B  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9005  151C  0087               	movwf	7
  9006  151D  0801               	movf	1,w
  9007  151E  00B0               	movwf	(??_USBCtrlEPService+2)^(0+128)
  9008  151F  0831               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  9009  1520  3E40               	addlw	64
  9010  1521  0086               	movwf	6
  9011  1522  0187               	clrf	7
  9012  1523  0830               	movf	(??_USBCtrlEPService+2)^(0+128),w
  9013  1524  0081               	movwf	1
  9014                           
  9015                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  9016  1525  0020               	movlb	0	; select bank0
  9017  1526  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9018  1527  3E02               	addlw	2
  9019  1528  0086               	movwf	6
  9020  1529  0187               	clrf	7
  9021  152A  3001               	movlw	1
  9022  152B  0781               	addwf	1,f
  9023  152C  3141               	addfsr 1,1
  9024  152D  1803               	skipnc
  9025  152E  0A81               	incf	1,f
  9026  152F  3001               	movlw	1
  9027  1530  0021               	movlb	1	; select bank1
  9028  1531  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9029  1532  082E               	movf	??_USBCtrlEPService^(0+128),w
  9030  1533  07B1               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  9031  1534  3008               	movlw	8
  9032  1535  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9033  1536  1C03               	skipc
  9034  1537  2D0F               	goto	l6230
  9035  1538                     l6236:	
  9036                           
  9037                           ;usb_device.c: 2561: }
  9038                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9039  1538  3040               	movlw	64
  9040  1539  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9041  153A  3000               	movlw	0
  9042  153B  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9043  153C  0020               	movlb	0	; select bank0
  9044  153D  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9045  153E  3E02               	addlw	2
  9046  153F  0086               	movwf	6
  9047  1540  0187               	clrf	7
  9048  1541  0021               	movlb	1	; select bank1
  9049  1542  082E               	movf	??_USBCtrlEPService^(0+128),w
  9050  1543  3FC0               	movwi [0]fsr1
  9051  1544  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9052  1545  3FC1               	movwi [1]fsr1
  9053                           
  9054                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  9055  1546  3190  2002         	fcall	_USBCtrlTrfSetupHandler
  9056                           
  9057                           ;usb_device.c: 2566: }
  9058  1548  0008               	return
  9059  1549                     l6240:	
  9060                           
  9061                           ;usb_device.c: 2567: else
  9062                           ;usb_device.c: 2568: {
  9063                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  9064  1549  319E  2650         	fcall	_USBCtrlTrfOutHandler
  9065                           
  9066                           ;usb_device.c: 2571: }
  9067                           ;usb_device.c: 2572: }
  9068  154B  0008               	return
  9069  154C                     l6242:	
  9070                           
  9071                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  9072  154C  30FD               	movlw	253
  9073  154D  0021               	movlb	1	; select bank1
  9074  154E  056F               	andwf	_USTATcopy^(0+128),w
  9075  154F  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9076  1550  082E               	movf	??_USBCtrlEPService^(0+128),w
  9077  1551  3A04               	xorlw	4
  9078  1552  1D03               	skipz
  9079  1553  0008               	return
  9080                           
  9081                           ;usb_device.c: 2574: {
  9082                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  9083  1554  3192  22BF         	fcall	_USBCtrlTrfInHandler
  9084  1556  0008               	return
  9085  1557                     __end_of_USBCtrlEPService:	
  9086                           
  9087                           	psect	text31
  9088  12BF                     __ptext31:	
  9089 ;; *************** function _USBCtrlTrfInHandler *****************
  9090 ;; Defined at:
  9091 ;;		line 2748 in file "../USB/usb_device.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;		None
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  lastDTS         1   13[BANK0 ] unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;		None               void
  9098 ;; Registers used:
  9099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;Total ram usage:        3 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; Hardware stack levels required when called:    5
  9112 ;; This function calls:
  9113 ;;		_USBCtrlTrfTxService
  9114 ;; This function is called by:
  9115 ;;		_USBCtrlEPService
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           
  9120                           ;psect for function _USBCtrlTrfInHandler
  9121  12BF                     _USBCtrlTrfInHandler:	
  9122                           
  9123                           ;usb_device.c: 2749: BYTE lastDTS;
  9124                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9125                           
  9126                           ;incstack = 0
  9127                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9128  12BF  0020               	movlb	0	; select bank0
  9129  12C0  0868               	movf	_pBDTEntryIn,w
  9130  12C1  0086               	movwf	6
  9131  12C2  0187               	clrf	7
  9132  12C3  3000               	movlw	0
  9133  12C4  1B01               	btfsc	1,6
  9134  12C5  3001               	movlw	1
  9135  12C6  00DD               	movwf	USBCtrlTrfInHandler@lastDTS
  9136                           
  9137                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9138  12C7  3004               	movlw	4
  9139  12C8  00DB               	movwf	??_USBCtrlTrfInHandler
  9140  12C9  085B               	movf	??_USBCtrlTrfInHandler,w
  9141  12CA  06E8               	xorwf	_pBDTEntryIn,f
  9142                           
  9143                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  9144  12CB  0021               	movlb	1	; select bank1
  9145  12CC  086E               	movf	_USBDeviceState^(0+128),w
  9146  12CD  3A08               	xorlw	8
  9147  12CE  1D03               	skipz
  9148  12CF  2ADF               	goto	l315
  9149                           
  9150                           ;usb_device.c: 2760: {
  9151                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  9152  12D0  0020               	movlb	0	; select bank0
  9153  12D1  0842               	movf	66,w	;volatile
  9154  12D2  003D               	movlb	29	; select bank29
  9155  12D3  0096               	movwf	22	;volatile
  9156                           
  9157                           ;usb_device.c: 2762: if(UADDR != 0u)
  9158  12D4  0816               	movf	22,w	;volatile
  9159  12D5  1903               	btfsc	3,2
  9160  12D6  2AD9               	goto	l4692
  9161                           
  9162                           ;usb_device.c: 2763: {
  9163                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  9164  12D7  3010               	movlw	16
  9165  12D8  2ADA               	goto	L10
  9166  12D9                     l4692:	
  9167                           ;usb_device.c: 2765: }
  9168                           
  9169                           
  9170                           ;usb_device.c: 2766: else
  9171                           ;usb_device.c: 2767: {
  9172                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  9173  12D9  3004               	movlw	4
  9174  12DA                     L10:	
  9175  12DA  0020               	movlb	0	; select bank0
  9176  12DB  00DB               	movwf	??_USBCtrlTrfInHandler
  9177  12DC  085B               	movf	??_USBCtrlTrfInHandler,w
  9178  12DD  0021               	movlb	1	; select bank1
  9179  12DE  00EE               	movwf	_USBDeviceState^(0+128)
  9180  12DF                     l315:	
  9181                           
  9182                           ;usb_device.c: 2769: }
  9183                           ;usb_device.c: 2770: }
  9184                           ;usb_device.c: 2773: if(controlTransferState == 1)
  9185  12DF  0020               	movlb	0	; select bank0
  9186  12E0  086C               	movf	_controlTransferState,w
  9187  12E1  3A01               	xorlw	1
  9188  12E2  1D03               	skipz
  9189  12E3  2B15               	goto	l318
  9190                           
  9191                           ;usb_device.c: 2774: {
  9192                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  9193  12E4  3048               	movlw	72
  9194  12E5  00DB               	movwf	??_USBCtrlTrfInHandler
  9195  12E6  3000               	movlw	0
  9196  12E7  00DC               	movwf	??_USBCtrlTrfInHandler+1
  9197  12E8  0868               	movf	_pBDTEntryIn,w
  9198  12E9  3E02               	addlw	2
  9199  12EA  0086               	movwf	6
  9200  12EB  0187               	clrf	7
  9201  12EC  085B               	movf	??_USBCtrlTrfInHandler,w
  9202  12ED  3FC0               	movwi [0]fsr1
  9203  12EE  085C               	movf	??_USBCtrlTrfInHandler+1,w
  9204  12EF  3FC1               	movwi [1]fsr1
  9205                           
  9206                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  9207  12F0  3196  26E3  3192   	fcall	_USBCtrlTrfTxService
  9208                           
  9209                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  9210  12F3  0022               	movlb	2	; select bank2
  9211  12F4  084C               	movf	_shortPacketStatus^(0+256),w
  9212  12F5  3A02               	xorlw	2
  9213  12F6  1D03               	skipz
  9214  12F7  2B01               	goto	l4702
  9215                           
  9216                           ;usb_device.c: 2783: {
  9217                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  9218  12F8  3084               	movlw	132
  9219  12F9  0020               	movlb	0	; select bank0
  9220  12FA  00DB               	movwf	??_USBCtrlTrfInHandler
  9221  12FB  0868               	movf	_pBDTEntryIn,w
  9222  12FC  0086               	movwf	6
  9223  12FD  0187               	clrf	7
  9224  12FE  085B               	movf	??_USBCtrlTrfInHandler,w
  9225  12FF  0081               	movwf	1
  9226                           
  9227                           ;usb_device.c: 2787: }
  9228  1300  0008               	return
  9229  1301                     l4702:	
  9230                           
  9231                           ;usb_device.c: 2788: else
  9232                           ;usb_device.c: 2789: {
  9233                           ;usb_device.c: 2790: if(lastDTS == 0)
  9234  1301  0020               	movlb	0	; select bank0
  9235  1302  08DD               	movf	USBCtrlTrfInHandler@lastDTS,f
  9236  1303  1D03               	skipz
  9237  1304  2B0D               	goto	l4706
  9238                           
  9239                           ;usb_device.c: 2791: {
  9240                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9241  1305  30C8               	movlw	200
  9242  1306  00DB               	movwf	??_USBCtrlTrfInHandler
  9243  1307  0868               	movf	_pBDTEntryIn,w
  9244  1308  0086               	movwf	6
  9245  1309  0187               	clrf	7
  9246  130A  085B               	movf	??_USBCtrlTrfInHandler,w
  9247  130B  0081               	movwf	1
  9248                           
  9249                           ;usb_device.c: 2793: }
  9250  130C  0008               	return
  9251  130D                     l4706:	
  9252                           
  9253                           ;usb_device.c: 2794: else
  9254                           ;usb_device.c: 2795: {
  9255                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9256  130D  3088               	movlw	136
  9257  130E  00DB               	movwf	??_USBCtrlTrfInHandler
  9258  130F  0868               	movf	_pBDTEntryIn,w
  9259  1310  0086               	movwf	6
  9260  1311  0187               	clrf	7
  9261  1312  085B               	movf	??_USBCtrlTrfInHandler,w
  9262  1313  0081               	movwf	1
  9263                           
  9264                           ;usb_device.c: 2797: }
  9265                           ;usb_device.c: 2798: }
  9266                           ;usb_device.c: 2799: }
  9267  1314  0008               	return
  9268  1315                     l318:	
  9269                           
  9270                           ;usb_device.c: 2800: else
  9271                           ;usb_device.c: 2801: {
  9272                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  9273  1315  0022               	movlb	2	; select bank2
  9274  1316  1FA2               	btfss	(_outPipes^(0+256)+2),7
  9275  1317  2B1F               	goto	l4714
  9276                           
  9277                           ;usb_device.c: 2806: {
  9278                           ;usb_device.c: 2807: if(outPipes[0].pFunc != (0))
  9279  1318  0825               	movf	(_outPipes+5)^(0+256),w
  9280  1319  1903               	btfsc	3,2
  9281  131A  2B1E               	goto	l4712
  9282                           
  9283                           ;usb_device.c: 2808: {
  9284                           ;usb_device.c: 2809: outPipes[0].pFunc();
  9285  131B  0825               	movf	(_outPipes+5)^(0+256),w
  9286  131C  3192  2ABF         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9287  131E                     l4712:	
  9288                           
  9289                           ;usb_device.c: 2810: }
  9290                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  9291  131E  13A2               	bcf	(_outPipes^(0+256)+2),7
  9292  131F                     l4714:	
  9293                           
  9294                           ;usb_device.c: 2812: }
  9295                           ;usb_device.c: 2814: controlTransferState = 0;
  9296  131F  0020               	movlb	0	; select bank0
  9297  1320  01EC               	clrf	_controlTransferState
  9298  1321  0008               	return
  9299  1322                     __end_of_USBCtrlTrfInHandler:	
  9300                           
  9301                           	psect	text32
  9302  1E50                     __ptext32:	
  9303 ;; *************** function _USBCtrlTrfOutHandler *****************
  9304 ;; Defined at:
  9305 ;;		line 2695 in file "../USB/usb_device.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;		None
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;		None               void
  9312 ;; Registers used:
  9313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;Total ram usage:        2 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:    6
  9326 ;; This function calls:
  9327 ;;		_USBCtrlTrfRxService
  9328 ;; This function is called by:
  9329 ;;		_USBCtrlEPService
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           
  9334                           ;psect for function _USBCtrlTrfOutHandler
  9335  1E50                     _USBCtrlTrfOutHandler:	
  9336                           
  9337                           ;usb_device.c: 2696: if(controlTransferState == 2)
  9338                           
  9339                           ;incstack = 0
  9340                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9341  1E50  0020               	movlb	0	; select bank0
  9342  1E51  086C               	movf	_controlTransferState,w
  9343  1E52  3A02               	xorlw	2
  9344  1E53  1D03               	skipz
  9345  1E54  2E58               	goto	l4674
  9346                           
  9347                           ;usb_device.c: 2697: {
  9348                           ;usb_device.c: 2698: USBCtrlTrfRxService();
  9349  1E55  318A  228F         	fcall	_USBCtrlTrfRxService
  9350                           
  9351                           ;usb_device.c: 2699: }
  9352  1E57  0008               	return
  9353  1E58                     l4674:	
  9354                           
  9355                           ;usb_device.c: 2700: else
  9356                           ;usb_device.c: 2701: {
  9357                           ;usb_device.c: 2704: controlTransferState = 0;
  9358  1E58  0020               	movlb	0	; select bank0
  9359  1E59  01EC               	clrf	_controlTransferState
  9360                           
  9361                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
  9362  1E5A  0022               	movlb	2	; select bank2
  9363  1E5B  08B2               	movf	_BothEP0OutUOWNsSet^(0+256),f
  9364  1E5C  1D03               	skipz
  9365  1E5D  2E7A               	goto	l4680
  9366                           
  9367                           ;usb_device.c: 2712: {
  9368                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
  9369  1E5E  3008               	movlw	8
  9370  1E5F  0020               	movlb	0	; select bank0
  9371  1E60  00DE               	movwf	??_USBCtrlTrfOutHandler
  9372  1E61  0A6E               	incf	_pBDTEntryEP0OutNext,w
  9373  1E62  0086               	movwf	6
  9374  1E63  0187               	clrf	7
  9375  1E64  085E               	movf	??_USBCtrlTrfOutHandler,w
  9376  1E65  0081               	movwf	1
  9377                           
  9378                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9379  1E66  3040               	movlw	64
  9380  1E67  00DE               	movwf	??_USBCtrlTrfOutHandler
  9381  1E68  3000               	movlw	0
  9382  1E69  00DF               	movwf	??_USBCtrlTrfOutHandler+1
  9383  1E6A  086E               	movf	_pBDTEntryEP0OutNext,w
  9384  1E6B  3E02               	addlw	2
  9385  1E6C  0086               	movwf	6
  9386  1E6D  0187               	clrf	7
  9387  1E6E  085E               	movf	??_USBCtrlTrfOutHandler,w
  9388  1E6F  3FC0               	movwi [0]fsr1
  9389  1E70  085F               	movf	??_USBCtrlTrfOutHandler+1,w
  9390  1E71  3FC1               	movwi [1]fsr1
  9391                           
  9392                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  9393  1E72  308C               	movlw	140
  9394  1E73  00DE               	movwf	??_USBCtrlTrfOutHandler
  9395  1E74  086E               	movf	_pBDTEntryEP0OutNext,w
  9396  1E75  0086               	movwf	6
  9397  1E76  0187               	clrf	7
  9398  1E77  085E               	movf	??_USBCtrlTrfOutHandler,w
  9399  1E78  0081               	movwf	1
  9400                           
  9401                           ;usb_device.c: 2716: }
  9402  1E79  0008               	return
  9403  1E7A                     l4680:	
  9404                           
  9405                           ;usb_device.c: 2717: else
  9406                           ;usb_device.c: 2718: {
  9407                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
  9408  1E7A  0022               	movlb	2	; select bank2
  9409  1E7B  01B2               	clrf	_BothEP0OutUOWNsSet^(0+256)
  9410  1E7C  0008               	return
  9411  1E7D                     __end_of_USBCtrlTrfOutHandler:	
  9412                           
  9413                           	psect	text33
  9414  0A8F                     __ptext33:	
  9415 ;; *************** function _USBCtrlTrfRxService *****************
  9416 ;; Defined at:
  9417 ;;		line 2019 in file "../USB/usb_device.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;		None
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  byteToRead      1   13[BANK0 ] unsigned char 
  9422 ;;  i               1   12[BANK0 ] unsigned char 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;		None               void
  9425 ;; Registers used:
  9426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;Total ram usage:        4 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    5
  9439 ;; This function calls:
  9440 ;;		_USBCtrlEPAllowStatusStage
  9441 ;; This function is called by:
  9442 ;;		_USBCtrlTrfOutHandler
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           
  9447                           ;psect for function _USBCtrlTrfRxService
  9448  0A8F                     _USBCtrlTrfRxService:	
  9449                           
  9450                           ;usb_device.c: 2020: BYTE byteToRead;
  9451                           ;usb_device.c: 2021: BYTE i;
  9452                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9456  0A8F  0020               	movlb	0	; select bank0
  9457  0A90  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9458  0A91  0086               	movwf	6
  9459  0A92  0187               	clrf	7
  9460  0A93  3F41               	moviw [1]fsr1
  9461  0A94  00DD               	movwf	USBCtrlTrfRxService@byteToRead
  9462                           
  9463                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
  9464  0A95  085D               	movf	USBCtrlTrfRxService@byteToRead,w
  9465  0A96  00DA               	movwf	??_USBCtrlTrfRxService
  9466  0A97  01DB               	clrf	??_USBCtrlTrfRxService+1
  9467  0A98  085B               	movf	??_USBCtrlTrfRxService+1,w
  9468  0A99  0022               	movlb	2	; select bank2
  9469  0A9A  0224               	subwf	((_outPipes+1)^(0+256)+3),w
  9470  0A9B  1D03               	skipz
  9471  0A9C  2AA1               	goto	u4155
  9472  0A9D  0020               	movlb	0	; select bank0
  9473  0A9E  085A               	movf	??_USBCtrlTrfRxService,w
  9474  0A9F  0022               	movlb	2	; select bank2
  9475  0AA0  0223               	subwf	(_outPipes^(0+256)+3),w
  9476  0AA1                     u4155:	
  9477  0AA1  1803               	skipnc
  9478  0AA2  2AA8               	goto	l4498
  9479                           
  9480                           ;usb_device.c: 2032: {
  9481                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
  9482  0AA3  0823               	movf	(_outPipes^(0+256)+3),w
  9483  0AA4  0020               	movlb	0	; select bank0
  9484  0AA5  00DA               	movwf	??_USBCtrlTrfRxService
  9485  0AA6  085A               	movf	??_USBCtrlTrfRxService,w
  9486  0AA7  00DD               	movwf	USBCtrlTrfRxService@byteToRead
  9487  0AA8                     l4498:	
  9488                           
  9489                           ;usb_device.c: 2034: }
  9490                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
  9491  0AA8  3003               	movlw	3
  9492  0AA9  3E20               	addlw	_outPipes& (0+255)
  9493  0AAA  0086               	movwf	6
  9494  0AAB  3001               	movlw	1	; select bank2/3
  9495  0AAC  0087               	movwf	7
  9496  0AAD  0020               	movlb	0	; select bank0
  9497  0AAE  085D               	movf	USBCtrlTrfRxService@byteToRead,w
  9498  0AAF  00DA               	movwf	??_USBCtrlTrfRxService
  9499  0AB0  01DB               	clrf	??_USBCtrlTrfRxService+1
  9500  0AB1  09DA               	comf	??_USBCtrlTrfRxService,f
  9501  0AB2  09DB               	comf	??_USBCtrlTrfRxService+1,f
  9502  0AB3  0ADA               	incf	??_USBCtrlTrfRxService,f
  9503  0AB4  1903               	skipnz
  9504  0AB5  0ADB               	incf	??_USBCtrlTrfRxService+1,f
  9505  0AB6  3F40               	moviw [0]fsr1
  9506  0AB7  075A               	addwf	??_USBCtrlTrfRxService,w
  9507  0AB8  0022               	movlb	2	; select bank2
  9508  0AB9  00A3               	movwf	(_outPipes^(0+256)+3)
  9509  0ABA  3F41               	moviw [1]fsr1
  9510  0ABB  0020               	movlb	0	; select bank0
  9511  0ABC  3D5B               	addwfc	??_USBCtrlTrfRxService+1,w
  9512  0ABD  0022               	movlb	2	; select bank2
  9513  0ABE  00A4               	movwf	(_outPipes^(0+256)+4)
  9514                           
  9515                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
  9516  0ABF  0020               	movlb	0	; select bank0
  9517  0AC0  01DC               	clrf	USBCtrlTrfRxService@i
  9518  0AC1                     l4508:	
  9519  0AC1  085D               	movf	USBCtrlTrfRxService@byteToRead,w
  9520  0AC2  025C               	subwf	USBCtrlTrfRxService@i,w
  9521  0AC3  1803               	btfsc	3,0
  9522  0AC4  2ADD               	goto	l4510
  9523                           
  9524                           ;usb_device.c: 2041: {
  9525                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9526  0AC5  085C               	movf	USBCtrlTrfRxService@i,w
  9527  0AC6  3E48               	addlw	72
  9528  0AC7  0086               	movwf	6
  9529  0AC8  0187               	clrf	7
  9530  0AC9  0801               	movf	1,w
  9531  0ACA  00DA               	movwf	??_USBCtrlTrfRxService
  9532  0ACB  0022               	movlb	2	; select bank2
  9533  0ACC  0820               	movf	_outPipes^(0+256),w
  9534  0ACD  0086               	movwf	6
  9535  0ACE  0187               	clrf	7
  9536  0ACF  0020               	movlb	0	; select bank0
  9537  0AD0  085A               	movf	??_USBCtrlTrfRxService,w
  9538  0AD1  0081               	movwf	1
  9539  0AD2  3001               	movlw	1
  9540  0AD3  00DA               	movwf	??_USBCtrlTrfRxService
  9541  0AD4  085A               	movf	??_USBCtrlTrfRxService,w
  9542  0AD5  0022               	movlb	2	; select bank2
  9543  0AD6  07A0               	addwf	_outPipes^(0+256),f
  9544  0AD7  3001               	movlw	1
  9545  0AD8  0020               	movlb	0	; select bank0
  9546  0AD9  00DA               	movwf	??_USBCtrlTrfRxService
  9547  0ADA  085A               	movf	??_USBCtrlTrfRxService,w
  9548  0ADB  07DC               	addwf	USBCtrlTrfRxService@i,f
  9549  0ADC  2AC1               	goto	l4508
  9550  0ADD                     l4510:	
  9551                           
  9552                           ;usb_device.c: 2043: }
  9553                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
  9554  0ADD  3003               	movlw	3
  9555  0ADE  3E20               	addlw	_outPipes& (0+255)
  9556  0ADF  0086               	movwf	6
  9557  0AE0  3001               	movlw	1	; select bank2/3
  9558  0AE1  0087               	movwf	7
  9559  0AE2  0016               	moviw fsr1++
  9560  0AE3  0401               	iorwf	1,w
  9561  0AE4  1903               	skipnz
  9562  0AE5  2B0E               	goto	l4518
  9563                           
  9564                           ;usb_device.c: 2048: {
  9565                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
  9566  0AE6  3008               	movlw	8
  9567  0AE7  00DA               	movwf	??_USBCtrlTrfRxService
  9568  0AE8  0A6E               	incf	_pBDTEntryEP0OutNext,w
  9569  0AE9  0086               	movwf	6
  9570  0AEA  0187               	clrf	7
  9571  0AEB  085A               	movf	??_USBCtrlTrfRxService,w
  9572  0AEC  0081               	movwf	1
  9573                           
  9574                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  9575  0AED  3048               	movlw	72
  9576  0AEE  00DA               	movwf	??_USBCtrlTrfRxService
  9577  0AEF  3000               	movlw	0
  9578  0AF0  00DB               	movwf	??_USBCtrlTrfRxService+1
  9579  0AF1  086E               	movf	_pBDTEntryEP0OutNext,w
  9580  0AF2  3E02               	addlw	2
  9581  0AF3  0086               	movwf	6
  9582  0AF4  0187               	clrf	7
  9583  0AF5  085A               	movf	??_USBCtrlTrfRxService,w
  9584  0AF6  3FC0               	movwi [0]fsr1
  9585  0AF7  085B               	movf	??_USBCtrlTrfRxService+1,w
  9586  0AF8  3FC1               	movwi [1]fsr1
  9587                           
  9588                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9589  0AF9  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9590  0AFA  0086               	movwf	6
  9591  0AFB  0187               	clrf	7
  9592  0AFC  1B01               	btfsc	1,6
  9593  0AFD  2B06               	goto	l4516
  9594                           
  9595                           ;usb_device.c: 2052: {
  9596                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9597  0AFE  30C8               	movlw	200
  9598  0AFF  00DA               	movwf	??_USBCtrlTrfRxService
  9599  0B00  086E               	movf	_pBDTEntryEP0OutNext,w
  9600  0B01  0086               	movwf	6
  9601  0B02  0187               	clrf	7
  9602  0B03  085A               	movf	??_USBCtrlTrfRxService,w
  9603  0B04  0081               	movwf	1
  9604                           
  9605                           ;usb_device.c: 2054: }
  9606  0B05  0008               	return
  9607  0B06                     l4516:	
  9608                           
  9609                           ;usb_device.c: 2055: else
  9610                           ;usb_device.c: 2056: {
  9611                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9612  0B06  3088               	movlw	136
  9613  0B07  00DA               	movwf	??_USBCtrlTrfRxService
  9614  0B08  086E               	movf	_pBDTEntryEP0OutNext,w
  9615  0B09  0086               	movwf	6
  9616  0B0A  0187               	clrf	7
  9617  0B0B  085A               	movf	??_USBCtrlTrfRxService,w
  9618  0B0C  0081               	movwf	1
  9619                           
  9620                           ;usb_device.c: 2058: }
  9621                           ;usb_device.c: 2059: }
  9622  0B0D  0008               	return
  9623  0B0E                     l4518:	
  9624                           
  9625                           ;usb_device.c: 2060: else
  9626                           ;usb_device.c: 2061: {
  9627                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
  9628  0B0E  3008               	movlw	8
  9629  0B0F  00DA               	movwf	??_USBCtrlTrfRxService
  9630  0B10  0A6E               	incf	_pBDTEntryEP0OutNext,w
  9631  0B11  0086               	movwf	6
  9632  0B12  0187               	clrf	7
  9633  0B13  085A               	movf	??_USBCtrlTrfRxService,w
  9634  0B14  0081               	movwf	1
  9635                           
  9636                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9637  0B15  3040               	movlw	64
  9638  0B16  00DA               	movwf	??_USBCtrlTrfRxService
  9639  0B17  3000               	movlw	0
  9640  0B18  00DB               	movwf	??_USBCtrlTrfRxService+1
  9641  0B19  086E               	movf	_pBDTEntryEP0OutNext,w
  9642  0B1A  3E02               	addlw	2
  9643  0B1B  0086               	movwf	6
  9644  0B1C  0187               	clrf	7
  9645  0B1D  085A               	movf	??_USBCtrlTrfRxService,w
  9646  0B1E  3FC0               	movwi [0]fsr1
  9647  0B1F  085B               	movf	??_USBCtrlTrfRxService+1,w
  9648  0B20  3FC1               	movwi [1]fsr1
  9649                           
  9650                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  9651  0B21  3084               	movlw	132
  9652  0B22  00DA               	movwf	??_USBCtrlTrfRxService
  9653  0B23  086E               	movf	_pBDTEntryEP0OutNext,w
  9654  0B24  0086               	movwf	6
  9655  0B25  0187               	clrf	7
  9656  0B26  085A               	movf	??_USBCtrlTrfRxService,w
  9657  0B27  0081               	movwf	1
  9658                           
  9659                           ;usb_device.c: 2077: if(outPipes[0].pFunc != (0))
  9660  0B28  0022               	movlb	2	; select bank2
  9661  0B29  0825               	movf	(_outPipes+5)^(0+256),w
  9662  0B2A  1903               	btfsc	3,2
  9663  0B2B  2B2F               	goto	l4524
  9664                           
  9665                           ;usb_device.c: 2078: {
  9666                           ;usb_device.c: 2084: outPipes[0].pFunc();
  9667  0B2C  0825               	movf	(_outPipes+5)^(0+256),w
  9668  0B2D  318A  2A8F         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9669  0B2F                     l4524:	
  9670                           
  9671                           ;usb_device.c: 2089: }
  9672                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
  9673  0B2F  13A2               	bcf	(_outPipes^(0+256)+2),7
  9674                           
  9675                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
  9676  0B30  0020               	movlb	0	; select bank0
  9677  0B31  08EB               	movf	_USBDeferStatusStagePacket,f
  9678  0B32  1D03               	skipz
  9679  0B33  0008               	return
  9680                           
  9681                           ;usb_device.c: 2105: {
  9682                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
  9683  0B34  3193  2385         	fcall	_USBCtrlEPAllowStatusStage
  9684  0B36  0008               	return
  9685  0B37                     __end_of_USBCtrlTrfRxService:	
  9686                           
  9687                           	psect	text34
  9688  1002                     __ptext34:	
  9689 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9690 ;; Defined at:
  9691 ;;		line 2623 in file "../USB/usb_device.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;		None
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;		None               void
  9698 ;; Registers used:
  9699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;Total ram usage:        1 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:   10
  9712 ;; This function calls:
  9713 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9714 ;;		_USBCtrlEPServiceComplete
  9715 ;;		_USBCheckStdRequest
  9716 ;; This function is called by:
  9717 ;;		_USBCtrlEPService
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           
  9722                           ;psect for function _USBCtrlTrfSetupHandler
  9723  1002                     _USBCtrlTrfSetupHandler:	
  9724                           
  9725                           ;usb_device.c: 2627: shortPacketStatus = 0;
  9726                           
  9727                           ;incstack = 0
  9728                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  9729  1002  0022               	movlb	2	; select bank2
  9730  1003  01CC               	clrf	_shortPacketStatus^(0+256)
  9731                           
  9732                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
  9733  1004  0020               	movlb	0	; select bank0
  9734  1005  01EB               	clrf	_USBDeferStatusStagePacket	;volatile
  9735                           
  9736                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
  9737  1006  0022               	movlb	2	; select bank2
  9738  1007  01BE               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  9739                           
  9740                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
  9741  1008  01BF               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  9742                           
  9743                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
  9744  1009  01B2               	clrf	_BothEP0OutUOWNsSet^(0+256)
  9745                           
  9746                           ;usb_device.c: 2632: controlTransferState = 0;
  9747  100A  0020               	movlb	0	; select bank0
  9748  100B  01EC               	clrf	_controlTransferState
  9749                           
  9750                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9751  100C  307F               	movlw	127
  9752  100D  0021               	movlb	1	; select bank1
  9753  100E  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9754  100F  0020               	movlb	0	; select bank0
  9755  1010  0868               	movf	_pBDTEntryIn,w
  9756  1011  0086               	movwf	6
  9757  1012  0187               	clrf	7
  9758  1013  0021               	movlb	1	; select bank1
  9759  1014  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9760  1015  0581               	andwf	1,f
  9761                           
  9762                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9763  1016  3004               	movlw	4
  9764  1017  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9765  1018  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9766  1019  0020               	movlb	0	; select bank0
  9767  101A  06E8               	xorwf	_pBDTEntryIn,f
  9768                           
  9769                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9770  101B  307F               	movlw	127
  9771  101C  0021               	movlb	1	; select bank1
  9772  101D  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9773  101E  0020               	movlb	0	; select bank0
  9774  101F  0868               	movf	_pBDTEntryIn,w
  9775  1020  0086               	movwf	6
  9776  1021  0187               	clrf	7
  9777  1022  0021               	movlb	1	; select bank1
  9778  1023  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9779  1024  0581               	andwf	1,f
  9780                           
  9781                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9782  1025  3004               	movlw	4
  9783  1026  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9784  1027  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9785  1028  0020               	movlb	0	; select bank0
  9786  1029  06E8               	xorwf	_pBDTEntryIn,f
  9787                           
  9788                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9789  102A  307F               	movlw	127
  9790  102B  0021               	movlb	1	; select bank1
  9791  102C  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  9792  102D  0020               	movlb	0	; select bank0
  9793  102E  086E               	movf	_pBDTEntryEP0OutNext,w
  9794  102F  0086               	movwf	6
  9795  1030  0187               	clrf	7
  9796  1031  0021               	movlb	1	; select bank1
  9797  1032  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  9798  1033  0581               	andwf	1,f
  9799                           
  9800                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
  9801  1034  0022               	movlb	2	; select bank2
  9802  1035  01CF               	clrf	(_inPipes^(0+256)+2)
  9803                           
  9804                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
  9805  1036  01D0               	clrf	(_inPipes^(0+256)+3)
  9806  1037  01D1               	clrf	((_inPipes+1)^(0+256)+3)
  9807                           
  9808                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
  9809  1038  01A2               	clrf	(_outPipes^(0+256)+2)
  9810                           
  9811                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
  9812  1039  01A3               	clrf	(_outPipes^(0+256)+3)
  9813  103A  01A4               	clrf	((_outPipes+1)^(0+256)+3)
  9814                           
  9815                           ;usb_device.c: 2656: USBCheckStdRequest();
  9816  103B  3192  2200  3190   	fcall	_USBCheckStdRequest
  9817                           
  9818                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9819  103E  3003               	movlw	3
  9820  103F  0021               	movlb	1	; select bank1
  9821  1040  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9822  1041  3000               	movlw	0
  9823  1042  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9824  1043  3000               	movlw	0
  9825  1044  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9826  1045  3000               	movlw	0
  9827  1046  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9828  1047  3000               	movlw	0
  9829  1048  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9830  1049  3000               	movlw	0
  9831  104A  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9832  104B  319E  26EB  3190   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9833                           
  9834                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
  9835  104E  3193  23E9         	fcall	_USBCtrlEPServiceComplete
  9836  1050  0008               	return
  9837  1051                     __end_of_USBCtrlTrfSetupHandler:	
  9838                           
  9839                           	psect	text35
  9840  1200                     __ptext35:	
  9841 ;; *************** function _USBCheckStdRequest *****************
  9842 ;; Defined at:
  9843 ;;		line 2839 in file "../USB/usb_device.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;		None               void
  9850 ;; Registers used:
  9851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;Total ram usage:        1 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    9
  9864 ;; This function calls:
  9865 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9866 ;;		_USBStdSetCfgHandler
  9867 ;;		_USBStdGetDscHandler
  9868 ;;		_USBStdGetStatusHandler
  9869 ;;		_USBStdFeatureReqHandler
  9870 ;; This function is called by:
  9871 ;;		_USBCtrlTrfSetupHandler
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           
  9876                           ;psect for function _USBCheckStdRequest
  9877  1200                     _USBCheckStdRequest:	
  9878                           
  9879                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
  9880                           
  9881                           ;incstack = 0
  9882                           ; Regs used in _USBCheckStdRequest: [allreg]
  9883  1200  0020               	movlb	0	; select bank0
  9884  1201  0E40               	swapf	64,w	;volatile
  9885  1202  0C89               	rrf	9,f
  9886  1203  3903               	andlw	3
  9887  1204  3A00               	xorlw	0
  9888  1205  1D03               	btfss	3,2
  9889  1206  0008               	return
  9890  1207  2A52               	goto	l6360
  9891  1208                     l332:	
  9892                           ;usb_device.c: 2843: {
  9893                           ;usb_device.c: 2844: case 5:
  9894                           
  9895                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
  9896                           
  9897                           
  9898                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
  9899  1208  0022               	movlb	2	; select bank2
  9900  1209  17CF               	bsf	(_inPipes^(0+256)+2),7
  9901                           
  9902                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
  9903  120A  3008               	movlw	8
  9904  120B  0021               	movlb	1	; select bank1
  9905  120C  00AC               	movwf	??_USBCheckStdRequest^(0+128)
  9906  120D  082C               	movf	??_USBCheckStdRequest^(0+128),w
  9907  120E  00EE               	movwf	_USBDeviceState^(0+128)
  9908                           
  9909                           ;usb_device.c: 2848: break;
  9910  120F  0008               	return
  9911  1210                     l6330:	
  9912                           ;usb_device.c: 2849: case 6:
  9913                           
  9914                           
  9915                           ;usb_device.c: 2850: USBStdGetDscHandler();
  9916  1210  3195  2557         	fcall	_USBStdGetDscHandler
  9917                           
  9918                           ;usb_device.c: 2851: break;
  9919  1212  0008               	return
  9920  1213                     l6332:	
  9921                           ;usb_device.c: 2852: case 9:
  9922                           
  9923                           
  9924                           ;usb_device.c: 2853: USBStdSetCfgHandler();
  9925  1213  3197  2771         	fcall	_USBStdSetCfgHandler
  9926                           
  9927                           ;usb_device.c: 2854: break;
  9928  1215  0008               	return
  9929  1216                     l6334:	
  9930                           ;usb_device.c: 2855: case 8:
  9931                           
  9932                           
  9933                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
  9934  1216  3054               	movlw	low _USBActiveConfiguration
  9935  1217  0022               	movlb	2	; select bank2
  9936  1218  00CD               	movwf	_inPipes^(0+256)
  9937  1219  3001               	movlw	high _USBActiveConfiguration
  9938  121A  00CE               	movwf	(_inPipes+1)^(0+256)
  9939                           
  9940                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9941  121B  144F               	bsf	(_inPipes^(0+256)+2),0
  9942                           
  9943                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
  9944  121C  01D0               	clrf	(_inPipes^(0+256)+3)
  9945  121D  0AD0               	incf	(_inPipes^(0+256)+3),f
  9946                           
  9947                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
  9948  121E  17CF               	bsf	(_inPipes^(0+256)+2),7
  9949                           
  9950                           ;usb_device.c: 2860: break;
  9951  121F  0008               	return
  9952  1220                     l6342:	
  9953                           ;usb_device.c: 2861: case 0:
  9954                           
  9955                           
  9956                           ;usb_device.c: 2862: USBStdGetStatusHandler();
  9957  1220  3190  20A1         	fcall	_USBStdGetStatusHandler
  9958                           
  9959                           ;usb_device.c: 2863: break;
  9960  1222  0008               	return
  9961  1223                     l6344:	
  9962                           ;usb_device.c: 2864: case 1:
  9963                           
  9964                           
  9965                           ;usb_device.c: 2865: case 3:
  9966                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
  9967  1223  3186  26DB         	fcall	_USBStdFeatureReqHandler
  9968                           
  9969                           ;usb_device.c: 2867: break;
  9970  1225  0008               	return
  9971  1226                     l6346:	
  9972                           ;usb_device.c: 2868: case 10:
  9973                           
  9974                           
  9975                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
  9976  1226  0020               	movlb	0	; select bank0
  9977  1227  0844               	movf	68,w	;volatile
  9978  1228  3E55               	addlw	_USBAlternateInterface& (0+255)
  9979  1229  0022               	movlb	2	; select bank2
  9980  122A  00CD               	movwf	_inPipes^(0+256)
  9981  122B  3001               	movlw	1
  9982  122C  00CE               	movwf	(_inPipes+1)^(0+256)
  9983                           
  9984                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9985  122D  144F               	bsf	(_inPipes^(0+256)+2),0
  9986                           
  9987                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
  9988  122E  01D0               	clrf	(_inPipes^(0+256)+3)
  9989  122F  0AD0               	incf	(_inPipes^(0+256)+3),f
  9990                           
  9991                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
  9992  1230  17CF               	bsf	(_inPipes^(0+256)+2),7
  9993                           
  9994                           ;usb_device.c: 2873: break;
  9995  1231  0008               	return
  9996  1232                     l341:	
  9997                           ;usb_device.c: 2874: case 11:
  9998                           
  9999                           
 10000                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
 10001  1232  0022               	movlb	2	; select bank2
 10002  1233  17CF               	bsf	(_inPipes^(0+256)+2),7
 10003                           
 10004                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10005  1234  0020               	movlb	0	; select bank0
 10006  1235  0842               	movf	66,w	;volatile
 10007  1236  0021               	movlb	1	; select bank1
 10008  1237  00AC               	movwf	??_USBCheckStdRequest^(0+128)
 10009  1238  0020               	movlb	0	; select bank0
 10010  1239  0844               	movf	68,w	;volatile
 10011  123A  3E55               	addlw	_USBAlternateInterface& (0+255)
 10012  123B  0086               	movwf	6
 10013  123C  3001               	movlw	1	; select bank2/3
 10014  123D  0087               	movwf	7
 10015  123E  0021               	movlb	1	; select bank1
 10016  123F  082C               	movf	??_USBCheckStdRequest^(0+128),w
 10017  1240  0081               	movwf	1
 10018                           
 10019                           ;usb_device.c: 2877: break;
 10020  1241  0008               	return
 10021  1242                     l6356:	
 10022                           ;usb_device.c: 2878: case 7:
 10023                           
 10024                           
 10025                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10026  1242  3002               	movlw	2
 10027  1243  0021               	movlb	1	; select bank1
 10028  1244  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10029  1245  3000               	movlw	0
 10030  1246  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10031  1247  3000               	movlw	0
 10032  1248  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10033  1249  3000               	movlw	0
 10034  124A  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10035  124B  3000               	movlw	0
 10036  124C  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10037  124D  3000               	movlw	0
 10038  124E  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10039  124F  319E  26EB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10040                           
 10041                           ;usb_device.c: 2884: }
 10042                           
 10043                           ;usb_device.c: 2883: break;
 10044                           
 10045                           ;usb_device.c: 2882: default:
 10046                           
 10047                           ;usb_device.c: 2881: case 12:
 10048                           
 10049                           ;usb_device.c: 2880: break;
 10050  1251  0008               	return
 10051  1252                     l6360:	
 10052  1252  0020               	movlb	0	; select bank0
 10053  1253  0841               	movf	65,w	;volatile
 10054                           
 10055                           ; Switch size 1, requested type "space"
 10056                           ; Number of cases is 11, Range of values is 0 to 12
 10057                           ; switch strategies available:
 10058                           ; Name         Instructions Cycles
 10059                           ; direct_byte           32     6 (fixed)
 10060                           ; simple_byte           34    18 (average)
 10061                           ; jumptable            260     6 (fixed)
 10062                           ; rangetable            17     4 (fixed)
 10063                           ; spacedrange           31     6 (fixed)
 10064                           ; locatedrange          13     3 (fixed)
 10065                           ;	Chosen strategy is direct_byte
 10066  1254  0084               	movwf	4
 10067  1255  300D               	movlw	13
 10068  1256  0204               	subwf	4,w
 10069  1257  1803               	skipnc
 10070  1258  0008               	return
 10071  1259  3198               	movlp	high S7200
 10072  125A  3504               	lslf	4,w
 10073  125B  3E00               	addlw	low S7200
 10074  125C  0082               	movwf	2
 10075  125D                     l330:	
 10076  125D  0008               	return
 10077  125E                     __end_of_USBCheckStdRequest:	
 10078                           
 10079                           	psect	swtext1
 10080  1800                     __pswtext1:	
 10081  1800                     S7200:	
 10082  1800  3192  2A20         	ljmp	l6342
 10083  1802  3192  2A23         	ljmp	l6344
 10084  1804  3192  2A5D         	ljmp	l330
 10085  1806  3192  2A23         	ljmp	l6344
 10086  1808  3192  2A5D         	ljmp	l330
 10087  180A  3192  2A08         	ljmp	l332
 10088  180C  3192  2A10         	ljmp	l6330
 10089  180E  3192  2A42         	ljmp	l6356
 10090  1810  3192  2A16         	ljmp	l6334
 10091  1812  3192  2A13         	ljmp	l6332
 10092  1814  3192  2A26         	ljmp	l6346
 10093  1816  3192  2A32         	ljmp	l341
 10094  1818  3192  2A5D         	ljmp	l330
 10095                           
 10096                           	psect	text36
 10097  06DB                     __ptext36:	
 10098 ;; *************** function _USBStdFeatureReqHandler *****************
 10099 ;; Defined at:
 10100 ;;		line 2907 in file "../USB/usb_device.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;		None
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  pUEP            2    8[BANK1 ] PTR unsigned char 
 10105 ;;		 -> UEP0(1), 
 10106 ;;  p               1   11[BANK1 ] PTR struct __BDT
 10107 ;;		 -> NULL(0), BDT(32), 
 10108 ;;  current_ep_d    1   10[BANK1 ] struct .
 10109 ;; Return value:  Size  Location     Type
 10110 ;;		None               void
 10111 ;; Registers used:
 10112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;Total ram usage:        6 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    8
 10125 ;; This function calls:
 10126 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10127 ;; This function is called by:
 10128 ;;		_USBCheckStdRequest
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           
 10133                           ;psect for function _USBStdFeatureReqHandler
 10134  06DB                     _USBStdFeatureReqHandler:	
 10135                           
 10136                           ;usb_device.c: 2908: BDT_ENTRY *p;
 10137                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
 10138                           ;usb_device.c: 2913: unsigned char* pUEP;
 10139                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
 10140                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
 10141                           
 10142                           ;incstack = 0
 10143                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10144  06DB  0020               	movlb	0	; select bank0
 10145  06DC  0842               	movf	66,w	;volatile
 10146  06DD  3A01               	xorlw	1
 10147  06DE  1D03               	skipz
 10148  06DF  2EF2               	goto	l6378
 10149  06E0  0840               	movf	64,w	;volatile
 10150  06E1  391F               	andlw	31
 10151  06E2  3800               	iorlw	0
 10152  06E3  1D03               	skipz
 10153  06E4  2EF2               	goto	l6378
 10154                           
 10155                           ;usb_device.c: 2953: {
 10156                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
 10157  06E5  0022               	movlb	2	; select bank2
 10158  06E6  17CF               	bsf	(_inPipes^(0+256)+2),7
 10159                           
 10160                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
 10161  06E7  0020               	movlb	0	; select bank0
 10162  06E8  0841               	movf	65,w	;volatile
 10163  06E9  3A03               	xorlw	3
 10164  06EA  1D03               	skipz
 10165  06EB  2EF0               	goto	l6376
 10166                           
 10167                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
 10168  06EC  0022               	movlb	2	; select bank2
 10169  06ED  01B8               	clrf	_RemoteWakeup^(0+256)
 10170  06EE  0AB8               	incf	_RemoteWakeup^(0+256),f
 10171  06EF  2EF2               	goto	l6378
 10172  06F0                     l6376:	
 10173                           
 10174                           ;usb_device.c: 2957: else
 10175                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
 10176  06F0  0022               	movlb	2	; select bank2
 10177  06F1  01B8               	clrf	_RemoteWakeup^(0+256)
 10178  06F2                     l6378:	
 10179                           
 10180                           ;usb_device.c: 2959: }
 10181                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
 10182                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
 10183                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 10184                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
 10185  06F2  0020               	movlb	0	; select bank0
 10186  06F3  0842               	movf	66,w
 10187  06F4  1D03               	skipz
 10188  06F5  0008               	return
 10189  06F6  0840               	movf	64,w	;volatile
 10190  06F7  391F               	andlw	31
 10191  06F8  3A02               	xorlw	2
 10192  06F9  1D03               	skipz
 10193  06FA  0008               	return
 10194  06FB  0844               	movf	68,w	;volatile
 10195  06FC  390F               	andlw	15
 10196  06FD  3A00               	xorlw	0
 10197  06FE  1903               	skipnz
 10198  06FF  0008               	return
 10199  0700  0844               	movf	68,w	;volatile
 10200  0701  390F               	andlw	15
 10201  0702  0021               	movlb	1	; select bank1
 10202  0703  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10203  0704  3002               	movlw	2
 10204  0705  0226               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 10205  0706  1803               	skipnc
 10206  0707  0008               	return
 10207  0708  086E               	movf	_USBDeviceState^(0+128),w
 10208  0709  3A20               	xorlw	32
 10209  070A  1D03               	skipz
 10210  070B  0008               	return
 10211                           
 10212                           ;usb_device.c: 2966: {
 10213                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
 10214  070C  0022               	movlb	2	; select bank2
 10215  070D  17CF               	bsf	(_inPipes^(0+256)+2),7
 10216                           
 10217                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
 10218  070E  0020               	movlb	0	; select bank0
 10219  070F  1BC4               	btfsc	68,7	;volatile
 10220  0710  2F21               	goto	l6392
 10221                           
 10222                           ;usb_device.c: 2973: {
 10223                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10224  0711  0844               	movf	68,w	;volatile
 10225  0712  390F               	andlw	15
 10226  0713  3E2E               	addlw	_pBDTEntryOut& (0+255)
 10227  0714  0086               	movwf	6
 10228  0715  3001               	movlw	1	; select bank2/3
 10229  0716  0087               	movwf	7
 10230  0717  0801               	movf	1,w
 10231  0718  0021               	movlb	1	; select bank1
 10232  0719  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10233  071A  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10234  071B  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10235                           
 10236                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10237  071C  0020               	movlb	0	; select bank0
 10238  071D  0844               	movf	68,w	;volatile
 10239  071E  390F               	andlw	15
 10240  071F  3E2C               	addlw	_ep_data_out& (0+255)
 10241  0720  2F30               	goto	L11
 10242  0721                     l6392:	
 10243                           ;usb_device.c: 2976: }
 10244                           
 10245                           
 10246                           ;usb_device.c: 2977: else
 10247                           ;usb_device.c: 2978: {
 10248                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10249  0721  0020               	movlb	0	; select bank0
 10250  0722  0844               	movf	68,w	;volatile
 10251  0723  390F               	andlw	15
 10252  0724  3E68               	addlw	_pBDTEntryIn& (0+255)
 10253  0725  0086               	movwf	6
 10254  0726  0187               	clrf	7
 10255  0727  0801               	movf	1,w
 10256  0728  0021               	movlb	1	; select bank1
 10257  0729  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10258  072A  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10259  072B  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10260                           
 10261                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10262  072C  0020               	movlb	0	; select bank0
 10263  072D  0844               	movf	68,w	;volatile
 10264  072E  390F               	andlw	15
 10265  072F  3E2A               	addlw	_ep_data_in& (0+255)
 10266  0730                     L11:	
 10267  0730  0086               	movwf	6
 10268  0731  3001               	movlw	1	; select bank2/3
 10269  0732  0087               	movwf	7
 10270  0733  0801               	movf	1,w
 10271  0734  0021               	movlb	1	; select bank1
 10272  0735  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10273  0736  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10274  0737  00AA               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 10275                           
 10276                           ;usb_device.c: 2981: }
 10277                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
 10278  0738  182A               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 10279  0739  2F3F               	goto	l353
 10280                           
 10281                           ;usb_device.c: 2988: {
 10282                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
 10283  073A  30FB               	movlw	251
 10284  073B  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10285  073C  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10286  073D  05AB               	andwf	USBStdFeatureReqHandler@p^(0+128),f
 10287                           
 10288                           ;usb_device.c: 2990: }
 10289  073E  2F40               	goto	l354
 10290  073F                     l353:	
 10291                           
 10292                           ;usb_device.c: 2991: else
 10293                           ;usb_device.c: 2992: {
 10294                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
 10295  073F  152B               	bsf	USBStdFeatureReqHandler@p^(0+128),2
 10296  0740                     l354:	
 10297                           
 10298                           ;usb_device.c: 2994: }
 10299                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
 10300  0740  0020               	movlb	0	; select bank0
 10301  0741  1BC4               	btfsc	68,7	;volatile
 10302  0742  2F4E               	goto	l6400
 10303                           
 10304                           ;usb_device.c: 3000: {
 10305                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10306  0743  0021               	movlb	1	; select bank1
 10307  0744  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10308  0745  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10309  0746  0020               	movlb	0	; select bank0
 10310  0747  0844               	movf	68,w	;volatile
 10311  0748  390F               	andlw	15
 10312  0749  3E2E               	addlw	_pBDTEntryOut& (0+255)
 10313  074A  0086               	movwf	6
 10314  074B  3001               	movlw	1	; select bank2/3
 10315  074C  0087               	movwf	7
 10316  074D  2F57               	goto	L12
 10317  074E                     l6400:	
 10318                           ;usb_device.c: 3002: }
 10319                           
 10320                           
 10321                           ;usb_device.c: 3003: else
 10322                           ;usb_device.c: 3004: {
 10323                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10324  074E  0021               	movlb	1	; select bank1
 10325  074F  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10326  0750  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10327  0751  0020               	movlb	0	; select bank0
 10328  0752  0844               	movf	68,w	;volatile
 10329  0753  390F               	andlw	15
 10330  0754  3E68               	addlw	_pBDTEntryIn& (0+255)
 10331  0755  0086               	movwf	6
 10332  0756  0187               	clrf	7
 10333  0757                     L12:	
 10334  0757  0021               	movlb	1	; select bank1
 10335  0758  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10336  0759  0081               	movwf	1
 10337                           
 10338                           ;usb_device.c: 3006: }
 10339                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
 10340  075A  0020               	movlb	0	; select bank0
 10341  075B  0841               	movf	65,w	;volatile
 10342  075C  3A03               	xorlw	3
 10343  075D  1D03               	skipz
 10344  075E  2F7C               	goto	l6412
 10345                           
 10346                           ;usb_device.c: 3010: {
 10347                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
 10348  075F  0021               	movlb	1	; select bank1
 10349  0760  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10350  0761  0086               	movwf	6
 10351  0762  0187               	clrf	7
 10352  0763  1F81               	btfss	1,7
 10353  0764  2F73               	goto	l358
 10354                           
 10355                           ;usb_device.c: 3012: {
 10356                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
 10357  0765  0020               	movlb	0	; select bank0
 10358  0766  1BC4               	btfsc	68,7	;volatile
 10359  0767  2F6C               	goto	l6410
 10360                           
 10361                           ;usb_device.c: 3016: {
 10362                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10363  0768  0844               	movf	68,w	;volatile
 10364  0769  390F               	andlw	15
 10365  076A  3E2C               	addlw	_ep_data_out& (0+255)
 10366  076B  2F6F               	goto	L13
 10367  076C                     l6410:	
 10368                           ;usb_device.c: 3018: }
 10369                           
 10370                           
 10371                           ;usb_device.c: 3019: else
 10372                           ;usb_device.c: 3020: {
 10373                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10374  076C  0844               	movf	68,w	;volatile
 10375  076D  390F               	andlw	15
 10376  076E  3E2A               	addlw	_ep_data_in& (0+255)
 10377  076F                     L13:	
 10378  076F  0086               	movwf	6
 10379  0770  3001               	movlw	1	; select bank2/3
 10380  0771  0087               	movwf	7
 10381  0772  1481               	bsf	1,1
 10382  0773                     l358:	
 10383                           
 10384                           ;usb_device.c: 3022: }
 10385                           ;usb_device.c: 3023: }
 10386                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
 10387  0773  3084               	movlw	132
 10388  0774  0021               	movlb	1	; select bank1
 10389  0775  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10390  0776  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10391  0777  0086               	movwf	6
 10392  0778  0187               	clrf	7
 10393  0779  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10394  077A  0481               	iorwf	1,f
 10395                           
 10396                           ;usb_device.c: 3027: }
 10397  077B  0008               	return
 10398  077C                     l6412:	
 10399                           
 10400                           ;usb_device.c: 3028: else
 10401                           ;usb_device.c: 3029: {
 10402                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10403  077C  3004               	movlw	4
 10404  077D  0021               	movlb	1	; select bank1
 10405  077E  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10406  077F  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10407  0780  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10408                           
 10409                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
 10410  0781  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10411  0782  0086               	movwf	6
 10412  0783  0187               	clrf	7
 10413  0784  1F81               	btfss	1,7
 10414  0785  2FA1               	goto	l6422
 10415                           
 10416                           ;usb_device.c: 3036: {
 10417                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
 10418  0786  307F               	movlw	127
 10419  0787  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10420  0788  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10421  0789  0086               	movwf	6
 10422  078A  0187               	clrf	7
 10423  078B  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10424  078C  0581               	andwf	1,f
 10425                           
 10426                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
 10427  078D  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10428  078E  0086               	movwf	6
 10429  078F  0187               	clrf	7
 10430  0790  1701               	bsf	1,6
 10431                           
 10432                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10433  0791  3005               	movlw	5
 10434  0792  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10435  0793  3000               	movlw	0
 10436  0794  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10437  0795  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10438  0796  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10439  0797  3000               	movlw	0
 10440  0798  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10441  0799  3001               	movlw	1
 10442  079A  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10443  079B  3000               	movlw	0
 10444  079C  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10445  079D  319E  26EB  3186   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10446                           
 10447                           ;usb_device.c: 3042: }
 10448  07A0  2FA6               	goto	l6424
 10449  07A1                     l6422:	
 10450                           
 10451                           ;usb_device.c: 3043: else
 10452                           ;usb_device.c: 3044: {
 10453                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
 10454  07A1  0021               	movlb	1	; select bank1
 10455  07A2  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10456  07A3  0086               	movwf	6
 10457  07A4  0187               	clrf	7
 10458  07A5  1701               	bsf	1,6
 10459  07A6                     l6424:	
 10460                           
 10461                           ;usb_device.c: 3047: }
 10462                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 10463  07A6  3004               	movlw	4
 10464  07A7  0021               	movlb	1	; select bank1
 10465  07A8  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10466  07A9  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10467  07AA  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 10468                           
 10469                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10470  07AB  18AA               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 10471  07AC  2FB2               	goto	l366
 10472  07AD  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10473  07AE  0086               	movwf	6
 10474  07AF  0187               	clrf	7
 10475  07B0  1F81               	btfss	1,7
 10476  07B1  2FD8               	goto	l6436
 10477  07B2                     l366:	
 10478                           
 10479                           ;usb_device.c: 3058: {
 10480                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
 10481  07B2  0020               	movlb	0	; select bank0
 10482  07B3  1BC4               	btfsc	68,7	;volatile
 10483  07B4  2FB9               	goto	l6432
 10484                           
 10485                           ;usb_device.c: 3060: {
 10486                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10487  07B5  0844               	movf	68,w	;volatile
 10488  07B6  390F               	andlw	15
 10489  07B7  3E2C               	addlw	_ep_data_out& (0+255)
 10490  07B8  2FBC               	goto	L14
 10491  07B9                     l6432:	
 10492                           ;usb_device.c: 3062: }
 10493                           
 10494                           
 10495                           ;usb_device.c: 3063: else
 10496                           ;usb_device.c: 3064: {
 10497                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10498  07B9  0844               	movf	68,w	;volatile
 10499  07BA  390F               	andlw	15
 10500  07BB  3E2A               	addlw	_ep_data_in& (0+255)
 10501  07BC                     L14:	
 10502  07BC  0086               	movwf	6
 10503  07BD  3001               	movlw	1	; select bank2/3
 10504  07BE  0087               	movwf	7
 10505  07BF  1081               	bcf	1,1
 10506                           
 10507                           ;usb_device.c: 3066: }
 10508                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10509  07C0  303B               	movlw	59
 10510  07C1  0021               	movlb	1	; select bank1
 10511  07C2  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10512  07C3  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10513  07C4  0086               	movwf	6
 10514  07C5  0187               	clrf	7
 10515  07C6  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10516  07C7  0581               	andwf	1,f
 10517                           
 10518                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10519  07C8  3005               	movlw	5
 10520  07C9  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10521  07CA  3000               	movlw	0
 10522  07CB  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10523  07CC  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10524  07CD  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10525  07CE  3000               	movlw	0
 10526  07CF  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10527  07D0  3001               	movlw	1
 10528  07D1  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10529  07D2  3000               	movlw	0
 10530  07D3  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10531  07D4  319E  26EB  3186   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10532                           
 10533                           ;usb_device.c: 3072: }
 10534  07D7  2FE0               	goto	l6438
 10535  07D8                     l6436:	
 10536                           
 10537                           ;usb_device.c: 3073: else
 10538                           ;usb_device.c: 3074: {
 10539                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10540  07D8  303B               	movlw	59
 10541  07D9  0021               	movlb	1	; select bank1
 10542  07DA  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10543  07DB  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 10544  07DC  0086               	movwf	6
 10545  07DD  0187               	clrf	7
 10546  07DE  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10547  07DF  0581               	andwf	1,f
 10548  07E0                     l6438:	
 10549                           
 10550                           ;usb_device.c: 3077: }
 10551                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10552  07E0  0020               	movlb	0	; select bank0
 10553  07E1  0844               	movf	68,w	;volatile
 10554  07E2  390F               	andlw	15
 10555  07E3  3E98               	addlw	152
 10556  07E4  0021               	movlb	1	; select bank1
 10557  07E5  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10558  07E6  01A7               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 10559  07E7  300E               	movlw	14
 10560  07E8  3DA7               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 10561  07E9  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10562  07EA  00A8               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 10563  07EB  0827               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 10564  07EC  00A9               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 10565                           
 10566                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
 10567  07ED  30FE               	movlw	254
 10568  07EE  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10569  07EF  0828               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 10570  07F0  0086               	movwf	6
 10571  07F1  0829               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 10572  07F2  0087               	movwf	7
 10573  07F3  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10574  07F4  0581               	andwf	1,f
 10575  07F5  0008               	return
 10576  07F6                     __end_of_USBStdFeatureReqHandler:	
 10577                           
 10578                           	psect	text37
 10579  10A1                     __ptext37:	
 10580 ;; *************** function _USBStdGetStatusHandler *****************
 10581 ;; Defined at:
 10582 ;;		line 2283 in file "../USB/usb_device.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  p               1    9[BANK0 ] PTR struct __BDT
 10587 ;;		 -> NULL(0), BDT(32), 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;		None               void
 10590 ;; Registers used:
 10591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;Total ram usage:        2 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:    4
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_USBCheckStdRequest
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           
 10612                           ;psect for function _USBStdGetStatusHandler
 10613  10A1                     _USBStdGetStatusHandler:	
 10614                           
 10615                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
 10616                           
 10617                           ;incstack = 0
 10618                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 10619  10A1  0020               	movlb	0	; select bank0
 10620  10A2  01C8               	clrf	72	;volatile
 10621                           
 10622                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
 10623  10A3  3000               	movlw	0
 10624  10A4  00C9               	movwf	73	;volatile
 10625                           
 10626                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
 10627  10A5  28D9               	goto	l4636
 10628  10A6                     l271:	
 10629                           ;usb_device.c: 2288: {
 10630                           ;usb_device.c: 2289: case (0x00):
 10631                           
 10632                           
 10633                           ;usb_device.c: 2295: if(1 == 1)
 10634  10A6  0022               	movlb	2	; select bank2
 10635  10A7  17CF               	bsf	(_inPipes^(0+256)+2),7
 10636                           
 10637                           ;usb_device.c: 2296: {
 10638                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
 10639  10A8  0020               	movlb	0	; select bank0
 10640  10A9  1448               	bsf	72,0	;volatile
 10641                           
 10642                           ;usb_device.c: 2298: }
 10643                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
 10644  10AA  0022               	movlb	2	; select bank2
 10645  10AB  0838               	movf	_RemoteWakeup^(0+256),w
 10646  10AC  3A01               	xorlw	1
 10647  10AD  1D03               	skipz
 10648  10AE  28E5               	goto	l274
 10649                           
 10650                           ;usb_device.c: 2301: {
 10651                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
 10652  10AF  0020               	movlb	0	; select bank0
 10653  10B0  14C8               	bsf	72,1	;volatile
 10654                           
 10655                           ;usb_device.c: 2303: }
 10656                           ;usb_device.c: 2304: break;
 10657  10B1  28E5               	goto	l274
 10658  10B2                     l275:	
 10659                           ;usb_device.c: 2305: case (0x01):
 10660                           
 10661                           
 10662                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
 10663  10B2  0022               	movlb	2	; select bank2
 10664  10B3  17CF               	bsf	(_inPipes^(0+256)+2),7
 10665                           
 10666                           ;usb_device.c: 2307: break;
 10667  10B4  28E5               	goto	l274
 10668  10B5                     l276:	
 10669                           ;usb_device.c: 2308: case (0x02):
 10670                           
 10671                           
 10672                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
 10673  10B5  0022               	movlb	2	; select bank2
 10674  10B6  17CF               	bsf	(_inPipes^(0+256)+2),7
 10675                           
 10676                           ;usb_device.c: 2313: {
 10677                           ;usb_device.c: 2314: BDT_ENTRY *p;
 10678                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
 10679  10B7  0020               	movlb	0	; select bank0
 10680  10B8  1BC4               	btfsc	68,7	;volatile
 10681  10B9  28C1               	goto	l4626
 10682                           
 10683                           ;usb_device.c: 2317: {
 10684                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10685  10BA  0844               	movf	68,w	;volatile
 10686  10BB  390F               	andlw	15
 10687  10BC  3E2E               	addlw	_pBDTEntryOut& (0+255)
 10688  10BD  0086               	movwf	6
 10689  10BE  3001               	movlw	1	; select bank2/3
 10690  10BF  0087               	movwf	7
 10691  10C0  28C6               	goto	L15
 10692  10C1                     l4626:	
 10693                           ;usb_device.c: 2319: }
 10694                           
 10695                           
 10696                           ;usb_device.c: 2320: else
 10697                           ;usb_device.c: 2321: {
 10698                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10699  10C1  0844               	movf	68,w	;volatile
 10700  10C2  390F               	andlw	15
 10701  10C3  3E68               	addlw	_pBDTEntryIn& (0+255)
 10702  10C4  0086               	movwf	6
 10703  10C5  0187               	clrf	7
 10704  10C6                     L15:	
 10705  10C6  0801               	movf	1,w
 10706  10C7  00D8               	movwf	??_USBStdGetStatusHandler
 10707  10C8  0858               	movf	??_USBStdGetStatusHandler,w
 10708  10C9  00D9               	movwf	USBStdGetStatusHandler@p
 10709                           
 10710                           ;usb_device.c: 2323: }
 10711                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10712  10CA  0859               	movf	USBStdGetStatusHandler@p,w
 10713  10CB  0086               	movwf	6
 10714  10CC  0187               	clrf	7
 10715  10CD  1F81               	btfss	1,7
 10716  10CE  28E5               	goto	l274
 10717  10CF  0859               	movf	USBStdGetStatusHandler@p,w
 10718  10D0  0086               	movwf	6
 10719  10D1  0187               	clrf	7
 10720  10D2  1D01               	btfss	1,2
 10721  10D3  28E5               	goto	l274
 10722                           
 10723                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
 10724  10D4  3001               	movlw	1
 10725  10D5  00D8               	movwf	??_USBStdGetStatusHandler
 10726  10D6  0858               	movf	??_USBStdGetStatusHandler,w
 10727  10D7  00C8               	movwf	72	;volatile
 10728                           
 10729                           ;usb_device.c: 2328: }
 10730                           ;usb_device.c: 2329: }
 10731                           
 10732                           ;usb_device.c: 2327: break;
 10733  10D8  28E5               	goto	l274
 10734  10D9                     l4636:	
 10735  10D9  0840               	movf	64,w	;volatile
 10736  10DA  391F               	andlw	31
 10737                           
 10738                           ; Switch size 1, requested type "space"
 10739                           ; Number of cases is 3, Range of values is 0 to 2
 10740                           ; switch strategies available:
 10741                           ; Name         Instructions Cycles
 10742                           ; simple_byte           10     6 (average)
 10743                           ; direct_byte           12     6 (fixed)
 10744                           ; jumptable            260     6 (fixed)
 10745                           ; rangetable             7     4 (fixed)
 10746                           ; spacedrange           11     6 (fixed)
 10747                           ; locatedrange           3     3 (fixed)
 10748                           ;	Chosen strategy is simple_byte
 10749  10DB  3A00               	xorlw	0	; case 0
 10750  10DC  1903               	skipnz
 10751  10DD  28A6               	goto	l271
 10752  10DE  3A01               	xorlw	1	; case 1
 10753  10DF  1903               	skipnz
 10754  10E0  28B2               	goto	l275
 10755  10E1  3A03               	xorlw	3	; case 2
 10756  10E2  1903               	skipnz
 10757  10E3  28B5               	goto	l276
 10758  10E4  28E5               	goto	l274
 10759  10E5                     l274:	
 10760                           
 10761                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
 10762  10E5  0022               	movlb	2	; select bank2
 10763  10E6  1FCF               	btfss	(_inPipes^(0+256)+2),7
 10764  10E7  0008               	return
 10765                           
 10766                           ;usb_device.c: 2332: {
 10767                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
 10768  10E8  3048               	movlw	72
 10769  10E9  00CD               	movwf	_inPipes^(0+256)
 10770  10EA  3000               	movlw	0
 10771  10EB  00CE               	movwf	(_inPipes+1)^(0+256)
 10772                           
 10773                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10774  10EC  144F               	bsf	(_inPipes^(0+256)+2),0
 10775                           
 10776                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
 10777  10ED  3002               	movlw	2
 10778  10EE  0020               	movlb	0	; select bank0
 10779  10EF  00D8               	movwf	??_USBStdGetStatusHandler
 10780  10F0  0858               	movf	??_USBStdGetStatusHandler,w
 10781  10F1  0022               	movlb	2	; select bank2
 10782  10F2  00D0               	movwf	(_inPipes^(0+256)+3)
 10783  10F3  0008               	return
 10784  10F4                     __end_of_USBStdGetStatusHandler:	
 10785                           
 10786                           	psect	text38
 10787  1557                     __ptext38:	
 10788 ;; *************** function _USBStdGetDscHandler *****************
 10789 ;; Defined at:
 10790 ;;		line 2207 in file "../USB/usb_device.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;		None               void
 10797 ;; Registers used:
 10798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;Total ram usage:        3 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    4
 10811 ;; This function calls:
 10812 ;;		Nothing
 10813 ;; This function is called by:
 10814 ;;		_USBCheckStdRequest
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818                           
 10819                           ;psect for function _USBStdGetDscHandler
 10820  1557                     _USBStdGetDscHandler:	
 10821                           
 10822                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
 10823                           
 10824                           ;incstack = 0
 10825                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 10826  1557  0020               	movlb	0	; select bank0
 10827  1558  0840               	movf	64,w	;volatile
 10828  1559  3A80               	xorlw	128
 10829  155A  1D03               	skipz
 10830  155B  0008               	return
 10831                           
 10832                           ;usb_device.c: 2209: {
 10833                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10834  155C  30C0               	movlw	192
 10835  155D  00D8               	movwf	??_USBStdGetDscHandler
 10836  155E  0858               	movf	??_USBStdGetDscHandler,w
 10837  155F  0022               	movlb	2	; select bank2
 10838  1560  00CF               	movwf	(_inPipes^(0+256)+2)
 10839                           
 10840                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
 10841  1561  2DC9               	goto	l4614
 10842  1562                     l4594:	
 10843                           ;usb_device.c: 2213: {
 10844                           ;usb_device.c: 2214: case 0x01:
 10845                           
 10846                           
 10847                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
 10848  1562  308D               	movlw	low (_device_dsc| (0+32768))
 10849  1563  0022               	movlb	2	; select bank2
 10850  1564  00CD               	movwf	_inPipes^(0+256)
 10851  1565  3088               	movlw	high (_device_dsc| (0+32768))
 10852  1566  00CE               	movwf	(_inPipes+1)^(0+256)
 10853                           
 10854                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
 10855  1567  3012               	movlw	18
 10856  1568  00D0               	movwf	(_inPipes^(0+256)+3)
 10857  1569  3000               	movlw	0
 10858  156A  00D1               	movwf	(_inPipes^(0+256)+4)
 10859                           
 10860                           ;usb_device.c: 2221: break;
 10861  156B  0008               	return
 10862  156C                     l4596:	
 10863                           ;usb_device.c: 2222: case 0x02:
 10864                           
 10865                           
 10866                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10867  156C  3004               	movlw	low (_USB_CD_Ptr| (0+32768))
 10868  156D  0084               	movwf	4
 10869  156E  3088               	movlw	high (_USB_CD_Ptr| (0+32768))
 10870  156F  0085               	movwf	5
 10871  1570  0020               	movlb	0	; select bank0
 10872  1571  0842               	movf	66,w	;volatile
 10873  1572  0784               	addwf	4,f
 10874  1573  1803               	skipnc
 10875  1574  0A85               	incf	5,f
 10876  1575  3F00               	moviw [0]fsr0
 10877  1576  0022               	movlb	2	; select bank2
 10878  1577  00CD               	movwf	_inPipes^(0+256)
 10879  1578  3088               	movlw	(high __stringtab)| (0+128)
 10880  1579  00CE               	movwf	(_inPipes+1)^(0+256)
 10881                           
 10882                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10883  157A  084E               	movf	(_inPipes+1)^(0+256),w
 10884  157B  0020               	movlb	0	; select bank0
 10885  157C  00D9               	movwf	??_USBStdGetDscHandler+1
 10886  157D  0022               	movlb	2	; select bank2
 10887  157E  084D               	movf	_inPipes^(0+256),w
 10888  157F  0020               	movlb	0	; select bank0
 10889  1580  00D8               	movwf	??_USBStdGetDscHandler
 10890  1581  3002               	movlw	2
 10891  1582  0758               	addwf	??_USBStdGetDscHandler,w
 10892  1583  0084               	movwf	4
 10893  1584  0859               	movf	??_USBStdGetDscHandler+1,w
 10894  1585  1803               	skipnc
 10895  1586  0A59               	incf	??_USBStdGetDscHandler+1,w
 10896  1587  0085               	movwf	5
 10897  1588  0800               	movf	0,w	;code access
 10898  1589  00DA               	movwf	??_USBStdGetDscHandler+2
 10899  158A  085A               	movf	??_USBStdGetDscHandler+2,w
 10900  158B  0022               	movlb	2	; select bank2
 10901  158C  00D0               	movwf	(_inPipes^(0+256)+3)
 10902                           
 10903                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10904  158D  084E               	movf	(_inPipes+1)^(0+256),w
 10905  158E  0020               	movlb	0	; select bank0
 10906  158F  00D9               	movwf	??_USBStdGetDscHandler+1
 10907  1590  0022               	movlb	2	; select bank2
 10908  1591  084D               	movf	_inPipes^(0+256),w
 10909  1592  0020               	movlb	0	; select bank0
 10910  1593  00D8               	movwf	??_USBStdGetDscHandler
 10911  1594  3003               	movlw	3
 10912  1595  0758               	addwf	??_USBStdGetDscHandler,w
 10913  1596  0084               	movwf	4
 10914  1597  0859               	movf	??_USBStdGetDscHandler+1,w
 10915  1598  1803               	skipnc
 10916  1599  0A59               	incf	??_USBStdGetDscHandler+1,w
 10917  159A  0085               	movwf	5
 10918  159B  0800               	movf	0,w	;code access
 10919  159C  00DA               	movwf	??_USBStdGetDscHandler+2
 10920  159D  085A               	movf	??_USBStdGetDscHandler+2,w
 10921  159E  0022               	movlb	2	; select bank2
 10922  159F  00D1               	movwf	(_inPipes^(0+256)+4)
 10923                           
 10924                           ;usb_device.c: 2234: break;
 10925  15A0  0008               	return
 10926  15A1                     l4602:	
 10927                           ;usb_device.c: 2235: case 0x03:
 10928                           
 10929                           
 10930                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
 10931  15A1  3003               	movlw	3
 10932  15A2  0020               	movlb	0	; select bank0
 10933  15A3  0242               	subwf	66,w	;volatile
 10934  15A4  1803               	skipnc
 10935  15A5  2DC3               	goto	l4608
 10936                           
 10937                           ;usb_device.c: 2240: {
 10938                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10939  15A6  3001               	movlw	low (_USB_SD_Ptr| (0+32768))
 10940  15A7  0084               	movwf	4
 10941  15A8  3088               	movlw	high (_USB_SD_Ptr| (0+32768))
 10942  15A9  0085               	movwf	5
 10943  15AA  0842               	movf	66,w	;volatile
 10944  15AB  0784               	addwf	4,f
 10945  15AC  1803               	skipnc
 10946  15AD  0A85               	incf	5,f
 10947  15AE  3F00               	moviw [0]fsr0
 10948  15AF  0022               	movlb	2	; select bank2
 10949  15B0  00CD               	movwf	_inPipes^(0+256)
 10950  15B1  3088               	movlw	(high __stringtab)| (0+128)
 10951  15B2  00CE               	movwf	(_inPipes+1)^(0+256)
 10952                           
 10953                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10954  15B3  084D               	movf	_inPipes^(0+256),w
 10955  15B4  0084               	movwf	4
 10956  15B5  084E               	movf	(_inPipes+1)^(0+256),w
 10957  15B6  0085               	movwf	5
 10958  15B7  0800               	movf	0,w	;code access
 10959  15B8  0020               	movlb	0	; select bank0
 10960  15B9  00D8               	movwf	??_USBStdGetDscHandler
 10961  15BA  01D9               	clrf	??_USBStdGetDscHandler+1
 10962  15BB  0858               	movf	??_USBStdGetDscHandler,w
 10963  15BC  0022               	movlb	2	; select bank2
 10964  15BD  00D0               	movwf	(_inPipes^(0+256)+3)
 10965  15BE  0020               	movlb	0	; select bank0
 10966  15BF  0859               	movf	??_USBStdGetDscHandler+1,w
 10967  15C0  0022               	movlb	2	; select bank2
 10968  15C1  00D1               	movwf	((_inPipes+1)^(0+256)+3)
 10969                           
 10970                           ;usb_device.c: 2245: }
 10971  15C2  0008               	return
 10972  15C3                     l4608:	
 10973                           
 10974                           ;usb_device.c: 2255: else
 10975                           ;usb_device.c: 2256: {
 10976                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
 10977  15C3  0022               	movlb	2	; select bank2
 10978  15C4  01CF               	clrf	(_inPipes^(0+256)+2)
 10979                           
 10980                           ;usb_device.c: 2258: }
 10981                           ;usb_device.c: 2259: break;
 10982  15C5  0008               	return
 10983  15C6                     l4610:	
 10984                           ;usb_device.c: 2260: default:
 10985                           
 10986                           
 10987                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
 10988  15C6  0022               	movlb	2	; select bank2
 10989  15C7  01CF               	clrf	(_inPipes^(0+256)+2)
 10990                           
 10991                           ;usb_device.c: 2263: }
 10992                           
 10993                           ;usb_device.c: 2262: break;
 10994  15C8  0008               	return
 10995  15C9                     l4614:	
 10996  15C9  0020               	movlb	0	; select bank0
 10997  15CA  0843               	movf	67,w	;volatile
 10998                           
 10999                           ; Switch size 1, requested type "space"
 11000                           ; Number of cases is 3, Range of values is 1 to 3
 11001                           ; switch strategies available:
 11002                           ; Name         Instructions Cycles
 11003                           ; simple_byte           10     6 (average)
 11004                           ; direct_byte           15     9 (fixed)
 11005                           ; jumptable            263     9 (fixed)
 11006                           ;	Chosen strategy is simple_byte
 11007  15CB  3A01               	xorlw	1	; case 1
 11008  15CC  1903               	skipnz
 11009  15CD  2D62               	goto	l4594
 11010  15CE  3A03               	xorlw	3	; case 2
 11011  15CF  1903               	skipnz
 11012  15D0  2D6C               	goto	l4596
 11013  15D1  3A01               	xorlw	1	; case 3
 11014  15D2  1903               	skipnz
 11015  15D3  2DA1               	goto	l4602
 11016  15D4  2DC6               	goto	l4610
 11017  15D5  0008               	return
 11018  15D6                     __end_of_USBStdGetDscHandler:	
 11019                           
 11020                           	psect	text39
 11021  1771                     __ptext39:	
 11022 ;; *************** function _USBStdSetCfgHandler *****************
 11023 ;; Defined at:
 11024 ;;		line 2132 in file "../USB/usb_device.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;		None
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;  p               2    7[BANK1 ] PTR unsigned char 
 11029 ;;		 -> UEP1(1), 
 11030 ;;  i               1    9[BANK1 ] unsigned char 
 11031 ;;  i               1   10[BANK1 ] unsigned char 
 11032 ;; Return value:  Size  Location     Type
 11033 ;;		None               void
 11034 ;; Registers used:
 11035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;Total ram usage:        5 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; Hardware stack levels required when called:    8
 11048 ;; This function calls:
 11049 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11050 ;;		_memset
 11051 ;; This function is called by:
 11052 ;;		_USBCheckStdRequest
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           
 11057                           ;psect for function _USBStdSetCfgHandler
 11058  1771                     _USBStdSetCfgHandler:	
 11059                           
 11060                           ;usb_device.c: 2133: BYTE i;
 11061                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
 11062                           
 11063                           ;incstack = 0
 11064                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11065  1771  0022               	movlb	2	; select bank2
 11066  1772  17CF               	bsf	(_inPipes^(0+256)+2),7
 11067                           
 11068                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 11069  1773  300E               	movlw	14
 11070  1774  0021               	movlb	1	; select bank1
 11071  1775  00A8               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 11072  1776  3099               	movlw	153
 11073  1777  00A7               	movwf	USBStdSetCfgHandler@p^(0+128)
 11074  1778  01A9               	clrf	USBStdSetCfgHandler@i_1089^(0+128)
 11075  1779  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11076  177A  1D03               	skipz
 11077  177B  2F8C               	goto	l6262
 11078  177C                     l6254:	
 11079  177C  0827               	movf	USBStdSetCfgHandler@p^(0+128),w
 11080  177D  0086               	movwf	6
 11081  177E  0828               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 11082  177F  0087               	movwf	7
 11083  1780  0181               	clrf	1
 11084  1781  3001               	movlw	1
 11085  1782  07A7               	addwf	USBStdSetCfgHandler@p^(0+128),f
 11086  1783  3000               	movlw	0
 11087  1784  3DA8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 11088  1785  3001               	movlw	1
 11089  1786  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11090  1787  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11091  1788  07A9               	addwf	USBStdSetCfgHandler@i_1089^(0+128),f
 11092  1789  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11093  178A  1903               	btfsc	3,2
 11094  178B  2F7C               	goto	l6254
 11095  178C                     l6262:	
 11096                           
 11097                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11098  178C  3020               	movlw	32
 11099  178D  0020               	movlb	0	; select bank0
 11100  178E  00D8               	movwf	?_memset
 11101  178F  3000               	movlw	0
 11102  1790  00D9               	movwf	?_memset+1
 11103  1791  3000               	movlw	0
 11104  1792  00DA               	movwf	?_memset+2
 11105  1793  3000               	movlw	0
 11106  1794  00DB               	movwf	?_memset+3
 11107  1795  3020               	movlw	32
 11108  1796  00DC               	movwf	?_memset+4
 11109  1797  3000               	movlw	0
 11110  1798  00DD               	movwf	?_memset+5
 11111  1799  319D  25A7  3197   	fcall	_memset
 11112                           
 11113                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
 11114  179C  003D               	movlb	29	; select bank29
 11115  179D  170E               	bsf	14,6	;volatile
 11116                           
 11117                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(1+1u); i++)
 11118  179E  0021               	movlb	1	; select bank1
 11119  179F  01AA               	clrf	USBStdSetCfgHandler@i^(0+128)
 11120  17A0  3002               	movlw	2
 11121  17A1  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11122  17A2  1803               	btfsc	3,0
 11123  17A3  2FB8               	goto	l6278
 11124  17A4                     l6272:	
 11125                           
 11126                           ;usb_device.c: 2151: {
 11127                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
 11128  17A4  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11129  17A5  3E2A               	addlw	_ep_data_in& (0+255)
 11130  17A6  0086               	movwf	6
 11131  17A7  3001               	movlw	1	; select bank2/3
 11132  17A8  0087               	movwf	7
 11133  17A9  0181               	clrf	1
 11134                           
 11135                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
 11136  17AA  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11137  17AB  3E2C               	addlw	_ep_data_out& (0+255)
 11138  17AC  0086               	movwf	6
 11139  17AD  3001               	movlw	1	; select bank2/3
 11140  17AE  0087               	movwf	7
 11141  17AF  0181               	clrf	1
 11142  17B0  3001               	movlw	1
 11143  17B1  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11144  17B2  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11145  17B3  07AA               	addwf	USBStdSetCfgHandler@i^(0+128),f
 11146  17B4  3002               	movlw	2
 11147  17B5  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11148  17B6  1C03               	skipc
 11149  17B7  2FA4               	goto	l6272
 11150  17B8                     l6278:	
 11151                           
 11152                           ;usb_device.c: 2154: }
 11153                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,1);
 11154  17B8  3055               	movlw	low _USBAlternateInterface
 11155  17B9  0020               	movlb	0	; select bank0
 11156  17BA  00D8               	movwf	?_memset
 11157  17BB  3001               	movlw	high _USBAlternateInterface
 11158  17BC  00D9               	movwf	?_memset+1
 11159  17BD  3000               	movlw	0
 11160  17BE  00DA               	movwf	?_memset+2
 11161  17BF  3000               	movlw	0
 11162  17C0  00DB               	movwf	?_memset+3
 11163  17C1  3001               	movlw	1
 11164  17C2  00DC               	movwf	?_memset+4
 11165  17C3  3000               	movlw	0
 11166  17C4  00DD               	movwf	?_memset+5
 11167  17C5  319D  25A7  3197   	fcall	_memset
 11168                           
 11169                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
 11170  17C8  003D               	movlb	29	; select bank29
 11171  17C9  130E               	bcf	14,6	;volatile
 11172                           
 11173                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11174  17CA  3028               	movlw	40
 11175  17CB  0021               	movlb	1	; select bank1
 11176  17CC  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11177  17CD  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11178  17CE  0020               	movlb	0	; select bank0
 11179  17CF  00E8               	movwf	_pBDTEntryIn
 11180                           
 11181                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11182  17D0  3020               	movlw	32
 11183  17D1  0021               	movlb	1	; select bank1
 11184  17D2  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11185  17D3  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11186  17D4  0020               	movlb	0	; select bank0
 11187  17D5  00ED               	movwf	_pBDTEntryEP0OutCurrent
 11188                           
 11189                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11190  17D6  086D               	movf	_pBDTEntryEP0OutCurrent,w
 11191  17D7  0021               	movlb	1	; select bank1
 11192  17D8  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11193  17D9  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11194  17DA  0020               	movlb	0	; select bank0
 11195  17DB  00EE               	movwf	_pBDTEntryEP0OutNext
 11196                           
 11197                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11198  17DC  0842               	movf	66,w	;volatile
 11199  17DD  0021               	movlb	1	; select bank1
 11200  17DE  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11201  17DF  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11202  17E0  0022               	movlb	2	; select bank2
 11203  17E1  00D4               	movwf	_USBActiveConfiguration^(0+256)
 11204                           
 11205                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
 11206  17E2  08D4               	movf	_USBActiveConfiguration^(0+256),f
 11207  17E3  1D03               	skipz
 11208  17E4  2FEB               	goto	l6294
 11209                           
 11210                           ;usb_device.c: 2173: {
 11211                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
 11212  17E5  3010               	movlw	16
 11213  17E6  0021               	movlb	1	; select bank1
 11214  17E7  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11215  17E8  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11216  17E9  00EE               	movwf	_USBDeviceState^(0+128)
 11217                           
 11218                           ;usb_device.c: 2176: }
 11219  17EA  0008               	return
 11220  17EB                     l6294:	
 11221                           
 11222                           ;usb_device.c: 2177: else
 11223                           ;usb_device.c: 2178: {
 11224                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11225  17EB  3001               	movlw	1
 11226  17EC  0021               	movlb	1	; select bank1
 11227  17ED  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11228  17EE  3000               	movlw	0
 11229  17EF  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11230  17F0  3054               	movlw	low _USBActiveConfiguration
 11231  17F1  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11232  17F2  3001               	movlw	high _USBActiveConfiguration
 11233  17F3  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11234  17F4  3001               	movlw	1
 11235  17F5  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11236  17F6  3000               	movlw	0
 11237  17F7  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11238  17F8  319E  26EB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11239                           
 11240                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
 11241  17FA  3020               	movlw	32
 11242  17FB  0021               	movlb	1	; select bank1
 11243  17FC  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11244  17FD  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11245  17FE  00EE               	movwf	_USBDeviceState^(0+128)
 11246  17FF  0008               	return
 11247  1800                     __end_of_USBStdSetCfgHandler:	
 11248                           
 11249                           	psect	text40
 11250  1DA7                     __ptext40:	
 11251 ;; *************** function _memset *****************
 11252 ;; Defined at:
 11253 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memset.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;  p1              2    8[BANK0 ] PTR void 
 11256 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11257 ;;  c               2   10[BANK0 ] int 
 11258 ;;  n               2   12[BANK0 ] unsigned int 
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;  p               2   15[BANK0 ] PTR unsigned char 
 11261 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  2    wreg      PTR void 
 11264 ;; Registers used:
 11265 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11275 ;;Total ram usage:        9 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; Hardware stack levels required when called:    4
 11278 ;; This function calls:
 11279 ;;		Nothing
 11280 ;; This function is called by:
 11281 ;;		_USBStdSetCfgHandler
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           
 11286                           ;psect for function _memset
 11287  1DA7                     _memset:	
 11288                           
 11289                           ;incstack = 0
 11290                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11291  1DA7  0020               	movlb	0	; select bank0
 11292  1DA8  0859               	movf	memset@p1+1,w
 11293  1DA9  01E0               	clrf	memset@p+1
 11294  1DAA  07E0               	addwf	memset@p+1,f
 11295  1DAB  0858               	movf	memset@p1,w
 11296  1DAC  01DF               	clrf	memset@p
 11297  1DAD  07DF               	addwf	memset@p,f
 11298  1DAE                     l4588:	
 11299  1DAE  3001               	movlw	1
 11300  1DAF  02DC               	subwf	memset@n,f
 11301  1DB0  3000               	movlw	0
 11302  1DB1  3BDD               	subwfb	memset@n+1,f
 11303  1DB2  30FF               	movlw	255
 11304  1DB3  065D               	xorwf	memset@n+1,w
 11305  1DB4  1D03               	skipz
 11306  1DB5  2DB8               	goto	u4265
 11307  1DB6  30FF               	movlw	255
 11308  1DB7  065C               	xorwf	memset@n,w
 11309  1DB8                     u4265:	
 11310  1DB8  1903               	btfsc	3,2
 11311  1DB9  0008               	return
 11312  1DBA  085A               	movf	memset@c,w
 11313  1DBB  00DE               	movwf	??_memset
 11314  1DBC  085F               	movf	memset@p,w
 11315  1DBD  0086               	movwf	6
 11316  1DBE  0860               	movf	memset@p+1,w
 11317  1DBF  0087               	movwf	7
 11318  1DC0  085E               	movf	??_memset,w
 11319  1DC1  0081               	movwf	1
 11320  1DC2  3001               	movlw	1
 11321  1DC3  07DF               	addwf	memset@p,f
 11322  1DC4  3000               	movlw	0
 11323  1DC5  3DE0               	addwfc	memset@p+1,f
 11324  1DC6  2DAE               	goto	l4588
 11325  1DC7                     __end_of_memset:	
 11326                           ;	Return value of _memset is never used
 11327                           
 11328                           
 11329                           	psect	text41
 11330  13E9                     __ptext41:	
 11331 ;; *************** function _USBCtrlEPServiceComplete *****************
 11332 ;; Defined at:
 11333 ;;		line 1786 in file "../USB/usb_device.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;		None
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;		None
 11338 ;; Return value:  Size  Location     Type
 11339 ;;		None               void
 11340 ;; Registers used:
 11341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;Total ram usage:        2 bytes
 11352 ;; Hardware stack levels used:    1
 11353 ;; Hardware stack levels required when called:    6
 11354 ;; This function calls:
 11355 ;;		_USBCtrlEPAllowStatusStage
 11356 ;;		_USBCtrlEPAllowDataStage
 11357 ;; This function is called by:
 11358 ;;		_USBCtrlTrfSetupHandler
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           
 11363                           ;psect for function _USBCtrlEPServiceComplete
 11364  13E9                     _USBCtrlEPServiceComplete:	
 11365                           
 11366                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
 11367                           
 11368                           ;incstack = 0
 11369                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11370  13E9  003D               	movlb	29	; select bank29
 11371  13EA  120E               	bcf	14,4	;volatile
 11372                           
 11373                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
 11374  13EB  0022               	movlb	2	; select bank2
 11375  13EC  1BCF               	btfsc	(_inPipes^(0+256)+2),7
 11376  13ED  2C22               	goto	l208
 11377                           
 11378                           ;usb_device.c: 1798: {
 11379                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
 11380  13EE  1FA2               	btfss	(_outPipes^(0+256)+2),7
 11381  13EF  2BFF               	goto	l4460
 11382                           
 11383                           ;usb_device.c: 1800: {
 11384                           ;usb_device.c: 1801: controlTransferState = 2;
 11385  13F0  3002               	movlw	2
 11386  13F1  0020               	movlb	0	; select bank0
 11387  13F2  00DD               	movwf	??_USBCtrlEPServiceComplete
 11388  13F3  085D               	movf	??_USBCtrlEPServiceComplete,w
 11389  13F4  00EC               	movwf	_controlTransferState
 11390                           
 11391                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
 11392  13F5  0022               	movlb	2	; select bank2
 11393  13F6  08BF               	movf	_USBDeferOUTDataStagePackets^(0+256),f
 11394  13F7  1D03               	skipz
 11395  13F8  2BFB               	goto	l4456
 11396                           
 11397                           ;usb_device.c: 1813: {
 11398                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
 11399  13F9  3190  2051         	fcall	_USBCtrlEPAllowDataStage
 11400  13FB                     l4456:	
 11401                           
 11402                           ;usb_device.c: 1815: }
 11403                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
 11404  13FB  0022               	movlb	2	; select bank2
 11405  13FC  01C3               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11406                           
 11407                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
 11408  13FD  01C2               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11409                           
 11410                           ;usb_device.c: 1821: }
 11411  13FE  0008               	return
 11412  13FF                     l4460:	
 11413                           
 11414                           ;usb_device.c: 1822: else
 11415                           ;usb_device.c: 1823: {
 11416                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
 11417  13FF  3008               	movlw	8
 11418  1400  0020               	movlb	0	; select bank0
 11419  1401  00DD               	movwf	??_USBCtrlEPServiceComplete
 11420  1402  0A6E               	incf	_pBDTEntryEP0OutNext,w
 11421  1403  0086               	movwf	6
 11422  1404  0187               	clrf	7
 11423  1405  085D               	movf	??_USBCtrlEPServiceComplete,w
 11424  1406  0081               	movwf	1
 11425                           
 11426                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 11427  1407  3040               	movlw	64
 11428  1408  00DD               	movwf	??_USBCtrlEPServiceComplete
 11429  1409  3000               	movlw	0
 11430  140A  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 11431  140B  086E               	movf	_pBDTEntryEP0OutNext,w
 11432  140C  3E02               	addlw	2
 11433  140D  0086               	movwf	6
 11434  140E  0187               	clrf	7
 11435  140F  085D               	movf	??_USBCtrlEPServiceComplete,w
 11436  1410  3FC0               	movwi [0]fsr1
 11437  1411  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 11438  1412  3FC1               	movwi [1]fsr1
 11439                           
 11440                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 11441  1413  308C               	movlw	140
 11442  1414  00DD               	movwf	??_USBCtrlEPServiceComplete
 11443  1415  086E               	movf	_pBDTEntryEP0OutNext,w
 11444  1416  0086               	movwf	6
 11445  1417  0187               	clrf	7
 11446  1418  085D               	movf	??_USBCtrlEPServiceComplete,w
 11447  1419  0081               	movwf	1
 11448                           
 11449                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
 11450  141A  3084               	movlw	132
 11451  141B  00DD               	movwf	??_USBCtrlEPServiceComplete
 11452  141C  0868               	movf	_pBDTEntryIn,w
 11453  141D  0086               	movwf	6
 11454  141E  0187               	clrf	7
 11455  141F  085D               	movf	??_USBCtrlEPServiceComplete,w
 11456  1420  0081               	movwf	1
 11457                           
 11458                           ;usb_device.c: 1832: }
 11459                           ;usb_device.c: 1833: }
 11460  1421  0008               	return
 11461  1422                     l208:	
 11462                           
 11463                           ;usb_device.c: 1834: else
 11464                           ;usb_device.c: 1835: {
 11465                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
 11466  1422  0020               	movlb	0	; select bank0
 11467  1423  1FC0               	btfss	64,7	;volatile
 11468  1424  2C38               	goto	l4476
 11469                           
 11470                           ;usb_device.c: 1837: {
 11471                           ;usb_device.c: 1838: controlTransferState = 1;
 11472  1425  01EC               	clrf	_controlTransferState
 11473  1426  0AEC               	incf	_controlTransferState,f
 11474                           
 11475                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
 11476  1427  0022               	movlb	2	; select bank2
 11477  1428  08BE               	movf	_USBDeferINDataStagePackets^(0+256),f
 11478  1429  1D03               	skipz
 11479  142A  2C2E               	goto	l4468
 11480                           
 11481                           ;usb_device.c: 1853: {
 11482                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
 11483  142B  3190  2051  3193   	fcall	_USBCtrlEPAllowDataStage
 11484  142E                     l4468:	
 11485                           
 11486                           ;usb_device.c: 1855: }
 11487                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
 11488  142E  0022               	movlb	2	; select bank2
 11489  142F  01C3               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11490                           
 11491                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
 11492  1430  01C2               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11493                           
 11494                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
 11495  1431  0020               	movlb	0	; select bank0
 11496  1432  08EB               	movf	_USBDeferStatusStagePacket,f
 11497  1433  1D03               	skipz
 11498  1434  0008               	return
 11499                           
 11500                           ;usb_device.c: 1880: {
 11501                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
 11502  1435  3193  2385         	fcall	_USBCtrlEPAllowStatusStage
 11503                           
 11504                           ;usb_device.c: 1882: }
 11505                           ;usb_device.c: 1883: }
 11506  1437  0008               	return
 11507  1438                     l4476:	
 11508                           
 11509                           ;usb_device.c: 1884: else
 11510                           ;usb_device.c: 1885: {
 11511                           ;usb_device.c: 1896: controlTransferState = 2;
 11512  1438  3002               	movlw	2
 11513  1439  0020               	movlb	0	; select bank0
 11514  143A  00DD               	movwf	??_USBCtrlEPServiceComplete
 11515  143B  085D               	movf	??_USBCtrlEPServiceComplete,w
 11516  143C  00EC               	movwf	_controlTransferState
 11517                           
 11518                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
 11519  143D  3008               	movlw	8
 11520  143E  00DD               	movwf	??_USBCtrlEPServiceComplete
 11521  143F  0A6E               	incf	_pBDTEntryEP0OutNext,w
 11522  1440  0086               	movwf	6
 11523  1441  0187               	clrf	7
 11524  1442  085D               	movf	??_USBCtrlEPServiceComplete,w
 11525  1443  0081               	movwf	1
 11526                           
 11527                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 11528  1444  3040               	movlw	64
 11529  1445  00DD               	movwf	??_USBCtrlEPServiceComplete
 11530  1446  3000               	movlw	0
 11531  1447  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 11532  1448  086E               	movf	_pBDTEntryEP0OutNext,w
 11533  1449  3E02               	addlw	2
 11534  144A  0086               	movwf	6
 11535  144B  0187               	clrf	7
 11536  144C  085D               	movf	??_USBCtrlEPServiceComplete,w
 11537  144D  3FC0               	movwi [0]fsr1
 11538  144E  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 11539  144F  3FC1               	movwi [1]fsr1
 11540                           
 11541                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 11542  1450  3084               	movlw	132
 11543  1451  00DD               	movwf	??_USBCtrlEPServiceComplete
 11544  1452  086E               	movf	_pBDTEntryEP0OutNext,w
 11545  1453  0086               	movwf	6
 11546  1454  0187               	clrf	7
 11547  1455  085D               	movf	??_USBCtrlEPServiceComplete,w
 11548  1456  0081               	movwf	1
 11549                           
 11550                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
 11551  1457  0022               	movlb	2	; select bank2
 11552  1458  01C3               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 11553                           
 11554                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
 11555  1459  01C2               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 11556                           
 11557                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
 11558  145A  0020               	movlb	0	; select bank0
 11559  145B  08EB               	movf	_USBDeferStatusStagePacket,f
 11560  145C  1D03               	skipz
 11561  145D  0008               	return
 11562                           
 11563                           ;usb_device.c: 1907: {
 11564                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
 11565  145E  3193  2385         	fcall	_USBCtrlEPAllowStatusStage
 11566  1460  0008               	return
 11567  1461                     __end_of_USBCtrlEPServiceComplete:	
 11568                           
 11569                           	psect	text42
 11570  1051                     __ptext42:	
 11571 ;; *************** function _USBCtrlEPAllowDataStage *****************
 11572 ;; Defined at:
 11573 ;;		line 1660 in file "../USB/usb_device.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;		None
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;		None
 11578 ;; Return value:  Size  Location     Type
 11579 ;;		None               void
 11580 ;; Registers used:
 11581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11591 ;;Total ram usage:        2 bytes
 11592 ;; Hardware stack levels used:    1
 11593 ;; Hardware stack levels required when called:    5
 11594 ;; This function calls:
 11595 ;;		_USBCtrlTrfTxService
 11596 ;; This function is called by:
 11597 ;;		_USBCtrlEPServiceComplete
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           
 11602                           ;psect for function _USBCtrlEPAllowDataStage
 11603  1051                     _USBCtrlEPAllowDataStage:	
 11604                           
 11605                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
 11606                           
 11607                           ;incstack = 0
 11608                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11609  1051  0022               	movlb	2	; select bank2
 11610  1052  01BE               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 11611                           
 11612                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
 11613  1053  01BF               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 11614                           
 11615                           ;usb_device.c: 1664: if(controlTransferState == 2)
 11616  1054  0020               	movlb	0	; select bank0
 11617  1055  086C               	movf	_controlTransferState,w
 11618  1056  3A02               	xorlw	2
 11619  1057  1D03               	skipz
 11620  1058  2874               	goto	l4394
 11621                           
 11622                           ;usb_device.c: 1665: {
 11623                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
 11624  1059  3008               	movlw	8
 11625  105A  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11626  105B  0A6E               	incf	_pBDTEntryEP0OutNext,w
 11627  105C  0086               	movwf	6
 11628  105D  0187               	clrf	7
 11629  105E  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11630  105F  0081               	movwf	1
 11631                           
 11632                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 11633  1060  3048               	movlw	72
 11634  1061  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11635  1062  3000               	movlw	0
 11636  1063  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 11637  1064  086E               	movf	_pBDTEntryEP0OutNext,w
 11638  1065  3E02               	addlw	2
 11639  1066  0086               	movwf	6
 11640  1067  0187               	clrf	7
 11641  1068  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11642  1069  3FC0               	movwi [0]fsr1
 11643  106A  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 11644  106B  3FC1               	movwi [1]fsr1
 11645                           
 11646                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 11647  106C  30C8               	movlw	200
 11648  106D  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11649  106E  086E               	movf	_pBDTEntryEP0OutNext,w
 11650  106F  0086               	movwf	6
 11651  1070  0187               	clrf	7
 11652  1071  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11653  1072  0081               	movwf	1
 11654                           
 11655                           ;usb_device.c: 1670: }
 11656  1073  0008               	return
 11657  1074                     l4394:	
 11658                           
 11659                           ;usb_device.c: 1671: else
 11660                           ;usb_device.c: 1672: {
 11661                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11662  1074  0022               	movlb	2	; select bank2
 11663  1075  0851               	movf	((_inPipes+1)^(0+256)+3),w
 11664  1076  0020               	movlb	0	; select bank0
 11665  1077  0247               	subwf	71,w	;volatile
 11666  1078  1D03               	skipz
 11667  1079  287E               	goto	u4015
 11668  107A  0022               	movlb	2	; select bank2
 11669  107B  0850               	movf	(_inPipes^(0+256)+3),w
 11670  107C  0020               	movlb	0	; select bank0
 11671  107D  0246               	subwf	70,w	;volatile
 11672  107E                     u4015:	
 11673  107E  1803               	skipnc
 11674  107F  2889               	goto	l4398
 11675                           
 11676                           ;usb_device.c: 1676: {
 11677                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
 11678  1080  0847               	movf	71,w	;volatile
 11679  1081  0022               	movlb	2	; select bank2
 11680  1082  01D1               	clrf	((_inPipes+1)^(0+256)+3)
 11681  1083  07D1               	addwf	((_inPipes+1)^(0+256)+3),f
 11682  1084  0020               	movlb	0	; select bank0
 11683  1085  0846               	movf	70,w	;volatile
 11684  1086  0022               	movlb	2	; select bank2
 11685  1087  01D0               	clrf	(_inPipes^(0+256)+3)
 11686  1088  07D0               	addwf	(_inPipes^(0+256)+3),f
 11687  1089                     l4398:	
 11688                           
 11689                           ;usb_device.c: 1678: }
 11690                           ;usb_device.c: 1679: USBCtrlTrfTxService();
 11691  1089  3196  26E3  3190   	fcall	_USBCtrlTrfTxService
 11692                           
 11693                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 11694  108C  3048               	movlw	72
 11695  108D  0020               	movlb	0	; select bank0
 11696  108E  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11697  108F  3000               	movlw	0
 11698  1090  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 11699  1091  0868               	movf	_pBDTEntryIn,w
 11700  1092  3E02               	addlw	2
 11701  1093  0086               	movwf	6
 11702  1094  0187               	clrf	7
 11703  1095  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11704  1096  3FC0               	movwi [0]fsr1
 11705  1097  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 11706  1098  3FC1               	movwi [1]fsr1
 11707                           
 11708                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 11709  1099  30C8               	movlw	200
 11710  109A  00DB               	movwf	??_USBCtrlEPAllowDataStage
 11711  109B  0868               	movf	_pBDTEntryIn,w
 11712  109C  0086               	movwf	6
 11713  109D  0187               	clrf	7
 11714  109E  085B               	movf	??_USBCtrlEPAllowDataStage,w
 11715  109F  0081               	movwf	1
 11716  10A0  0008               	return
 11717  10A1                     __end_of_USBCtrlEPAllowDataStage:	
 11718                           
 11719                           	psect	text43
 11720  16E3                     __ptext43:	
 11721 ;; *************** function _USBCtrlTrfTxService *****************
 11722 ;; Defined at:
 11723 ;;		line 1938 in file "../USB/usb_device.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;		None
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;  byteToSend      1   10[BANK0 ] unsigned char 
 11728 ;; Return value:  Size  Location     Type
 11729 ;;		None               void
 11730 ;; Registers used:
 11731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;Total ram usage:        3 bytes
 11742 ;; Hardware stack levels used:    1
 11743 ;; Hardware stack levels required when called:    4
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		_USBCtrlEPAllowDataStage
 11748 ;;		_USBCtrlTrfInHandler
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           
 11753                           ;psect for function _USBCtrlTrfTxService
 11754  16E3                     _USBCtrlTrfTxService:	
 11755                           
 11756                           ;usb_device.c: 1939: BYTE byteToSend;
 11757                           ;usb_device.c: 1943: byteToSend = 8;
 11758                           
 11759                           ;incstack = 0
 11760                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 11761  16E3  3008               	movlw	8
 11762  16E4  0020               	movlb	0	; select bank0
 11763  16E5  00D8               	movwf	??_USBCtrlTrfTxService
 11764  16E6  0858               	movf	??_USBCtrlTrfTxService,w
 11765  16E7  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 11766                           
 11767                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
 11768  16E8  3000               	movlw	0
 11769  16E9  0022               	movlb	2	; select bank2
 11770  16EA  0251               	subwf	((_inPipes+1)^(0+256)+3),w
 11771  16EB  3008               	movlw	8
 11772  16EC  1903               	skipnz
 11773  16ED  0250               	subwf	(_inPipes^(0+256)+3),w
 11774  16EE  1803               	skipnc
 11775  16EF  2F06               	goto	l4416
 11776                           
 11777                           ;usb_device.c: 1945: {
 11778                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
 11779  16F0  0850               	movf	(_inPipes^(0+256)+3),w
 11780  16F1  0020               	movlb	0	; select bank0
 11781  16F2  00D8               	movwf	??_USBCtrlTrfTxService
 11782  16F3  0858               	movf	??_USBCtrlTrfTxService,w
 11783  16F4  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 11784                           
 11785                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
 11786  16F5  0022               	movlb	2	; select bank2
 11787  16F6  08CC               	movf	_shortPacketStatus^(0+256),f
 11788  16F7  1D03               	skipz
 11789  16F8  2EFC               	goto	l4412
 11790                           
 11791                           ;usb_device.c: 1954: {
 11792                           ;usb_device.c: 1955: shortPacketStatus = 1;
 11793  16F9  01CC               	clrf	_shortPacketStatus^(0+256)
 11794  16FA  0ACC               	incf	_shortPacketStatus^(0+256),f
 11795                           
 11796                           ;usb_device.c: 1956: }
 11797  16FB  2F06               	goto	l4416
 11798  16FC                     l4412:	
 11799                           
 11800                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
 11801  16FC  084C               	movf	_shortPacketStatus^(0+256),w
 11802  16FD  3A01               	xorlw	1
 11803  16FE  1D03               	skipz
 11804  16FF  2F06               	goto	l4416
 11805                           
 11806                           ;usb_device.c: 1958: {
 11807                           ;usb_device.c: 1959: shortPacketStatus = 2;
 11808  1700  3002               	movlw	2
 11809  1701  0020               	movlb	0	; select bank0
 11810  1702  00D8               	movwf	??_USBCtrlTrfTxService
 11811  1703  0858               	movf	??_USBCtrlTrfTxService,w
 11812  1704  0022               	movlb	2	; select bank2
 11813  1705  00CC               	movwf	_shortPacketStatus^(0+256)
 11814  1706                     l4416:	
 11815                           
 11816                           ;usb_device.c: 1960: }
 11817                           ;usb_device.c: 1961: }
 11818                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
 11819  1706  3003               	movlw	3
 11820  1707  3E4D               	addlw	_inPipes& (0+255)
 11821  1708  0086               	movwf	6
 11822  1709  3001               	movlw	1	; select bank2/3
 11823  170A  0087               	movwf	7
 11824  170B  0020               	movlb	0	; select bank0
 11825  170C  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 11826  170D  00D8               	movwf	??_USBCtrlTrfTxService
 11827  170E  01D9               	clrf	??_USBCtrlTrfTxService+1
 11828  170F  09D8               	comf	??_USBCtrlTrfTxService,f
 11829  1710  09D9               	comf	??_USBCtrlTrfTxService+1,f
 11830  1711  0AD8               	incf	??_USBCtrlTrfTxService,f
 11831  1712  1903               	skipnz
 11832  1713  0AD9               	incf	??_USBCtrlTrfTxService+1,f
 11833  1714  3F40               	moviw [0]fsr1
 11834  1715  0758               	addwf	??_USBCtrlTrfTxService,w
 11835  1716  0022               	movlb	2	; select bank2
 11836  1717  00D0               	movwf	(_inPipes^(0+256)+3)
 11837  1718  3F41               	moviw [1]fsr1
 11838  1719  0020               	movlb	0	; select bank0
 11839  171A  3D59               	addwfc	??_USBCtrlTrfTxService+1,w
 11840  171B  0022               	movlb	2	; select bank2
 11841  171C  00D1               	movwf	(_inPipes^(0+256)+4)
 11842                           
 11843                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
 11844  171D  0020               	movlb	0	; select bank0
 11845  171E  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 11846  171F  00D8               	movwf	??_USBCtrlTrfTxService
 11847  1720  0A68               	incf	_pBDTEntryIn,w
 11848  1721  0086               	movwf	6
 11849  1722  0187               	clrf	7
 11850  1723  0858               	movf	??_USBCtrlTrfTxService,w
 11851  1724  0081               	movwf	1
 11852                           
 11853                           ;usb_device.c: 1974: pDst = ( BYTE*)CtrlTrfData;
 11854  1725  3048               	movlw	72
 11855  1726  00D8               	movwf	??_USBCtrlTrfTxService
 11856  1727  0858               	movf	??_USBCtrlTrfTxService,w
 11857  1728  0022               	movlb	2	; select bank2
 11858  1729  00CA               	movwf	_pDst^(0+256)
 11859                           
 11860                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11861  172A  1C4F               	btfss	(_inPipes^(0+256)+2),0
 11862  172B  2F4A               	goto	l4434
 11863  172C  2F6C               	goto	l4444
 11864  172D                     l4426:	
 11865                           ;usb_device.c: 1976: {
 11866                           ;usb_device.c: 1977: while(byteToSend)
 11867                           
 11868                           
 11869                           ;usb_device.c: 1978: {
 11870                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
 11871  172D  0022               	movlb	2	; select bank2
 11872  172E  084D               	movf	_inPipes^(0+256),w
 11873  172F  0084               	movwf	4
 11874  1730  084E               	movf	(_inPipes+1)^(0+256),w
 11875  1731  0085               	movwf	5
 11876  1732  0800               	movf	0,w	;code access
 11877  1733  0020               	movlb	0	; select bank0
 11878  1734  00D8               	movwf	??_USBCtrlTrfTxService
 11879  1735  0022               	movlb	2	; select bank2
 11880  1736  084A               	movf	_pDst^(0+256),w
 11881  1737  0086               	movwf	6
 11882  1738  0187               	clrf	7
 11883  1739  0020               	movlb	0	; select bank0
 11884  173A  0858               	movf	??_USBCtrlTrfTxService,w
 11885  173B  0081               	movwf	1
 11886  173C  3001               	movlw	1
 11887  173D  0022               	movlb	2	; select bank2
 11888  173E  07CD               	addwf	_inPipes^(0+256),f
 11889  173F  3000               	movlw	0
 11890  1740  3DCE               	addwfc	(_inPipes+1)^(0+256),f
 11891  1741  3001               	movlw	1
 11892  1742  0020               	movlb	0	; select bank0
 11893  1743  00D8               	movwf	??_USBCtrlTrfTxService
 11894  1744  0858               	movf	??_USBCtrlTrfTxService,w
 11895  1745  0022               	movlb	2	; select bank2
 11896  1746  07CA               	addwf	_pDst^(0+256),f
 11897                           
 11898                           ;usb_device.c: 1980: byteToSend--;
 11899  1747  3001               	movlw	1
 11900  1748  0020               	movlb	0	; select bank0
 11901  1749  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 11902  174A                     l4434:	
 11903  174A  0020               	movlb	0	; select bank0
 11904  174B  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 11905  174C  1903               	btfsc	3,2
 11906  174D  0008               	return
 11907  174E  2F2D               	goto	l4426
 11908  174F                     l4436:	
 11909                           ;usb_device.c: 1983: else
 11910                           ;usb_device.c: 1984: {
 11911                           ;usb_device.c: 1985: while(byteToSend)
 11912                           
 11913                           ;usb_device.c: 1981: }
 11914                           ;usb_device.c: 1982: }
 11915                           
 11916                           
 11917                           ;usb_device.c: 1986: {
 11918                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
 11919  174F  0022               	movlb	2	; select bank2
 11920  1750  084D               	movf	_inPipes^(0+256),w
 11921  1751  0084               	movwf	4
 11922  1752  084E               	movf	(_inPipes+1)^(0+256),w
 11923  1753  0085               	movwf	5
 11924  1754  0800               	movf	0,w	;code access
 11925  1755  0020               	movlb	0	; select bank0
 11926  1756  00D8               	movwf	??_USBCtrlTrfTxService
 11927  1757  0022               	movlb	2	; select bank2
 11928  1758  084A               	movf	_pDst^(0+256),w
 11929  1759  0086               	movwf	6
 11930  175A  0187               	clrf	7
 11931  175B  0020               	movlb	0	; select bank0
 11932  175C  0858               	movf	??_USBCtrlTrfTxService,w
 11933  175D  0081               	movwf	1
 11934  175E  3001               	movlw	1
 11935  175F  0022               	movlb	2	; select bank2
 11936  1760  07CD               	addwf	_inPipes^(0+256),f
 11937  1761  3000               	movlw	0
 11938  1762  3DCE               	addwfc	(_inPipes+1)^(0+256),f
 11939  1763  3001               	movlw	1
 11940  1764  0020               	movlb	0	; select bank0
 11941  1765  00D8               	movwf	??_USBCtrlTrfTxService
 11942  1766  0858               	movf	??_USBCtrlTrfTxService,w
 11943  1767  0022               	movlb	2	; select bank2
 11944  1768  07CA               	addwf	_pDst^(0+256),f
 11945                           
 11946                           ;usb_device.c: 1988: byteToSend--;
 11947  1769  3001               	movlw	1
 11948  176A  0020               	movlb	0	; select bank0
 11949  176B  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 11950  176C                     l4444:	
 11951  176C  0020               	movlb	0	; select bank0
 11952  176D  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 11953  176E  1903               	btfsc	3,2
 11954  176F  0008               	return
 11955  1770  2F4F               	goto	l4436
 11956  1771                     __end_of_USBCtrlTrfTxService:	
 11957                           
 11958                           	psect	text44
 11959  1385                     __ptext44:	
 11960 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 11961 ;; Defined at:
 11962 ;;		line 1590 in file "../USB/usb_device.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;		None
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;		None
 11967 ;; Return value:  Size  Location     Type
 11968 ;;		None               void
 11969 ;; Registers used:
 11970 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11980 ;;Total ram usage:        2 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:    4
 11983 ;; This function calls:
 11984 ;;		Nothing
 11985 ;; This function is called by:
 11986 ;;		_USBDeviceTasks
 11987 ;;		_USBCtrlEPServiceComplete
 11988 ;;		_USBCtrlTrfRxService
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           
 11993                           ;psect for function _USBCtrlEPAllowStatusStage
 11994  1385                     _USBCtrlEPAllowStatusStage:	
 11995                           
 11996                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
 11997                           
 11998                           ;incstack = 0
 11999                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 12000  1385  0022               	movlb	2	; select bank2
 12001  1386  08C2               	movf	_USBStatusStageEnabledFlag1^(0+256),f
 12002  1387  1D03               	skipz
 12003  1388  0008               	return
 12004                           
 12005                           ;usb_device.c: 1597: {
 12006                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
 12007  1389  3001               	movlw	1
 12008  138A  0020               	movlb	0	; select bank0
 12009  138B  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12010  138C  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12011  138D  0022               	movlb	2	; select bank2
 12012  138E  00C2               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12013                           
 12014                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
 12015  138F  08C3               	movf	_USBStatusStageEnabledFlag2^(0+256),f
 12016  1390  1D03               	skipz
 12017  1391  0008               	return
 12018                           
 12019                           ;usb_device.c: 1600: {
 12020                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
 12021  1392  3001               	movlw	1
 12022  1393  0020               	movlb	0	; select bank0
 12023  1394  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12024  1395  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12025  1396  0022               	movlb	2	; select bank2
 12026  1397  00C3               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12027                           
 12028                           ;usb_device.c: 1605: if(controlTransferState == 2)
 12029  1398  0020               	movlb	0	; select bank0
 12030  1399  086C               	movf	_controlTransferState,w
 12031  139A  3A02               	xorlw	2
 12032  139B  1D03               	skipz
 12033  139C  2BA9               	goto	l4254
 12034                           
 12035                           ;usb_device.c: 1606: {
 12036                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
 12037  139D  0A68               	incf	_pBDTEntryIn,w
 12038  139E  0086               	movwf	6
 12039  139F  0187               	clrf	7
 12040  13A0  0181               	clrf	1
 12041                           
 12042                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12043  13A1  30C8               	movlw	200
 12044  13A2  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12045  13A3  0868               	movf	_pBDTEntryIn,w
 12046  13A4  0086               	movwf	6
 12047  13A5  0187               	clrf	7
 12048  13A6  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12049  13A7  0081               	movwf	1
 12050                           
 12051                           ;usb_device.c: 1609: }
 12052  13A8  0008               	return
 12053  13A9                     l4254:	
 12054                           
 12055                           ;usb_device.c: 1610: else if(controlTransferState == 1)
 12056  13A9  086C               	movf	_controlTransferState,w
 12057  13AA  3A01               	xorlw	1
 12058  13AB  1D03               	skipz
 12059  13AC  0008               	return
 12060                           
 12061                           ;usb_device.c: 1611: {
 12062                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
 12063  13AD  0022               	movlb	2	; select bank2
 12064  13AE  01B2               	clrf	_BothEP0OutUOWNsSet^(0+256)
 12065                           
 12066                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
 12067  13AF  3008               	movlw	8
 12068  13B0  0020               	movlb	0	; select bank0
 12069  13B1  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12070  13B2  0A6D               	incf	_pBDTEntryEP0OutCurrent,w
 12071  13B3  0086               	movwf	6
 12072  13B4  0187               	clrf	7
 12073  13B5  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12074  13B6  0081               	movwf	1
 12075                           
 12076                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12077  13B7  3040               	movlw	64
 12078  13B8  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12079  13B9  3000               	movlw	0
 12080  13BA  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12081  13BB  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12082  13BC  3E02               	addlw	2
 12083  13BD  0086               	movwf	6
 12084  13BE  0187               	clrf	7
 12085  13BF  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12086  13C0  3FC0               	movwi [0]fsr1
 12087  13C1  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12088  13C2  3FC1               	movwi [1]fsr1
 12089                           
 12090                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
 12091  13C3  3084               	movlw	132
 12092  13C4  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12093  13C5  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12094  13C6  0086               	movwf	6
 12095  13C7  0187               	clrf	7
 12096  13C8  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12097  13C9  0081               	movwf	1
 12098                           
 12099                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
 12100  13CA  0022               	movlb	2	; select bank2
 12101  13CB  01B2               	clrf	_BothEP0OutUOWNsSet^(0+256)
 12102  13CC  0AB2               	incf	_BothEP0OutUOWNsSet^(0+256),f
 12103                           
 12104                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
 12105  13CD  3008               	movlw	8
 12106  13CE  0020               	movlb	0	; select bank0
 12107  13CF  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12108  13D0  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12109  13D1  0086               	movwf	6
 12110  13D2  0187               	clrf	7
 12111  13D3  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12112  13D4  0081               	movwf	1
 12113                           
 12114                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12115  13D5  3040               	movlw	64
 12116  13D6  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12117  13D7  3000               	movlw	0
 12118  13D8  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12119  13D9  086E               	movf	_pBDTEntryEP0OutNext,w
 12120  13DA  3E02               	addlw	2
 12121  13DB  0086               	movwf	6
 12122  13DC  0187               	clrf	7
 12123  13DD  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12124  13DE  3FC0               	movwi [0]fsr1
 12125  13DF  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12126  13E0  3FC1               	movwi [1]fsr1
 12127                           
 12128                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12129  13E1  3080               	movlw	128
 12130  13E2  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12131  13E3  086E               	movf	_pBDTEntryEP0OutNext,w
 12132  13E4  0086               	movwf	6
 12133  13E5  0187               	clrf	7
 12134  13E6  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12135  13E7  0081               	movwf	1
 12136  13E8  0008               	return
 12137  13E9                     __end_of_USBCtrlEPAllowStatusStage:	
 12138                           
 12139                           	psect	text45
 12140  1DE7                     __ptext45:	
 12141 ;; *************** function _USBStallHandler *****************
 12142 ;; Defined at:
 12143 ;;		line 2356 in file "../USB/usb_device.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;		None
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;		None               void
 12150 ;; Registers used:
 12151 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;Total ram usage:        1 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; Hardware stack levels required when called:    4
 12164 ;; This function calls:
 12165 ;;		Nothing
 12166 ;; This function is called by:
 12167 ;;		_USBDeviceTasks
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           
 12172                           ;psect for function _USBStallHandler
 12173  1DE7                     _USBStallHandler:	
 12174                           
 12175                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
 12176                           
 12177                           ;incstack = 0
 12178                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12179  1DE7  003D               	movlb	29	; select bank29
 12180  1DE8  1C18               	btfss	24,0	;volatile
 12181  1DE9  2E02               	goto	l4282
 12182                           
 12183                           ;usb_device.c: 2369: {
 12184                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12185  1DEA  0020               	movlb	0	; select bank0
 12186  1DEB  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12187  1DEC  0086               	movwf	6
 12188  1DED  0187               	clrf	7
 12189  1DEE  0801               	movf	1,w
 12190  1DEF  3A80               	xorlw	128
 12191  1DF0  1D03               	skipz
 12192  1DF1  2E00               	goto	l4280
 12193  1DF2  0868               	movf	_pBDTEntryIn,w
 12194  1DF3  0086               	movwf	6
 12195  1DF4  0187               	clrf	7
 12196  1DF5  0801               	movf	1,w
 12197  1DF6  3A84               	xorlw	132
 12198  1DF7  1D03               	skipz
 12199  1DF8  2E00               	goto	l4280
 12200                           
 12201                           ;usb_device.c: 2372: {
 12202                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12203  1DF9  308C               	movlw	140
 12204  1DFA  00D8               	movwf	??_USBStallHandler
 12205  1DFB  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12206  1DFC  0086               	movwf	6
 12207  1DFD  0187               	clrf	7
 12208  1DFE  0858               	movf	??_USBStallHandler,w
 12209  1DFF  0081               	movwf	1
 12210  1E00                     l4280:	
 12211                           
 12212                           ;usb_device.c: 2375: }
 12213                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
 12214  1E00  003D               	movlb	29	; select bank29
 12215  1E01  1018               	bcf	24,0	;volatile
 12216  1E02                     l4282:	
 12217                           
 12218                           ;usb_device.c: 2377: }
 12219                           ;usb_device.c: 2379: (UIR &= 0xDF);
 12220  1E02  30DF               	movlw	223
 12221  1E03  0020               	movlb	0	; select bank0
 12222  1E04  00D8               	movwf	??_USBStallHandler
 12223  1E05  0858               	movf	??_USBStallHandler,w
 12224  1E06  003D               	movlb	29	; select bank29
 12225  1E07  0590               	andwf	16,f	;volatile
 12226  1E08  0008               	return
 12227  1E09                     __end_of_USBStallHandler:	
 12228                           
 12229                           	psect	text46
 12230  1D34                     __ptext46:	
 12231 ;; *************** function _USBSuspend *****************
 12232 ;; Defined at:
 12233 ;;		line 2399 in file "../USB/usb_device.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;		None
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;		None
 12238 ;; Return value:  Size  Location     Type
 12239 ;;		None               void
 12240 ;; Registers used:
 12241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12242 ;; Tracked objects:
 12243 ;;		On entry : 0/0
 12244 ;;		On exit  : 0/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12249 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12250 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12251 ;;Total ram usage:        1 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:    8
 12254 ;; This function calls:
 12255 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12256 ;; This function is called by:
 12257 ;;		_USBDeviceTasks
 12258 ;; This function uses a non-reentrant model
 12259 ;;
 12260                           
 12261                           
 12262                           ;psect for function _USBSuspend
 12263  1D34                     _USBSuspend:	
 12264                           
 12265                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
 12266                           
 12267                           ;incstack = 0
 12268                           ; Regs used in _USBSuspend: [allreg]
 12269  1D34  003D               	movlb	29	; select bank29
 12270  1D35  1512               	bsf	18,2	;volatile
 12271                           
 12272                           ;usb_device.c: 2424: (UIR &= 0xEF);
 12273  1D36  30EF               	movlw	239
 12274  1D37  0021               	movlb	1	; select bank1
 12275  1D38  00A6               	movwf	??_USBSuspend^(0+128)
 12276  1D39  0826               	movf	??_USBSuspend^(0+128),w
 12277  1D3A  003D               	movlb	29	; select bank29
 12278  1D3B  0590               	andwf	16,f	;volatile
 12279                           
 12280                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
 12281  1D3C  148E               	bsf	14,1	;volatile
 12282                           
 12283                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
 12284  1D3D  0022               	movlb	2	; select bank2
 12285  1D3E  01BD               	clrf	_USBBusIsSuspended^(0+256)
 12286  1D3F  0ABD               	incf	_USBBusIsSuspended^(0+256),f
 12287                           
 12288                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12289  1D40  3075               	movlw	117
 12290  1D41  0021               	movlb	1	; select bank1
 12291  1D42  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12292  1D43  3000               	movlw	0
 12293  1D44  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12294  1D45  3000               	movlw	0
 12295  1D46  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12296  1D47  3000               	movlw	0
 12297  1D48  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 12298  1D49  3000               	movlw	0
 12299  1D4A  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12300  1D4B  3000               	movlw	0
 12301  1D4C  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 12302  1D4D  319E  26EB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12303  1D4F  0008               	return
 12304  1D50                     __end_of_USBSuspend:	
 12305                           
 12306                           	psect	text47
 12307  1CFD                     __ptext47:	
 12308 ;; *************** function _USBWakeFromSuspend *****************
 12309 ;; Defined at:
 12310 ;;		line 2456 in file "../USB/usb_device.c"
 12311 ;; Parameters:    Size  Location     Type
 12312 ;;		None
 12313 ;; Auto vars:     Size  Location     Type
 12314 ;;		None
 12315 ;; Return value:  Size  Location     Type
 12316 ;;		None               void
 12317 ;; Registers used:
 12318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12319 ;; Tracked objects:
 12320 ;;		On entry : 0/0
 12321 ;;		On exit  : 0/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;Total ram usage:        1 bytes
 12329 ;; Hardware stack levels used:    1
 12330 ;; Hardware stack levels required when called:    8
 12331 ;; This function calls:
 12332 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12333 ;; This function is called by:
 12334 ;;		_USBDeviceTasks
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           
 12338                           
 12339                           ;psect for function _USBWakeFromSuspend
 12340  1CFD                     _USBWakeFromSuspend:	
 12341                           
 12342                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
 12343                           
 12344                           ;incstack = 0
 12345                           ; Regs used in _USBWakeFromSuspend: [allreg]
 12346  1CFD  0022               	movlb	2	; select bank2
 12347  1CFE  01BD               	clrf	_USBBusIsSuspended^(0+256)
 12348                           
 12349                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12350  1CFF  3074               	movlw	116
 12351  1D00  0021               	movlb	1	; select bank1
 12352  1D01  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12353  1D02  3000               	movlw	0
 12354  1D03  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12355  1D04  3000               	movlw	0
 12356  1D05  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12357  1D06  3000               	movlw	0
 12358  1D07  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 12359  1D08  3000               	movlw	0
 12360  1D09  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12361  1D0A  3000               	movlw	0
 12362  1D0B  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 12363  1D0C  319E  26EB         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12364                           
 12365                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
 12366  1D0E  003D               	movlb	29	; select bank29
 12367  1D0F  108E               	bcf	14,1	;volatile
 12368                           
 12369                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
 12370  1D10  1112               	bcf	18,2	;volatile
 12371                           
 12372                           ;usb_device.c: 2495: {
 12373                           ;usb_device.c: 2496: (UIR &= 0xFB);
 12374  1D11  30FB               	movlw	251
 12375  1D12  0021               	movlb	1	; select bank1
 12376  1D13  00A6               	movwf	??_USBWakeFromSuspend^(0+128)
 12377  1D14  0826               	movf	??_USBWakeFromSuspend^(0+128),w
 12378  1D15  003D               	movlb	29	; select bank29
 12379  1D16  0590               	andwf	16,f	;volatile
 12380  1D17  0008               	return
 12381  1D18                     __end_of_USBWakeFromSuspend:	
 12382                           
 12383                           	psect	text48
 12384  1EEB                     __ptext48:	
 12385 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 12386 ;; Defined at:
 12387 ;;		line 630 in file "main.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;  event           2    0[BANK1 ] int 
 12390 ;;  pdata           2    2[BANK1 ] PTR void 
 12391 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(32), 
 12392 ;;  size            2    4[BANK1 ] unsigned short 
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;		None
 12395 ;; Return value:  Size  Location     Type
 12396 ;;                  1    wreg      enum E5
 12397 ;; Registers used:
 12398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12399 ;; Tracked objects:
 12400 ;;		On entry : 0/0
 12401 ;;		On exit  : 0/0
 12402 ;;		Unchanged: 0/0
 12403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12404 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;Total ram usage:        6 bytes
 12409 ;; Hardware stack levels used:    1
 12410 ;; Hardware stack levels required when called:    7
 12411 ;; This function calls:
 12412 ;;		_USBCBSuspend
 12413 ;;		_USBCBWakeFromSuspend
 12414 ;;		_USBCB_SOF_Handler
 12415 ;;		_USBCBErrorHandler
 12416 ;;		_USBCBCheckOtherReq
 12417 ;;		_USBCBStdSetDscHandler
 12418 ;;		_USBCBInitEP
 12419 ;; This function is called by:
 12420 ;;		_USBDeviceTasks
 12421 ;;		_USBStdSetCfgHandler
 12422 ;;		_USBSuspend
 12423 ;;		_USBWakeFromSuspend
 12424 ;;		_USBCtrlTrfSetupHandler
 12425 ;;		_USBCheckStdRequest
 12426 ;;		_USBStdFeatureReqHandler
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           
 12431                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 12432  1EEB                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 12433                           
 12434                           ;main.c: 631: switch( event )
 12435                           
 12436                           ;incstack = 0
 12437                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12438  1EEB  2F01               	goto	l6202
 12439  1EEC                     l6186:	
 12440                           ;main.c: 636: case EVENT_SOF:
 12441                           
 12442                           ;main.c: 635: break;
 12443                           
 12444                           ;main.c: 632: {
 12445                           ;main.c: 633: case EVENT_TRANSFER:
 12446                           
 12447                           
 12448                           ;main.c: 637: USBCB_SOF_Handler();
 12449  1EEC  3190  2001         	fcall	_USBCB_SOF_Handler
 12450                           
 12451                           ;main.c: 638: break;
 12452  1EEE  0008               	return
 12453  1EEF                     l6188:	
 12454                           ;main.c: 639: case EVENT_SUSPEND:
 12455                           
 12456                           
 12457                           ;main.c: 640: USBCBSuspend();
 12458  1EEF  319C  2426         	fcall	_USBCBSuspend
 12459                           
 12460                           ;main.c: 641: break;
 12461  1EF1  0008               	return
 12462  1EF2                     l6190:	
 12463                           ;main.c: 642: case EVENT_RESUME:
 12464                           
 12465                           
 12466                           ;main.c: 643: USBCBWakeFromSuspend();
 12467  1EF2  3190  2000         	fcall	_USBCBWakeFromSuspend
 12468                           
 12469                           ;main.c: 644: break;
 12470  1EF4  0008               	return
 12471  1EF5                     l6192:	
 12472                           ;main.c: 645: case EVENT_CONFIGURED:
 12473                           
 12474                           
 12475                           ;main.c: 646: USBCBInitEP();
 12476  1EF5  319D  2518         	fcall	_USBCBInitEP
 12477                           
 12478                           ;main.c: 647: break;
 12479  1EF7  0008               	return
 12480  1EF8                     l6194:	
 12481                           ;main.c: 648: case EVENT_SET_DESCRIPTOR:
 12482                           
 12483                           
 12484                           ;main.c: 649: USBCBStdSetDscHandler();
 12485  1EF8  3187  27FF         	fcall	_USBCBStdSetDscHandler
 12486                           
 12487                           ;main.c: 650: break;
 12488  1EFA  0008               	return
 12489  1EFB                     l6196:	
 12490                           ;main.c: 651: case EVENT_EP0_REQUEST:
 12491                           
 12492                           
 12493                           ;main.c: 652: USBCBCheckOtherReq();
 12494  1EFB  319C  2427         	fcall	_USBCBCheckOtherReq
 12495                           
 12496                           ;main.c: 653: break;
 12497  1EFD  0008               	return
 12498  1EFE                     l6198:	
 12499                           ;main.c: 654: case EVENT_BUS_ERROR:
 12500                           
 12501                           
 12502                           ;main.c: 655: USBCBErrorHandler();
 12503  1EFE  3180  2002         	fcall	_USBCBErrorHandler
 12504                           
 12505                           ;main.c: 669: }
 12506                           
 12507                           ;main.c: 668: break;
 12508                           
 12509                           ;main.c: 667: default:
 12510                           
 12511                           ;main.c: 666: break;
 12512                           
 12513                           ;main.c: 657: case EVENT_TRANSFER_TERMINATED:
 12514                           
 12515                           ;main.c: 656: break;
 12516  1F00  0008               	return
 12517  1F01                     l6202:	
 12518                           
 12519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12520                           ; Switch size 1, requested type "space"
 12521                           ; Number of cases is 2, Range of values is 0 to 127
 12522                           ; switch strategies available:
 12523                           ; Name         Instructions Cycles
 12524                           ; simple_byte            7     4 (average)
 12525                           ; direct_byte          262     6 (fixed)
 12526                           ; jumptable            260     6 (fixed)
 12527                           ; rangetable           132     6 (fixed)
 12528                           ; spacedrange          261     8 (fixed)
 12529                           ; locatedrange         128     3 (fixed)
 12530                           ;	Chosen strategy is simple_byte
 12531  1F01  0021               	movlb	1	; select bank1
 12532  1F02  0821               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 12533  1F03  3A00               	xorlw	0	; case 0
 12534  1F04  1903               	skipnz
 12535  1F05  2F0A               	goto	l7202
 12536  1F06  3A7F               	xorlw	127	; case 127
 12537  1F07  1903               	skipnz
 12538  1F08  2F24               	goto	l7204
 12539  1F09  2F29               	goto	l903
 12540  1F0A                     l7202:	
 12541                           
 12542                           ; Switch size 1, requested type "space"
 12543                           ; Number of cases is 8, Range of values is 1 to 117
 12544                           ; switch strategies available:
 12545                           ; Name         Instructions Cycles
 12546                           ; simple_byte           25    13 (average)
 12547                           ; direct_byte          243     9 (fixed)
 12548                           ; jumptable            263     9 (fixed)
 12549                           ;	Chosen strategy is simple_byte
 12550  1F0A  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 12551  1F0B  3A01               	xorlw	1	; case 1
 12552  1F0C  1903               	skipnz
 12553  1F0D  2EF5               	goto	l6192
 12554  1F0E  3A03               	xorlw	3	; case 2
 12555  1F0F  1903               	skipnz
 12556  1F10  2EF8               	goto	l6194
 12557  1F11  3A01               	xorlw	1	; case 3
 12558  1F12  1903               	skipnz
 12559  1F13  2EFB               	goto	l6196
 12560  1F14  3A06               	xorlw	6	; case 5
 12561  1F15  1903               	skipnz
 12562  1F16  2F29               	goto	l903
 12563  1F17  3A77               	xorlw	119	; case 114
 12564  1F18  1903               	skipnz
 12565  1F19  2F29               	goto	l903
 12566  1F1A  3A01               	xorlw	1	; case 115
 12567  1F1B  1903               	skipnz
 12568  1F1C  2EEC               	goto	l6186
 12569  1F1D  3A07               	xorlw	7	; case 116
 12570  1F1E  1903               	skipnz
 12571  1F1F  2EF2               	goto	l6190
 12572  1F20  3A01               	xorlw	1	; case 117
 12573  1F21  1903               	skipnz
 12574  1F22  2EEF               	goto	l6188
 12575  1F23  2F29               	goto	l903
 12576  1F24                     l7204:	
 12577                           
 12578                           ; Switch size 1, requested type "space"
 12579                           ; Number of cases is 1, Range of values is 255 to 255
 12580                           ; switch strategies available:
 12581                           ; Name         Instructions Cycles
 12582                           ; simple_byte            4     3 (average)
 12583                           ; direct_byte            7     5 (fixed)
 12584                           ; jumptable            263     9 (fixed)
 12585                           ;	Chosen strategy is simple_byte
 12586  1F24  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 12587  1F25  3AFF               	xorlw	255	; case 255
 12588  1F26  1903               	skipnz
 12589  1F27  2EFE               	goto	l6198
 12590  1F28  2F29               	goto	l903
 12591  1F29                     l903:	
 12592                           ;main.c: 670: return TRUE;
 12593                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 12594                           
 12595  1F29  0008               	return
 12596  1F2A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 12597                           
 12598                           	psect	text49
 12599  1D18                     __ptext49:	
 12600 ;; *************** function _USBCBInitEP *****************
 12601 ;; Defined at:
 12602 ;;		line 460 in file "main.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;		None
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;		None
 12607 ;; Return value:  Size  Location     Type
 12608 ;;		None               void
 12609 ;; Registers used:
 12610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12611 ;; Tracked objects:
 12612 ;;		On entry : 0/0
 12613 ;;		On exit  : 0/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12618 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12619 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12620 ;;Total ram usage:        3 bytes
 12621 ;; Hardware stack levels used:    1
 12622 ;; Hardware stack levels required when called:    6
 12623 ;; This function calls:
 12624 ;;		_USBEnableEndpoint
 12625 ;;		_USBTransferOnePacket
 12626 ;; This function is called by:
 12627 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631                           
 12632                           ;psect for function _USBCBInitEP
 12633  1D18                     _USBCBInitEP:	
 12634                           
 12635                           ;main.c: 462: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
 12636                           
 12637                           ;incstack = 0
 12638                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12639  1D18  301E               	movlw	30
 12640  1D19  0020               	movlb	0	; select bank0
 12641  1D1A  00E5               	movwf	??_USBCBInitEP
 12642  1D1B  0865               	movf	??_USBCBInitEP,w
 12643  1D1C  00DF               	movwf	?_USBEnableEndpoint
 12644  1D1D  3001               	movlw	1
 12645  1D1E  319E  262B  319D   	fcall	_USBEnableEndpoint
 12646                           
 12647                           ;main.c: 464: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
 12648  1D21  0020               	movlb	0	; select bank0
 12649  1D22  01DC               	clrf	?_USBTransferOnePacket
 12650  1D23  30A0               	movlw	160
 12651  1D24  00E5               	movwf	??_USBCBInitEP
 12652  1D25  0865               	movf	??_USBCBInitEP,w
 12653  1D26  00DD               	movwf	?_USBTransferOnePacket+1
 12654  1D27  3040               	movlw	64
 12655  1D28  00E6               	movwf	??_USBCBInitEP+1
 12656  1D29  0866               	movf	??_USBCBInitEP+1,w
 12657  1D2A  00DE               	movwf	?_USBTransferOnePacket+2
 12658  1D2B  3001               	movlw	1
 12659  1D2C  319F  27B2         	fcall	_USBTransferOnePacket
 12660  1D2E  0020               	movlb	0	; select bank0
 12661  1D2F  00E7               	movwf	??_USBCBInitEP+2
 12662  1D30  0867               	movf	??_USBCBInitEP+2,w
 12663  1D31  0022               	movlb	2	; select bank2
 12664  1D32  00C1               	movwf	_USBGenericOutHandle^(0+256)
 12665  1D33  0008               	return
 12666  1D34                     __end_of_USBCBInitEP:	
 12667                           
 12668                           	psect	text50
 12669  1FB2                     __ptext50:	
 12670 ;; *************** function _USBTransferOnePacket *****************
 12671 ;; Defined at:
 12672 ;;		line 1173 in file "../USB/usb_device.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  ep              1    wreg     unsigned char 
 12675 ;;  dir             1   12[BANK0 ] unsigned char 
 12676 ;;  data            1   13[BANK0 ] PTR unsigned char 
 12677 ;;		 -> INPacket(64), OUTPacket(64), 
 12678 ;;  len             1   14[BANK0 ] unsigned char 
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;  ep              1   17[BANK0 ] unsigned char 
 12681 ;;  handle          1   18[BANK0 ] PTR volatile struct __BD
 12682 ;;		 -> NULL(0), BDT(32), 
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      PTR void 
 12685 ;; Registers used:
 12686 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12692 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;Total ram usage:        7 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; Hardware stack levels required when called:    4
 12699 ;; This function calls:
 12700 ;;		Nothing
 12701 ;; This function is called by:
 12702 ;;		_ProcessIO
 12703 ;;		_USBCBInitEP
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           
 12708                           ;psect for function _USBTransferOnePacket
 12709  1FB2                     _USBTransferOnePacket:	
 12710                           
 12711                           ;incstack = 0
 12712                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 12713                           ;USBTransferOnePacket@ep stored from wreg
 12714  1FB2  0020               	movlb	0	; select bank0
 12715  1FB3  00E1               	movwf	USBTransferOnePacket@ep
 12716                           
 12717                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
 12718                           ;usb_device.c: 1177: if(dir != 0)
 12719  1FB4  085C               	movf	USBTransferOnePacket@dir,w
 12720  1FB5  1903               	btfsc	3,2
 12721  1FB6  2FBC               	goto	l4350
 12722                           
 12723                           ;usb_device.c: 1178: {
 12724                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
 12725  1FB7  0861               	movf	USBTransferOnePacket@ep,w
 12726  1FB8  3E68               	addlw	_pBDTEntryIn& (0+255)
 12727  1FB9  0086               	movwf	6
 12728  1FBA  0187               	clrf	7
 12729  1FBB  2FC1               	goto	L16
 12730  1FBC                     l4350:	
 12731                           ;usb_device.c: 1181: }
 12732                           
 12733                           
 12734                           ;usb_device.c: 1182: else
 12735                           ;usb_device.c: 1183: {
 12736                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
 12737  1FBC  0861               	movf	USBTransferOnePacket@ep,w
 12738  1FBD  3E2E               	addlw	_pBDTEntryOut& (0+255)
 12739  1FBE  0086               	movwf	6
 12740  1FBF  3001               	movlw	1	; select bank2/3
 12741  1FC0  0087               	movwf	7
 12742  1FC1                     L16:	
 12743  1FC1  0801               	movf	1,w
 12744  1FC2  00DF               	movwf	??_USBTransferOnePacket
 12745  1FC3  085F               	movf	??_USBTransferOnePacket,w
 12746  1FC4  00E2               	movwf	USBTransferOnePacket@handle
 12747                           
 12748                           ;usb_device.c: 1186: }
 12749                           ;usb_device.c: 1190: if(handle == 0)
 12750  1FC5  08E2               	movf	USBTransferOnePacket@handle,f
 12751  1FC6  1D03               	skipz
 12752  1FC7  2FCA               	goto	l4358
 12753                           
 12754                           ;usb_device.c: 1191: {
 12755                           ;usb_device.c: 1192: return 0;
 12756  1FC8  3000               	movlw	0
 12757  1FC9  0008               	return
 12758  1FCA                     l4358:	
 12759                           
 12760                           ;usb_device.c: 1193: }
 12761                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
 12762  1FCA  085D               	movf	USBTransferOnePacket@data,w
 12763  1FCB  00DF               	movwf	??_USBTransferOnePacket
 12764  1FCC  3002               	movlw	2
 12765  1FCD  00E0               	movwf	??_USBTransferOnePacket+1
 12766  1FCE  0862               	movf	USBTransferOnePacket@handle,w
 12767  1FCF  3E02               	addlw	2
 12768  1FD0  0086               	movwf	6
 12769  1FD1  0187               	clrf	7
 12770  1FD2  085F               	movf	??_USBTransferOnePacket,w
 12771  1FD3  3FC0               	movwi [0]fsr1
 12772  1FD4  0860               	movf	??_USBTransferOnePacket+1,w
 12773  1FD5  3FC1               	movwi [1]fsr1
 12774                           
 12775                           ;usb_device.c: 1207: handle->CNT = len;
 12776  1FD6  085E               	movf	USBTransferOnePacket@len,w
 12777  1FD7  00DF               	movwf	??_USBTransferOnePacket
 12778  1FD8  0A62               	incf	USBTransferOnePacket@handle,w
 12779  1FD9  0086               	movwf	6
 12780  1FDA  0187               	clrf	7
 12781  1FDB  085F               	movf	??_USBTransferOnePacket,w
 12782  1FDC  0081               	movwf	1
 12783                           
 12784                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
 12785  1FDD  3040               	movlw	64
 12786  1FDE  00DF               	movwf	??_USBTransferOnePacket
 12787  1FDF  0862               	movf	USBTransferOnePacket@handle,w
 12788  1FE0  0086               	movwf	6
 12789  1FE1  0187               	clrf	7
 12790  1FE2  085F               	movf	??_USBTransferOnePacket,w
 12791  1FE3  0581               	andwf	1,f
 12792                           
 12793                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
 12794  1FE4  3088               	movlw	136
 12795  1FE5  00DF               	movwf	??_USBTransferOnePacket
 12796  1FE6  0862               	movf	USBTransferOnePacket@handle,w
 12797  1FE7  0086               	movwf	6
 12798  1FE8  0187               	clrf	7
 12799  1FE9  085F               	movf	??_USBTransferOnePacket,w
 12800  1FEA  0481               	iorwf	1,f
 12801                           
 12802                           ;usb_device.c: 1212: if(dir != 0)
 12803  1FEB  085C               	movf	USBTransferOnePacket@dir,w
 12804  1FEC  1903               	btfsc	3,2
 12805  1FED  2FF5               	goto	l4368
 12806                           
 12807                           ;usb_device.c: 1213: {
 12808                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
 12809  1FEE  3004               	movlw	4
 12810  1FEF  00DF               	movwf	??_USBTransferOnePacket
 12811  1FF0  0861               	movf	USBTransferOnePacket@ep,w
 12812  1FF1  3E68               	addlw	_pBDTEntryIn& (0+255)
 12813  1FF2  0086               	movwf	6
 12814  1FF3  0187               	clrf	7
 12815  1FF4  2FFC               	goto	L17
 12816  1FF5                     l4368:	
 12817                           ;usb_device.c: 1216: }
 12818                           
 12819                           
 12820                           ;usb_device.c: 1217: else
 12821                           ;usb_device.c: 1218: {
 12822                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
 12823  1FF5  3004               	movlw	4
 12824  1FF6  00DF               	movwf	??_USBTransferOnePacket
 12825  1FF7  0861               	movf	USBTransferOnePacket@ep,w
 12826  1FF8  3E2E               	addlw	_pBDTEntryOut& (0+255)
 12827  1FF9  0086               	movwf	6
 12828  1FFA  3001               	movlw	1	; select bank2/3
 12829  1FFB  0087               	movwf	7
 12830  1FFC                     L17:	
 12831  1FFC  085F               	movf	??_USBTransferOnePacket,w
 12832  1FFD  0681               	xorwf	1,f
 12833                           
 12834                           ;usb_device.c: 1221: }
 12835                           ;usb_device.c: 1222: return (void*)handle;
 12836  1FFE  0862               	movf	USBTransferOnePacket@handle,w
 12837  1FFF  0008               	return
 12838  2000                     __end_of_USBTransferOnePacket:	
 12839                           
 12840                           	psect	text51
 12841  1E2B                     __ptext51:	
 12842 ;; *************** function _USBEnableEndpoint *****************
 12843 ;; Defined at:
 12844 ;;		line 1056 in file "../USB/usb_device.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;  ep              1    wreg     unsigned char 
 12847 ;;  options         1   15[BANK0 ] unsigned char 
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;  ep              1   20[BANK0 ] unsigned char 
 12850 ;;  p               2   18[BANK0 ] PTR unsigned char 
 12851 ;;		 -> UEP0(1), 
 12852 ;; Return value:  Size  Location     Type
 12853 ;;		None               void
 12854 ;; Registers used:
 12855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12856 ;; Tracked objects:
 12857 ;;		On entry : 0/0
 12858 ;;		On exit  : 0/0
 12859 ;;		Unchanged: 0/0
 12860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12861 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;Total ram usage:        6 bytes
 12866 ;; Hardware stack levels used:    1
 12867 ;; Hardware stack levels required when called:    5
 12868 ;; This function calls:
 12869 ;;		_USBConfigureEndpoint
 12870 ;; This function is called by:
 12871 ;;		_USBCBInitEP
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           
 12876                           ;psect for function _USBEnableEndpoint
 12877  1E2B                     _USBEnableEndpoint:	
 12878                           
 12879                           ;incstack = 0
 12880                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12881                           ;USBEnableEndpoint@ep stored from wreg
 12882  1E2B  0020               	movlb	0	; select bank0
 12883  1E2C  00E4               	movwf	USBEnableEndpoint@ep
 12884                           
 12885                           ;usb_device.c: 1057: unsigned char* p;
 12886                           ;usb_device.c: 1061: if(options & 0x04)
 12887  1E2D  1D5F               	btfss	USBEnableEndpoint@options,2
 12888  1E2E  2E34               	goto	l4322
 12889                           
 12890                           ;usb_device.c: 1062: {
 12891                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
 12892  1E2F  01D8               	clrf	?_USBConfigureEndpoint
 12893  1E30  0864               	movf	USBEnableEndpoint@ep,w
 12894  1E31  319F  272A  319E   	fcall	_USBConfigureEndpoint
 12895  1E34                     l4322:	
 12896                           
 12897                           ;usb_device.c: 1064: }
 12898                           ;usb_device.c: 1065: if(options & 0x02)
 12899  1E34  0020               	movlb	0	; select bank0
 12900  1E35  1CDF               	btfss	USBEnableEndpoint@options,1
 12901  1E36  2E3C               	goto	l4326
 12902                           
 12903                           ;usb_device.c: 1066: {
 12904                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
 12905  1E37  01D8               	clrf	?_USBConfigureEndpoint
 12906  1E38  0AD8               	incf	?_USBConfigureEndpoint,f
 12907  1E39  0864               	movf	USBEnableEndpoint@ep,w
 12908  1E3A  319F  272A         	fcall	_USBConfigureEndpoint
 12909  1E3C                     l4326:	
 12910                           
 12911                           ;usb_device.c: 1068: }
 12912                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
 12913  1E3C  0020               	movlb	0	; select bank0
 12914  1E3D  0864               	movf	USBEnableEndpoint@ep,w
 12915  1E3E  3E98               	addlw	152
 12916  1E3F  00E0               	movwf	??_USBEnableEndpoint
 12917  1E40  01E1               	clrf	??_USBEnableEndpoint+1
 12918  1E41  300E               	movlw	14
 12919  1E42  3DE1               	addwfc	??_USBEnableEndpoint+1,f
 12920  1E43  0860               	movf	??_USBEnableEndpoint,w
 12921  1E44  00E2               	movwf	USBEnableEndpoint@p
 12922  1E45  0861               	movf	??_USBEnableEndpoint+1,w
 12923  1E46  00E3               	movwf	USBEnableEndpoint@p+1
 12924                           
 12925                           ;usb_device.c: 1078: *p = options;
 12926  1E47  085F               	movf	USBEnableEndpoint@options,w
 12927  1E48  00E0               	movwf	??_USBEnableEndpoint
 12928  1E49  0862               	movf	USBEnableEndpoint@p,w
 12929  1E4A  0086               	movwf	6
 12930  1E4B  0863               	movf	USBEnableEndpoint@p+1,w
 12931  1E4C  0087               	movwf	7
 12932  1E4D  0860               	movf	??_USBEnableEndpoint,w
 12933  1E4E  0081               	movwf	1
 12934  1E4F  0008               	return
 12935  1E50                     __end_of_USBEnableEndpoint:	
 12936                           
 12937                           	psect	text52
 12938  1F2A                     __ptext52:	
 12939 ;; *************** function _USBConfigureEndpoint *****************
 12940 ;; Defined at:
 12941 ;;		line 1713 in file "../USB/usb_device.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;  EPNum           1    wreg     unsigned char 
 12944 ;;  direction       1    8[BANK0 ] unsigned char 
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;  EPNum           1   13[BANK0 ] unsigned char 
 12947 ;;  handle          1   14[BANK0 ] PTR volatile struct __BD
 12948 ;;		 -> BDT(32), 
 12949 ;; Return value:  Size  Location     Type
 12950 ;;		None               void
 12951 ;; Registers used:
 12952 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12958 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;Total ram usage:        7 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; Hardware stack levels required when called:    4
 12965 ;; This function calls:
 12966 ;;		Nothing
 12967 ;; This function is called by:
 12968 ;;		_USBEnableEndpoint
 12969 ;; This function uses a non-reentrant model
 12970 ;;
 12971                           
 12972                           
 12973                           ;psect for function _USBConfigureEndpoint
 12974  1F2A                     _USBConfigureEndpoint:	
 12975                           
 12976                           ;incstack = 0
 12977                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 12978                           ;USBConfigureEndpoint@EPNum stored from wreg
 12979  1F2A  0020               	movlb	0	; select bank0
 12980  1F2B  00DD               	movwf	USBConfigureEndpoint@EPNum
 12981                           
 12982                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
 12983                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
 12984  1F2C  3020               	movlw	32
 12985  1F2D  00D9               	movwf	??_USBConfigureEndpoint
 12986  1F2E  0859               	movf	??_USBConfigureEndpoint,w
 12987  1F2F  00DE               	movwf	USBConfigureEndpoint@handle
 12988                           
 12989                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
 12990  1F30  0858               	movf	USBConfigureEndpoint@direction,w
 12991  1F31  00D9               	movwf	??_USBConfigureEndpoint
 12992  1F32  3001               	movlw	1
 12993  1F33                     u3855:	
 12994  1F33  35D9               	lslf	??_USBConfigureEndpoint,f
 12995  1F34  0B89               	decfsz	9,f
 12996  1F35  2F33               	goto	u3855
 12997  1F36  085D               	movf	USBConfigureEndpoint@EPNum,w
 12998  1F37  00DA               	movwf	??_USBConfigureEndpoint+1
 12999  1F38  3001               	movlw	1
 13000  1F39                     u3865:	
 13001  1F39  35DA               	lslf	??_USBConfigureEndpoint+1,f
 13002  1F3A  3EFF               	addlw	-1
 13003  1F3B  1D03               	skipz
 13004  1F3C  2F39               	goto	u3865
 13005  1F3D  355A               	lslf	??_USBConfigureEndpoint+1,w
 13006  1F3E  0759               	addwf	??_USBConfigureEndpoint,w
 13007  1F3F  00DB               	movwf	??_USBConfigureEndpoint+2
 13008  1F40  3001               	movlw	1
 13009  1F41                     u3875:	
 13010  1F41  35DB               	lslf	??_USBConfigureEndpoint+2,f
 13011  1F42  3EFF               	addlw	-1
 13012  1F43  1D03               	skipz
 13013  1F44  2F41               	goto	u3875
 13014  1F45  355B               	lslf	??_USBConfigureEndpoint+2,w
 13015  1F46  00DC               	movwf	??_USBConfigureEndpoint+3
 13016  1F47  085C               	movf	??_USBConfigureEndpoint+3,w
 13017  1F48  07DE               	addwf	USBConfigureEndpoint@handle,f
 13018                           
 13019                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
 13020  1F49  085E               	movf	USBConfigureEndpoint@handle,w
 13021  1F4A  0086               	movwf	6
 13022  1F4B  0187               	clrf	7
 13023  1F4C  1381               	bcf	1,7
 13024                           
 13025                           ;usb_device.c: 1726: if(direction == 0)
 13026  1F4D  08D8               	movf	USBConfigureEndpoint@direction,f
 13027  1F4E  1D03               	skipz
 13028  1F4F  2F58               	goto	l4340
 13029                           
 13030                           ;usb_device.c: 1727: {
 13031                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
 13032  1F50  085E               	movf	USBConfigureEndpoint@handle,w
 13033  1F51  00D9               	movwf	??_USBConfigureEndpoint
 13034  1F52  085D               	movf	USBConfigureEndpoint@EPNum,w
 13035  1F53  3E2E               	addlw	_pBDTEntryOut& (0+255)
 13036  1F54  0086               	movwf	6
 13037  1F55  3001               	movlw	1	; select bank2/3
 13038  1F56  0087               	movwf	7
 13039  1F57  2F5E               	goto	L18
 13040  1F58                     l4340:	
 13041                           ;usb_device.c: 1729: }
 13042                           
 13043                           
 13044                           ;usb_device.c: 1730: else
 13045                           ;usb_device.c: 1731: {
 13046                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
 13047  1F58  085E               	movf	USBConfigureEndpoint@handle,w
 13048  1F59  00D9               	movwf	??_USBConfigureEndpoint
 13049  1F5A  085D               	movf	USBConfigureEndpoint@EPNum,w
 13050  1F5B  3E68               	addlw	_pBDTEntryIn& (0+255)
 13051  1F5C  0086               	movwf	6
 13052  1F5D  0187               	clrf	7
 13053  1F5E                     L18:	
 13054  1F5E  0859               	movf	??_USBConfigureEndpoint,w
 13055  1F5F  0081               	movwf	1
 13056                           
 13057                           ;usb_device.c: 1733: }
 13058                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
 13059  1F60  085E               	movf	USBConfigureEndpoint@handle,w
 13060  1F61  0086               	movwf	6
 13061  1F62  0187               	clrf	7
 13062  1F63  1301               	bcf	1,6
 13063                           
 13064                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
 13065  1F64  085E               	movf	USBConfigureEndpoint@handle,w
 13066  1F65  3E04               	addlw	4
 13067  1F66  0086               	movwf	6
 13068  1F67  0187               	clrf	7
 13069  1F68  1701               	bsf	1,6
 13070  1F69  0008               	return
 13071  1F6A                     __end_of_USBConfigureEndpoint:	
 13072                           
 13073                           	psect	text53
 13074  07FF                     __ptext53:	
 13075 ;; *************** function _USBCBStdSetDscHandler *****************
 13076 ;; Defined at:
 13077 ;;		line 434 in file "main.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;		None
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;		None
 13082 ;; Return value:  Size  Location     Type
 13083 ;;		None               void
 13084 ;; Registers used:
 13085 ;;		None
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;Total ram usage:        0 bytes
 13096 ;; Hardware stack levels used:    1
 13097 ;; Hardware stack levels required when called:    4
 13098 ;; This function calls:
 13099 ;;		Nothing
 13100 ;; This function is called by:
 13101 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105                           
 13106                           ;psect for function _USBCBStdSetDscHandler
 13107  07FF                     _USBCBStdSetDscHandler:	
 13108                           
 13109                           ;incstack = 0
 13110                           ; Regs used in _USBCBStdSetDscHandler: []
 13111  07FF  0008               	return
 13112  0800                     __end_of_USBCBStdSetDscHandler:	
 13113                           
 13114                           	psect	text54
 13115  1C27                     __ptext54:	
 13116 ;; *************** function _USBCBCheckOtherReq *****************
 13117 ;; Defined at:
 13118 ;;		line 409 in file "main.c"
 13119 ;; Parameters:    Size  Location     Type
 13120 ;;		None
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;		None
 13123 ;; Return value:  Size  Location     Type
 13124 ;;		None               void
 13125 ;; Registers used:
 13126 ;;		status,2, status,0, pclath, cstack
 13127 ;; Tracked objects:
 13128 ;;		On entry : 0/0
 13129 ;;		On exit  : 0/0
 13130 ;;		Unchanged: 0/0
 13131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13136 ;;Total ram usage:        0 bytes
 13137 ;; Hardware stack levels used:    1
 13138 ;; Hardware stack levels required when called:    5
 13139 ;; This function calls:
 13140 ;;		_USBCheckVendorRequest
 13141 ;; This function is called by:
 13142 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13143 ;; This function uses a non-reentrant model
 13144 ;;
 13145                           
 13146                           
 13147                           ;psect for function _USBCBCheckOtherReq
 13148  1C27                     _USBCBCheckOtherReq:	
 13149                           
 13150                           ;main.c: 410: USBCheckVendorRequest();
 13151                           
 13152                           ;incstack = 0
 13153                           ; Regs used in _USBCBCheckOtherReq: [status,2+status,0+pclath+cstack]
 13154  1C27  3180  2003         	fcall	_USBCheckVendorRequest
 13155  1C29  0008               	return
 13156  1C2A                     __end_of_USBCBCheckOtherReq:	
 13157                           
 13158                           	psect	text55
 13159  0003                     __ptext55:	
 13160 ;; *************** function _USBCheckVendorRequest *****************
 13161 ;; Defined at:
 13162 ;;		line 248 in file "../USB/usb_function_generic.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;		None
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;		None
 13167 ;; Return value:  Size  Location     Type
 13168 ;;		None               void
 13169 ;; Registers used:
 13170 ;;		None
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;Total ram usage:        0 bytes
 13181 ;; Hardware stack levels used:    1
 13182 ;; Hardware stack levels required when called:    4
 13183 ;; This function calls:
 13184 ;;		Nothing
 13185 ;; This function is called by:
 13186 ;;		_USBCBCheckOtherReq
 13187 ;; This function uses a non-reentrant model
 13188 ;;
 13189                           
 13190                           
 13191                           ;psect for function _USBCheckVendorRequest
 13192  0003                     _USBCheckVendorRequest:	
 13193                           
 13194                           ;incstack = 0
 13195                           ; Regs used in _USBCheckVendorRequest: []
 13196  0003  0008               	return
 13197  0004                     __end_of_USBCheckVendorRequest:	
 13198                           
 13199                           	psect	text56
 13200  0002                     __ptext56:	
 13201 ;; *************** function _USBCBErrorHandler *****************
 13202 ;; Defined at:
 13203 ;;		line 358 in file "main.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;		None
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;		None
 13208 ;; Return value:  Size  Location     Type
 13209 ;;		None               void
 13210 ;; Registers used:
 13211 ;;		None
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;Total ram usage:        0 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:    4
 13224 ;; This function calls:
 13225 ;;		Nothing
 13226 ;; This function is called by:
 13227 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13228 ;; This function uses a non-reentrant model
 13229 ;;
 13230                           
 13231                           
 13232                           ;psect for function _USBCBErrorHandler
 13233  0002                     _USBCBErrorHandler:	
 13234                           
 13235                           ;incstack = 0
 13236                           ; Regs used in _USBCBErrorHandler: []
 13237  0002  0008               	return
 13238  0003                     __end_of_USBCBErrorHandler:	
 13239                           
 13240                           	psect	text57
 13241  1001                     __ptext57:	
 13242 ;; *************** function _USBCB_SOF_Handler *****************
 13243 ;; Defined at:
 13244 ;;		line 335 in file "main.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;		None
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;		None
 13249 ;; Return value:  Size  Location     Type
 13250 ;;		None               void
 13251 ;; Registers used:
 13252 ;;		None
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13262 ;;Total ram usage:        0 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:    4
 13265 ;; This function calls:
 13266 ;;		Nothing
 13267 ;; This function is called by:
 13268 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13269 ;; This function uses a non-reentrant model
 13270 ;;
 13271                           
 13272                           
 13273                           ;psect for function _USBCB_SOF_Handler
 13274  1001                     _USBCB_SOF_Handler:	
 13275                           
 13276                           ;incstack = 0
 13277                           ; Regs used in _USBCB_SOF_Handler: []
 13278  1001  0008               	return
 13279  1002                     __end_of_USBCB_SOF_Handler:	
 13280                           
 13281                           	psect	text58
 13282  1000                     __ptext58:	
 13283 ;; *************** function _USBCBWakeFromSuspend *****************
 13284 ;; Defined at:
 13285 ;;		line 305 in file "main.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;		None
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;		None
 13290 ;; Return value:  Size  Location     Type
 13291 ;;		None               void
 13292 ;; Registers used:
 13293 ;;		None
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13303 ;;Total ram usage:        0 bytes
 13304 ;; Hardware stack levels used:    1
 13305 ;; Hardware stack levels required when called:    4
 13306 ;; This function calls:
 13307 ;;		Nothing
 13308 ;; This function is called by:
 13309 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13310 ;;		_USBCBSendResume
 13311 ;; This function uses a non-reentrant model
 13312 ;;
 13313                           
 13314                           
 13315                           ;psect for function _USBCBWakeFromSuspend
 13316  1000                     _USBCBWakeFromSuspend:	
 13317                           
 13318                           ;incstack = 0
 13319                           ; Regs used in _USBCBWakeFromSuspend: []
 13320  1000  0008               	return
 13321  1001                     __end_of_USBCBWakeFromSuspend:	
 13322                           
 13323                           	psect	text59
 13324  1C26                     __ptext59:	
 13325 ;; *************** function _USBCBSuspend *****************
 13326 ;; Defined at:
 13327 ;;		line 264 in file "main.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;		None
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;		None
 13332 ;; Return value:  Size  Location     Type
 13333 ;;		None               void
 13334 ;; Registers used:
 13335 ;;		None
 13336 ;; Tracked objects:
 13337 ;;		On entry : 0/0
 13338 ;;		On exit  : 0/0
 13339 ;;		Unchanged: 0/0
 13340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;Total ram usage:        0 bytes
 13346 ;; Hardware stack levels used:    1
 13347 ;; Hardware stack levels required when called:    4
 13348 ;; This function calls:
 13349 ;;		Nothing
 13350 ;; This function is called by:
 13351 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           
 13356                           ;psect for function _USBCBSuspend
 13357  1C26                     _USBCBSuspend:	
 13358                           
 13359                           ;incstack = 0
 13360                           ; Regs used in _USBCBSuspend: []
 13361  1C26  0008               	return
 13362  1C27                     __end_of_USBCBSuspend:	
 13363                           
 13364                           	psect	text60
 13365  09E7                     __ptext60:	
 13366 ;; *************** function _USBDeviceInit *****************
 13367 ;; Defined at:
 13368 ;;		line 467 in file "../USB/usb_device.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;		None
 13371 ;; Auto vars:     Size  Location     Type
 13372 ;;  p               2   10[BANK0 ] PTR unsigned char 
 13373 ;;		 -> UEP1(1), 
 13374 ;;  i               1   12[BANK0 ] unsigned char 
 13375 ;;  i               1   13[BANK0 ] unsigned char 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;		None               void
 13378 ;; Registers used:
 13379 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13387 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13388 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13389 ;;Total ram usage:        6 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:    4
 13392 ;; This function calls:
 13393 ;;		Nothing
 13394 ;; This function is called by:
 13395 ;;		_USBDeviceTasks
 13396 ;;		_InitializeSystem
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           
 13401                           ;psect for function _USBDeviceInit
 13402  09E7                     _USBDeviceInit:	
 13403                           
 13404                           ;usb_device.c: 468: BYTE i;
 13405                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
 13406                           
 13407                           ;incstack = 0
 13408                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 13409  09E7  0021               	movlb	1	; select bank1
 13410  09E8  1112               	bcf	18,2	;volatile
 13411                           
 13412                           ;usb_device.c: 473: UEIR = 0;;
 13413  09E9  003D               	movlb	29	; select bank29
 13414  09EA  0193               	clrf	19	;volatile
 13415                           
 13416                           ;usb_device.c: 476: UIR = 0;;
 13417  09EB  0190               	clrf	16	;volatile
 13418                           
 13419                           ;usb_device.c: 479: UEP0 = 0;
 13420  09EC  0198               	clrf	24	;volatile
 13421                           
 13422                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 13423  09ED  300E               	movlw	14
 13424  09EE  0020               	movlb	0	; select bank0
 13425  09EF  00DB               	movwf	USBDeviceInit@p+1
 13426  09F0  3099               	movlw	153
 13427  09F1  00DA               	movwf	USBDeviceInit@p
 13428  09F2  01DC               	clrf	USBDeviceInit@i_718
 13429  09F3  085C               	movf	USBDeviceInit@i_718,w
 13430  09F4  1D03               	skipz
 13431  09F5  2A06               	goto	l4018
 13432  09F6                     l4010:	
 13433  09F6  085A               	movf	USBDeviceInit@p,w
 13434  09F7  0086               	movwf	6
 13435  09F8  085B               	movf	USBDeviceInit@p+1,w
 13436  09F9  0087               	movwf	7
 13437  09FA  0181               	clrf	1
 13438  09FB  3001               	movlw	1
 13439  09FC  07DA               	addwf	USBDeviceInit@p,f
 13440  09FD  3000               	movlw	0
 13441  09FE  3DDB               	addwfc	USBDeviceInit@p+1,f
 13442  09FF  3001               	movlw	1
 13443  0A00  00D8               	movwf	??_USBDeviceInit
 13444  0A01  0858               	movf	??_USBDeviceInit,w
 13445  0A02  07DC               	addwf	USBDeviceInit@i_718,f
 13446  0A03  085C               	movf	USBDeviceInit@i_718,w
 13447  0A04  1903               	btfsc	3,2
 13448  0A05  29F6               	goto	l4010
 13449  0A06                     l4018:	
 13450                           
 13451                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13452  0A06  3016               	movlw	22
 13453  0A07  003D               	movlb	29	; select bank29
 13454  0A08  0091               	movwf	17	;volatile
 13455  0A09  309F               	movlw	159
 13456  0A0A  0097               	movwf	23	;volatile
 13457  0A0B  307B               	movlw	123
 13458  0A0C  0092               	movwf	18	;volatile
 13459                           
 13460                           ;usb_device.c: 486: ;
 13461                           ;usb_device.c: 489: ;
 13462                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13463  0A0D  0020               	movlb	0	; select bank0
 13464  0A0E  01DD               	clrf	USBDeviceInit@i
 13465  0A0F  3008               	movlw	8
 13466  0A10  025D               	subwf	USBDeviceInit@i,w
 13467  0A11  1803               	btfsc	3,0
 13468  0A12  2A2C               	goto	l128
 13469  0A13                     l4026:	
 13470                           
 13471                           ;usb_device.c: 493: {
 13472                           ;usb_device.c: 494: BDT[i].Val = 0x00;
 13473  0A13  085D               	movf	USBDeviceInit@i,w
 13474  0A14  00D8               	movwf	??_USBDeviceInit
 13475  0A15  3001               	movlw	1
 13476  0A16                     u3395:	
 13477  0A16  35D8               	lslf	??_USBDeviceInit,f
 13478  0A17  3EFF               	addlw	-1
 13479  0A18  1D03               	skipz
 13480  0A19  2A16               	goto	u3395
 13481  0A1A  3558               	lslf	??_USBDeviceInit,w
 13482  0A1B  3E20               	addlw	32
 13483  0A1C  0086               	movwf	6
 13484  0A1D  0187               	clrf	7
 13485  0A1E  3000               	movlw	0
 13486  0A1F  3FC0               	movwi [0]fsr1
 13487  0A20  3000               	movlw	0
 13488  0A21  3FC1               	movwi [1]fsr1
 13489  0A22  3FC2               	movwi [2]fsr1
 13490  0A23  3FC3               	movwi [3]fsr1
 13491  0A24  3001               	movlw	1
 13492  0A25  00D8               	movwf	??_USBDeviceInit
 13493  0A26  0858               	movf	??_USBDeviceInit,w
 13494  0A27  07DD               	addwf	USBDeviceInit@i,f
 13495  0A28  3008               	movlw	8
 13496  0A29  025D               	subwf	USBDeviceInit@i,w
 13497  0A2A  1C03               	skipc
 13498  0A2B  2A13               	goto	l4026
 13499  0A2C                     l128:	
 13500                           
 13501                           ;usb_device.c: 495: }
 13502                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
 13503  0A2C  003D               	movlb	29	; select bank29
 13504  0A2D  170E               	bsf	14,6	;volatile
 13505                           
 13506                           ;usb_device.c: 501: UADDR = 0x00;
 13507  0A2E  0196               	clrf	22	;volatile
 13508                           
 13509                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
 13510  0A2F  120E               	bcf	14,4	;volatile
 13511                           
 13512                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
 13513  0A30  130E               	bcf	14,6	;volatile
 13514  0A31                     l4046:	
 13515                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
 13516                           
 13517  0A31  003D               	movlb	29	; select bank29
 13518  0A32  1D90               	btfss	16,3	;volatile
 13519  0A33  2A40               	goto	l4048
 13520                           
 13521                           ;usb_device.c: 511: {
 13522                           ;usb_device.c: 512: (UIR &= 0xF7);
 13523  0A34  30F7               	movlw	247
 13524  0A35  0020               	movlb	0	; select bank0
 13525  0A36  00D8               	movwf	??_USBDeviceInit
 13526  0A37  0858               	movf	??_USBDeviceInit,w
 13527  0A38  003D               	movlb	29	; select bank29
 13528  0A39  0590               	andwf	16,f	;volatile
 13529                           
 13530                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
 13531  0A3A  0022               	movlb	2	; select bank2
 13532  0A3B  01CF               	clrf	(_inPipes^(0+256)+2)
 13533                           
 13534                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
 13535  0A3C  01A2               	clrf	(_outPipes^(0+256)+2)
 13536                           
 13537                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
 13538  0A3D  01A3               	clrf	(_outPipes^(0+256)+3)
 13539  0A3E  01A4               	clrf	((_outPipes+1)^(0+256)+3)
 13540  0A3F  2A31               	goto	l4046
 13541  0A40                     l4048:	
 13542                           
 13543                           ;usb_device.c: 517: }
 13544                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
 13545  0A40  3001               	movlw	1
 13546  0A41  0020               	movlb	0	; select bank0
 13547  0A42  00D8               	movwf	??_USBDeviceInit
 13548  0A43  0858               	movf	??_USBDeviceInit,w
 13549  0A44  0022               	movlb	2	; select bank2
 13550  0A45  00C2               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 13551                           
 13552                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
 13553  0A46  3001               	movlw	1
 13554  0A47  0020               	movlb	0	; select bank0
 13555  0A48  00D8               	movwf	??_USBDeviceInit
 13556  0A49  0858               	movf	??_USBDeviceInit,w
 13557  0A4A  0022               	movlb	2	; select bank2
 13558  0A4B  00C3               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 13559                           
 13560                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
 13561  0A4C  01BE               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 13562                           
 13563                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
 13564  0A4D  01BF               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 13565                           
 13566                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
 13567  0A4E  01BD               	clrf	_USBBusIsSuspended^(0+256)
 13568                           
 13569                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(1+1u); i++)
 13570  0A4F  0020               	movlb	0	; select bank0
 13571  0A50  01DD               	clrf	USBDeviceInit@i
 13572  0A51  3002               	movlw	2
 13573  0A52  025D               	subwf	USBDeviceInit@i,w
 13574  0A53  1803               	btfsc	3,0
 13575  0A54  2A74               	goto	l4066
 13576  0A55                     l4060:	
 13577                           
 13578                           ;usb_device.c: 531: {
 13579                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
 13580  0A55  085D               	movf	USBDeviceInit@i,w
 13581  0A56  3E68               	addlw	_pBDTEntryIn& (0+255)
 13582  0A57  0086               	movwf	6
 13583  0A58  0187               	clrf	7
 13584  0A59  0181               	clrf	1
 13585                           
 13586                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
 13587  0A5A  085D               	movf	USBDeviceInit@i,w
 13588  0A5B  3E2E               	addlw	_pBDTEntryOut& (0+255)
 13589  0A5C  0086               	movwf	6
 13590  0A5D  3001               	movlw	1	; select bank2/3
 13591  0A5E  0087               	movwf	7
 13592  0A5F  0181               	clrf	1
 13593                           
 13594                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
 13595  0A60  085D               	movf	USBDeviceInit@i,w
 13596  0A61  3E2A               	addlw	_ep_data_in& (0+255)
 13597  0A62  0086               	movwf	6
 13598  0A63  3001               	movlw	1	; select bank2/3
 13599  0A64  0087               	movwf	7
 13600  0A65  0181               	clrf	1
 13601                           
 13602                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
 13603  0A66  085D               	movf	USBDeviceInit@i,w
 13604  0A67  3E2C               	addlw	_ep_data_out& (0+255)
 13605  0A68  0086               	movwf	6
 13606  0A69  3001               	movlw	1	; select bank2/3
 13607  0A6A  0087               	movwf	7
 13608  0A6B  0181               	clrf	1
 13609  0A6C  3001               	movlw	1
 13610  0A6D  00D8               	movwf	??_USBDeviceInit
 13611  0A6E  0858               	movf	??_USBDeviceInit,w
 13612  0A6F  07DD               	addwf	USBDeviceInit@i,f
 13613  0A70  3002               	movlw	2
 13614  0A71  025D               	subwf	USBDeviceInit@i,w
 13615  0A72  1C03               	skipc
 13616  0A73  2A55               	goto	l4060
 13617  0A74                     l4066:	
 13618                           
 13619                           ;usb_device.c: 536: }
 13620                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13621  0A74  3028               	movlw	40
 13622  0A75  00D8               	movwf	??_USBDeviceInit
 13623  0A76  0858               	movf	??_USBDeviceInit,w
 13624  0A77  00E8               	movwf	_pBDTEntryIn
 13625                           
 13626                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
 13627  0A78  3016               	movlw	22
 13628  0A79  003D               	movlb	29	; select bank29
 13629  0A7A  0098               	movwf	24	;volatile
 13630                           
 13631                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 13632  0A7B  3040               	movlw	64
 13633  0A7C  0020               	movlb	0	; select bank0
 13634  0A7D  00D8               	movwf	??_USBDeviceInit
 13635  0A7E  3000               	movlw	0
 13636  0A7F  00D9               	movwf	??_USBDeviceInit+1
 13637  0A80  0858               	movf	??_USBDeviceInit,w
 13638  0A81  00A2               	movwf	34	;volatile
 13639  0A82  0859               	movf	??_USBDeviceInit+1,w
 13640  0A83  00A3               	movwf	35	;volatile
 13641                           
 13642                           ;usb_device.c: 544: BDT[0].CNT = 8;
 13643  0A84  3008               	movlw	8
 13644  0A85  00A1               	movwf	33	;volatile
 13645                           
 13646                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
 13647  0A86  3084               	movlw	132
 13648  0A87  00D8               	movwf	??_USBDeviceInit
 13649  0A88  0858               	movf	??_USBDeviceInit,w
 13650  0A89  00A0               	movwf	32	;volatile
 13651                           
 13652                           ;usb_device.c: 548: USBActiveConfiguration = 0;
 13653  0A8A  0022               	movlb	2	; select bank2
 13654  0A8B  01D4               	clrf	_USBActiveConfiguration^(0+256)
 13655                           
 13656                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
 13657  0A8C  0021               	movlb	1	; select bank1
 13658  0A8D  01EE               	clrf	_USBDeviceState^(0+128)
 13659  0A8E  0008               	return
 13660  0A8F                     __end_of_USBDeviceInit:	
 13661                           
 13662                           	psect	intentry
 13663  0004                     __pintentry:	
 13664 ;; *************** function _ISRCode *****************
 13665 ;; Defined at:
 13666 ;;		line 70 in file "main.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;		None
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;		None
 13671 ;; Return value:  Size  Location     Type
 13672 ;;		None               void
 13673 ;; Registers used:
 13674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13684 ;;Total ram usage:        1 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; Hardware stack levels required when called:    3
 13687 ;; This function calls:
 13688 ;;		_ResultRx
 13689 ;; This function is called by:
 13690 ;;		Interrupt level 1
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694  0004                     _ISRCode:	
 13695                           
 13696                           ;incstack = 0
 13697                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 13698  0004  3180               	pagesel	$
 13699  0005  0020               	movlb	0	; select bank0
 13700  0006  087F               	movf	127,w
 13701  0007  00FD               	movwf	??_ISRCode
 13702                           
 13703                           ;main.c: 72: if(IOCBF)
 13704  0008  0027               	movlb	7	; select bank7
 13705  0009  0816               	movf	22,w	;volatile
 13706  000A  1903               	btfsc	3,2
 13707  000B  280E               	goto	i1l819
 13708                           
 13709                           ;main.c: 73: ResultRx();
 13710  000C  3191  2148         	fcall	_ResultRx
 13711  000E                     i1l819:	
 13712  000E  087D               	movf	??_ISRCode,w
 13713  000F  0020               	movlb	0	; select bank0
 13714  0010  00FF               	movwf	127
 13715  0011  0009               	retfie
 13716  0012                     __end_of_ISRCode:	
 13717                           
 13718                           	psect	text62
 13719  1148                     __ptext62:	
 13720 ;; *************** function _ResultRx *****************
 13721 ;; Defined at:
 13722 ;;		line 168 in file "klondike.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;		None
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;		None
 13727 ;; Return value:  Size  Location     Type
 13728 ;;		None               void
 13729 ;; Registers used:
 13730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13731 ;; Tracked objects:
 13732 ;;		On entry : 0/0
 13733 ;;		On exit  : 0/0
 13734 ;;		Unchanged: 0/0
 13735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13740 ;;Total ram usage:        1 bytes
 13741 ;; Hardware stack levels used:    1
 13742 ;; Hardware stack levels required when called:    2
 13743 ;; This function calls:
 13744 ;;		i1_SendCmdReply
 13745 ;; This function is called by:
 13746 ;;		_ISRCode
 13747 ;; This function uses a non-reentrant model
 13748 ;;
 13749                           
 13750                           
 13751                           ;psect for function _ResultRx
 13752  1148                     _ResultRx:	
 13753                           
 13754                           ;klondike.c: 169: TimeOut = 0;
 13755                           
 13756                           ;incstack = 0
 13757                           ; Regs used in _ResultRx: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 13758  1148  0022               	movlb	2	; select bank2
 13759  1149  01BC               	clrf	_TimeOut^(0+256)
 13760  114A                     i1l7120:	
 13761                           ;klondike.c: 171: while(ResultQC < 4) {
 13762                           
 13763  114A  3004               	movlw	4
 13764  114B  0022               	movlb	2	; select bank2
 13765  114C  0239               	subwf	_ResultQC^(0+256),w
 13766  114D  1803               	btfsc	3,0
 13767  114E  297E               	goto	i1l7122
 13768                           
 13769                           ;klondike.c: 172: if(RCIF) {
 13770  114F  0020               	movlb	0	; select bank0
 13771  1150  1E91               	btfss	17,5	;volatile
 13772  1151  2963               	goto	i1l7112
 13773                           
 13774                           ;klondike.c: 173: ResultQue[2+ResultQC++] = RCREG;
 13775  1152  0023               	movlb	3	; select bank3
 13776  1153  0819               	movf	25,w	;volatile
 13777  1154  00FC               	movwf	??_ResultRx
 13778  1155  0022               	movlb	2	; select bank2
 13779  1156  0839               	movf	_ResultQC^(0+256),w
 13780  1157  3E02               	addlw	2
 13781  1158  3ECA               	addlw	_ResultQue& (0+255)
 13782  1159  0086               	movwf	6
 13783  115A  3001               	movlw	1	; select bank3/4
 13784  115B  0087               	movwf	7
 13785  115C  087C               	movf	??_ResultRx,w
 13786  115D  0081               	movwf	1
 13787  115E  3001               	movlw	1
 13788  115F  00FC               	movwf	??_ResultRx
 13789  1160  087C               	movf	??_ResultRx,w
 13790  1161  07B9               	addwf	_ResultQC^(0+256),f
 13791                           
 13792                           ;klondike.c: 174: TimeOut = 0;
 13793  1162  01BC               	clrf	_TimeOut^(0+256)
 13794  1163                     i1l7112:	
 13795                           
 13796                           ;klondike.c: 175: }
 13797                           ;klondike.c: 176: if(TimeOut++ > 32) {
 13798  1163  3001               	movlw	1
 13799  1164  00FC               	movwf	??_ResultRx
 13800  1165  087C               	movf	??_ResultRx,w
 13801  1166  0022               	movlb	2	; select bank2
 13802  1167  07BC               	addwf	_TimeOut^(0+256),f
 13803  1168  3022               	movlw	34
 13804  1169  023C               	subwf	_TimeOut^(0+256),w
 13805  116A  1C03               	skipc
 13806  116B  2971               	goto	i1l711
 13807                           
 13808                           ;klondike.c: 177: Status.Noise++;
 13809  116C  3001               	movlw	1
 13810  116D  00FC               	movwf	??_ResultRx
 13811  116E  087C               	movf	??_ResultRx,w
 13812  116F  07E5               	addwf	(_Status^(0+256)+12),f	;volatile
 13813                           
 13814                           ;klondike.c: 178: goto outrx;
 13815  1170  299B               	goto	i1l7128
 13816  1171                     i1l711:	
 13817                           
 13818                           ;klondike.c: 179: }
 13819                           ;klondike.c: 180: if(RCSTAbits.OERR) {
 13820  1171  0023               	movlb	3	; select bank3
 13821  1172  1C9D               	btfss	29,1	;volatile
 13822  1173  294A               	goto	i1l7120
 13823                           
 13824                           ;klondike.c: 181: if(Status.State == 'W') {
 13825  1174  0022               	movlb	2	; select bank2
 13826  1175  0859               	movf	_Status^(0+256),w	;volatile
 13827  1176  3A57               	xorlw	87
 13828  1177  1D03               	skipz
 13829  1178  299B               	goto	i1l7128
 13830                           
 13831                           ;klondike.c: 182: Status.ErrorCount++;
 13832  1179  3001               	movlw	1
 13833  117A  00FC               	movwf	??_ResultRx
 13834  117B  087C               	movf	??_ResultRx,w
 13835  117C  07E0               	addwf	(_Status^(0+256)+7),f	;volatile
 13836                           
 13837                           ;klondike.c: 183: }
 13838                           ;klondike.c: 184: goto outrx;
 13839  117D  299B               	goto	i1l7128
 13840  117E                     i1l7122:	
 13841                           
 13842                           ;klondike.c: 185: }
 13843                           ;klondike.c: 186: }
 13844                           ;klondike.c: 188: if(Status.State == 'W') {
 13845  117E  0859               	movf	_Status^(0+256),w	;volatile
 13846  117F  3A57               	xorlw	87
 13847  1180  1D03               	skipz
 13848  1181  299B               	goto	i1l7128
 13849                           
 13850                           ;klondike.c: 189: ResultQue[0] = '=';
 13851  1182  303D               	movlw	61
 13852  1183  00FC               	movwf	??_ResultRx
 13853  1184  087C               	movf	??_ResultRx,w
 13854  1185  0023               	movlb	3	; select bank3
 13855  1186  00CA               	movwf	_ResultQue^(0+384)	;volatile
 13856                           
 13857                           ;klondike.c: 190: ResultQue[1] = Status.WorkID;
 13858  1187  0022               	movlb	2	; select bank2
 13859  1188  085D               	movf	(_Status^(0+256)+4),w	;volatile
 13860  1189  00FC               	movwf	??_ResultRx
 13861  118A  087C               	movf	??_ResultRx,w
 13862  118B  0023               	movlb	3	; select bank3
 13863  118C  00CB               	movwf	(_ResultQue^(0+384)+1)	;volatile
 13864                           
 13865                           ;klondike.c: 191: SendCmdReply(&ResultQue, &ResultQue+1, sizeof(ResultQue)-1);
 13866  118D  30CA               	movlw	low _ResultQue
 13867  118E  00F6               	movwf	?i1_SendCmdReply
 13868  118F  3001               	movlw	high _ResultQue
 13869  1190  00F7               	movwf	?i1_SendCmdReply+1
 13870  1191  30CB               	movlw	low (_ResultQue+1)
 13871  1192  00F8               	movwf	?i1_SendCmdReply+2
 13872  1193  3001               	movlw	high (_ResultQue+1)
 13873  1194  00F9               	movwf	?i1_SendCmdReply+3
 13874  1195  3005               	movlw	5
 13875  1196  00FC               	movwf	??_ResultRx
 13876  1197  087C               	movf	??_ResultRx,w
 13877  1198  00FA               	movwf	?i1_SendCmdReply+4
 13878  1199  3188  20C0         	fcall	i1_SendCmdReply
 13879  119B                     i1l7128:	
 13880                           ;klondike.c: 192: }
 13881                           ;klondike.c: 194: outrx:
 13882                           
 13883                           
 13884                           ;klondike.c: 195: { RCSTAbits.SPEN = 0; RCSTAbits.SPEN = 1; };
 13885  119B  0023               	movlb	3	; select bank3
 13886  119C  139D               	bcf	29,7	;volatile
 13887  119D  179D               	bsf	29,7	;volatile
 13888                           
 13889                           ;klondike.c: 196: ResultQC = 0;
 13890  119E  0022               	movlb	2	; select bank2
 13891  119F  01B9               	clrf	_ResultQC^(0+256)
 13892                           
 13893                           ;klondike.c: 197: IOCBF = 0;
 13894  11A0  0027               	movlb	7	; select bank7
 13895  11A1  0196               	clrf	22	;volatile
 13896  11A2  0008               	return
 13897  11A3                     __end_of_ResultRx:	
 13898                           
 13899                           	psect	text63
 13900  08C0                     __ptext63:	
 13901 ;; *************** function i1_SendCmdReply *****************
 13902 ;; Defined at:
 13903 ;;		line 208 in file "main.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;  SendCmdReply    2    6[COMMON] PTR unsigned char 
 13906 ;;		 -> ResultQue(6), OUTPacket(64), 
 13907 ;;  SendCmdReply    2    8[COMMON] PTR unsigned char 
 13908 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
 13909 ;;  SendCmdReply    1   10[COMMON] unsigned char 
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;  SendCmdReply    1   11[COMMON] unsigned char 
 13912 ;; Return value:  Size  Location     Type
 13913 ;;		None               void
 13914 ;; Registers used:
 13915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13916 ;; Tracked objects:
 13917 ;;		On entry : 0/0
 13918 ;;		On exit  : 0/0
 13919 ;;		Unchanged: 0/0
 13920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13921 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;Total ram usage:       14 bytes
 13926 ;; Hardware stack levels used:    1
 13927 ;; Hardware stack levels required when called:    1
 13928 ;; This function calls:
 13929 ;;		i1___wmul
 13930 ;;		i1___bmul
 13931 ;; This function is called by:
 13932 ;;		_ResultRx
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           
 13937                           ;psect for function i1_SendCmdReply
 13938  08C0                     i1_SendCmdReply:	
 13939                           
 13940                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
 13941                           
 13942                           ;incstack = 0
 13943                           ; Regs used in i1_SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 13944  08C0  087A               	movf	i1SendCmdReply@count,w
 13945  08C1  0020               	movlb	0	; select bank0
 13946  08C2  00D0               	movwf	??i1_SendCmdReply
 13947  08C3  01D1               	clrf	??i1_SendCmdReply+1
 13948  08C4  0022               	movlb	2	; select bank2
 13949  08C5  0856               	movf	_WQI^(0+256),w
 13950  08C6  0020               	movlb	0	; select bank0
 13951  08C7  00D2               	movwf	??i1_SendCmdReply+2
 13952  08C8  01D3               	clrf	??i1_SendCmdReply+3
 13953  08C9  0852               	movf	??i1_SendCmdReply+2,w
 13954  08CA  00F0               	movwf	?i1___wmul
 13955  08CB  0853               	movf	??i1_SendCmdReply+3,w
 13956  08CC  00F1               	movwf	?i1___wmul+1
 13957  08CD  300F               	movlw	15
 13958  08CE  00F2               	movwf	?i1___wmul+2
 13959  08CF  3000               	movlw	0
 13960  08D0  00F3               	movwf	?i1___wmul+3
 13961  08D1  319D  256C  3188   	fcall	i1___wmul
 13962  08D4  0020               	movlb	0	; select bank0
 13963  08D5  0850               	movf	??i1_SendCmdReply,w
 13964  08D6  0770               	addwf	?i1___wmul,w
 13965  08D7  00D4               	movwf	??i1_SendCmdReply+4
 13966  08D8  0851               	movf	??i1_SendCmdReply+1,w
 13967  08D9  3D71               	addwfc	?i1___wmul+1,w
 13968  08DA  00D5               	movwf	??i1_SendCmdReply+5
 13969  08DB  0854               	movf	??i1_SendCmdReply+4,w
 13970  08DC  3E02               	addlw	2
 13971  08DD  00D6               	movwf	??i1_SendCmdReply+6
 13972  08DE  3000               	movlw	0
 13973  08DF  3D55               	addwfc	??i1_SendCmdReply+5,w
 13974  08E0  00D7               	movwf	??i1_SendCmdReply+7
 13975  08E1  0857               	movf	??i1_SendCmdReply+7,w
 13976  08E2  3A80               	xorlw	128
 13977  08E3  00FF               	movwf	127
 13978  08E4  3080               	movlw	128
 13979  08E5  027F               	subwf	127,w
 13980  08E6  1D03               	skipz
 13981  08E7  28EA               	goto	u829_25
 13982  08E8  3040               	movlw	64
 13983  08E9  0256               	subwf	??i1_SendCmdReply+6,w
 13984  08EA                     u829_25:	
 13985  08EA  1803               	skipnc
 13986  08EB  0008               	return
 13987                           
 13988                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
 13989  08EC  0876               	movf	i1SendCmdReply@cmd,w
 13990  08ED  0086               	movwf	6
 13991  08EE  0877               	movf	i1SendCmdReply@cmd+1,w
 13992  08EF  0087               	movwf	7
 13993  08F0  0801               	movf	1,w
 13994  08F1  0020               	movlb	0	; select bank0
 13995  08F2  00D0               	movwf	??i1_SendCmdReply
 13996  08F3  300F               	movlw	15
 13997  08F4  00D1               	movwf	??i1_SendCmdReply+1
 13998  08F5  0851               	movf	??i1_SendCmdReply+1,w
 13999  08F6  00F0               	movwf	?i1___bmul
 14000  08F7  0022               	movlb	2	; select bank2
 14001  08F8  0856               	movf	_WQI^(0+256),w
 14002  08F9  3188  20AF  3188   	fcall	i1___bmul
 14003  08FC  3E20               	addlw	32
 14004  08FD  0086               	movwf	6
 14005  08FE  3002               	movlw	2	; select bank4/5
 14006  08FF  0087               	movwf	7
 14007  0900  0020               	movlb	0	; select bank0
 14008  0901  0850               	movf	??i1_SendCmdReply,w
 14009  0902  0081               	movwf	1
 14010                           
 14011                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
 14012  0903  0022               	movlb	2	; select bank2
 14013  0904  083A               	movf	_SlaveAddress^(0+256),w
 14014  0905  0020               	movlb	0	; select bank0
 14015  0906  00D0               	movwf	??i1_SendCmdReply
 14016  0907  300F               	movlw	15
 14017  0908  00D1               	movwf	??i1_SendCmdReply+1
 14018  0909  0851               	movf	??i1_SendCmdReply+1,w
 14019  090A  00F0               	movwf	?i1___bmul
 14020  090B  0022               	movlb	2	; select bank2
 14021  090C  0856               	movf	_WQI^(0+256),w
 14022  090D  3188  20AF  3188   	fcall	i1___bmul
 14023  0910  0020               	movlb	0	; select bank0
 14024  0911  00D2               	movwf	??i1_SendCmdReply+2
 14025  0912  0A52               	incf	??i1_SendCmdReply+2,w
 14026  0913  3E20               	addlw	32
 14027  0914  0086               	movwf	6
 14028  0915  3002               	movlw	2	; select bank4/5
 14029  0916  0087               	movwf	7
 14030  0917  0850               	movf	??i1_SendCmdReply,w
 14031  0918  0081               	movwf	1
 14032                           
 14033                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
 14034  0919  01FB               	clrf	i1SendCmdReply@n
 14035  091A                     i1l7100:	
 14036  091A  087A               	movf	i1SendCmdReply@count,w
 14037  091B  027B               	subwf	i1SendCmdReply@n,w
 14038  091C  1803               	btfsc	3,0
 14039  091D  294A               	goto	i1l7102
 14040                           
 14041                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
 14042  091E  0879               	movf	i1SendCmdReply@data+1,w
 14043  091F  00D1               	movwf	??i1_SendCmdReply+1
 14044  0920  0878               	movf	i1SendCmdReply@data,w
 14045  0921  00D0               	movwf	??i1_SendCmdReply
 14046  0922  087B               	movf	i1SendCmdReply@n,w
 14047  0923  0750               	addwf	??i1_SendCmdReply,w
 14048  0924  0084               	movwf	4
 14049  0925  0851               	movf	??i1_SendCmdReply+1,w
 14050  0926  1803               	skipnc
 14051  0927  0A51               	incf	??i1_SendCmdReply+1,w
 14052  0928  0085               	movwf	5
 14053  0929  0800               	movf	0,w	;code access
 14054  092A  00D2               	movwf	??i1_SendCmdReply+2
 14055  092B  0022               	movlb	2	; select bank2
 14056  092C  0856               	movf	_WQI^(0+256),w
 14057  092D  0020               	movlb	0	; select bank0
 14058  092E  00D3               	movwf	??i1_SendCmdReply+3
 14059  092F  01D4               	clrf	??i1_SendCmdReply+4
 14060  0930  0853               	movf	??i1_SendCmdReply+3,w
 14061  0931  00F0               	movwf	?i1___wmul
 14062  0932  0854               	movf	??i1_SendCmdReply+4,w
 14063  0933  00F1               	movwf	?i1___wmul+1
 14064  0934  300F               	movlw	15
 14065  0935  00F2               	movwf	?i1___wmul+2
 14066  0936  3000               	movlw	0
 14067  0937  00F3               	movwf	?i1___wmul+3
 14068  0938  319D  256C  3188   	fcall	i1___wmul
 14069  093B  0870               	movf	?i1___wmul,w
 14070  093C  077B               	addwf	i1SendCmdReply@n,w
 14071  093D  3E02               	addlw	2
 14072  093E  3E20               	addlw	32
 14073  093F  0086               	movwf	6
 14074  0940  3002               	movlw	2	; select bank4/5
 14075  0941  0087               	movwf	7
 14076  0942  0020               	movlb	0	; select bank0
 14077  0943  0852               	movf	??i1_SendCmdReply+2,w
 14078  0944  0081               	movwf	1
 14079  0945  3001               	movlw	1
 14080  0946  00D0               	movwf	??i1_SendCmdReply
 14081  0947  0850               	movf	??i1_SendCmdReply,w
 14082  0948  07FB               	addwf	i1SendCmdReply@n,f
 14083  0949  291A               	goto	i1l7100
 14084  094A                     i1l7102:	
 14085                           
 14086                           ;main.c: 214: WQI = (WQI+1) & 3;
 14087  094A  0022               	movlb	2	; select bank2
 14088  094B  0A56               	incf	_WQI^(0+256),w
 14089  094C  3903               	andlw	3
 14090  094D  0020               	movlb	0	; select bank0
 14091  094E  00D0               	movwf	??i1_SendCmdReply
 14092  094F  0850               	movf	??i1_SendCmdReply,w
 14093  0950  0022               	movlb	2	; select bank2
 14094  0951  00D6               	movwf	_WQI^(0+256)
 14095  0952  0008               	return
 14096  0953                     __end_ofi1_SendCmdReply:	
 14097                           
 14098                           	psect	text64
 14099  08AF                     __ptext64:	
 14100 ;; *************** function i1___bmul *****************
 14101 ;; Defined at:
 14102 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\bmul.c"
 14103 ;; Parameters:    Size  Location     Type
 14104 ;;  __bmul          1    wreg     unsigned char 
 14105 ;;  __bmul          1    0[COMMON] unsigned char 
 14106 ;; Auto vars:     Size  Location     Type
 14107 ;;  __bmul          1    2[COMMON] unsigned char 
 14108 ;;  __bmul          1    3[COMMON] unsigned char 
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1    wreg      unsigned char 
 14111 ;; Registers used:
 14112 ;;		wreg, status,2, status,0
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14118 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14122 ;;Total ram usage:        4 bytes
 14123 ;; Hardware stack levels used:    1
 14124 ;; This function calls:
 14125 ;;		Nothing
 14126 ;; This function is called by:
 14127 ;;		i1_SendCmdReply
 14128 ;; This function uses a non-reentrant model
 14129 ;;
 14130                           
 14131                           
 14132                           ;psect for function i1___bmul
 14133  08AF                     i1___bmul:	
 14134                           
 14135                           ;incstack = 0
 14136                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 14137                           ;i1___bmul@multiplier stored from wreg
 14138  08AF  00F2               	movwf	i1___bmul@multiplier
 14139  08B0  01F3               	clrf	i1___bmul@product
 14140  08B1                     i1l5886:	
 14141  08B1  1C72               	btfss	i1___bmul@multiplier,0
 14142  08B2  28B7               	goto	i1l5890
 14143  08B3  0870               	movf	i1___bmul@multiplicand,w
 14144  08B4  00F1               	movwf	??i1___bmul
 14145  08B5  0871               	movf	??i1___bmul,w
 14146  08B6  07F3               	addwf	i1___bmul@product,f
 14147  08B7                     i1l5890:	
 14148  08B7  1003               	clrc
 14149  08B8  0DF0               	rlf	i1___bmul@multiplicand,f
 14150  08B9  1003               	clrc
 14151  08BA  0CF2               	rrf	i1___bmul@multiplier,f
 14152  08BB  08F2               	movf	i1___bmul@multiplier,f
 14153  08BC  1D03               	skipz
 14154  08BD  28B1               	goto	i1l5886
 14155  08BE  0873               	movf	i1___bmul@product,w
 14156  08BF  0008               	return
 14157  08C0                     __end_ofi1___bmul:	
 14158                           
 14159                           	psect	text65
 14160  1D6C                     __ptext65:	
 14161 ;; *************** function i1___wmul *****************
 14162 ;; Defined at:
 14163 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
 14164 ;; Parameters:    Size  Location     Type
 14165 ;;  __wmul          2    0[COMMON] unsigned int 
 14166 ;;  __wmul          2    2[COMMON] unsigned int 
 14167 ;; Auto vars:     Size  Location     Type
 14168 ;;  __wmul          2    4[COMMON] unsigned int 
 14169 ;; Return value:  Size  Location     Type
 14170 ;;                  2    0[COMMON] unsigned int 
 14171 ;; Registers used:
 14172 ;;		wreg, status,2, status,0
 14173 ;; Tracked objects:
 14174 ;;		On entry : 0/0
 14175 ;;		On exit  : 0/0
 14176 ;;		Unchanged: 0/0
 14177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;Total ram usage:        6 bytes
 14183 ;; Hardware stack levels used:    1
 14184 ;; This function calls:
 14185 ;;		Nothing
 14186 ;; This function is called by:
 14187 ;;		i1_SendCmdReply
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191                           
 14192                           ;psect for function i1___wmul
 14193  1D6C                     i1___wmul:	
 14194                           
 14195                           ;incstack = 0
 14196                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 14197  1D6C  01F4               	clrf	i1___wmul@product
 14198  1D6D  01F5               	clrf	i1___wmul@product+1
 14199  1D6E                     i1l7080:	
 14200  1D6E  1C70               	btfss	i1___wmul@multiplier,0
 14201  1D6F  2D74               	goto	i1l1262
 14202  1D70  0872               	movf	i1___wmul@multiplicand,w
 14203  1D71  07F4               	addwf	i1___wmul@product,f
 14204  1D72  0873               	movf	i1___wmul@multiplicand+1,w
 14205  1D73  3DF5               	addwfc	i1___wmul@product+1,f
 14206  1D74                     i1l1262:	
 14207  1D74  3001               	movlw	1
 14208  1D75                     u826_25:	
 14209  1D75  35F2               	lslf	i1___wmul@multiplicand,f
 14210  1D76  0DF3               	rlf	i1___wmul@multiplicand+1,f
 14211  1D77  0B89               	decfsz	9,f
 14212  1D78  2D75               	goto	u826_25
 14213  1D79  3001               	movlw	1
 14214  1D7A                     u827_25:	
 14215  1D7A  36F1               	lsrf	i1___wmul@multiplier+1,f
 14216  1D7B  0CF0               	rrf	i1___wmul@multiplier,f
 14217  1D7C  0B89               	decfsz	9,f
 14218  1D7D  2D7A               	goto	u827_25
 14219  1D7E  0871               	movf	i1___wmul@multiplier+1,w
 14220  1D7F  0470               	iorwf	i1___wmul@multiplier,w
 14221  1D80  1D03               	skipz
 14222  1D81  2D6E               	goto	i1l7080
 14223  1D82  0875               	movf	i1___wmul@product+1,w
 14224  1D83  01F1               	clrf	?i1___wmul+1
 14225  1D84  07F1               	addwf	?i1___wmul+1,f
 14226  1D85  0874               	movf	i1___wmul@product,w
 14227  1D86  01F0               	clrf	?i1___wmul
 14228  1D87  07F0               	addwf	?i1___wmul,f
 14229  1D88  0008               	return
 14230  1D89                     __end_ofi1___wmul:	
 14231  007E                     btemp	set	126	;btemp
 14232  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    174
    Data        72
    BSS         146
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     24      32
    BANK1            80     78      80
    BANK2            80      8      80
    BANK3            80      0      75
    BANK4            16      0       0
    BANK5            16      0       0
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           28      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___awmod	int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_rotate	unsigned long  size(1) Largest target is 0

    ?_memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK2[1]), NULL(NULL[0]), BDT(BANK0[32]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    SendCmdReply@data	PTR unsigned char  size(2) Largest target is 13
		 -> ResultQue(BANK3[6]), Cfg(BANK3[6]), ID(CODE[12]), Status(BANK2[13]), 

    SendCmdReply@cmd	PTR unsigned char  size(2) Largest target is 64
		 -> ResultQue(BANK3[6]), OUTPacket(BANK5[64]), 

    USBGenericInHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBGenericOutHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    ProcessCmd@cmd	PTR unsigned char  size(1) Largest target is 64
		 -> OUTPacket(BANK5[64]), 

    I2CInBuf	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    AsicPreCalc@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    SendAsicData@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 32
		 -> configDescriptor1(CODE[32]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> INPacket(BANK4[64]), OUTPacket(BANK5[64]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    S118$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply
    i1_SendCmdReply->i1___wmul

Critical Paths under _main in BANK0

    _ProcessIO->_ProcessCmd
    _SendCmdReply->___wmul
    _AsicPreCalc->_rotate
    _SendAsicData->___wmul
    _UserInit->_DetectAsics
    _DetectAsics->___awdiv
    _UpdateFanLevel->___awtoft
    ___fttol->___awtoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCBInitEP
    _USBCBInitEP->_USBEnableEndpoint
    _USBTransferOnePacket->___bmul
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _ISRCode in BANK0

    _ResultRx->i1_SendCmdReply

Critical Paths under _main in BANK1

    _ProcessIO->_ProcessCmd
    _ProcessCmd->_AsicPushWork
    _AsicPushWork->_AsicPreCalc
    _UserInit->_DetectAsics
    _WorkTick->_UpdateFanLevel
    _UpdateFanLevel->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftadd->___ftneg
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_ProcessIO

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17579
                     _USBDeviceTasks
                       _AsicPushWork
                           _WorkTick
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            8     8      0    4672
                                              0 BANK2      8     8      0
               _USBTransferOnePacket
                         _ProcessCmd
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _ProcessCmd                                           7     7      0    4152
                                             21 BANK0      3     3      0
                                             74 BANK1      4     4      0
                       _AsicPushWork
                       _SendCmdReply
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     241
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SendCmdReply                                        14     9      5     495
                                             14 BANK0      6     1      5
                                              0 BANK1      8     8      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     136
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _AsicPushWork                                         5     5      0    2871
                                             69 BANK1      5     5      0
                       _SendAsicData
                        _AsicPreCalc
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     136
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _AsicPreCalc                                         69    67      2    2673
                                              0 BANK1     69    67      2
                             _rotate
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _rotate                                              13     8      5     124
                                              8 BANK0     13     8      5
 ---------------------------------------------------------------------------------
 (4) _SendAsicData                                         6     4      2      62
                                             14 BANK0      6     4      2
                             _Send32
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Send32                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0     850
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0     578
                        _DetectAsics
                            _InitFAN
                     _InitTempSensor
                       _InitWorkTick
                       _InitResultRx
 ---------------------------------------------------------------------------------
 (3) _InitResultRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitWorkTick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTempSensor                                       1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitFAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DetectAsics                                         10    10      0     578
                                             17 BANK0      7     7      0
                                              0 BANK1      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     445
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _WorkTick                                             3     3      0    2500
                                             53 BANK1      3     3      0
                     _UpdateFanLevel
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     296
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _UpdateFanLevel                                       7     7      0    2204
                                             46 BANK1      7     7      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     252
                                             32 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      45
                                             16 BANK1      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6     535
                                              0 BANK1     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    1049
                                             19 BANK1     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3     300
                                             16 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5     209
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    6686
                                             18 BANK1      3     3      0
                      _USBDeviceInit
                 _USBWakeFromSuspend
                         _USBSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    4192
                                             14 BANK1      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                             11 BANK0      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                             14 BANK0      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                             10 BANK0      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    3864
                                             13 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    3054
                                             12 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1241
                                              6 BANK1      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1049
                                              6 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               9     3      6      96
                                              8 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                             13 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                             11 BANK0      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0      92
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0     718
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0     718
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6     718
                                              0 BANK1      6     0      6
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
                  _USBCBErrorHandler
                 _USBCBCheckOtherReq
              _USBCBStdSetDscHandler
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          3     3      0     687
                                             21 BANK0      3     3      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     4      3     310
                                             12 BANK0      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     377
                                             15 BANK0      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     222
                                              8 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
              _USBCheckVendorRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckVendorRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     272
                                              8 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISRCode                                             1     1      0    1210
                                             13 COMMON     1     1      0
                           _ResultRx
 ---------------------------------------------------------------------------------
 (11) _ResultRx                                            1     1      0    1210
                                             12 COMMON     1     1      0
                     i1_SendCmdReply
 ---------------------------------------------------------------------------------
 (12) i1_SendCmdReply                                     14     9      5    1210
                                              6 COMMON     6     1      5
                                              0 BANK0      8     8      0
                           i1___wmul
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) i1___bmul                                            4     3      1     212
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     372
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceTasks
     _USBDeviceInit
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
       _USBCBErrorHandler
       _USBCBCheckOtherReq
         _USBCheckVendorRequest
       _USBCBStdSetDscHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
           ___bmul (ARG)
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
           _USBCBErrorHandler
           _USBCBCheckOtherReq
             _USBCheckVendorRequest
           _USBCBStdSetDscHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
               ___bmul (ARG)
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
             _USBCBErrorHandler
             _USBCBCheckOtherReq
               _USBCheckVendorRequest
             _USBCBStdSetDscHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
                 ___bmul (ARG)
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _AsicPushWork
     _SendAsicData
       _Send32
       ___wmul (ARG)
     _AsicPreCalc
       _rotate
       ___wmul (ARG)
     ___wmul
   _WorkTick
     _UpdateFanLevel
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
     ___awmod
   _InitializeSystem
     _USBDeviceInit
     _UserInit
       _DetectAsics
         ___awdiv
       _InitFAN
       _InitTempSensor
       _InitWorkTick
       _InitResultRx
   _ProcessIO
     _USBTransferOnePacket
       ___bmul (ARG)
     _ProcessCmd
       _AsicPushWork
         _SendAsicData
           _Send32
           ___wmul (ARG)
         _AsicPreCalc
           _rotate
           ___wmul (ARG)
         ___wmul
       _SendCmdReply
         ___bmul
         ___wmul
       ___lwdiv
       ___wmul
     ___bmul

 _ISRCode (ROOT)
   _ResultRx
     i1_SendCmdReply
       i1___wmul
       i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0      11       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     18      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      8      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     159      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              1C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Thu Oct 31 10:49:06 2013

                              _USB_SD_Ptr 0801                                         pc 0002  
                          ___bmul@product 005A                               _SSPSTATbits 0214  
                                      _ID 089F                    ?_USBCheckVendorRequest 0070  
                            ___awdiv@sign 005E                             _USBDeviceInit 09E7  
                     ___wmul@multiplicand 005A                          i1___wmul@product 0074  
                            ___ftadd@exp1 00BF                              ___ftadd@exp2 00BE  
                     __end_of_AsicPreCalc 0414                                       LATC 010E  
                              _BankRanges 0340      USER_USB_CALLBACK_EVENT_HANDLER@event 00A0  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00A2                              ___ftadd@sign 00BD  
                     __end_of_DetectAsics 0D43                                       l140 0E12  
                                     l142 0E16                                       l128 0A2C  
                                     l208 1422                                       l330 125D  
                                     l146 0E3C                                       l315 12DF  
                                     l155 0EA3                                       l332 1208  
                                     l156 0EF9                                       l341 1232  
             __end_of_USBStdGetDscHandler 15D6                                       l318 1315  
                                     l271 10A6                                       l353 073F  
                                     l274 10E5                                       l354 0740  
                                     l275 10B2                                       l276 10B5  
                                     l366 07B2                                       l358 0773  
                                     l721 06C0                                       l822 1CCF  
                                     l903 1F29                                       l675 0499  
                                     l676 04AB                                       _BDT 0020  
                                     l677 04B6                                       l669 0591  
                                     _GIE 005F                                       _PR2 001B  
                                     _UIE 0E92                                       _UIR 0E90  
                                     _Cfg 01E4                                       _WQI 0156  
                                     _WQX 0157                                       _buf 01A0  
                              _USBSuspend 1D34                                       _ptr 006F  
                            ___awmod@sign 005E                      USBStdSetCfgHandler@i 00AA  
                    USBStdSetCfgHandler@p 00A7                                       wreg 0009  
                          _USBDeviceTasks 0E05                            _USBDeviceState 00EE  
                  ??_USBCBWakeFromSuspend 0058                                      S7200 1800  
                   ??_USBCtrlTrfRxService 005A                  USBEnableEndpoint@options 005F  
                                    INDF1 0001                              __CFG_LVP$OFF 0000  
                                    FSR1H 0007                                      FSR1L 0006  
                                    l1050 1291                                      l1056 12A8  
                                    l1262 1D92                                      l1079 0F9B  
                                    l4010 09F6                                      l4026 0A13  
                                    l4018 0A06                                      l4060 0A55  
              USBConfigureEndpoint@handle 005E                                      l4046 0A31  
                                    l4048 0A40                                      l4066 0A74  
                                    l4322 1E34                                      l4340 1F58  
                                    l4412 16FC                                      l4326 1E3C  
                                    l4350 1FBC                                      l4254 13A9  
                                    l4510 0ADD                                      l6102 0E58  
                                    l4280 1E00                                      l4416 1706  
                                    l5320 11CE                                      l6202 1F01  
                                    l4282 1E02                                      l4426 172D  
                                    l4434 174A                                      l4610 15C6  
                                    l4602 15A1                                      l6114 0E78  
                                    l4436 174F                                      l4444 176C  
                                    l4460 13FF                                      l4524 0B2F  
                                    l4516 0B06                                      l4508 0AC1  
                                    l6132 0E9B                                      l6124 0E85  
                                    l6108 0E6C                                      l7020 1141  
                                    l7012 1130                                      l7004 1112  
                                    l4358 1FCA                                      l4614 15C9  
                                    l4518 0B0E                                      l4702 1301  
                                    l6230 150F                                      l6142 0EA9  
                                    l6118 0E7E                                      l6062 0E19  
                                    l5318 11C8                                      l7006 111E  
                                    l7030 1C59                                      l4368 1FF5  
                                    l4456 13FB                                      l4608 15C3  
                                    l6400 074E                                      l4712 131E  
                                    l6240 1549                                      l6160 0EED  
                                    l6152 0EC4                                      l5344 068C  
                                    l7016 1139                                      l7202 1F0A  
                                    l4394 1074                                      l4626 10C1  
                                    l6410 076C                                      l6330 1210  
                                    l4714 131F                                      l4706 130D  
                                    l6242 154C                                      l6082 0E36  
                                    l6074 0E29                                      l5530 1278  
                                    l5602 1F75                                      l7026 1C53  
                                    l7050 1EBD                                      l7204 1F24  
                                    l4468 142E                                      l4476 1438  
                                    l4636 10D9                                      l6412 077C  
                                    l6332 1213                                      l6236 1538  
                                    l5540 129E                                      l5532 127D  
                                    l5524 1267                                      l5700 0F76  
                                    l5348 06A4                                      l5620 1F9A  
                                    l6500 0028                                      l7052 1EC9  
                                    l6190 1EF2                                      l4398 1089  
                                    l6262 178C                                      l6254 177C  
                                    l6422 07A1                                      l6342 1220  
                                    l6334 1216                                      l6158 0EDD  
                                    l6094 0E4C                                      l5710 0F97  
                                    l5702 0F7A                                      l5614 1F82  
                                    l5606 1F7C                                      l7062 1EE4  
                                    l6192 1EF5                                      l6272 17A4  
                                    l6432 07B9                                      l6424 07A6  
                                    l6344 1223                                      l6360 1252  
                                    l4680 1E7A                                      l5528 126E  
                                    l5640 1E14                                      l5616 1F8E  
                                    l5624 1FA3                                      l6194 1EF8  
                                    l6186 1EEC                                      l4594 1562  
                                    l6346 1226                                      l4498 0AA8  
                                    l4674 1E58                                      l5538 1296  
                                    l5714 0FAD                                      l6506 005E  
                                    l7058 1EDB                                      l6196 1EFB  
                                    l6188 1EEF                                      l4588 1DAE  
                                    l4596 156C                                      l6436 07D8  
                                    l6356 1242                                      l4692 12D9  
                                    l5708 0F8D                                      l5628 1FAB  
                                    l7068 1D8C                                      l6198 1EFE  
                                    l6294 17EB                                      l6278 17B8  
                                    l6438 07E0                                      l5718 0FBF  
                                    l5830 16DA                                      l5822 16C0  
                                    l5814 16A5                                      l6392 0721  
                                    l6376 06F0                                      l5728 0FDA  
                                    l5672 0F2B                                      l5760 0DB3  
                                    l5744 0D70                                      l5824 16C9  
                                    l5816 16B3                                      l6378 06F2  
                                    l5690 0F54                                      l5738 0D5A  
                                    l5826 16CC                                      l5668 0F24  
                                    l5772 0DCF                                      l5756 0DAB  
                                    l6812 0460                                      l6804 045B  
                                    l5678 0F3A                                      l6910 0D3A  
                                    l6814 0473                                      l5696 0F67  
                                    l5768 0DC7                                      l6920 1CD7  
                                    l5698 0F71                                      l6842 051D  
                                    l6834 04D6                                      l6818 0474  
                                    l5796 1675                                      l6908 0CEA  
                                    l6852 0558                                      l6844 0523  
                                    l6860 0578                                      l6924 1CDF  
                                    l6846 0536                                      l6950 147A  
                                    l6792 0417                                      l6952 147C  
                                    l6890 0BD7                                      l6964 14AE  
                                    l6966 14B0                                      l6958 149A  
                                    l6888 0B9D                                      l6994 110A  
                                    l6988 10FF                                      _LATC 010E  
                                    u4015 107E                                      u4155 0AA1  
                                    u6005 0F55                                      u4265 1DB8  
                                    u3395 0A16                                      u6035 0F68  
                                    u6205 0DBA                                      u5415 066C  
                                    u7200 1EA1                                      u6065 0F7B  
                                    u5425 0682                                      u7210 001E  
                                    u6235 0DD0                                      u6315 16A6  
                                    u5435 06A0                                      _RCIF 008D  
                                    u5605 1273                                      u6245 0DD6  
                                    u6165 0D7C                                      u5445 06B8  
                                    u7205 1E9D                                      u3855 1F33  
                                    u6095 0F8E                                      u6175 0D8C  
                                    u5375 11C1                                      u3865 1F39  
                                    u5625 128C                                      u6345 16C1  
                                    u7305 00E4                                      u3875 1F41  
                                    u6195 0DB4                                      u7315 0113  
                                    u7235 0046                                      u5645 1299  
                                    u6285 167C                                      u7405 026D  
                                    u7325 0128                                      u7190 1E90  
                                    u8055 1115                                      u7415 02B0  
                                    u7335 0157                     ??_USBCtrlTrfTxService 0058  
                                    u5825 1F85                                      u7505 03E8  
                                    u7425 02F4                                      u7345 019A  
                                    u7265 0067                                      u8225 1D93  
                                    u5675 12AF                                      u8075 111F  
                                    u7195 1E8B                                      u7515 03FD  
                                    u7435 0309                                      u7355 01E9  
                                    u7275 007C                                      u8235 1D98  
                                    u8155 1EC0                                      u5845 1F94  
                                    u8085 1129                                      u7445 032B  
                                    u7365 01FE                                      u7285 009D  
                                    u5855 1F9B                                      u8095 1131  
                                    u7455 0350                                      u7375 0213  
                                    u7295 00C1                                      u8175 1ECA  
                                    _UCFG 0E91                                      u6905 14EA  
                                    u7465 0365                                      u7385 0228  
                                    u8185 1ED4                                      u7730 044A  
                                    u7475 03A5                                      u7395 023E  
                                    u8195 1EDC                                      _UEP0 0E98  
                                    u7485 03BD                                      _UEP1 0E99  
                                    u7495 03D2                                      u7760 0489  
                                    u7905 0D0C                                      u7825 04C7  
                                    u7915 0D23                                      u7835 04CE  
                                    _UEIE 0E97                                      u7845 04E0  
                                    u7875 0B69                                      u7895 0CF5  
                                    _UEIR 0E93                                      _UCON 0E8E  
                                    _TMR0 0015                           __end_of_ISRCode 0012  
                                    _Step 0128    USBStdFeatureReqHandler@current_ep_data 00AA  
                                    _pDst 014A                                      _main 1CCC  
                            ___ftpack@arg 0058                              ___ftpack@exp 005B  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                      __end_of_AsicPushWork 165C  
                                    start 0012                             __CFG_IESO$OFF 0000  
                      _USBCBCheckOtherReq 1C27                __end_of_USBCheckStdRequest 125E  
                  ??_USBCtrlTrfOutHandler 005E                         ___bmul@multiplier 005B  
                            ___ftmul@cntr 00AE                              ___ftmul@sign 00AF  
               ??_USBStdFeatureReqHandler 00A6                           __end_of_InitFAN 1D6C  
                ??_USBStdGetStatusHandler 0058                              ___fttol@exp1 00CD  
                            ___fttol@lval 00C9                            ?_USBDeviceInit 0070  
                           ?_InitResultRx 0070                       ?_USBCBCheckOtherReq 0070  
                         i1SendCmdReply@n 007B                                     ?_main 0070  
                         __end_of___awdiv 1148                           __end_of___ftadd 1000  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 1FB2  
       __size_of_USBCtrlEPServiceComplete 0078                           __end_of___ftneg 07FF  
                         __end_of___ftmul 0E05                           ___awdiv@divisor 0058  
                  __end_of_USBDeviceTasks 0EFC                           __end_of___fttol 16E3  
               ?_USBCtrlEPServiceComplete 0070                                     _IOCBF 0396  
                         __end_of___lwdiv 1EEB                                     i1l711 1171  
                                   i1l819 000E                                     _UADDR 0E96  
                         ___awdiv@counter 005D                                     _RCREG 0199  
                           ?_InitWorkTick 0070                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0064                             __CFG_PWRTE$ON 0000  
                                   _Error 0152                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 10A1                                     _sd000 08AB  
                                   _sd001 0805                                     _sd002 0839  
                           ___awtoft@sign 0065                             ___ftpack@sign 005C  
                    ??_USBCBCheckOtherReq 0058                          __end_ofi1___bmul 08C0  
                        __end_ofi1___wmul 1D89                          ??i1_SendCmdReply 0050  
                                   status 0003                       i1___wmul@multiplier 0070  
                                   wtemp0 007E              __size_of_USBStdSetCfgHandler 008F  
                          __CFG_MCLRE$OFF 0000                           __initialization 1322  
                             _AsicPreCalc 0014                              __end_of_main 1CE3  
                             _DetectAsics 0C8C                            ??_InitResultRx 0058  
               __size_of_USBCtrlEPService 007C                                    ??_main 0068  
                           ___fttol@sign1 00C8                            ??_InitWorkTick 0058  
               __size_of_InitializeSystem 0017                           ?_USBDeviceTasks 0070  
                             ?_USBSuspend 0070                          __end_of_ResultRx 11A3  
                               ??_ISRCode 007D                            _InitTempSensor 1C9E  
                        __end_of_UserInit 1C88                                    _I2CCmd 006A  
                                  _ACTCON 039B                                    _ADRESH 009C  
                        ___awdiv@dividend 005A                          __end_of___awtoft 1E2B  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 12BF  
                        __end_of_WorkTick 1200                                    i1l1262 1D74  
                                  i1l7100 091A                                    i1l7102 094A  
                                  i1l7112 1163                                    i1l7120 114A  
                                  i1l7122 117E                                    i1l7080 1D6E  
                                  i1l7128 119B                                    i1l5890 08B7  
                                  i1l5886 08B1                                    _OSCCON 0099  
                                  u826_25 1D75                                    u827_25 1D7A  
                                  _TMR0IF 005A                                    _TMR0CS 04AD  
                                  u829_25 08EA                                    _PWM1OE 309E  
                                  _TMR2IF 0089                                    _TMR2ON 00E2  
                                  _SSP1EN 10AD                                    _SSP1IF 008B  
                                  _SSPADD 0212                                    _SSPBUF 0211  
                               ??_InitFAN 0058                                _TempTarget 01EA  
                                  _Send32 0BE0                         _shortPacketStatus 014C  
                           ?_SendCmdReply 005E                           USBDeviceTasks@i 00B4  
                           ?_SendAsicData 005E               USBStdFeatureReqHandler@pUEP 00A8  
                USBTransferOnePacket@data 005D                USBCtrlTrfInHandler@lastDTS 005D  
                                  _Status 0159                           ??_USBDeviceInit 0058  
                                  ___bmul 1C50                                    ___wmul 1D89  
                               ??___awdiv 005C                                 ??___ftadd 00B9  
                               ??___awmod 005C                                 ??___ftneg 0066  
                               ??___ftmul 00A6                                 ??___fttol 00C4  
                            ?_USBCBInitEP 0070                                 ??___lwdiv 005C  
                       _USBEnableEndpoint 1E2B           __size_of_USBStdGetStatusHandler 0053  
                                  _memset 1DA7                          ___awdiv@quotient 005F  
                         ___awmod@divisor 0058                                _ProcessCmd 0414  
                         ___awmod@counter 005D                        ?_USBEnableEndpoint 005F  
                                  _rotate 1E7D                     _USBCBStdSetDscHandler 07FF  
                   ___ftmul@f3_as_product 00AB             __size_of_USBTransferOnePacket 004E  
                      __size_of_ProcessIO 007A                    __end_of_InitTempSensor 1CB5  
                     ??_USBEnableEndpoint 0060                               _CtrlTrfData 0048  
                   __size_of_AsicPushWork 0086                      _controlTransferState 006C  
                 __end_of__initialization 1382                                ___ftadd@f1 00B3  
                              ___ftadd@f2 00B6                  __size_of_USBStallHandler 0022  
                          ??_SendCmdReply 00A0                                ___ftneg@f1 00B0  
                              ___awtoft@c 0060                       ___bmul@multiplicand 0058  
                          ??_SendAsicData 0060                       __size_of_USBSuspend 001C  
                              ___ftmul@f1 00A0                                ___ftmul@f2 00A3  
                 ??_USBCheckVendorRequest 0058                                ___fttol@f1 00C0  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 1E50  
                           __end_of_sd000 08AF                             __end_of_sd001 0839  
                           __end_of_sd002 086D                              __pidataBANK2 1C42  
                            __pidataBANK3 1CE3                              __pidataBANK6 1DC7  
                       _USBCB_SOF_Handler 1001          __size_of_USBCtrlEPAllowDataStage 0050  
           __size_of_USBConfigureEndpoint 0040               __end_of_USBCtrlTrfInHandler 1322  
                      ?_USBCB_SOF_Handler 0070                                __end_of_ID 08AB  
                               ?i1___bmul 0070                                 ?i1___wmul 0070  
                          _OPTION_REGbits 0095                              _AsicPushWork 15D6  
                         ?_InitTempSensor 0070                       i1SendCmdReply@count 007A  
                     ??_USBCB_SOF_Handler 0058                  ??_USBCtrlTrfSetupHandler 00AD  
                        i1___bmul@product 0073                    _USBStdGetStatusHandler 10A1  
                    __end_of_InitResultRx 1C75                                __pbssBANK0 0068  
                              __pbssBANK1 00EE                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                                __pbssBANK6 0320  
                       i1SendCmdReply@cmd 0076                      __end_of_InitWorkTick 1C9E  
             __size_of_USBWakeFromSuspend 001B                               _pBDTEntryIn 0068  
                       __end_of_ProcessIO 14DB          __end_of_USBCtrlEPServiceComplete 1461  
                                 ?_Send32 0070                 __end_of_USBCB_SOF_Handler 1002  
                              __pmaintext 1CCC                      USBCtrlTrfRxService@i 005C  
                               ?_ResultRx 0070                                   ?___bmul 0058  
                                 ?___wmul 0058                                __pintentry 0004  
                               ?_UserInit 0070                                   _I2CAddr 0133  
                                 ?_memset 0058                    ?_USBCBStdSetDscHandler 0070  
                              _device_dsc 088D                                 ?___awtoft 0060  
                               ?___ftpack 0058                          _USBCtrlEPService 14DB  
                               ?_WorkTick 0070                               ?_ProcessCmd 0070  
                              ??i1___bmul 0071                                _ep_data_in 012A  
                                 ?_rotate 0058                                ??i1___wmul 0074  
                        _InitializeSystem 1CB5                               _NonceRanges 0320  
             __end_of_USBCtrlTrfRxService 0B37                        _USBCheckStdRequest 1200  
                       _configDescriptor1 086D               __end_of_USBCtrlTrfTxService 1771  
                     _USBStdSetCfgHandler 1771                                   _ISRCode 0004  
                                 _PWM1DCH 0612                                   _PWM1DCL 0611  
                                 _OSCTUNE 0098                                   _PWM1CON 0613  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92             __size_of_USBCBWakeFromSuspend 0001  
                              __stringtab 0800                                   _UIRbits 0E90  
                                 _InitFAN 1D50                      ?_USBStdSetCfgHandler 0070  
                         __size_of_Send32 00AC                                   _TimeOut 013C  
                              ??_ResultRx 007C                __size_of_USBEnableEndpoint 0025  
                            ?_AsicPreCalc 00A0                              ?_DetectAsics 0070  
                    ??_USBCheckStdRequest 00AC                           __size_of___bmul 0012  
           __size_of_USBCtrlTrfOutHandler 002D                                   ___awdiv 10F4  
                                 ___ftadd 0EFC                                   ___awmod 1F6A  
                                 ___ftneg 07F6                          ??_USBDeviceTasks 00B2  
                         __size_of___wmul 001E                                   _WorkNow 0146  
                                 ___ftmul 0D43                                   _WorkQue 233C  
                                 ___fttol 165C                                   ___lwdiv 1EB4  
                       ??_USBStallHandler 0058                                ??_UserInit 0068  
                              ??___awtoft 0063                                ??___ftpack 005D  
                         __size_of_memset 0020                                ??_WorkTick 00D5  
               __end_of_configDescriptor1 088D                      __size_of_USBCBInitEP 001C  
                                 __ptext1 1461                                   __ptext2 0414  
                                 __ptext3 1EB4                                   __ptext4 0B37  
                                 __ptext5 1C50                                   __ptext6 15D6  
                                 __ptext7 1D89                                   __ptext8 0014  
                                 __ptext9 1E7D                                   _inPipes 014D  
                        _DetectAsics$2752 00A0                   __size_of_UpdateFanLevel 0147  
             _USBDeferOUTDataStagePackets 013F                           __size_of_rotate 0037  
                            ??_USBSuspend 00A6                                 _T2CONbits 001C  
                       _USBCBErrorHandler 0002                          ___awmod@dividend 005A  
                    __end_of_SendCmdReply 0BE0                       i1___bmul@multiplier 0072  
                               _IOCBPbits 0394                      __end_of_SendAsicData 09E7  
                      ?_USBCBErrorHandler 0070                             ?_USBCBSuspend 0070  
                      __end_of_USB_CD_Ptr 0805           __size_of_USBCtrlTrfSetupHandler 004F  
                                 clrloop0 1C37                      end_of_initialization 1382  
                          _ProcessIO$2300 016C                            _ProcessIO$2266 016A  
             __size_of_USBCBCheckOtherReq 0003                        __end_of_USB_SD_Ptr 0804  
                     _pBDTEntryEP0OutNext 006E                                   init_ram 1C2A  
                     ??_USBCBErrorHandler 0058                                   memset@c 005A  
                                 memset@n 005C                                   memset@p 005F  
                                 initloop 1C2B                       __size_of_ProcessCmd 0180  
                ?_USBStdFeatureReqHandler 0070                     ??_USBStdSetCfgHandler 00A6  
                        SendCmdReply@data 0060                __size_of_USBCB_SOF_Handler 0001  
                      __end_of_USBSuspend 1D50                   _USBCtrlEPAllowDataStage 1051  
                               _RCSTAbits 019D                                   rotate@x 0058  
                                 rotate@y 005C                           AsicPreCalc@work 00A0  
                _USBCtrlEPServiceComplete 13E9                     i1___wmul@multiplicand 0072  
              _USBStatusStageEnabledFlag1 0142                _USBStatusStageEnabledFlag2 0143  
                      USBEnableEndpoint@p 0062                 __end_of_USBCBErrorHandler 0003  
                        __CFG_FOSC$INTOSC 0000                     __size_of_InitResultRx 0013  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                            ??_USBCBSuspend 0058  
                      _BothEP0OutUOWNsSet 0132                 USBStdSetCfgHandler@i_1089 00A9  
                               _OUTPacket 02A0                 USBConfigureEndpoint@EPNum 005D  
              ?_USBCtrlEPAllowStatusStage 0070                     __size_of_InitWorkTick 0016  
     USER_USB_CALLBACK_EVENT_HANDLER@size 00A4                                 _USTATcopy 00EF  
            __end_of_USBTransferOnePacket 2000                                 _TXSTAbits 019E  
                           _PrecalcHashes 01B2                               ___ftmul@exp 00AA  
                      USBDeviceInit@i_718 005C                            __end_of_Send32 0C8C  
                  _USBCtrlTrfSetupHandler 1002            __size_of_USBCheckVendorRequest 0001  
           __end_of_USBCheckVendorRequest 0004                   __size_ofi1_SendCmdReply 0093  
                          __end_of___bmul 1C62                     __end_of_USBDeviceInit 0A8F  
                            _InitResultRx 1C62                            __end_of___wmul 1DA7  
                        ??_InitTempSensor 0058                               _BAUDCONbits 019F  
                          __end_of_memset 1DC7                         _USBBusIsSuspended 013D  
                          __end_of_rotate 1EB4                              _InitWorkTick 1C88  
                       __size_ofi1___bmul 0011                                 _LastError 01B0  
                     start_initialization 1322                         __size_ofi1___wmul 001D  
                 ?_USBStdGetStatusHandler 0070             USBCtrlTrfRxService@byteToRead 005D  
            __end_of_USBConfigureEndpoint 1F6A           __end_of_USBStdFeatureReqHandler 07F6  
       __end_of_USBCtrlEPAllowStatusStage 13E9                  __end_of_USBCtrlEPService 1557  
                        SendAsicData@work 005E                  __end_of_InitializeSystem 1CCC  
               ??_USBCtrlEPAllowDataStage 005B                            USBDeviceInit@i 005D  
                                ??_Send32 0058                            USBDeviceInit@p 005A  
                  _pBDTEntryEP0OutCurrent 006D                   USBTransferOnePacket@dir 005C  
                 USBTransferOnePacket@len 005E                   ??_USBCBStdSetDscHandler 0058  
                                ??___bmul 0059                                 _ResultQue 01CA  
                                ??___wmul 005C                       _USBStdGetDscHandler 1557  
                               _ProcessIO 1461                               __pdataBANK2 0158  
                             __pdataBANK3 01D0                               __pdataBANK6 0340  
                       __size_of_ResultRx 005B                      __size_of_AsicPreCalc 0400  
                                ??_memset 005E                      __size_of_DetectAsics 00B7  
                            ??_ProcessCmd 00EA                     __size_of_SendCmdReply 00A9  
                          _UpdateFanLevel 0594                                  ??_rotate 005D  
              __size_of_USBCBErrorHandler 0001                     __size_of_SendAsicData 0094  
                       __size_of_UserInit 0013                    _USBActiveConfiguration 0154  
          __end_of_USBStdGetStatusHandler 10F4                         __size_of___awtoft 0022  
                       __size_of___ftpack 0061                               __pbssBIGRAM 233C  
                       __size_of_WorkTick 005D                             __pcstackBANK0 0050  
                           __pcstackBANK1 00A0                             __pcstackBANK2 0166  
            __size_of_USBCtrlTrfInHandler 0063                                  ?_ISRCode 0070  
                    ?_USBStdGetDscHandler 0070                        i1SendCmdReply@data 0078  
              __end_of_USBWakeFromSuspend 1D18                           _USBStallHandler 1DE7  
                            _pBDTEntryOut 012E                                  ?_InitFAN 0070  
                            _send32_count 014B                                 __pnvBANK2 016E  
                               __pnvBANK3 01EA                        __end_of_ProcessCmd 0594  
                        ___lwdiv@dividend 005A                              _SendCmdReply 0B37  
                            _SendAsicData 0953                      __end_of_USBCBSuspend 1C27  
            __end_of_USBCBWakeFromSuspend 1001                                  ?___awdiv 0058  
                                ?___ftadd 00B3                                  ?___awmod 0058  
                                ?___ftneg 00B0                                ?_ProcessIO 0070  
                                ?___ftmul 00A0                                  ?___fttol 00C0  
                                ?___lwdiv 0058                    __end_of_UpdateFanLevel 06DB  
                            AsicPreCalc@K 00AC                              AsicPreCalc@m 00B8  
                            AsicPreCalc@n 00E4                              AsicPreCalc@x 00E0  
                            AsicPreCalc@y 00DC                              AsicPreCalc@z 00D8  
                               __pstrings 0800                USBCBSendResume@delay_count 0126  
                               __pswtext1 1800                      _USBTransferOnePacket 1FB2  
                                _I2CInBuf 0135                              DetectAsics@x 00A2  
                                _I2CCount 0134                                  _I2CState 0136  
                               _last_bit0 0148                                 _last_bit1 0149  
            __end_of_USBCtrlTrfOutHandler 1E7D                     ??_USBStdGetDscHandler 0058  
                             _ep_data_out 012C                          ___lwdiv@quotient 005E  
            __size_of_USBCtrlTrfRxService 00A8             USBConfigureEndpoint@direction 0058  
            __size_of_USBCtrlTrfTxService 008E                            ___wmul@product 005C  
                                _LATAbits 010C                ??_USBCtrlEPServiceComplete 005D  
                               clear_ram0 1C36                                  _PIE2bits 0092  
                   i1___bmul@multiplicand 0070                           SendCmdReply@cmd 005E  
                                _PIR2bits 0012                                  _INPacket 0220  
               USBCtrlEPService@setup_cnt 00B1                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 013E                            i1_SendCmdReply 08C0  
                           ??_USBCBInitEP 0065               __size_of_USBCheckStdRequest 005E  
                                _UCONbits 0E8E                           ?_UpdateFanLevel 0070  
                     _UpdateFanLevel$2753 00D2                      _USBConfigureEndpoint 1F2A  
                           ProcessCmd@cmd 0067          __size_of_USBStdFeatureReqHandler 011B  
                                i1___bmul 08AF                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                       ___wmul@multiplier 0058                     ?_USBTransferOnePacket 005C  
                                i1___wmul 1D6C                                  _BankSize 016F  
                                _FanLevel 016E                              _RemoteWakeup 0138  
                                _ClockCfg 01DC                __end_of_USBCBCheckOtherReq 1C2A  
                                _HashTime 0158                   __end_of_USBStallHandler 1E09  
                        __size_of_ISRCode 000E               ??_USBCtrlEPAllowStatusStage 0058  
             __end_of_USBStdSetCfgHandler 1800                                  _LastTemp 0137  
                            _SlaveAddress 013A                        __end_of_device_dsc 089F  
                 ?_USBCtrlTrfSetupHandler 0070                          __size_of_InitFAN 001C  
                 USBStdGetStatusHandler@p 0059                    __end_ofi1_SendCmdReply 0953  
                  USBTransferOnePacket@ep 0061                                  _ResultQC 0139  
                                _ResultRx 1148                                  _SetupPkt 0040  
                                _SlowTick 013B                               ??_ProcessIO 0166  
                   ?_USBConfigureEndpoint 0058                                  _UserInit 1C75  
                        __size_of___awdiv 0054                          __size_of___ftadd 0104  
                        __size_of___awmod 0048                          __size_of___ftneg 0009  
                        __size_of___ftmul 00C2                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                                  ___awtoft 1E09  
                                ___ftpack 125E                                  _WorkTick 11A3  
                      __end_of__stringtab 0801                                _ANSELBbits 018D  
                     __end_of_USBCBInitEP 1D34                             ?_AsicPushWork 0070  
                             _send32_data 0130                   __size_of_USBDeviceTasks 00F7  
                         ___lwdiv@divisor 0058                           ___lwdiv@counter 005D  
                                __ptext10 0953                                  __ptext11 0BE0  
                                __ptext20 11A3                                  __ptext12 1CB5  
                                __ptext21 1F6A                                  __ptext13 1C75  
                                __ptext30 14DB                                  __ptext22 0594  
                                __ptext14 1C62                                  __ptext31 12BF  
                                __ptext23 165C                                  __ptext15 1C88  
                                __ptext40 1DA7                                  __ptext32 1E50  
                                __ptext24 07F6                                  __ptext16 1C9E  
                                __ptext41 13E9                                  __ptext33 0A8F  
                                __ptext25 0D43                                  __ptext17 1D50  
                                __ptext50 1FB2                                  __ptext42 1051  
                                __ptext34 1002                                  __ptext26 0EFC  
                                __ptext18 0C8C                                  __ptext51 1E2B  
                                __ptext43 16E3                                  __ptext35 1200  
                                __ptext27 1E09                                  __ptext19 10F4  
                                __ptext60 09E7                                  __ptext52 1F2A  
                                __ptext44 1385                                  __ptext36 06DB  
                                __ptext28 125E                                  __ptext53 07FF  
                                __ptext45 1DE7                                  __ptext37 10A1  
                                __ptext29 0E05                                  __ptext62 1148  
                                __ptext54 1C27                                  __ptext46 1D34  
                                __ptext38 1557                                  __ptext63 08C0  
                                __ptext55 0003                                  __ptext47 1CFD  
                                __ptext39 1771                                  __ptext64 08AF  
                                __ptext56 0002                                  __ptext48 1EEB  
                                __ptext65 1D6C                                  __ptext57 1001  
                                __ptext49 1D18                                  __ptext58 1000  
                                __ptext59 1C26                      _USBCBWakeFromSuspend 1000  
          __end_of_USBCtrlTrfSetupHandler 1051                             __size_of_main 0017  
                       ?_USBCtrlEPService 0070                     __size_of_USBCBSuspend 0001  
                       ?_InitializeSystem 0070                        ??_USBCtrlEPService 00AE  
                     _USBGenericOutHandle 0141                       _USBCtrlTrfInHandler 12BF  
                         ?i1_SendCmdReply 0076                        ??_InitializeSystem 0068  
                                _outPipes 0120                      _USBCtrlTrfOutHandler 1E50  
               _USBCtrlEPAllowStatusStage 1385            __size_of_USBCBStdSetDscHandler 0001  
           __end_of_USBCBStdSetDscHandler 0800                    ??_USBTransferOnePacket 005F  
                   _USBCheckVendorRequest 0003                            ??_AsicPushWork 00E5  
               _USBDeferStatusStagePacket 006B                                _INTCONbits 000B  
                      _USBGenericInHandle 0140                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 005A                                  memset@p1 0058  
                            _USBCBSuspend 1C26                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 00AB                     ?_USBCBWakeFromSuspend 0070  
                                intlevel1 0000                    __size_of_USBDeviceInit 00A8  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1F2A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0068          ?_USER_USB_CALLBACK_EVENT_HANDLER 00A0  
         _USER_USB_CALLBACK_EVENT_HANDLER 1EEB                          AsicPreCalc@F3341 01D0  
                                next_word 0BE5                         SendCmdReply@count 0062  
                           SendCmdReply@n 0063                             ??_AsicPreCalc 00A2  
                            _VerySlowTick 0145                             ??_DetectAsics 0061  
                         _ProcessCmd$1971 0065                    ??_USBConfigureEndpoint 0059  
                   ?_USBCtrlTrfOutHandler 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0A8F                               _USBCBInitEP 1D18  
                      _USBWakeFromSuspend 1CFD                   _USBStdFeatureReqHandler 06DB  
                     _USBCtrlTrfTxService 16E3                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 005B                     _USBAlternateInterface 0155  
                             _SSPCON1bits 0215                               _SSPCON2bits 0216  
                     USBEnableEndpoint@ep 0064                               _SSPCON3bits 0217  
                         _endpoint_number 0147                   __size_of_InitTempSensor 0017  
                    ?_USBCtrlTrfRxService 0070                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 0144  
                    ??_USBWakeFromSuspend 00A6                USBTransferOnePacket@handle 0062  
                        ??_UpdateFanLevel 00CE                                _USB_CD_Ptr 0804  
